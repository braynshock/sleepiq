/*!  - v - 2016-08-15 |  License: MIT */
window.SleepIQ = function() {
    function getGlobal() {
        return function() {
            return this.dust
        }.call(null)
    }
    var requirejs, require, define;
    ! function(a) {
        function b(a, b) {
            var c, d, e, f, g, h, i, j, k, l, m = b && b.split("/"),
                n = o.map,
                p = n && n["*"] || {};
            if (a && "." === a.charAt(0) && b) {
                for (m = m.slice(0, m.length - 1), a = m.concat(a.split("/")), j = 0; j < a.length; j += 1)
                    if (l = a[j], "." === l) a.splice(j, 1), j -= 1;
                    else if (".." === l) {
                    if (1 === j && (".." === a[2] || ".." === a[0])) break;
                    j > 0 && (a.splice(j - 1, 2), j -= 2)
                }
                a = a.join("/")
            }
            if ((m || p) && n) {
                for (c = a.split("/"), j = c.length; j > 0; j -= 1) {
                    if (d = c.slice(0, j).join("/"), m)
                        for (k = m.length; k > 0; k -= 1)
                            if (e = n[m.slice(0, k).join("/")], e && (e = e[d])) {
                                f = e, g = j;
                                break
                            }
                    if (f) break;
                    !h && p && p[d] && (h = p[d], i = j)
                }!f && h && (f = h, g = i), f && (c.splice(0, g, f), a = c.join("/"))
            }
            return a
        }

        function c(b, c) {
            return function() {
                return j.apply(a, q.call(arguments, 0).concat([b, c]))
            }
        }

        function d(a) {
            return function(c) {
                return b(c, a)
            }
        }

        function e(a) {
            return function(b) {
                m[a] = b
            }
        }

        function f(b) {
            if (n.hasOwnProperty(b)) {
                var c = n[b];
                delete n[b], p[b] = !0, i.apply(a, c)
            }
            if (!m.hasOwnProperty(b) && !p.hasOwnProperty(b)) throw new Error("No " + b);
            return m[b]
        }

        function g(a) {
            var b, c = a ? a.indexOf("!") : -1;
            return c > -1 && (b = a.substring(0, c), a = a.substring(c + 1, a.length)), [b, a]
        }

        function h(a) {
            return function() {
                return o && o.config && o.config[a] || {}
            }
        }
        var i, j, k, l, m = {},
            n = {},
            o = {},
            p = {},
            q = [].slice;
        k = function(a, c) {
            var e, h = g(a),
                i = h[0];
            return a = h[1], i && (i = b(i, c), e = f(i)), i ? a = e && e.normalize ? e.normalize(a, d(c)) : b(a, c) : (a = b(a, c), h = g(a), i = h[0], a = h[1], i && (e = f(i))), {
                f: i ? i + "!" + a : a,
                n: a,
                pr: i,
                p: e
            }
        }, l = {
            require: function(a) {
                return c(a)
            },
            exports: function(a) {
                var b = m[a];
                return "undefined" != typeof b ? b : m[a] = {}
            },
            module: function(a) {
                return {
                    id: a,
                    uri: "",
                    exports: m[a],
                    config: h(a)
                }
            }
        }, i = function(b, d, g, h) {
            var i, j, o, q, r, s, t = [];
            if (h = h || b, "function" == typeof g) {
                for (d = !d.length && g.length ? ["require", "exports", "module"] : d, r = 0; r < d.length; r += 1)
                    if (q = k(d[r], h), j = q.f, "require" === j) t[r] = l.require(b);
                    else if ("exports" === j) t[r] = l.exports(b), s = !0;
                else if ("module" === j) i = t[r] = l.module(b);
                else if (m.hasOwnProperty(j) || n.hasOwnProperty(j) || p.hasOwnProperty(j)) t[r] = f(j);
                else {
                    if (!q.p) throw new Error(b + " missing " + j);
                    q.p.load(q.n, c(h, !0), e(j), {}), t[r] = m[j]
                }
                o = g.apply(m[b], t), b && (i && i.exports !== a && i.exports !== m[b] ? m[b] = i.exports : o === a && s || (m[b] = o))
            } else b && (m[b] = g)
        }, requirejs = require = j = function(b, c, d, e, g) {
            return "string" == typeof b ? l[b] ? l[b](c) : f(k(b, c).f) : (b.splice || (o = b, c.splice ? (b = c, c = d, d = null) : b = a), c = c || function() {}, "function" == typeof d && (d = e, e = g), e ? i(a, b, c, d) : setTimeout(function() {
                i(a, b, c, d)
            }, 15), j)
        }, j.config = function(a) {
            return o = a, j
        }, define = function(a, b, c) {
            b.splice || (c = b, b = []), n[a] = [a, b, c]
        }, define.amd = {
            jQuery: !0
        }
    }(), define("../../../node_modules/grunt-amd-dist/tasks/lib/almond", function() {}),
        function(a) {
            "function" == typeof define ? define("es5-shim", a) : "function" == typeof YUI ? YUI.add("es5", a) : a()
        }(function() {
            function a() {}

            function b(a) {
                return a = +a, a !== a ? a = 0 : 0 !== a && a !== 1 / 0 && a !== -(1 / 0) && (a = (a > 0 || -1) * Math.floor(Math.abs(a))), a
            }

            function c(a) {
                var b = typeof a;
                return null === a || "undefined" === b || "boolean" === b || "number" === b || "string" === b
            }

            function d(a) {
                var b, d, e;
                if (c(a)) return a;
                if (d = a.valueOf, "function" == typeof d && (b = d.call(a), c(b))) return b;
                if (e = a.toString, "function" == typeof e && (b = e.call(a), c(b))) return b;
                throw new TypeError
            }
            Function.prototype.bind || (Function.prototype.bind = function(b) {
                var c = this;
                if ("function" != typeof c) throw new TypeError("Function.prototype.bind called on incompatible " + c);
                var d = m.call(arguments, 1),
                    e = function() {
                        if (this instanceof e) {
                            var a = c.apply(this, d.concat(m.call(arguments)));
                            return Object(a) === a ? a : this
                        }
                        return c.apply(b, d.concat(m.call(arguments)))
                    };
                return c.prototype && (a.prototype = c.prototype, e.prototype = new a, a.prototype = null), e
            });
            var e, f, g, h, i, j = Function.prototype.call,
                k = Array.prototype,
                l = Object.prototype,
                m = k.slice,
                n = j.bind(l.toString),
                o = j.bind(l.hasOwnProperty);
            if ((i = o(l, "__defineGetter__")) && (e = j.bind(l.__defineGetter__), f = j.bind(l.__defineSetter__), g = j.bind(l.__lookupGetter__), h = j.bind(l.__lookupSetter__)), 2 != [1, 2].splice(0).length) {
                var p = Array.prototype.splice;
                Array.prototype.splice = function() {
                    function a(a) {
                        for (var b = []; a--;) b.unshift(a);
                        return b
                    }
                    var b, c = [];
                    return c.splice.bind(c, 0, 0).apply(null, a(20)), c.splice.bind(c, 0, 0).apply(null, a(26)), b = c.length, c.splice(5, 0, "XXX"), b + 1 == c.length ? !0 : void 0
                }() ? function(a, b) {
                    return arguments.length ? p.apply(this, [void 0 === a ? 0 : a, void 0 === b ? this.length - a : b].concat(m.call(arguments, 2))) : []
                } : function(a, b) {
                    var c, d = m.call(arguments, 2),
                        e = d.length;
                    if (!arguments.length) return [];
                    if (void 0 === a && (a = 0), void 0 === b && (b = this.length - a), e > 0) {
                        if (0 >= b) {
                            if (a == this.length) return this.push.apply(this, d), [];
                            if (0 == a) return this.unshift.apply(this, d), []
                        }
                        return c = m.call(this, a, a + b), d.push.apply(d, m.call(this, a + b, this.length)), d.unshift.apply(d, m.call(this, 0, a)), d.unshift(0, this.length), p.apply(this, d), c
                    }
                    return p.call(this, a, b)
                }
            }
            if (1 != [].unshift(0)) {
                var q = Array.prototype.unshift;
                Array.prototype.unshift = function() {
                    return q.apply(this, arguments), this.length
                }
            }
            Array.isArray || (Array.isArray = function(a) {
                return "[object Array]" == n(a)
            });
            var r = Object("a"),
                s = "a" != r[0] || !(0 in r);
            if (Array.prototype.forEach || (Array.prototype.forEach = function(a) {
                    var b = G(this),
                        c = s && "[object String]" == n(this) ? this.split("") : b,
                        d = arguments[1],
                        e = -1,
                        f = c.length >>> 0;
                    if ("[object Function]" != n(a)) throw new TypeError;
                    for (; ++e < f;) e in c && a.call(d, c[e], e, b)
                }), Array.prototype.map || (Array.prototype.map = function(a) {
                    var b = G(this),
                        c = s && "[object String]" == n(this) ? this.split("") : b,
                        d = c.length >>> 0,
                        e = Array(d),
                        f = arguments[1];
                    if ("[object Function]" != n(a)) throw new TypeError(a + " is not a function");
                    for (var g = 0; d > g; g++) g in c && (e[g] = a.call(f, c[g], g, b));
                    return e
                }), Array.prototype.filter || (Array.prototype.filter = function(a) {
                    var b, c = G(this),
                        d = s && "[object String]" == n(this) ? this.split("") : c,
                        e = d.length >>> 0,
                        f = [],
                        g = arguments[1];
                    if ("[object Function]" != n(a)) throw new TypeError(a + " is not a function");
                    for (var h = 0; e > h; h++) h in d && (b = d[h], a.call(g, b, h, c) && f.push(b));
                    return f
                }), Array.prototype.every || (Array.prototype.every = function(a) {
                    var b = G(this),
                        c = s && "[object String]" == n(this) ? this.split("") : b,
                        d = c.length >>> 0,
                        e = arguments[1];
                    if ("[object Function]" != n(a)) throw new TypeError(a + " is not a function");
                    for (var f = 0; d > f; f++)
                        if (f in c && !a.call(e, c[f], f, b)) return !1;
                    return !0
                }), Array.prototype.some || (Array.prototype.some = function(a) {
                    var b = G(this),
                        c = s && "[object String]" == n(this) ? this.split("") : b,
                        d = c.length >>> 0,
                        e = arguments[1];
                    if ("[object Function]" != n(a)) throw new TypeError(a + " is not a function");
                    for (var f = 0; d > f; f++)
                        if (f in c && a.call(e, c[f], f, b)) return !0;
                    return !1
                }), Array.prototype.reduce || (Array.prototype.reduce = function(a) {
                    var b = G(this),
                        c = s && "[object String]" == n(this) ? this.split("") : b,
                        d = c.length >>> 0;
                    if ("[object Function]" != n(a)) throw new TypeError(a + " is not a function");
                    if (!d && 1 == arguments.length) throw new TypeError("reduce of empty array with no initial value");
                    var e, f = 0;
                    if (arguments.length >= 2) e = arguments[1];
                    else
                        for (;;) {
                            if (f in c) {
                                e = c[f++];
                                break
                            }
                            if (++f >= d) throw new TypeError("reduce of empty array with no initial value")
                        }
                    for (; d > f; f++) f in c && (e = a.call(void 0, e, c[f], f, b));
                    return e
                }), Array.prototype.reduceRight || (Array.prototype.reduceRight = function(a) {
                    var b = G(this),
                        c = s && "[object String]" == n(this) ? this.split("") : b,
                        d = c.length >>> 0;
                    if ("[object Function]" != n(a)) throw new TypeError(a + " is not a function");
                    if (!d && 1 == arguments.length) throw new TypeError("reduceRight of empty array with no initial value");
                    var e, f = d - 1;
                    if (arguments.length >= 2) e = arguments[1];
                    else
                        for (;;) {
                            if (f in c) {
                                e = c[f--];
                                break
                            }
                            if (--f < 0) throw new TypeError("reduceRight of empty array with no initial value")
                        }
                    if (0 > f) return e;
                    do f in this && (e = a.call(void 0, e, c[f], f, b)); while (f--);
                    return e
                }), Array.prototype.indexOf && -1 == [0, 1].indexOf(1, 2) || (Array.prototype.indexOf = function(a) {
                    var c = s && "[object String]" == n(this) ? this.split("") : G(this),
                        d = c.length >>> 0;
                    if (!d) return -1;
                    var e = 0;
                    for (arguments.length > 1 && (e = b(arguments[1])), e = e >= 0 ? e : Math.max(0, d + e); d > e; e++)
                        if (e in c && c[e] === a) return e;
                    return -1
                }), Array.prototype.lastIndexOf && -1 == [0, 1].lastIndexOf(0, -3) || (Array.prototype.lastIndexOf = function(a) {
                    var c = s && "[object String]" == n(this) ? this.split("") : G(this),
                        d = c.length >>> 0;
                    if (!d) return -1;
                    var e = d - 1;
                    for (arguments.length > 1 && (e = Math.min(e, b(arguments[1]))), e = e >= 0 ? e : d - Math.abs(e); e >= 0; e--)
                        if (e in c && a === c[e]) return e;
                    return -1
                }), !Object.keys) {
                var t = !0,
                    u = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
                    v = u.length;
                for (var w in {
                        toString: null
                    }) t = !1;
                Object.keys = function H(a) {
                    if ("object" != typeof a && "function" != typeof a || null === a) throw new TypeError("Object.keys called on a non-object");
                    var H = [];
                    for (var b in a) o(a, b) && H.push(b);
                    if (t)
                        for (var c = 0, d = v; d > c; c++) {
                            var e = u[c];
                            o(a, e) && H.push(e)
                        }
                    return H
                }
            }
            var x = -621987552e5,
                y = "-000001";
            Date.prototype.toISOString && -1 !== new Date(x).toISOString().indexOf(y) || (Date.prototype.toISOString = function() {
                var a, b, c, d, e;
                if (!isFinite(this)) throw new RangeError("Date.prototype.toISOString called on non-finite value.");
                for (d = this.getUTCFullYear(), e = this.getUTCMonth(), d += Math.floor(e / 12), e = (e % 12 + 12) % 12, a = [e + 1, this.getUTCDate(), this.getUTCHours(), this.getUTCMinutes(), this.getUTCSeconds()], d = (0 > d ? "-" : d > 9999 ? "+" : "") + ("00000" + Math.abs(d)).slice(d >= 0 && 9999 >= d ? -4 : -6), b = a.length; b--;) c = a[b], 10 > c && (a[b] = "0" + c);
                return d + "-" + a.slice(0, 2).join("-") + "T" + a.slice(2).join(":") + "." + ("000" + this.getUTCMilliseconds()).slice(-3) + "Z"
            });
            var z = !1;
            try {
                z = Date.prototype.toJSON && null === new Date(0 / 0).toJSON() && -1 !== new Date(x).toJSON().indexOf(y) && Date.prototype.toJSON.call({
                    toISOString: function() {
                        return !0
                    }
                })
            } catch (A) {}
            z || (Date.prototype.toJSON = function() {
                var a, b = Object(this),
                    c = d(b);
                if ("number" == typeof c && !isFinite(c)) return null;
                if (a = b.toISOString, "function" != typeof a) throw new TypeError("toISOString property is not callable");
                return a.call(b)
            }), Date = function(a) {
                function b(c, d, e, f, g, h, i) {
                    var j = arguments.length;
                    if (this instanceof a) {
                        var k = 1 == j && String(c) === c ? new a(b.parse(c)) : j >= 7 ? new a(c, d, e, f, g, h, i) : j >= 6 ? new a(c, d, e, f, g, h) : j >= 5 ? new a(c, d, e, f, g) : j >= 4 ? new a(c, d, e, f) : j >= 3 ? new a(c, d, e) : j >= 2 ? new a(c, d) : j >= 1 ? new a(c) : new a;
                        return k.constructor = b, k
                    }
                    return a.apply(this, arguments)
                }

                function c(a, b) {
                    var c = b > 1 ? 1 : 0;
                    return e[b] + Math.floor((a - 1969 + c) / 4) - Math.floor((a - 1901 + c) / 100) + Math.floor((a - 1601 + c) / 400) + 365 * (a - 1970)
                }
                var d = new RegExp("^(\\d{4}|[+-]\\d{6})(?:-(\\d{2})(?:-(\\d{2})(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:(\\.\\d{1,}))?)?(Z|(?:([-+])(\\d{2}):(\\d{2})))?)?)?)?$"),
                    e = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];
                for (var f in a) b[f] = a[f];
                return b.now = a.now, b.UTC = a.UTC, b.prototype = a.prototype, b.prototype.constructor = b, b.parse = function(b) {
                    var e = d.exec(b);
                    if (e) {
                        var f, g = Number(e[1]),
                            h = Number(e[2] || 1) - 1,
                            i = Number(e[3] || 1) - 1,
                            j = Number(e[4] || 0),
                            k = Number(e[5] || 0),
                            l = Number(e[6] || 0),
                            m = Math.floor(1e3 * Number(e[7] || 0)),
                            n = !e[4] || e[8] ? 0 : Number(new a(1970, 0)),
                            o = "-" === e[9] ? 1 : -1,
                            p = Number(e[10] || 0),
                            q = Number(e[11] || 0);
                        return (k > 0 || l > 0 || m > 0 ? 24 : 25) > j && 60 > k && 60 > l && 1e3 > m && h > -1 && 12 > h && 24 > p && 60 > q && i > -1 && i < c(g, h + 1) - c(g, h) && (f = 60 * (24 * (c(g, h) + i) + j + p * o), f = 1e3 * (60 * (f + k + q * o) + l) + m + n, f >= -864e13 && 864e13 >= f) ? f : 0 / 0
                    }
                    return a.parse.apply(this, arguments)
                }, b
            }(Date), Date.now || (Date.now = function() {
                return (new Date).getTime()
            }), Number.prototype.toFixed && "0.000" === 8e-5.toFixed(3) && "0" !== .9.toFixed(0) && "1.25" === 1.255.toFixed(2) && "1000000000000000128" === 0xde0b6b3a7640080.toFixed(0) || function() {
                function a(a, b) {
                    for (var c = -1; ++c < g;) b += a * h[c], h[c] = b % f, b = Math.floor(b / f)
                }

                function b(a) {
                    for (var b = g, c = 0; --b >= 0;) c += h[b], h[b] = Math.floor(c / a), c = c % a * f
                }

                function c() {
                    for (var a = g, b = ""; --a >= 0;)
                        if ("" !== b || 0 === a || 0 !== h[a]) {
                            var c = String(h[a]);
                            "" === b ? b = c : b += "0000000".slice(0, 7 - c.length) + c
                        }
                    return b
                }

                function d(a, b, c) {
                    return 0 === b ? c : 1 === b % 2 ? d(a, b - 1, c * a) : d(a * a, b / 2, c)
                }

                function e(a) {
                    for (var b = 0; a >= 4096;) b += 12, a /= 4096;
                    for (; a >= 2;) b += 1, a /= 2;
                    return b
                }
                var f, g, h;
                f = 1e7, g = 6, h = [0, 0, 0, 0, 0, 0], Number.prototype.toFixed = function(f) {
                    var g, h, i, j, k, l, m, n;
                    if (g = Number(f), g = g !== g ? 0 : Math.floor(g), 0 > g || g > 20) throw new RangeError("Number.toFixed called with invalid number of decimals");
                    if (h = Number(this), h !== h) return "NaN";
                    if (-1e21 >= h || h >= 1e21) return String(h);
                    if (i = "", 0 > h && (i = "-", h = -h), j = "0", h > 1e-21)
                        if (k = e(h * d(2, 69, 1)) - 69, l = 0 > k ? h * d(2, -k, 1) : h / d(2, k, 1), l *= 4503599627370496, k = 52 - k, k > 0) {
                            for (a(0, l), m = g; m >= 7;) a(1e7, 0), m -= 7;
                            for (a(d(10, m, 1), 0), m = k - 1; m >= 23;) b(1 << 23), m -= 23;
                            b(1 << m), a(1, 1), b(2), j = c()
                        } else a(0, l), a(1 << -k, 0), j = c() + "0.00000000000000000000".slice(2, 2 + g);
                    return g > 0 ? (n = j.length, j = g >= n ? i + "0.0000000000000000000".slice(0, g - n + 2) + j : i + j.slice(0, n - g) + "." + j.slice(n - g)) : j = i + j, j
                }
            }();
            var B = String.prototype.split;
            if (2 !== "ab".split(/(?:ab)*/).length || 4 !== ".".split(/(.?)(.?)/).length || "t" === "tesst".split(/(s)*/)[1] || 0 === "".split(/.?/).length || ".".split(/()()/).length > 1 ? function() {
                    var a = void 0 === /()??/.exec("")[1];
                    String.prototype.split = function(b, c) {
                        var d = this;
                        if (void 0 === b && 0 === c) return [];
                        if ("[object RegExp]" !== Object.prototype.toString.call(b)) return B.apply(this, arguments);
                        var e, f, g, h, i = [],
                            j = (b.ignoreCase ? "i" : "") + (b.multiline ? "m" : "") + (b.extended ? "x" : "") + (b.sticky ? "y" : ""),
                            k = 0,
                            b = new RegExp(b.source, j + "g");
                        for (d += "", a || (e = new RegExp("^" + b.source + "$(?!\\s)", j)), c = void 0 === c ? -1 >>> 0 : c >>> 0;
                            (f = b.exec(d)) && (g = f.index + f[0].length, !(g > k && (i.push(d.slice(k, f.index)), !a && f.length > 1 && f[0].replace(e, function() {
                                for (var a = 1; a < arguments.length - 2; a++) void 0 === arguments[a] && (f[a] = void 0)
                            }), f.length > 1 && f.index < d.length && Array.prototype.push.apply(i, f.slice(1)), h = f[0].length, k = g, i.length >= c)));) b.lastIndex === f.index && b.lastIndex++;
                        return k === d.length ? (h || !b.test("")) && i.push("") : i.push(d.slice(k)), i.length > c ? i.slice(0, c) : i
                    }
                }() : "0".split(void 0, 0).length && (String.prototype.split = function(a, b) {
                    return void 0 === a && 0 === b ? [] : B.apply(this, arguments)
                }), "".substr && "b" !== "0b".substr(-1)) {
                var C = String.prototype.substr;
                String.prototype.substr = function(a, b) {
                    return C.call(this, 0 > a ? (a = this.length + a) < 0 ? 0 : a : a, b)
                }
            }
            var D = "	\n\f\r   ᠎             　\u2028\u2029﻿";
            if (!String.prototype.trim || D.trim()) {
                D = "[" + D + "]";
                var E = new RegExp("^" + D + D + "*"),
                    F = new RegExp(D + D + "*$");
                String.prototype.trim = function() {
                    if (void 0 === this || null === this) throw new TypeError("can't convert " + this + " to object");
                    return String(this).replace(E, "").replace(F, "")
                }
            }
            var G = function(a) {
                if (null == a) throw new TypeError("can't convert " + a + " to object");
                return Object(a)
            }
        }),
        function(a) {
            var b = function(a) {
                    try {
                        a()
                    } catch (b) {
                        return !1
                    }
                    return !0
                },
                c = function(a, b) {
                    try {
                        var c = function() {
                            a.apply(this, arguments)
                        };
                        return c.__proto__ ? (Object.setPrototypeOf(c, a), c.prototype = Object.create(a.prototype, {
                            constructor: {
                                value: a
                            }
                        }), b(c)) : !1
                    } catch (d) {
                        return !1
                    }
                },
                d = function() {
                    try {
                        return Object.defineProperty({}, "x", {}), !0
                    } catch (a) {
                        return !1
                    }
                },
                e = function() {
                    var a = !1;
                    if (String.prototype.startsWith) try {
                        "/a/".startsWith(/a/)
                    } catch (b) {
                        a = !0
                    }
                    return a
                },
                f = new Function("return this;"),
                g = function() {
                    var g, h = f(),
                        i = h.isFinite,
                        j = !!Object.defineProperty && d(),
                        k = e(),
                        l = Array.prototype.slice,
                        m = String.prototype.indexOf,
                        n = Object.prototype.toString,
                        o = Object.prototype.hasOwnProperty,
                        p = function(a, b) {
                            Object.keys(b).forEach(function(c) {
                                var d = b[c];
                                c in a || (j ? Object.defineProperty(a, c, {
                                    configurable: !0,
                                    enumerable: !1,
                                    writable: !0,
                                    value: d
                                }) : a[c] = d)
                            })
                        },
                        q = Object.create || function(a, b) {
                            function c() {}
                            c.prototype = a;
                            var d = new c;
                            return "undefined" != typeof b && p(d, b), d
                        },
                        r = "object" == typeof Symbol && Symbol.iterator || "_es6shim_iterator_";
                    h.Set && "function" == typeof(new h.Set)["@@iterator"] && (r = "@@iterator");
                    var s = function(a, b) {
                            b || (b = function() {
                                return this
                            });
                            var c = {};
                            c[r] = b, p(a, c)
                        },
                        t = function(a) {
                            var b = n.call(a),
                                c = "[object Arguments]" === b;
                            return c || (c = "[object Array]" !== b && null !== a && "object" == typeof a && "number" == typeof a.length && a.length >= 0 && "[object Function]" === n.call(a.callee)), c
                        },
                        u = function(a) {
                            if (!v.TypeIsObject(a)) throw new TypeError("bad object");
                            return a._es6construct || (a.constructor && v.IsCallable(a.constructor["@@create"]) && (a = a.constructor["@@create"](a)), p(a, {
                                _es6construct: !0
                            })), a
                        },
                        v = {
                            CheckObjectCoercible: function(a, b) {
                                if (null == a) throw new TypeError(b || "Cannot call method on " + a);
                                return a
                            },
                            TypeIsObject: function(a) {
                                return null != a && Object(a) === a
                            },
                            ToObject: function(a, b) {
                                return Object(v.CheckObjectCoercible(a, b))
                            },
                            IsCallable: function(a) {
                                return "function" == typeof a && "[object Function]" === n.call(a)
                            },
                            ToInt32: function(a) {
                                return a >> 0
                            },
                            ToUint32: function(a) {
                                return a >>> 0
                            },
                            ToInteger: function(a) {
                                var b = +a;
                                return Number.isNaN(b) ? 0 : 0 !== b && Number.isFinite(b) ? Math.sign(b) * Math.floor(Math.abs(b)) : b
                            },
                            ToLength: function(a) {
                                var b = v.ToInteger(a);
                                return 0 >= b ? 0 : b > Number.MAX_SAFE_INTEGER ? Number.MAX_SAFE_INTEGER : b
                            },
                            SameValue: function(a, b) {
                                return a === b ? 0 === a ? 1 / a === 1 / b : !0 : Number.isNaN(a) && Number.isNaN(b)
                            },
                            SameValueZero: function(a, b) {
                                return a === b || Number.isNaN(a) && Number.isNaN(b)
                            },
                            IsIterable: function(b) {
                                return v.TypeIsObject(b) && (b[r] !== a || t(b))
                            },
                            GetIterator: function(a) {
                                if (t(a)) return new g(a, "value");
                                var b = a[r]();
                                if (!v.TypeIsObject(b)) throw new TypeError("bad iterator");
                                return b
                            },
                            IteratorNext: function(a) {
                                var b = arguments.length > 1 ? a.next(arguments[1]) : a.next();
                                if (!v.TypeIsObject(b)) throw new TypeError("bad iterator");
                                return b
                            },
                            Construct: function(a, b) {
                                var c;
                                c = v.IsCallable(a["@@create"]) ? a["@@create"]() : q(a.prototype || null), p(c, {
                                    _es6construct: !0
                                });
                                var d = a.apply(c, b);
                                return v.TypeIsObject(d) ? d : c
                            }
                        },
                        w = function() {
                            function a(a) {
                                var b = Math.floor(a),
                                    c = a - b;
                                return .5 > c ? b : c > .5 ? b + 1 : b % 2 ? b + 1 : b
                            }

                            function b(b, c, d) {
                                var e, f, g, h, i, j, k, l = (1 << c - 1) - 1;
                                for (b !== b ? (f = (1 << c) - 1, g = Math.pow(2, d - 1), e = 0) : 1 / 0 === b || b === -1 / 0 ? (f = (1 << c) - 1, g = 0, e = 0 > b ? 1 : 0) : 0 === b ? (f = 0, g = 0, e = 1 / b === -1 / 0 ? 1 : 0) : (e = 0 > b, b = Math.abs(b), b >= Math.pow(2, 1 - l) ? (f = Math.min(Math.floor(Math.log(b) / Math.LN2), 1023), g = a(b / Math.pow(2, f) * Math.pow(2, d)), g / Math.pow(2, d) >= 2 && (f += 1, g = 1), f > l ? (f = (1 << c) - 1, g = 0) : (f += l, g -= Math.pow(2, d))) : (f = 0, g = a(b / Math.pow(2, 1 - l - d)))), i = [], h = d; h; h -= 1) i.push(g % 2 ? 1 : 0), g = Math.floor(g / 2);
                                for (h = c; h; h -= 1) i.push(f % 2 ? 1 : 0), f = Math.floor(f / 2);
                                for (i.push(e ? 1 : 0), i.reverse(), j = i.join(""), k = []; j.length;) k.push(parseInt(j.substring(0, 8), 2)), j = j.substring(8);
                                return k
                            }

                            function c(a, b, c) {
                                var d, e, f, g, h, i, j, k, l = [];
                                for (d = a.length; d; d -= 1)
                                    for (f = a[d - 1], e = 8; e; e -= 1) l.push(f % 2 ? 1 : 0), f >>= 1;
                                return l.reverse(), g = l.join(""), h = (1 << b - 1) - 1, i = parseInt(g.substring(0, 1), 2) ? -1 : 1, j = parseInt(g.substring(1, 1 + b), 2), k = parseInt(g.substring(1 + b), 2), j === (1 << b) - 1 ? 0 !== k ? 0 / 0 : 1 / 0 * i : j > 0 ? i * Math.pow(2, j - h) * (1 + k / Math.pow(2, c)) : 0 !== k ? i * Math.pow(2, -(h - 1)) * (k / Math.pow(2, c)) : 0 > i ? -0 : 0
                            }

                            function d(a) {
                                return c(a, 8, 23)
                            }

                            function e(a) {
                                return b(a, 8, 23)
                            }
                            var f = {
                                toFloat32: function(a) {
                                    return d(e(a))
                                }
                            };
                            if ("undefined" != typeof Float32Array) {
                                var g = new Float32Array(1);
                                f.toFloat32 = function(a) {
                                    return g[0] = a, g[0]
                                }
                            }
                            return f
                        }();
                    p(String, {
                        fromCodePoint: function() {
                            for (var a, b = l.call(arguments, 0, arguments.length), c = [], d = 0, e = b.length; e > d; d++) {
                                if (a = Number(b[d]), !v.SameValue(a, v.ToInteger(a)) || 0 > a || a > 1114111) throw new RangeError("Invalid code point " + a);
                                65536 > a ? c.push(String.fromCharCode(a)) : (a -= 65536, c.push(String.fromCharCode((a >> 10) + 55296)), c.push(String.fromCharCode(a % 1024 + 56320)))
                            }
                            return c.join("")
                        },
                        raw: function(b) {
                            var c = l.call(arguments, 1, arguments.length),
                                d = v.ToObject(b, "bad callSite"),
                                e = d.raw,
                                f = v.ToObject(e, "bad raw value"),
                                g = Object.keys(f).length,
                                h = v.ToLength(g);
                            if (0 === h) return "";
                            for (var i, j, k, m, n = [], o = 0; h > o && (i = String(o), j = f[i], k = String(j), n.push(k), !(o + 1 >= h)) && (j = c[i], j !== a);) m = String(j), n.push(m), o++;
                            return n.join("")
                        }
                    });
                    var x = {
                        repeat: function() {
                            var a = function(b, c) {
                                if (1 > c) return "";
                                if (c % 2) return a(b, c - 1) + b;
                                var d = a(b, c / 2);
                                return d + d
                            };
                            return function(b) {
                                var c = String(v.CheckObjectCoercible(this));
                                if (b = v.ToInteger(b), 0 > b || 1 / 0 === b) throw new RangeError("Invalid String#repeat value");
                                return a(c, b)
                            }
                        }(),
                        startsWith: function(b) {
                            var c = String(v.CheckObjectCoercible(this));
                            if ("[object RegExp]" === n.call(b)) throw new TypeError('Cannot call method "startsWith" with a regex');
                            b = String(b);
                            var d = arguments.length > 1 ? arguments[1] : a,
                                e = Math.max(v.ToInteger(d), 0);
                            return c.slice(e, e + b.length) === b
                        },
                        endsWith: function(b) {
                            var c = String(v.CheckObjectCoercible(this));
                            if ("[object RegExp]" === n.call(b)) throw new TypeError('Cannot call method "endsWith" with a regex');
                            b = String(b);
                            var d = c.length,
                                e = arguments.length > 1 ? arguments[1] : a,
                                f = e === a ? d : v.ToInteger(e),
                                g = Math.min(Math.max(f, 0), d);
                            return c.slice(g - b.length, g) === b
                        },
                        contains: function(b) {
                            var c = arguments.length > 1 ? arguments[1] : a;
                            return -1 !== m.call(this, b, c)
                        },
                        codePointAt: function(b) {
                            var c = String(v.CheckObjectCoercible(this)),
                                d = v.ToInteger(b),
                                e = c.length;
                            if (0 > d || d >= e) return a;
                            var f = c.charCodeAt(d),
                                g = d + 1 === e;
                            if (55296 > f || f > 56319 || g) return f;
                            var h = c.charCodeAt(d + 1);
                            return 56320 > h || h > 57343 ? f : 1024 * (f - 55296) + (h - 56320) + 65536
                        }
                    };
                    p(String.prototype, x);
                    var y = 1 !== "".trim().length;
                    if (y) {
                        String.prototype.trim, delete String.prototype.trim;
                        var z = ["	\n\f\r   ᠎    ", "         　\u2028", "\u2029﻿"].join(""),
                            A = new RegExp("^[" + z + "][" + z + "]*"),
                            B = new RegExp("[" + z + "][" + z + "]*$");
                        p(String.prototype, {
                            trim: function() {
                                if (this === a || null === this) throw new TypeError("can't convert " + this + " to object");
                                return String(this).replace(A, "").replace(B, "")
                            }
                        })
                    }
                    var C = function(a) {
                        this._s = String(v.CheckObjectCoercible(a)), this._i = 0
                    };
                    C.prototype.next = function() {
                        var b = this._s,
                            c = this._i;
                        if (b === a || c >= b.length) return this._s = a, {
                            value: a,
                            done: !0
                        };
                        var d, e, f = b.charCodeAt(c);
                        return 55296 > f || f > 56319 || c + 1 == b.length ? e = 1 : (d = b.charCodeAt(c + 1), e = 56320 > d || d > 57343 ? 1 : 2), this._i = c + e, {
                            value: b.substr(c, e),
                            done: !1
                        }
                    }, s(C.prototype), s(String.prototype, function() {
                        return new C(this)
                    }), k || (String.prototype.startsWith = x.startsWith, String.prototype.endsWith = x.endsWith), p(Array, {
                        from: function(b) {
                            var c = arguments.length > 1 ? arguments[1] : a,
                                d = arguments.length > 2 ? arguments[2] : a,
                                e = v.ToObject(b, "bad iterable");
                            if (c !== a && !v.IsCallable(c)) throw new TypeError("Array.from: when provided, the second argument must be a function");
                            for (var f, g = v.IsIterable(e), h = g ? 0 : v.ToLength(e.length), i = v.IsCallable(this) ? Object(g ? new this : new this(h)) : new Array(h), j = g ? v.GetIterator(e) : null, k = 0; g || h > k; k++) {
                                if (g) {
                                    if (f = v.IteratorNext(j), f.done) {
                                        h = k;
                                        break
                                    }
                                    f = f.value
                                } else f = e[k];
                                i[k] = c ? d ? c.call(d, f, k) : c(f, k) : f
                            }
                            return i.length = h, i
                        },
                        of: function() {
                            return Array.from(arguments)
                        }
                    }), g = function(a, b) {
                        this.i = 0, this.array = a, this.kind = b
                    }, p(g.prototype, {
                        next: function() {
                            var b = this.i,
                                c = this.array;
                            if (b === a || this.kind === a) throw new TypeError("Not an ArrayIterator");
                            if (c !== a)
                                for (var d = v.ToLength(c.length); d > b; b++) {
                                    var e, f = this.kind;
                                    return "key" === f ? e = b : "value" === f ? e = c[b] : "entry" === f && (e = [b, c[b]]), this.i = b + 1, {
                                        value: e,
                                        done: !1
                                    }
                                }
                            return this.array = a, {
                                value: a,
                                done: !0
                            }
                        }
                    }), s(g.prototype), p(Array.prototype, {
                        copyWithin: function(b, c) {
                            var d = arguments[2],
                                e = v.ToObject(this),
                                f = v.ToLength(e.length);
                            b = v.ToInteger(b), c = v.ToInteger(c);
                            var g = 0 > b ? Math.max(f + b, 0) : Math.min(b, f),
                                h = 0 > c ? Math.max(f + c, 0) : Math.min(c, f);
                            d = d === a ? f : v.ToInteger(d);
                            var i = 0 > d ? Math.max(f + d, 0) : Math.min(d, f),
                                j = Math.min(i - h, f - g),
                                k = 1;
                            for (g > h && h + j > g && (k = -1, h += j - 1, g += j - 1); j > 0;) o.call(e, h) ? e[g] = e[h] : delete e[h], h += k, g += k, j -= 1;
                            return e
                        },
                        fill: function(b) {
                            var c = arguments[1],
                                d = arguments[2],
                                e = v.ToObject(this),
                                f = v.ToLength(e.length);
                            c = v.ToInteger(c === a ? 0 : c), d = v.ToInteger(d === a ? f : d);
                            for (var g = 0 > c ? Math.max(f + c, 0) : Math.min(c, f), h = g; f > h && d > h; ++h) e[h] = b;
                            return e
                        },
                        find: function(b) {
                            var c = v.ToObject(this),
                                d = v.ToLength(c.length);
                            if (!v.IsCallable(b)) throw new TypeError("Array#find: predicate must be a function");
                            for (var e, f = arguments[1], g = 0; d > g; g++)
                                if (g in c && (e = c[g], b.call(f, e, g, c))) return e;
                            return a
                        },
                        findIndex: function(a) {
                            var b = v.ToObject(this),
                                c = v.ToLength(b.length);
                            if (!v.IsCallable(a)) throw new TypeError("Array#findIndex: predicate must be a function");
                            for (var d = arguments[1], e = 0; c > e; e++)
                                if (e in b && a.call(d, b[e], e, b)) return e;
                            return -1
                        },
                        keys: function() {
                            return new g(this, "key")
                        },
                        values: function() {
                            return new g(this, "value")
                        },
                        entries: function() {
                            return new g(this, "entry")
                        }
                    }), s(Array.prototype, function() {
                        return this.values()
                    }), Object.getPrototypeOf && s(Object.getPrototypeOf([].values()));
                    var D = Math.pow(2, 53) - 1;
                    p(Number, {
                        MAX_SAFE_INTEGER: D,
                        MIN_SAFE_INTEGER: -D,
                        EPSILON: 2.220446049250313e-16,
                        parseInt: h.parseInt,
                        parseFloat: h.parseFloat,
                        isFinite: function(a) {
                            return "number" == typeof a && i(a)
                        },
                        isInteger: function(a) {
                            return "number" == typeof a && !Number.isNaN(a) && Number.isFinite(a) && v.ToInteger(a) === a
                        },
                        isSafeInteger: function(a) {
                            return Number.isInteger(a) && Math.abs(a) <= Number.MAX_SAFE_INTEGER
                        },
                        isNaN: function(a) {
                            return a !== a
                        }
                    }), j && (p(Object, {
                        getPropertyDescriptor: function(b, c) {
                            for (var d = Object.getOwnPropertyDescriptor(b, c), e = Object.getPrototypeOf(b); d === a && null !== e;) d = Object.getOwnPropertyDescriptor(e, c), e = Object.getPrototypeOf(e);
                            return d
                        },
                        getPropertyNames: function(a) {
                            for (var b = Object.getOwnPropertyNames(a), c = Object.getPrototypeOf(a), d = function(a) {
                                    -1 === b.indexOf(a) && b.push(a)
                                }; null !== c;) Object.getOwnPropertyNames(c).forEach(d), c = Object.getPrototypeOf(c);
                            return b
                        }
                    }), p(Object, {
                        assign: function(a) {
                            if (!v.TypeIsObject(a)) throw new TypeError("target must be an object");
                            return Array.prototype.reduce.call(arguments, function(a, b) {
                                if (!v.TypeIsObject(b)) throw new TypeError("source must be an object");
                                return Object.keys(b).reduce(function(a, c) {
                                    return a[c] = b[c], a
                                }, a)
                            })
                        },
                        getOwnPropertyKeys: function(a) {
                            return Object.keys(a)
                        },
                        is: function(a, b) {
                            return v.SameValue(a, b)
                        },
                        setPrototypeOf: function(a, b) {
                            var c, d = function(a, b) {
                                    if (!v.TypeIsObject(a)) throw new TypeError("cannot set prototype on a non-object");
                                    if (null !== b && !v.TypeIsObject(b)) throw new TypeError("can only set prototype to an object or null" + b)
                                },
                                e = function(a, b) {
                                    return d(a, b), c.call(a, b), a
                                };
                            try {
                                c = a.getOwnPropertyDescriptor(a.prototype, b).set, c.call({}, null)
                            } catch (f) {
                                if (a.prototype !== {}[b]) return;
                                c = function(a) {
                                    this[b] = a
                                }, e.polyfill = e(e({}, null), a.prototype) instanceof a
                            }
                            return e
                        }(Object, "__proto__")
                    })), Object.setPrototypeOf && Object.getPrototypeOf && null !== Object.getPrototypeOf(Object.setPrototypeOf({}, null)) && null === Object.getPrototypeOf(Object.create(null)) && function() {
                        var a = Object.create(null),
                            b = Object.getPrototypeOf,
                            c = Object.setPrototypeOf;
                        Object.getPrototypeOf = function(c) {
                            var d = b(c);
                            return d === a ? null : d
                        }, Object.setPrototypeOf = function(b, d) {
                            return null === d && (d = a), c(b, d)
                        }, Object.setPrototypeOf.polyfill = !1
                    }();
                    try {
                        Object.keys("foo")
                    } catch (E) {
                        var F = Object.keys;
                        Object.keys = function(a) {
                            return F(v.ToObject(a))
                        }
                    }
                    var G = {
                        acosh: function(a) {
                            return a = Number(a), Number.isNaN(a) || 1 > a ? 0 / 0 : 1 === a ? 0 : 1 / 0 === a ? a : Math.log(a + Math.sqrt(a * a - 1))
                        },
                        asinh: function(a) {
                            return a = Number(a), 0 !== a && i(a) ? 0 > a ? -Math.asinh(-a) : Math.log(a + Math.sqrt(a * a + 1)) : a
                        },
                        atanh: function(a) {
                            return a = Number(a), Number.isNaN(a) || -1 > a || a > 1 ? 0 / 0 : -1 === a ? -1 / 0 : 1 === a ? 1 / 0 : 0 === a ? a : .5 * Math.log((1 + a) / (1 - a))
                        },
                        cbrt: function(a) {
                            if (a = Number(a), 0 === a) return a;
                            var b, c = 0 > a;
                            return c && (a = -a), b = Math.pow(a, 1 / 3), c ? -b : b
                        },
                        clz32: function(a) {
                            if (a = Number(a), Number.isNaN(a)) return 0 / 0;
                            var b = v.ToUint32(a);
                            return 0 === b ? 32 : 32 - b.toString(2).length
                        },
                        cosh: function(a) {
                            return a = Number(a), 0 === a ? 1 : Number.isNaN(a) ? 0 / 0 : i(a) ? (0 > a && (a = -a), a > 21 ? Math.exp(a) / 2 : (Math.exp(a) + Math.exp(-a)) / 2) : 1 / 0
                        },
                        expm1: function(a) {
                            return a = Number(a), a === -1 / 0 ? -1 : i(a) && 0 !== a ? Math.exp(a) - 1 : a
                        },
                        hypot: function() {
                            var a = !1,
                                b = !0,
                                c = !1,
                                d = [];
                            if (Array.prototype.every.call(arguments, function(e) {
                                    var f = Number(e);
                                    return Number.isNaN(f) ? a = !0 : 1 / 0 === f || f === -1 / 0 ? c = !0 : 0 !== f && (b = !1), c ? !1 : (a || d.push(Math.abs(f)), !0)
                                }), c) return 1 / 0;
                            if (a) return 0 / 0;
                            if (b) return 0;
                            d.sort(function(a, b) {
                                return b - a
                            });
                            var e = d[0],
                                f = d.map(function(a) {
                                    return a / e
                                }),
                                g = f.reduce(function(a, b) {
                                    return a += b * b
                                }, 0);
                            return e * Math.sqrt(g)
                        },
                        log2: function(a) {
                            return Math.log(a) * Math.LOG2E
                        },
                        log10: function(a) {
                            return Math.log(a) * Math.LOG10E
                        },
                        log1p: function(a) {
                            if (a = Number(a), -1 > a || Number.isNaN(a)) return 0 / 0;
                            if (0 === a || 1 / 0 === a) return a;
                            if (-1 === a) return -1 / 0;
                            var b = 0,
                                c = 50;
                            if (0 > a || a > 1) return Math.log(1 + a);
                            for (var d = 1; c > d; d++) 0 === d % 2 ? b -= Math.pow(a, d) / d : b += Math.pow(a, d) / d;
                            return b
                        },
                        sign: function(a) {
                            var b = +a;
                            return 0 === b ? b : Number.isNaN(b) ? b : 0 > b ? -1 : 1
                        },
                        sinh: function(a) {
                            return a = Number(a), i(a) && 0 !== a ? (Math.exp(a) - Math.exp(-a)) / 2 : a
                        },
                        tanh: function(a) {
                            return a = Number(a), Number.isNaN(a) || 0 === a ? a : 1 / 0 === a ? 1 : a === -1 / 0 ? -1 : (Math.exp(a) - Math.exp(-a)) / (Math.exp(a) + Math.exp(-a))
                        },
                        trunc: function(a) {
                            var b = Number(a);
                            return 0 > b ? -Math.floor(-b) : Math.floor(b)
                        },
                        imul: function(a, b) {
                            var c = 65535 & a >>> 16,
                                d = 65535 & a,
                                e = 65535 & b >>> 16,
                                f = 65535 & b;
                            return 0 | d * f + (c * f + d * e << 16 >>> 0)
                        },
                        fround: function(a) {
                            if (0 === a || 1 / 0 === a || a === -1 / 0 || Number.isNaN(a)) return a;
                            var b = Number(a);
                            return w.toFloat32(b)
                        }
                    };
                    p(Math, G), -5 !== Math.imul(4294967295, 5) && (Math.imul = G.imul);
                    var H = function() {
                        var b, c;
                        v.IsPromise = function(b) {
                            return v.TypeIsObject(b) ? b._promiseConstructor ? b._status === a ? !1 : !0 : !1 : !1
                        };
                        var d, e = function(a) {
                                if (!v.IsCallable(a)) throw new TypeError("bad promise constructor");
                                var b = this,
                                    c = function(a, c) {
                                        b.resolve = a, b.reject = c
                                    };
                                if (b.promise = v.Construct(a, [c]), !b.promise._es6construct) throw new TypeError("bad promise constructor");
                                if (!v.IsCallable(b.resolve) || !v.IsCallable(b.reject)) throw new TypeError("bad promise constructor")
                            },
                            f = h.setTimeout;
                        "undefined" != typeof window && v.IsCallable(window.postMessage) && (d = function() {
                            var a = [],
                                b = "zero-timeout-message",
                                c = function(c) {
                                    a.push(c), window.postMessage(b, "*")
                                },
                                d = function(c) {
                                    if (c.source == window && c.data == b) {
                                        if (c.stopPropagation(), 0 === a.length) return;
                                        var d = a.shift();
                                        d()
                                    }
                                };
                            return window.addEventListener("message", d, !0), c
                        });
                        var g = function() {
                                var a = h.Promise;
                                return a && a.resolve && function(b) {
                                    return a.resolve().then(b)
                                }
                            },
                            i = v.IsCallable(h.setImmediate) ? h.setImmediate.bind(h) : "object" == typeof process && process.nextTick ? process.nextTick : g() || (v.IsCallable(d) ? d() : function(a) {
                                f(a, 0)
                            }),
                            j = function(a, b) {
                                a.forEach(function(a) {
                                    i(function() {
                                        var c = a.handler,
                                            d = a.capability,
                                            e = d.resolve,
                                            f = d.reject;
                                        try {
                                            var g = c(b);
                                            if (g === d.promise) throw new TypeError("self resolution");
                                            var h = k(g, d);
                                            h || e(g)
                                        } catch (i) {
                                            f(i)
                                        }
                                    })
                                })
                            },
                            k = function(a, b) {
                                if (!v.TypeIsObject(a)) return !1;
                                var c = b.resolve,
                                    d = b.reject;
                                try {
                                    var e = a.then;
                                    if (!v.IsCallable(e)) return !1;
                                    e.call(a, c, d)
                                } catch (f) {
                                    d(f)
                                }
                                return !0
                            },
                            l = function(a, b, c) {
                                return function(d) {
                                    if (d === a) return c(new TypeError("self resolution"));
                                    var f = a._promiseConstructor,
                                        g = new e(f),
                                        h = k(d, g);
                                    return h ? g.promise.then(b, c) : b(d)
                                }
                            };
                        b = function(b) {
                            var c = this;
                            if (c = u(c), !c._promiseConstructor) throw new TypeError("bad promise");
                            if (c._status !== a) throw new TypeError("promise already initialized");
                            if (!v.IsCallable(b)) throw new TypeError("not a valid resolver");
                            c._status = "unresolved", c._resolveReactions = [], c._rejectReactions = [];
                            var d = function(b) {
                                    if ("unresolved" === c._status) {
                                        var d = c._resolveReactions;
                                        c._result = b, c._resolveReactions = a, c._rejectReactions = a, c._status = "has-resolution", j(d, b)
                                    }
                                },
                                e = function(b) {
                                    if ("unresolved" === c._status) {
                                        var d = c._rejectReactions;
                                        c._result = b, c._resolveReactions = a, c._rejectReactions = a, c._status = "has-rejection", j(d, b)
                                    }
                                };
                            try {
                                b(d, e)
                            } catch (f) {
                                e(f)
                            }
                            return c
                        }, c = b.prototype, p(b, {
                            "@@create": function(b) {
                                var d = this,
                                    e = d.prototype || c;
                                return b = b || q(e), p(b, {
                                    _status: a,
                                    _result: a,
                                    _resolveReactions: a,
                                    _rejectReactions: a,
                                    _promiseConstructor: a
                                }), b._promiseConstructor = d, b
                            }
                        });
                        var m = function(a, b, c, d) {
                            var e = !1;
                            return function(f) {
                                if (!e && (e = !0, b[a] = f, 0 === --d.count)) {
                                    var g = c.resolve;
                                    g(b)
                                }
                            }
                        };
                        return b.all = function(a) {
                            var b = this,
                                c = new e(b),
                                d = c.resolve,
                                f = c.reject;
                            try {
                                if (!v.IsIterable(a)) throw new TypeError("bad iterable");
                                for (var g = v.GetIterator(a), h = [], i = {
                                        count: 1
                                    }, j = 0;; j++) {
                                    var k = v.IteratorNext(g);
                                    if (k.done) break;
                                    var l = b.resolve(k.value),
                                        n = m(j, h, c, i);
                                    i.count++, l.then(n, c.reject)
                                }
                                0 === --i.count && d(h)
                            } catch (o) {
                                f(o)
                            }
                            return c.promise
                        }, b.race = function(a) {
                            var b = this,
                                c = new e(b),
                                d = c.resolve,
                                f = c.reject;
                            try {
                                if (!v.IsIterable(a)) throw new TypeError("bad iterable");
                                for (var g = v.GetIterator(a);;) {
                                    var h = v.IteratorNext(g);
                                    if (h.done) break;
                                    var i = b.resolve(h.value);
                                    i.then(d, f)
                                }
                            } catch (j) {
                                f(j)
                            }
                            return c.promise
                        }, b.reject = function(a) {
                            var b = this,
                                c = new e(b),
                                d = c.reject;
                            return d(a), c.promise
                        }, b.resolve = function(a) {
                            var b = this;
                            if (v.IsPromise(a)) {
                                var c = a._promiseConstructor;
                                if (c === b) return a
                            }
                            var d = new e(b),
                                f = d.resolve;
                            return f(a), d.promise
                        }, b.prototype["catch"] = function(b) {
                            return this.then(a, b)
                        }, b.prototype.then = function(a, b) {
                            var c = this;
                            if (!v.IsPromise(c)) throw new TypeError("not a promise");
                            var d = this.constructor,
                                f = new e(d);
                            v.IsCallable(b) || (b = function(a) {
                                throw a
                            }), v.IsCallable(a) || (a = function(a) {
                                return a
                            });
                            var g = l(c, a, b),
                                h = {
                                    capability: f,
                                    handler: g
                                },
                                i = {
                                    capability: f,
                                    handler: b
                                };
                            switch (c._status) {
                                case "unresolved":
                                    c._resolveReactions.push(h), c._rejectReactions.push(i);
                                    break;
                                case "has-resolution":
                                    j([h], c._result);
                                    break;
                                case "has-rejection":
                                    j([i], c._result);
                                    break;
                                default:
                                    throw new TypeError("unexpected")
                            }
                            return f.promise
                        }, b
                    }();
                    p(h, {
                        Promise: H
                    });
                    var I = c(h.Promise, function(a) {
                            return a.resolve(42) instanceof a
                        }),
                        J = function() {
                            try {
                                return h.Promise.reject(42).then(null, 5).then(null, function() {}), !0
                            } catch (a) {
                                return !1
                            }
                        }();
                    if (I && J || (h.Promise = H), j) {
                        var K = function(a) {
                                var b = typeof a;
                                return "string" === b ? "$" + a : "number" === b ? a : null
                            },
                            L = function() {
                                return Object.create ? Object.create(null) : {}
                            },
                            M = {
                                Map: function() {
                                    function b(a, b) {
                                        this.key = a, this.value = b, this.next = null, this.prev = null
                                    }

                                    function c(a, b) {
                                        this.head = a._head, this.i = this.head, this.kind = b
                                    }

                                    function d() {
                                        var c = this;
                                        if (c = u(c), !c._es6map) throw new TypeError("bad map");
                                        var d = new b(null, null);
                                        d.next = d.prev = d, p(c, {
                                            _head: d,
                                            _storage: L(),
                                            _size: 0
                                        });
                                        var e = arguments[0];
                                        if (e !== a && null !== e) {
                                            var f = v.GetIterator(e),
                                                g = c.set;
                                            if (!v.IsCallable(g)) throw new TypeError("bad map");
                                            for (;;) {
                                                var h = v.IteratorNext(f);
                                                if (h.done) break;
                                                var i = h.value;
                                                if (!v.TypeIsObject(i)) throw new TypeError("expected iterable of pairs");
                                                g.call(c, i[0], i[1])
                                            }
                                        }
                                        return c
                                    }
                                    var e = {};
                                    b.prototype.isRemoved = function() {
                                        return this.key === e
                                    }, c.prototype = {
                                        next: function() {
                                            var b, c = this.i,
                                                d = this.kind,
                                                e = this.head;
                                            if (this.i === a) return {
                                                value: a,
                                                done: !0
                                            };
                                            for (; c.isRemoved() && c !== e;) c = c.prev;
                                            for (; c.next !== e;)
                                                if (c = c.next, !c.isRemoved()) return b = "key" === d ? c.key : "value" === d ? c.value : [c.key, c.value], this.i = c, {
                                                    value: b,
                                                    done: !1
                                                };
                                            return this.i = a, {
                                                value: a,
                                                done: !0
                                            }
                                        }
                                    }, s(c.prototype);
                                    var f = d.prototype;
                                    return p(d, {
                                        "@@create": function(a) {
                                            var b = this,
                                                c = b.prototype || f;
                                            return a = a || q(c), p(a, {
                                                _es6map: !0
                                            }), a
                                        }
                                    }), Object.defineProperty(d.prototype, "size", {
                                        configurable: !0,
                                        enumerable: !1,
                                        get: function() {
                                            if ("undefined" == typeof this._size) throw new TypeError("size method called on incompatible Map");
                                            return this._size
                                        }
                                    }), p(d.prototype, {
                                        get: function(b) {
                                            var c = K(b);
                                            if (null !== c) {
                                                var d = this._storage[c];
                                                return d ? d.value : a
                                            }
                                            for (var e = this._head, f = e;
                                                (f = f.next) !== e;)
                                                if (v.SameValueZero(f.key, b)) return f.value;
                                            return a
                                        },
                                        has: function(a) {
                                            var b = K(a);
                                            if (null !== b) return "undefined" != typeof this._storage[b];
                                            for (var c = this._head, d = c;
                                                (d = d.next) !== c;)
                                                if (v.SameValueZero(d.key, a)) return !0;
                                            return !1
                                        },
                                        set: function(a, c) {
                                            var d, e = this._head,
                                                f = e,
                                                g = K(a);
                                            if (null !== g) {
                                                if ("undefined" != typeof this._storage[g]) return this._storage[g].value = c, void 0;
                                                d = this._storage[g] = new b(a, c), f = e.prev
                                            }
                                            for (;
                                                (f = f.next) !== e;)
                                                if (v.SameValueZero(f.key, a)) return f.value = c, void 0;
                                            d = d || new b(a, c), v.SameValue(-0, a) && (d.key = 0), d.next = this._head, d.prev = this._head.prev, d.prev.next = d, d.next.prev = d, this._size += 1
                                        },
                                        "delete": function(a) {
                                            var b = this._head,
                                                c = b,
                                                d = K(a);
                                            if (null !== d) {
                                                if ("undefined" == typeof this._storage[d]) return !1;
                                                c = this._storage[d].prev, delete this._storage[d]
                                            }
                                            for (;
                                                (c = c.next) !== b;)
                                                if (v.SameValueZero(c.key, a)) return c.key = c.value = e, c.prev.next = c.next, c.next.prev = c.prev, this._size -= 1, !0;
                                            return !1
                                        },
                                        clear: function() {
                                            this._size = 0, this._storage = L();
                                            for (var a = this._head, b = a, c = b.next;
                                                (b = c) !== a;) b.key = b.value = e, c = b.next, b.next = b.prev = a;
                                            a.next = a.prev = a
                                        },
                                        keys: function() {
                                            return new c(this, "key")
                                        },
                                        values: function() {
                                            return new c(this, "value")
                                        },
                                        entries: function() {
                                            return new c(this, "key+value")
                                        },
                                        forEach: function(a) {
                                            for (var b = arguments.length > 1 ? arguments[1] : null, c = this.entries(), d = c.next(); !d.done; d = c.next()) a.call(b, d.value[1], d.value[0], this)
                                        }
                                    }), s(d.prototype, function() {
                                        return this.entries()
                                    }), d
                                }(),
                                Set: function() {
                                    var b = function() {
                                            var b = this;
                                            if (b = u(b), !b._es6set) throw new TypeError("bad set");
                                            p(b, {
                                                "[[SetData]]": null,
                                                _storage: L()
                                            });
                                            var c = arguments[0];
                                            if (c !== a && null !== c) {
                                                var d = v.GetIterator(c),
                                                    e = b.add;
                                                if (!v.IsCallable(e)) throw new TypeError("bad set");
                                                for (;;) {
                                                    var f = v.IteratorNext(d);
                                                    if (f.done) break;
                                                    var g = f.value;
                                                    e.call(b, g)
                                                }
                                            }
                                            return b
                                        },
                                        c = b.prototype;
                                    p(b, {
                                        "@@create": function(a) {
                                            var b = this,
                                                d = b.prototype || c;
                                            return a = a || q(d), p(a, {
                                                _es6set: !0
                                            }), a
                                        }
                                    });
                                    var d = function(a) {
                                        if (!a["[[SetData]]"]) {
                                            var b = a["[[SetData]]"] = new M.Map;
                                            Object.keys(a._storage).forEach(function(a) {
                                                a = 36 === a.charCodeAt(0) ? a.substring(1) : +a, b.set(a, a)
                                            }), a._storage = null
                                        }
                                    };
                                    return Object.defineProperty(b.prototype, "size", {
                                        configurable: !0,
                                        enumerable: !1,
                                        get: function() {
                                            if ("undefined" == typeof this._storage) throw new TypeError("size method called on incompatible Set");
                                            return d(this), this["[[SetData]]"].size
                                        }
                                    }), p(b.prototype, {
                                        has: function(a) {
                                            var b;
                                            return this._storage && null !== (b = K(a)) ? !!this._storage[b] : (d(this), this["[[SetData]]"].has(a))
                                        },
                                        add: function(a) {
                                            var b;
                                            return this._storage && null !== (b = K(a)) ? (this._storage[b] = !0, void 0) : (d(this), this["[[SetData]]"].set(a, a))
                                        },
                                        "delete": function(a) {
                                            var b;
                                            return this._storage && null !== (b = K(a)) ? (delete this._storage[b], void 0) : (d(this), this["[[SetData]]"]["delete"](a))
                                        },
                                        clear: function() {
                                            return this._storage ? (this._storage = L(), void 0) : this["[[SetData]]"].clear()
                                        },
                                        keys: function() {
                                            return d(this), this["[[SetData]]"].keys()
                                        },
                                        values: function() {
                                            return d(this), this["[[SetData]]"].values()
                                        },
                                        entries: function() {
                                            return d(this), this["[[SetData]]"].entries()
                                        },
                                        forEach: function(a) {
                                            var b = arguments.length > 1 ? arguments[1] : null,
                                                c = this;
                                            d(this), this["[[SetData]]"].forEach(function(d, e) {
                                                a.call(b, e, e, c)
                                            })
                                        }
                                    }), s(b.prototype, function() {
                                        return this.values()
                                    }), b
                                }()
                            };
                        p(h, M), (h.Map || h.Set) && ("function" != typeof h.Map.prototype.clear || 0 !== (new h.Set).size || 0 !== (new h.Map).size || "function" != typeof h.Map.prototype.keys || "function" != typeof h.Set.prototype.keys || "function" != typeof h.Map.prototype.forEach || "function" != typeof h.Set.prototype.forEach || b(h.Map) || b(h.Set) || !c(h.Map, function(a) {
                            return new a([]) instanceof a
                        })) && (h.Map = M.Map, h.Set = M.Set), s(Object.getPrototypeOf((new h.Map).keys())), s(Object.getPrototypeOf((new h.Set).keys()))
                    }
                };
            "function" == typeof define && define.amd ? define("es6-shim", g) : g()
        }();
    var dust = {};
    ! function(dust) {
        function Context(a, b, c, d) {
            this.stack = a, this.global = b, this.blocks = c, this.templateName = d
        }

        function Stack(a, b, c, d) {
            this.tail = b, this.isObject = !dust.isArray(a) && a && "object" == typeof a, this.head = a, this.index = c, this.of = d
        }

        function Stub(a) {
            this.head = new Chunk(this), this.callback = a, this.out = ""
        }

        function Stream() {
            this.head = new Chunk(this)
        }

        function Chunk(a, b, c) {
            this.root = a, this.next = b, this.data = [], this.flushable = !1, this.taps = c
        }

        function Tap(a, b) {
            this.head = a, this.tail = b
        }
        dust.helpers = {}, dust.cache = {}, dust.register = function(a, b) {
            a && (dust.cache[a] = b)
        }, dust.render = function(a, b, c) {
            var d = new Stub(c).head;
            dust.load(a, d, Context.wrap(b, a)).end()
        }, dust.stream = function(a, b) {
            var c = new Stream;
            return dust.nextTick(function() {
                dust.load(a, c.head, Context.wrap(b, a)).end()
            }), c
        }, dust.renderSource = function(a, b, c) {
            return dust.compileFn(a)(b, c)
        }, dust.compileFn = function(a, b) {
            var c = dust.loadSource(dust.compile(a, b));
            return function(a, d) {
                var e = d ? new Stub(d) : new Stream;
                return dust.nextTick(function() {
                    c(e.head, Context.wrap(a, b)).end()
                }), e
            }
        }, dust.load = function(a, b, c) {
            var d = dust.cache[a];
            return d ? d(b, c) : dust.onLoad ? b.map(function(b) {
                dust.onLoad(a, function(d, e) {
                    return d ? b.setError(d) : (dust.cache[a] || dust.loadSource(dust.compile(e, a)), dust.cache[a](b, c).end(), void 0)
                })
            }) : b.setError(new Error("Template Not Found: " + a))
        }, dust.loadSource = function(source, path) {
            return eval(source)
        }, dust.isArray = Array.isArray ? Array.isArray : function(a) {
            return "[object Array]" == Object.prototype.toString.call(a)
        }, dust.nextTick = function() {
            return "undefined" != typeof process ? process.nextTick : function(a) {
                setTimeout(a, 0)
            }
        }(), dust.isEmpty = function(a) {
            return dust.isArray(a) && !a.length ? !0 : 0 === a ? !1 : !a
        }, dust.filter = function(a, b, c) {
            if (c)
                for (var d = 0, e = c.length; e > d; d++) {
                    var f = c[d];
                    "s" === f ? b = null : "function" == typeof dust.filters[f] && (a = dust.filters[f](a))
                }
            return b && (a = dust.filters[b](a)), a
        }, dust.filters = {
            h: function(a) {
                return dust.escapeHtml(a)
            },
            j: function(a) {
                return dust.escapeJs(a)
            },
            u: encodeURI,
            uc: encodeURIComponent,
            js: function(a) {
                return JSON ? JSON.stringify(a) : a
            },
            jp: function(a) {
                return JSON ? JSON.parse(a) : a
            }
        }, dust.makeBase = function(a) {
            return new Context(new Stack, a)
        }, Context.wrap = function(a, b) {
            return a instanceof Context ? a : new Context(new Stack(a), {}, null, b)
        }, Context.prototype.get = function(a) {
            for (var b, c = this.stack; c;) {
                if (c.isObject && (b = c.head[a], void 0 !== b)) return b;
                c = c.tail
            }
            return this.global ? this.global[a] : void 0
        }, Context.prototype.getPath = function(a, b) {
            var c, d = this.stack,
                e = b.length,
                f = a ? void 0 : this.stack.tail;
            if (a && 0 === e) return d.head;
            d = d.head;
            for (var g = 0; d && e > g;)
                for (c = d, d = d[b[g]], g++; !d && !a;) {
                    if (g > 1) return d;
                    f ? (d = f.head, f = f.tail, g = 0) : a || (d = this.global, a = !0, g = 0)
                }
            return "function" == typeof d ? function() {
                return d.apply(c, arguments)
            } : d
        }, Context.prototype.push = function(a, b, c) {
            return new Context(new Stack(a, this.stack, b, c), this.global, this.blocks, this.templateName)
        }, Context.prototype.rebase = function(a) {
            return new Context(new Stack(a), this.global, this.blocks, this.templateName)
        }, Context.prototype.current = function() {
            return this.stack.head
        }, Context.prototype.getBlock = function(a) {
            if ("function" == typeof a) {
                var b = new Chunk;
                a = a(b, this).data.join("")
            }
            var c = this.blocks;
            if (c)
                for (var d, e = c.length; e--;)
                    if (d = c[e][a]) return d
        }, Context.prototype.shiftBlocks = function(a) {
            var b, c = this.blocks;
            return a ? (b = c ? c.concat([a]) : [a], new Context(this.stack, this.global, b, this.templateName)) : this
        }, Stub.prototype.flush = function() {
            for (var a = this.head; a;) {
                if (!a.flushable) return a.error ? (this.callback(a.error), this.flush = function() {}, void 0) : void 0;
                this.out += a.data.join(""), a = a.next, this.head = a
            }
            this.callback(null, this.out)
        }, Stream.prototype.flush = function() {
            for (var a = this.head; a;) {
                if (!a.flushable) return a.error ? (this.emit("error", a.error), this.flush = function() {}, void 0) : void 0;
                this.emit("data", a.data.join("")), a = a.next, this.head = a
            }
            this.emit("end")
        }, Stream.prototype.emit = function(a, b) {
            if (!this.events) return !1;
            var c = this.events[a];
            if (!c) return !1;
            if ("function" == typeof c) c(b);
            else
                for (var d = c.slice(0), e = 0, f = d.length; f > e; e++) d[e](b)
        }, Stream.prototype.on = function(a, b) {
            return this.events || (this.events = {}), this.events[a] ? "function" == typeof this.events[a] ? this.events[a] = [this.events[a], b] : this.events[a].push(b) : this.events[a] = b, this
        }, Stream.prototype.pipe = function(a) {
            return this.on("data", function(b) {
                a.write(b, "utf8")
            }).on("end", function() {
                a.end()
            }).on("error", function(b) {
                a.error(b)
            }), this
        }, Chunk.prototype.write = function(a) {
            var b = this.taps;
            return b && (a = b.go(a)), this.data.push(a), this
        }, Chunk.prototype.end = function(a) {
            return a && this.write(a), this.flushable = !0, this.root.flush(), this
        }, Chunk.prototype.map = function(a) {
            var b = new Chunk(this.root, this.next, this.taps),
                c = new Chunk(this.root, b, this.taps);
            return this.next = c, this.flushable = !0, a(c), b
        }, Chunk.prototype.tap = function(a) {
            var b = this.taps;
            return this.taps = b ? b.push(a) : new Tap(a), this
        }, Chunk.prototype.untap = function() {
            return this.taps = this.taps.tail, this
        }, Chunk.prototype.render = function(a, b) {
            return a(this, b)
        }, Chunk.prototype.reference = function(a, b, c, d) {
            return "function" == typeof a && (a.isFunction = !0, a = a.apply(b.current(), [this, b, null, {
                auto: c,
                filters: d
            }]), a instanceof Chunk) ? a : dust.isEmpty(a) ? this : this.write(dust.filter(a, c, d))
        }, Chunk.prototype.section = function(a, b, c, d) {
            if ("function" == typeof a && (a = a.apply(b.current(), [this, b, c, d]), a instanceof Chunk)) return a;
            var e = c.block,
                f = c["else"];
            if (d && (b = b.push(d)), dust.isArray(a)) {
                if (e) {
                    var g = a.length,
                        h = this;
                    if (g > 0) {
                        b.stack.head && (b.stack.head.$len = g);
                        for (var i = 0; g > i; i++) b.stack.head && (b.stack.head.$idx = i), h = e(h, b.push(a[i], i, g));
                        return b.stack.head && (b.stack.head.$idx = void 0, b.stack.head.$len = void 0), h
                    }
                    if (f) return f(this, b)
                }
            } else if (a === !0) {
                if (e) return e(this, b)
            } else if (a || 0 === a) {
                if (e) return e(this, b.push(a))
            } else if (f) return f(this, b);
            return this
        }, Chunk.prototype.exists = function(a, b, c) {
            var d = c.block,
                e = c["else"];
            if (dust.isEmpty(a)) {
                if (e) return e(this, b)
            } else if (d) return d(this, b);
            return this
        }, Chunk.prototype.notexists = function(a, b, c) {
            var d = c.block,
                e = c["else"];
            if (dust.isEmpty(a)) {
                if (d) return d(this, b)
            } else if (e) return e(this, b);
            return this
        }, Chunk.prototype.block = function(a, b, c) {
            var d = c.block;
            return a && (d = a), d ? d(this, b) : this
        }, Chunk.prototype.partial = function(a, b, c) {
            var d;
            d = dust.makeBase(b.global), d.blocks = b.blocks, b.stack && b.stack.tail && (d.stack = b.stack.tail), c && (d = d.push(c)), "string" == typeof a && (d.templateName = a), d = d.push(b.stack.head);
            var e;
            return e = "function" == typeof a ? this.capture(a, d, function(a, b) {
                dust.load(a, b, d).end()
            }) : dust.load(a, this, d)
        }, Chunk.prototype.helper = function(a, b, c, d) {
            return dust.helpers[a] ? dust.helpers[a](this, b, c, d) : this
        }, Chunk.prototype.capture = function(a, b, c) {
            return this.map(function(d) {
                var e = new Stub(function(a, b) {
                    a ? d.setError(a) : c(b, d)
                });
                a(e.head, b).end()
            })
        }, Chunk.prototype.setError = function(a) {
            return this.error = a, this.root.flush(), this
        }, Tap.prototype.push = function(a) {
            return new Tap(a, this)
        }, Tap.prototype.go = function(a) {
            for (var b = this; b;) a = b.head(a), b = b.tail;
            return a
        };
        var HCHARS = new RegExp(/[&<>\"\']/),
            AMP = /&/g,
            LT = /</g,
            GT = />/g,
            QUOT = /\"/g,
            SQUOT = /\'/g;
        dust.escapeHtml = function(a) {
            return "string" == typeof a ? HCHARS.test(a) ? a.replace(AMP, "&amp;").replace(LT, "&lt;").replace(GT, "&gt;").replace(QUOT, "&quot;").replace(SQUOT, "&#39;") : a : a
        };
        var BS = /\\/g,
            FS = /\//g,
            CR = /\r/g,
            LS = /\u2028/g,
            PS = /\u2029/g,
            NL = /\n/g,
            LF = /\f/g,
            SQ = /'/g,
            DQ = /"/g,
            TB = /\t/g;
        dust.escapeJs = function(a) {
            return "string" == typeof a ? a.replace(BS, "\\\\").replace(FS, "\\/").replace(DQ, '\\"').replace(SQ, "\\'").replace(CR, "\\r").replace(LS, "\\u2028").replace(PS, "\\u2029").replace(NL, "\\n").replace(LF, "\\f").replace(TB, "\\t") : a
        }
    }(dust), "undefined" != typeof exports ? ("undefined" != typeof process && require("./server")(dust), module.exports = dust) : window.dust = dust;
    var dustCompiler = function(a) {
        function b(b) {
            var c = {};
            return a.filterNode(c, b)
        }

        function c(b, c) {
            for (var d = [c[0]], e = 1, f = c.length; f > e; e++) {
                var g = a.filterNode(b, c[e]);
                g && d.push(g)
            }
            return d
        }

        function d(b, c) {
            for (var d, e = [c[0]], f = 1, g = c.length; g > f; f++) {
                var h = a.filterNode(b, c[f]);
                h && ("buffer" === h[0] ? d ? d[1] += h[1] : (d = h, e.push(h)) : (d = null, e.push(h)))
            }
            return e
        }

        function e(a, b) {
            return ["buffer", m[b[1]]]
        }

        function f(a, b) {
            return b
        }

        function g() {}

        function h(b, c) {
            var d = {
                name: c,
                bodies: [],
                blocks: {},
                index: 0,
                auto: "h"
            };
            return "(function(){dust.register(" + (c ? '"' + c + '"' : "null") + "," + a.compileNode(d, b) + ");" + i(d) + j(d) + "return body_0;" + "})();"
        }

        function i(a) {
            var b = [],
                c = a.blocks;
            for (var d in c) b.push("'" + d + "':" + c[d]);
            return b.length ? (a.blocks = "ctx=ctx.shiftBlocks(blocks);", "var blocks={" + b.join(",") + "};") : a.blocks = ""
        }

        function j(a) {
            for (var b = [], c = a.bodies, d = a.blocks, e = 0, f = c.length; f > e; e++) b[e] = "function body_" + e + "(chk,ctx){" + d + "return chk" + c[e] + ";}";
            return b.join("")
        }

        function k(b, c) {
            for (var d = "", e = 1, f = c.length; f > e; e++) d += a.compileNode(b, c[e]);
            return d
        }

        function l(b, c, d) {
            return "." + d + "(" + a.compileNode(b, c[1]) + "," + a.compileNode(b, c[2]) + "," + a.compileNode(b, c[4]) + "," + a.compileNode(b, c[3]) + ")"
        }
        a.compile = function(c, d) {
            try {
                var e = b(a.parse(c));
                return h(e, d)
            } catch (f) {
                if (!f.line || !f.column) throw f;
                throw new SyntaxError(f.message + " At line : " + f.line + ", column : " + f.column)
            }
        }, a.filterNode = function(b, c) {
            return a.optimizers[c[0]](b, c)
        }, a.optimizers = {
            body: d,
            buffer: f,
            special: e,
            format: g,
            reference: c,
            "#": c,
            "?": c,
            "^": c,
            "<": c,
            "+": c,
            "@": c,
            "%": c,
            partial: c,
            context: c,
            params: c,
            bodies: c,
            param: c,
            filters: f,
            key: f,
            path: f,
            literal: f,
            comment: g,
            line: g,
            col: g
        }, a.pragmas = {
            esc: function(a, b, c) {
                var d = a.auto;
                b || (b = "h"), a.auto = "s" === b ? "" : b;
                var e = k(a, c.block);
                return a.auto = d, e
            }
        };
        var m = {
            s: " ",
            n: "\n",
            r: "\r",
            lb: "{",
            rb: "}"
        };
        a.compileNode = function(b, c) {
            return a.nodes[c[0]](b, c)
        }, a.nodes = {
            body: function(a, b) {
                var c = a.index++,
                    d = "body_" + c;
                return a.bodies[c] = k(a, b), d
            },
            buffer: function(a, b) {
                return ".write(" + n(b[1]) + ")"
            },
            format: function(a, b) {
                return ".write(" + n(b[1] + b[2]) + ")"
            },
            reference: function(b, c) {
                return ".reference(" + a.compileNode(b, c[1]) + ",ctx," + a.compileNode(b, c[2]) + ")"
            },
            "#": function(a, b) {
                return l(a, b, "section")
            },
            "?": function(a, b) {
                return l(a, b, "exists")
            },
            "^": function(a, b) {
                return l(a, b, "notexists")
            },
            "<": function(b, c) {
                for (var d = c[4], e = 1, f = d.length; f > e; e++) {
                    var g = d[e],
                        h = g[1][1];
                    if ("block" === h) return b.blocks[c[1].text] = a.compileNode(b, g[2]), ""
                }
                return ""
            },
            "+": function(b, c) {
                return "undefined" == typeof c[1].text && "undefined" == typeof c[4] ? ".block(ctx.getBlock(" + a.compileNode(b, c[1]) + ",chk, ctx)," + a.compileNode(b, c[2]) + ", {}," + a.compileNode(b, c[3]) + ")" : ".block(ctx.getBlock(" + n(c[1].text) + ")," + a.compileNode(b, c[2]) + "," + a.compileNode(b, c[4]) + "," + a.compileNode(b, c[3]) + ")"
            },
            "@": function(b, c) {
                return ".helper(" + n(c[1].text) + "," + a.compileNode(b, c[2]) + "," + a.compileNode(b, c[4]) + "," + a.compileNode(b, c[3]) + ")"
            },
            "%": function(b, c) {
                var d = c[1][1];
                if (!a.pragmas[d]) return "";
                for (var e = c[4], f = {}, g = 1, h = e.length; h > g; g++) {
                    var i = e[g];
                    f[i[1][1]] = i[2]
                }
                for (var j = c[3], k = {}, g = 1, h = j.length; h > g; g++) {
                    var l = j[g];
                    k[l[1][1]] = l[2][1]
                }
                var m = c[2][1] ? c[2][1].text : null;
                return a.pragmas[d](b, m, f, k)
            },
            partial: function(b, c) {
                return ".partial(" + a.compileNode(b, c[1]) + "," + a.compileNode(b, c[2]) + "," + a.compileNode(b, c[3]) + ")"
            },
            context: function(b, c) {
                return c[1] ? "ctx.rebase(" + a.compileNode(b, c[1]) + ")" : "ctx"
            },
            params: function(b, c) {
                for (var d = [], e = 1, f = c.length; f > e; e++) d.push(a.compileNode(b, c[e]));
                return d.length ? "{" + d.join(",") + "}" : "null"
            },
            bodies: function(b, c) {
                for (var d = [], e = 1, f = c.length; f > e; e++) d.push(a.compileNode(b, c[e]));
                return "{" + d.join(",") + "}"
            },
            param: function(b, c) {
                return a.compileNode(b, c[1]) + ":" + a.compileNode(b, c[2])
            },
            filters: function(a, b) {
                for (var c = [], d = 1, e = b.length; e > d; d++) {
                    var f = b[d];
                    c.push('"' + f + '"')
                }
                return '"' + a.auto + '"' + (c.length ? ",[" + c.join(",") + "]" : "")
            },
            key: function(a, b) {
                return 'ctx.get("' + b[1] + '")'
            },
            path: function(b, c) {
                for (var d = c[1], e = c[2], f = [], g = 0, h = e.length; h > g; g++) a.isArray(e[g]) ? f.push(a.compileNode(b, e[g])) : f.push('"' + e[g] + '"');
                return "ctx.getPath(" + d + ",[" + f.join(",") + "])"
            },
            literal: function(a, b) {
                return n(b[1])
            }
        };
        var n = "undefined" == typeof JSON ? function(b) {
            return '"' + a.escapeJs(b) + '"'
        } : JSON.stringify;
        return a
    };
    "undefined" != typeof exports ? module.exports = dustCompiler : dustCompiler(getGlobal()),
        function(a) {
            var b = function() {
                function a(a) {
                    return '"' + a.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g, escape) + '"'
                }
                var c = {
                    parse: function(c, d) {
                        function e(a) {
                            var b = {};
                            for (var c in a) b[c] = a[c];
                            return b
                        }

                        function f(a, b) {
                            for (var d = a.offset + b, e = a.offset; d > e; e++) {
                                var f = c.charAt(e);
                                "\n" === f ? (a.seenCR || a.line++, a.column = 1, a.seenCR = !1) : "\r" === f || "\u2028" === f || "\u2029" === f ? (a.line++, a.column = 1, a.seenCR = !0) : (a.column++, a.seenCR = !1)
                            }
                            a.offset += b
                        }

                        function g(a) {
                            Q.offset < S.offset || (Q.offset > S.offset && (S = e(Q), T = []), T.push(a))
                        }

                        function h() {
                            var a, b, c;
                            for (c = e(Q), a = [], b = i(); null !== b;) a.push(b), b = i();
                            return null !== a && (a = function(a, b, c, d) {
                                return ["body"].concat(d).concat([
                                    ["line", b],
                                    ["col", c]
                                ])
                            }(c.offset, c.line, c.column, a)), null === a && (Q = e(c)), a
                        }

                        function i() {
                            var a;
                            return a = G(), null === a && (a = j(), null === a && (a = q(), null === a && (a = s(), null === a && (a = p(), null === a && (a = D()))))), a
                        }

                        function j() {
                            var a, b, d, i, j, m, n, p, q;
                            if (R++, p = e(Q), q = e(Q), a = k(), null !== a) {
                                for (b = [], d = N(); null !== d;) b.push(d), d = N();
                                null !== b ? (d = J(), null !== d ? (i = h(), null !== i ? (j = o(), null !== j ? (m = l(), m = null !== m ? m : "", null !== m ? (n = function(a, b, c, d, e, f, g) {
                                    if (!g || d[1].text !== g.text) throw new Error("Expected end tag for " + d[1].text + " but it was not found. At line : " + b + ", column : " + c);
                                    return !0
                                }(Q.offset, Q.line, Q.column, a, i, j, m) ? "" : null, null !== n ? a = [a, b, d, i, j, m, n] : (a = null, Q = e(q))) : (a = null, Q = e(q))) : (a = null, Q = e(q))) : (a = null, Q = e(q))) : (a = null, Q = e(q))) : (a = null, Q = e(q))
                            } else a = null, Q = e(q);
                            if (null !== a && (a = function(a, b, c, d, e, f) {
                                    return f.push(["param", ["literal", "block"], e]), d.push(f), d.concat([
                                        ["line", b],
                                        ["col", c]
                                    ])
                                }(p.offset, p.line, p.column, a[0], a[3], a[4], a[5])), null === a && (Q = e(p)), null === a) {
                                if (p = e(Q), q = e(Q), a = k(), null !== a) {
                                    for (b = [], d = N(); null !== d;) b.push(d), d = N();
                                    null !== b ? (47 === c.charCodeAt(Q.offset) ? (d = "/", f(Q, 1)) : (d = null, 0 === R && g('"/"')), null !== d ? (i = J(), null !== i ? a = [a, b, d, i] : (a = null, Q = e(q))) : (a = null, Q = e(q))) : (a = null, Q = e(q))
                                } else a = null, Q = e(q);
                                null !== a && (a = function(a, b, c, d) {
                                    return d.push(["bodies"]), d.concat([
                                        ["line", b],
                                        ["col", c]
                                    ])
                                }(p.offset, p.line, p.column, a[0])), null === a && (Q = e(p))
                            }
                            return R--, 0 === R && null === a && g("section"), a
                        }

                        function k() {
                            var a, b, d, h, i, j, k, l;
                            if (k = e(Q), l = e(Q), a = I(), null !== a)
                                if (/^[#?^<+@%]/.test(c.charAt(Q.offset)) ? (b = c.charAt(Q.offset), f(Q, 1)) : (b = null, 0 === R && g("[#?^<+@%]")), null !== b) {
                                    for (d = [], h = N(); null !== h;) d.push(h), h = N();
                                    null !== d ? (h = t(), null !== h ? (i = m(), null !== i ? (j = n(), null !== j ? a = [a, b, d, h, i, j] : (a = null, Q = e(l))) : (a = null, Q = e(l))) : (a = null, Q = e(l))) : (a = null, Q = e(l))
                                } else a = null, Q = e(l);
                            else a = null, Q = e(l);
                            return null !== a && (a = function(a, b, c, d, e, f, g) {
                                return [d, e, f, g]
                            }(k.offset, k.line, k.column, a[1], a[3], a[4], a[5])), null === a && (Q = e(k)), a
                        }

                        function l() {
                            var a, b, d, h, i, j, k, l;
                            if (R++, k = e(Q), l = e(Q), a = I(), null !== a)
                                if (47 === c.charCodeAt(Q.offset) ? (b = "/", f(Q, 1)) : (b = null, 0 === R && g('"/"')), null !== b) {
                                    for (d = [], h = N(); null !== h;) d.push(h), h = N();
                                    if (null !== d)
                                        if (h = t(), null !== h) {
                                            for (i = [], j = N(); null !== j;) i.push(j), j = N();
                                            null !== i ? (j = J(), null !== j ? a = [a, b, d, h, i, j] : (a = null, Q = e(l))) : (a = null, Q = e(l))
                                        } else a = null, Q = e(l);
                                    else a = null, Q = e(l)
                                } else a = null, Q = e(l);
                            else a = null, Q = e(l);
                            return null !== a && (a = function(a, b, c, d) {
                                return d
                            }(k.offset, k.line, k.column, a[3])), null === a && (Q = e(k)), R--, 0 === R && null === a && g("end tag"), a
                        }

                        function m() {
                            var a, b, d, h, i;
                            return d = e(Q), h = e(Q), i = e(Q), 58 === c.charCodeAt(Q.offset) ? (a = ":", f(Q, 1)) : (a = null, 0 === R && g('":"')), null !== a ? (b = t(), null !== b ? a = [a, b] : (a = null, Q = e(i))) : (a = null, Q = e(i)), null !== a && (a = function(a, b, c, d) {
                                return d
                            }(h.offset, h.line, h.column, a[1])), null === a && (Q = e(h)), a = null !== a ? a : "", null !== a && (a = function(a, b, c, d) {
                                return d ? ["context", d] : ["context"]
                            }(d.offset, d.line, d.column, a)), null === a && (Q = e(d)), a
                        }

                        function n() {
                            var a, b, d, h, i, j, k, l;
                            if (R++, j = e(Q), a = [], k = e(Q), l = e(Q), d = N(), null !== d)
                                for (b = []; null !== d;) b.push(d), d = N();
                            else b = null;
                            for (null !== b ? (d = y(), null !== d ? (61 === c.charCodeAt(Q.offset) ? (h = "=", f(Q, 1)) : (h = null, 0 === R && g('"="')), null !== h ? (i = u(), null === i && (i = t(), null === i && (i = B())), null !== i ? b = [b, d, h, i] : (b = null, Q = e(l))) : (b = null, Q = e(l))) : (b = null, Q = e(l))) : (b = null, Q = e(l)), null !== b && (b = function(a, b, c, d, e) {
                                    return ["param", ["literal", d], e]
                                }(k.offset, k.line, k.column, b[1], b[3])), null === b && (Q = e(k)); null !== b;) {
                                if (a.push(b), k = e(Q), l = e(Q), d = N(), null !== d)
                                    for (b = []; null !== d;) b.push(d), d = N();
                                else b = null;
                                null !== b ? (d = y(), null !== d ? (61 === c.charCodeAt(Q.offset) ? (h = "=", f(Q, 1)) : (h = null, 0 === R && g('"="')), null !== h ? (i = u(), null === i && (i = t(), null === i && (i = B())), null !== i ? b = [b, d, h, i] : (b = null, Q = e(l))) : (b = null, Q = e(l))) : (b = null, Q = e(l))) : (b = null, Q = e(l)), null !== b && (b = function(a, b, c, d, e) {
                                    return ["param", ["literal", d], e]
                                }(k.offset, k.line, k.column, b[1], b[3])), null === b && (Q = e(k))
                            }
                            return null !== a && (a = function(a, b, c, d) {
                                return ["params"].concat(d)
                            }(j.offset, j.line, j.column, a)), null === a && (Q = e(j)), R--, 0 === R && null === a && g("params"), a
                        }

                        function o() {
                            var a, b, d, i, j, k, l, m, n;
                            for (R++, l = e(Q), a = [], m = e(Q), n = e(Q), b = I(), null !== b ? (58 === c.charCodeAt(Q.offset) ? (d = ":", f(Q, 1)) : (d = null, 0 === R && g('":"')), null !== d ? (i = y(), null !== i ? (j = J(), null !== j ? (k = h(), null !== k ? b = [b, d, i, j, k] : (b = null, Q = e(n))) : (b = null, Q = e(n))) : (b = null, Q = e(n))) : (b = null, Q = e(n))) : (b = null, Q = e(n)), null !== b && (b = function(a, b, c, d, e) {
                                    return ["param", ["literal", d], e]
                                }(m.offset, m.line, m.column, b[2], b[4])), null === b && (Q = e(m)); null !== b;) a.push(b), m = e(Q), n = e(Q), b = I(), null !== b ? (58 === c.charCodeAt(Q.offset) ? (d = ":", f(Q, 1)) : (d = null, 0 === R && g('":"')), null !== d ? (i = y(), null !== i ? (j = J(), null !== j ? (k = h(), null !== k ? b = [b, d, i, j, k] : (b = null, Q = e(n))) : (b = null, Q = e(n))) : (b = null, Q = e(n))) : (b = null, Q = e(n))) : (b = null, Q = e(n)), null !== b && (b = function(a, b, c, d, e) {
                                return ["param", ["literal", d], e]
                            }(m.offset, m.line, m.column, b[2], b[4])), null === b && (Q = e(m));
                            return null !== a && (a = function(a, b, c, d) {
                                return ["bodies"].concat(d)
                            }(l.offset, l.line, l.column, a)), null === a && (Q = e(l)), R--, 0 === R && null === a && g("bodies"), a
                        }

                        function p() {
                            var a, b, c, d, f, h;
                            return R++, f = e(Q), h = e(Q), a = I(), null !== a ? (b = t(), null !== b ? (c = r(), null !== c ? (d = J(), null !== d ? a = [a, b, c, d] : (a = null, Q = e(h))) : (a = null, Q = e(h))) : (a = null, Q = e(h))) : (a = null, Q = e(h)), null !== a && (a = function(a, b, c, d, e) {
                                return ["reference", d, e].concat([
                                    ["line", b],
                                    ["col", c]
                                ])
                            }(f.offset, f.line, f.column, a[1], a[2])), null === a && (Q = e(f)), R--, 0 === R && null === a && g("reference"), a
                        }

                        function q() {
                            var a, b, d, h, i, j, k, l, o, p, q, r;
                            if (R++, p = e(Q), q = e(Q), a = I(), null !== a)
                                if (62 === c.charCodeAt(Q.offset) ? (b = ">", f(Q, 1)) : (b = null, 0 === R && g('">"')), null === b && (43 === c.charCodeAt(Q.offset) ? (b = "+", f(Q, 1)) : (b = null, 0 === R && g('"+"'))), null !== b) {
                                    for (d = [], h = N(); null !== h;) d.push(h), h = N();
                                    if (null !== d)
                                        if (r = e(Q), h = y(), null !== h && (h = function(a, b, c, d) {
                                                return ["literal", d]
                                            }(r.offset, r.line, r.column, h)), null === h && (Q = e(r)), null === h && (h = B()), null !== h)
                                            if (i = m(), null !== i)
                                                if (j = n(), null !== j) {
                                                    for (k = [], l = N(); null !== l;) k.push(l), l = N();
                                                    null !== k ? (47 === c.charCodeAt(Q.offset) ? (l = "/", f(Q, 1)) : (l = null, 0 === R && g('"/"')), null !== l ? (o = J(), null !== o ? a = [a, b, d, h, i, j, k, l, o] : (a = null, Q = e(q))) : (a = null, Q = e(q))) : (a = null, Q = e(q))
                                                } else a = null, Q = e(q);
                                    else a = null, Q = e(q);
                                    else a = null, Q = e(q);
                                    else a = null, Q = e(q)
                                } else a = null, Q = e(q);
                            else a = null, Q = e(q);
                            return null !== a && (a = function(a, b, c, d, e, f, g) {
                                var h = ">" === d ? "partial" : d;
                                return [h, e, f, g].concat([
                                    ["line", b],
                                    ["col", c]
                                ])
                            }(p.offset, p.line, p.column, a[1], a[3], a[4], a[5])), null === a && (Q = e(p)), R--, 0 === R && null === a && g("partial"), a
                        }

                        function r() {
                            var a, b, d, h, i, j;
                            for (R++, h = e(Q), a = [], i = e(Q), j = e(Q), 124 === c.charCodeAt(Q.offset) ? (b = "|", f(Q, 1)) : (b = null, 0 === R && g('"|"')), null !== b ? (d = y(), null !== d ? b = [b, d] : (b = null, Q = e(j))) : (b = null, Q = e(j)), null !== b && (b = function(a, b, c, d) {
                                    return d
                                }(i.offset, i.line, i.column, b[1])), null === b && (Q = e(i)); null !== b;) a.push(b), i = e(Q), j = e(Q), 124 === c.charCodeAt(Q.offset) ? (b = "|", f(Q, 1)) : (b = null, 0 === R && g('"|"')), null !== b ? (d = y(), null !== d ? b = [b, d] : (b = null, Q = e(j))) : (b = null, Q = e(j)), null !== b && (b = function(a, b, c, d) {
                                return d
                            }(i.offset, i.line, i.column, b[1])), null === b && (Q = e(i));
                            return null !== a && (a = function(a, b, c, d) {
                                return ["filters"].concat(d)
                            }(h.offset, h.line, h.column, a)), null === a && (Q = e(h)), R--, 0 === R && null === a && g("filters"), a
                        }

                        function s() {
                            var a, b, d, h, i, j;
                            return R++, i = e(Q), j = e(Q), a = I(), null !== a ? (126 === c.charCodeAt(Q.offset) ? (b = "~", f(Q, 1)) : (b = null, 0 === R && g('"~"')), null !== b ? (d = y(), null !== d ? (h = J(), null !== h ? a = [a, b, d, h] : (a = null, Q = e(j))) : (a = null, Q = e(j))) : (a = null, Q = e(j))) : (a = null, Q = e(j)), null !== a && (a = function(a, b, c, d) {
                                return ["special", d].concat([
                                    ["line", b],
                                    ["col", c]
                                ])
                            }(i.offset, i.line, i.column, a[2])), null === a && (Q = e(i)), R--, 0 === R && null === a && g("special"), a
                        }

                        function t() {
                            var a, b;
                            return R++, b = e(Q), a = x(), null !== a && (a = function(a, b, c, d) {
                                var e = ["path"].concat(d);
                                return e.text = d[1].join("."), e
                            }(b.offset, b.line, b.column, a)), null === a && (Q = e(b)), null === a && (b = e(Q), a = y(), null !== a && (a = function(a, b, c, d) {
                                var e = ["key", d];
                                return e.text = d, e
                            }(b.offset, b.line, b.column, a)), null === a && (Q = e(b))), R--, 0 === R && null === a && g("identifier"), a
                        }

                        function u() {
                            var a, b;
                            return R++, b = e(Q), a = v(), null === a && (a = w()), null !== a && (a = function(a, b, c, d) {
                                return ["literal", d]
                            }(b.offset, b.line, b.column, a)), null === a && (Q = e(b)), R--, 0 === R && null === a && g("number"), a
                        }

                        function v() {
                            var a, b, d, h, i, j;
                            if (R++, i = e(Q), j = e(Q), a = w(), null !== a)
                                if (46 === c.charCodeAt(Q.offset) ? (b = ".", f(Q, 1)) : (b = null, 0 === R && g('"."')), null !== b) {
                                    if (h = w(), null !== h)
                                        for (d = []; null !== h;) d.push(h), h = w();
                                    else d = null;
                                    null !== d ? a = [a, b, d] : (a = null, Q = e(j))
                                } else a = null, Q = e(j);
                            else a = null, Q = e(j);
                            return null !== a && (a = function(a, b, c, d, e) {
                                return parseFloat(d + "." + e.join(""))
                            }(i.offset, i.line, i.column, a[0], a[2])), null === a && (Q = e(i)), R--, 0 === R && null === a && g("float"), a
                        }

                        function w() {
                            var a, b, d;
                            if (R++, d = e(Q), /^[0-9]/.test(c.charAt(Q.offset)) ? (b = c.charAt(Q.offset), f(Q, 1)) : (b = null, 0 === R && g("[0-9]")), null !== b)
                                for (a = []; null !== b;) a.push(b), /^[0-9]/.test(c.charAt(Q.offset)) ? (b = c.charAt(Q.offset), f(Q, 1)) : (b = null, 0 === R && g("[0-9]"));
                            else a = null;
                            return null !== a && (a = function(a, b, c, d) {
                                return parseInt(d.join(""), 10)
                            }(d.offset, d.line, d.column, a)), null === a && (Q = e(d)), R--, 0 === R && null === a && g("integer"), a
                        }

                        function x() {
                            var a, b, d, h, i;
                            if (R++, h = e(Q), i = e(Q), a = y(), a = null !== a ? a : "", null !== a) {
                                if (d = A(), null === d && (d = z()), null !== d)
                                    for (b = []; null !== d;) b.push(d), d = A(), null === d && (d = z());
                                else b = null;
                                null !== b ? a = [a, b] : (a = null, Q = e(i))
                            } else a = null, Q = e(i);
                            if (null !== a && (a = function(a, b, c, d, e) {
                                    return e = e[0], d && e ? (e.unshift(d), [!1, e].concat([
                                        ["line", b],
                                        ["col", c]
                                    ])) : [!0, e].concat([
                                        ["line", b],
                                        ["col", c]
                                    ])
                                }(h.offset, h.line, h.column, a[0], a[1])), null === a && (Q = e(h)), null === a) {
                                if (h = e(Q), i = e(Q), 46 === c.charCodeAt(Q.offset) ? (a = ".", f(Q, 1)) : (a = null, 0 === R && g('"."')), null !== a) {
                                    for (b = [], d = A(), null === d && (d = z()); null !== d;) b.push(d), d = A(), null === d && (d = z());
                                    null !== b ? a = [a, b] : (a = null, Q = e(i))
                                } else a = null, Q = e(i);
                                null !== a && (a = function(a, b, c, d) {
                                    return d.length > 0 ? [!0, d[0]].concat([
                                        ["line", b],
                                        ["col", c]
                                    ]) : [!0, []].concat([
                                        ["line", b],
                                        ["col", c]
                                    ])
                                }(h.offset, h.line, h.column, a[1])), null === a && (Q = e(h))
                            }
                            return R--, 0 === R && null === a && g("path"), a
                        }

                        function y() {
                            var a, b, d, h, i;
                            if (R++, h = e(Q), i = e(Q), /^[a-zA-Z_$]/.test(c.charAt(Q.offset)) ? (a = c.charAt(Q.offset), f(Q, 1)) : (a = null, 0 === R && g("[a-zA-Z_$]")), null !== a) {
                                for (b = [], /^[0-9a-zA-Z_$\-]/.test(c.charAt(Q.offset)) ? (d = c.charAt(Q.offset), f(Q, 1)) : (d = null, 0 === R && g("[0-9a-zA-Z_$\\-]")); null !== d;) b.push(d), /^[0-9a-zA-Z_$\-]/.test(c.charAt(Q.offset)) ? (d = c.charAt(Q.offset), f(Q, 1)) : (d = null, 0 === R && g("[0-9a-zA-Z_$\\-]"));
                                null !== b ? a = [a, b] : (a = null, Q = e(i))
                            } else a = null, Q = e(i);
                            return null !== a && (a = function(a, b, c, d, e) {
                                return d + e.join("")
                            }(h.offset, h.line, h.column, a[0], a[1])), null === a && (Q = e(h)), R--, 0 === R && null === a && g("key"), a
                        }

                        function z() {
                            var a, b, d, h, i, j, k, l;
                            if (R++, h = e(Q), i = e(Q), j = e(Q), k = e(Q), a = K(), null !== a) {
                                if (l = e(Q), /^[0-9]/.test(c.charAt(Q.offset)) ? (d = c.charAt(Q.offset), f(Q, 1)) : (d = null, 0 === R && g("[0-9]")), null !== d)
                                    for (b = []; null !== d;) b.push(d), /^[0-9]/.test(c.charAt(Q.offset)) ? (d = c.charAt(Q.offset), f(Q, 1)) : (d = null, 0 === R && g("[0-9]"));
                                else b = null;
                                null !== b && (b = function(a, b, c, d) {
                                    return d.join("")
                                }(l.offset, l.line, l.column, b)), null === b && (Q = e(l)), null === b && (b = t()), null !== b ? (d = L(), null !== d ? a = [a, b, d] : (a = null, Q = e(k))) : (a = null, Q = e(k))
                            } else a = null, Q = e(k);
                            return null !== a && (a = function(a, b, c, d) {
                                return d
                            }(j.offset, j.line, j.column, a[1])), null === a && (Q = e(j)), null !== a ? (b = A(), b = null !== b ? b : "", null !== b ? a = [a, b] : (a = null, Q = e(i))) : (a = null, Q = e(i)), null !== a && (a = function(a, b, c, d, e) {
                                return e ? e.unshift(d) : e = [d], e
                            }(h.offset, h.line, h.column, a[0], a[1])), null === a && (Q = e(h)), R--, 0 === R && null === a && g("array"), a
                        }

                        function A() {
                            var a, b, d, h, i, j, k;
                            if (R++, h = e(Q), i = e(Q), j = e(Q), k = e(Q), 46 === c.charCodeAt(Q.offset) ? (b = ".", f(Q, 1)) : (b = null, 0 === R && g('"."')), null !== b ? (d = y(), null !== d ? b = [b, d] : (b = null, Q = e(k))) : (b = null, Q = e(k)), null !== b && (b = function(a, b, c, d) {
                                    return d
                                }(j.offset, j.line, j.column, b[1])), null === b && (Q = e(j)), null !== b)
                                for (a = []; null !== b;) a.push(b), j = e(Q), k = e(Q), 46 === c.charCodeAt(Q.offset) ? (b = ".", f(Q, 1)) : (b = null, 0 === R && g('"."')), null !== b ? (d = y(), null !== d ? b = [b, d] : (b = null, Q = e(k))) : (b = null, Q = e(k)), null !== b && (b = function(a, b, c, d) {
                                    return d
                                }(j.offset, j.line, j.column, b[1])), null === b && (Q = e(j));
                            else a = null;
                            return null !== a ? (b = z(), b = null !== b ? b : "", null !== b ? a = [a, b] : (a = null, Q = e(i))) : (a = null, Q = e(i)), null !== a && (a = function(a, b, c, d, e) {
                                return e ? d.concat(e) : d
                            }(h.offset, h.line, h.column, a[0], a[1])), null === a && (Q = e(h)), R--, 0 === R && null === a && g("array_part"), a
                        }

                        function B() {
                            var a, b, d, h, i;
                            if (R++, h = e(Q), i = e(Q), 34 === c.charCodeAt(Q.offset) ? (a = '"', f(Q, 1)) : (a = null, 0 === R && g('"\\""')), null !== a ? (34 === c.charCodeAt(Q.offset) ? (b = '"', f(Q, 1)) : (b = null, 0 === R && g('"\\""')), null !== b ? a = [a, b] : (a = null, Q = e(i))) : (a = null, Q = e(i)), null !== a && (a = function(a, b, c) {
                                    return ["literal", ""].concat([
                                        ["line", b],
                                        ["col", c]
                                    ])
                                }(h.offset, h.line, h.column)), null === a && (Q = e(h)), null === a && (h = e(Q), i = e(Q), 34 === c.charCodeAt(Q.offset) ? (a = '"', f(Q, 1)) : (a = null, 0 === R && g('"\\""')), null !== a ? (b = E(), null !== b ? (34 === c.charCodeAt(Q.offset) ? (d = '"', f(Q, 1)) : (d = null, 0 === R && g('"\\""')), null !== d ? a = [a, b, d] : (a = null, Q = e(i))) : (a = null, Q = e(i))) : (a = null, Q = e(i)), null !== a && (a = function(a, b, c, d) {
                                    return ["literal", d].concat([
                                        ["line", b],
                                        ["col", c]
                                    ])
                                }(h.offset, h.line, h.column, a[1])), null === a && (Q = e(h)), null === a)) {
                                if (h = e(Q), i = e(Q), 34 === c.charCodeAt(Q.offset) ? (a = '"', f(Q, 1)) : (a = null, 0 === R && g('"\\""')), null !== a) {
                                    if (d = C(), null !== d)
                                        for (b = []; null !== d;) b.push(d), d = C();
                                    else b = null;
                                    null !== b ? (34 === c.charCodeAt(Q.offset) ? (d = '"', f(Q, 1)) : (d = null, 0 === R && g('"\\""')), null !== d ? a = [a, b, d] : (a = null, Q = e(i))) : (a = null, Q = e(i))
                                } else a = null, Q = e(i);
                                null !== a && (a = function(a, b, c, d) {
                                    return ["body"].concat(d).concat([
                                        ["line", b],
                                        ["col", c]
                                    ])
                                }(h.offset, h.line, h.column, a[1])), null === a && (Q = e(h))
                            }
                            return R--, 0 === R && null === a && g("inline"), a
                        }

                        function C() {
                            var a, b;
                            return a = s(), null === a && (a = p(), null === a && (b = e(Q), a = E(), null !== a && (a = function(a, b, c, d) {
                                return ["buffer", d]
                            }(b.offset, b.line, b.column, a)), null === a && (Q = e(b)))), a
                        }

                        function D() {
                            var a, b, d, h, i, j, k, l, m;
                            if (R++, j = e(Q), k = e(Q), a = M(), null !== a) {
                                for (b = [], d = N(); null !== d;) b.push(d), d = N();
                                null !== b ? a = [a, b] : (a = null, Q = e(k))
                            } else a = null, Q = e(k);
                            if (null !== a && (a = function(a, b, c, d, e) {
                                    return ["format", d, e.join("")].concat([
                                        ["line", b],
                                        ["col", c]
                                    ])
                                }(j.offset, j.line, j.column, a[0], a[1])), null === a && (Q = e(j)), null === a) {
                                if (j = e(Q), k = e(Q), l = e(Q), m = e(Q), R++, b = H(), R--, null === b ? b = "" : (b = null, Q = e(m)), null !== b ? (m = e(Q), R++, d = G(), R--, null === d ? d = "" : (d = null, Q = e(m)), null !== d ? (m = e(Q), R++, h = M(), R--, null === h ? h = "" : (h = null, Q = e(m)), null !== h ? (c.length > Q.offset ? (i = c.charAt(Q.offset), f(Q, 1)) : (i = null, 0 === R && g("any character")), null !== i ? b = [b, d, h, i] : (b = null, Q = e(l))) : (b = null, Q = e(l))) : (b = null, Q = e(l))) : (b = null, Q = e(l)), null !== b && (b = function(a, b, c, d) {
                                        return d
                                    }(k.offset, k.line, k.column, b[3])), null === b && (Q = e(k)), null !== b)
                                    for (a = []; null !== b;) a.push(b), k = e(Q), l = e(Q), m = e(Q), R++, b = H(), R--, null === b ? b = "" : (b = null, Q = e(m)), null !== b ? (m = e(Q), R++, d = G(), R--, null === d ? d = "" : (d = null, Q = e(m)), null !== d ? (m = e(Q), R++, h = M(), R--, null === h ? h = "" : (h = null, Q = e(m)), null !== h ? (c.length > Q.offset ? (i = c.charAt(Q.offset), f(Q, 1)) : (i = null, 0 === R && g("any character")), null !== i ? b = [b, d, h, i] : (b = null, Q = e(l))) : (b = null, Q = e(l))) : (b = null, Q = e(l))) : (b = null, Q = e(l)), null !== b && (b = function(a, b, c, d) {
                                        return d
                                    }(k.offset, k.line, k.column, b[3])), null === b && (Q = e(k));
                                else a = null;
                                null !== a && (a = function(a, b, c, d) {
                                    return ["buffer", d.join("")].concat([
                                        ["line", b],
                                        ["col", c]
                                    ])
                                }(j.offset, j.line, j.column, a)), null === a && (Q = e(j))
                            }
                            return R--, 0 === R && null === a && g("buffer"), a
                        }

                        function E() {
                            var a, b, d, h, i, j, k;
                            if (R++, h = e(Q), i = e(Q), j = e(Q), k = e(Q), R++, b = H(), R--, null === b ? b = "" : (b = null, Q = e(k)), null !== b ? (d = F(), null === d && (/^[^"]/.test(c.charAt(Q.offset)) ? (d = c.charAt(Q.offset), f(Q, 1)) : (d = null, 0 === R && g('[^"]'))), null !== d ? b = [b, d] : (b = null, Q = e(j))) : (b = null, Q = e(j)), null !== b && (b = function(a, b, c, d) {
                                    return d
                                }(i.offset, i.line, i.column, b[1])), null === b && (Q = e(i)), null !== b)
                                for (a = []; null !== b;) a.push(b), i = e(Q), j = e(Q), k = e(Q), R++, b = H(), R--, null === b ? b = "" : (b = null, Q = e(k)), null !== b ? (d = F(), null === d && (/^[^"]/.test(c.charAt(Q.offset)) ? (d = c.charAt(Q.offset), f(Q, 1)) : (d = null, 0 === R && g('[^"]'))), null !== d ? b = [b, d] : (b = null, Q = e(j))) : (b = null, Q = e(j)), null !== b && (b = function(a, b, c, d) {
                                    return d
                                }(i.offset, i.line, i.column, b[1])), null === b && (Q = e(i));
                            else a = null;
                            return null !== a && (a = function(a, b, c, d) {
                                return d.join("")
                            }(h.offset, h.line, h.column, a)), null === a && (Q = e(h)), R--, 0 === R && null === a && g("literal"), a
                        }

                        function F() {
                            var a, b;
                            return b = e(Q), '\\"' === c.substr(Q.offset, 2) ? (a = '\\"', f(Q, 2)) : (a = null, 0 === R && g('"\\\\\\""')), null !== a && (a = function() {
                                return '"'
                            }(b.offset, b.line, b.column)), null === a && (Q = e(b)), a
                        }

                        function G() {
                            var a, b, d, h, i, j, k, l, m;
                            if (R++, i = e(Q), j = e(Q), "{!" === c.substr(Q.offset, 2) ? (a = "{!", f(Q, 2)) : (a = null, 0 === R && g('"{!"')), null !== a) {
                                for (b = [], k = e(Q), l = e(Q), m = e(Q), R++, "!}" === c.substr(Q.offset, 2) ? (d = "!}", f(Q, 2)) : (d = null, 0 === R && g('"!}"')), R--, null === d ? d = "" : (d = null, Q = e(m)), null !== d ? (c.length > Q.offset ? (h = c.charAt(Q.offset), f(Q, 1)) : (h = null, 0 === R && g("any character")), null !== h ? d = [d, h] : (d = null, Q = e(l))) : (d = null, Q = e(l)), null !== d && (d = function(a, b, c, d) {
                                        return d
                                    }(k.offset, k.line, k.column, d[1])), null === d && (Q = e(k)); null !== d;) b.push(d), k = e(Q), l = e(Q), m = e(Q), R++, "!}" === c.substr(Q.offset, 2) ? (d = "!}", f(Q, 2)) : (d = null, 0 === R && g('"!}"')), R--, null === d ? d = "" : (d = null, Q = e(m)), null !== d ? (c.length > Q.offset ? (h = c.charAt(Q.offset), f(Q, 1)) : (h = null, 0 === R && g("any character")), null !== h ? d = [d, h] : (d = null, Q = e(l))) : (d = null, Q = e(l)), null !== d && (d = function(a, b, c, d) {
                                    return d
                                }(k.offset, k.line, k.column, d[1])), null === d && (Q = e(k));
                                null !== b ? ("!}" === c.substr(Q.offset, 2) ? (d = "!}", f(Q, 2)) : (d = null, 0 === R && g('"!}"')), null !== d ? a = [a, b, d] : (a = null, Q = e(j))) : (a = null, Q = e(j))
                            } else a = null, Q = e(j);
                            return null !== a && (a = function(a, b, c, d) {
                                return ["comment", d.join("")].concat([
                                    ["line", b],
                                    ["col", c]
                                ])
                            }(i.offset, i.line, i.column, a[1])), null === a && (Q = e(i)), R--, 0 === R && null === a && g("comment"), a
                        }

                        function H() {
                            var a, b, d, h, i, j, k, l, m, n, o;
                            if (m = e(Q), a = I(), null !== a) {
                                for (b = [], d = N(); null !== d;) b.push(d), d = N();
                                if (null !== b)
                                    if (/^[#?^><+%:@\/~%]/.test(c.charAt(Q.offset)) ? (d = c.charAt(Q.offset), f(Q, 1)) : (d = null, 0 === R && g("[#?^><+%:@\\/~%]")), null !== d) {
                                        for (h = [], i = N(); null !== i;) h.push(i), i = N();
                                        if (null !== h) {
                                            if (n = e(Q), o = e(Q), R++, j = J(), R--, null === j ? j = "" : (j = null, Q = e(o)), null !== j ? (o = e(Q), R++, k = M(), R--, null === k ? k = "" : (k = null, Q = e(o)), null !== k ? (c.length > Q.offset ? (l = c.charAt(Q.offset), f(Q, 1)) : (l = null, 0 === R && g("any character")), null !== l ? j = [j, k, l] : (j = null, Q = e(n))) : (j = null, Q = e(n))) : (j = null, Q = e(n)), null !== j)
                                                for (i = []; null !== j;) i.push(j), n = e(Q), o = e(Q), R++, j = J(), R--, null === j ? j = "" : (j = null, Q = e(o)), null !== j ? (o = e(Q), R++, k = M(), R--, null === k ? k = "" : (k = null, Q = e(o)), null !== k ? (c.length > Q.offset ? (l = c.charAt(Q.offset), f(Q, 1)) : (l = null, 0 === R && g("any character")), null !== l ? j = [j, k, l] : (j = null, Q = e(n))) : (j = null, Q = e(n))) : (j = null, Q = e(n));
                                            else i = null;
                                            if (null !== i) {
                                                for (j = [], k = N(); null !== k;) j.push(k), k = N();
                                                null !== j ? (k = J(), null !== k ? a = [a, b, d, h, i, j, k] : (a = null, Q = e(m))) : (a = null, Q = e(m))
                                            } else a = null, Q = e(m)
                                        } else a = null, Q = e(m)
                                    } else a = null, Q = e(m);
                                else a = null, Q = e(m)
                            } else a = null, Q = e(m);
                            return null === a && (a = p()), a
                        }

                        function I() {
                            var a;
                            return 123 === c.charCodeAt(Q.offset) ? (a = "{", f(Q, 1)) : (a = null, 0 === R && g('"{"')), a
                        }

                        function J() {
                            var a;
                            return 125 === c.charCodeAt(Q.offset) ? (a = "}", f(Q, 1)) : (a = null, 0 === R && g('"}"')), a
                        }

                        function K() {
                            var a;
                            return 91 === c.charCodeAt(Q.offset) ? (a = "[", f(Q, 1)) : (a = null, 0 === R && g('"["')), a
                        }

                        function L() {
                            var a;
                            return 93 === c.charCodeAt(Q.offset) ? (a = "]", f(Q, 1)) : (a = null, 0 === R && g('"]"')), a
                        }

                        function M() {
                            var a;
                            return 10 === c.charCodeAt(Q.offset) ? (a = "\n", f(Q, 1)) : (a = null, 0 === R && g('"\\n"')), null === a && ("\r\n" === c.substr(Q.offset, 2) ? (a = "\r\n", f(Q, 2)) : (a = null, 0 === R && g('"\\r\\n"')), null === a && (13 === c.charCodeAt(Q.offset) ? (a = "\r", f(Q, 1)) : (a = null, 0 === R && g('"\\r"')), null === a && (8232 === c.charCodeAt(Q.offset) ? (a = "\u2028", f(Q, 1)) : (a = null, 0 === R && g('"\\u2028"')), null === a && (8233 === c.charCodeAt(Q.offset) ? (a = "\u2029", f(Q, 1)) : (a = null, 0 === R && g('"\\u2029"')))))), a
                        }

                        function N() {
                            var a;
                            return /^[\t\x0B\f \xA0\uFEFF]/.test(c.charAt(Q.offset)) ? (a = c.charAt(Q.offset), f(Q, 1)) : (a = null, 0 === R && g("[\\t\\x0B\\f \\xA0\\uFEFF]")), null === a && (a = M()), a
                        }

                        function O(a) {
                            a.sort();
                            for (var b = null, c = [], d = 0; d < a.length; d++) a[d] !== b && (c.push(a[d]), b = a[d]);
                            return c
                        }
                        var P = {
                            body: h,
                            part: i,
                            section: j,
                            sec_tag_start: k,
                            end_tag: l,
                            context: m,
                            params: n,
                            bodies: o,
                            reference: p,
                            partial: q,
                            filters: r,
                            special: s,
                            identifier: t,
                            number: u,
                            "float": v,
                            integer: w,
                            path: x,
                            key: y,
                            array: z,
                            array_part: A,
                            inline: B,
                            inline_part: C,
                            buffer: D,
                            literal: E,
                            esc: F,
                            comment: G,
                            tag: H,
                            ld: I,
                            rd: J,
                            lb: K,
                            rb: L,
                            eol: M,
                            ws: N
                        };
                        if (void 0 !== d) {
                            if (void 0 === P[d]) throw new Error("Invalid rule name: " + a(d) + ".")
                        } else d = "body";
                        var Q = {
                                offset: 0,
                                line: 1,
                                column: 1,
                                seenCR: !1
                            },
                            R = 0,
                            S = {
                                offset: 0,
                                line: 1,
                                column: 1,
                                seenCR: !1
                            },
                            T = [],
                            U = P[d]();
                        if (null === U || Q.offset !== c.length) {
                            var V = Math.max(Q.offset, S.offset),
                                W = V < c.length ? c.charAt(V) : null,
                                X = Q.offset > S.offset ? Q : S;
                            throw new b.SyntaxError(O(T), W, V, X.line, X.column)
                        }
                        return U
                    },
                    toSource: function() {
                        return this._source
                    }
                };
                return c.SyntaxError = function(b, c, d, e, f) {
                    function g(b, c) {
                        var d, e;
                        switch (b.length) {
                            case 0:
                                d = "end of input";
                                break;
                            case 1:
                                d = b[0];
                                break;
                            default:
                                d = b.slice(0, b.length - 1).join(", ") + " or " + b[b.length - 1]
                        }
                        return e = c ? a(c) : "end of input", "Expected " + d + " but " + e + " found."
                    }
                    this.name = "SyntaxError", this.expected = b, this.found = c, this.message = g(b, c), this.offset = d, this.line = e, this.column = f
                }, c.SyntaxError.prototype = Error.prototype, c
            }();
            a.parse = b.parse
        }("undefined" != typeof exports ? exports : getGlobal()), define("dust", function(a) {
            return function() {
                var b;
                return b || a.dust
            }
        }(this)),
        function(dust) {
            function isSelect(a) {
                var b = a.current();
                return "object" == typeof b && b.isSelect === !0
            }

            function jsonFilter(a, b) {
                return "function" == typeof b ? b.toString() : b
            }

            function filter(a, b, c, d, e) {
                d = d || {};
                var f, g, h = c.block,
                    i = d.filterOpType || "";
                if ("undefined" != typeof d.key) f = dust.helpers.tap(d.key, a, b);
                else {
                    if (!isSelect(b)) return _console.log("No key specified for filter in:" + i + " helper "), a;
                    f = b.current().selectKey, b.current().isResolved && (e = function() {
                        return !1
                    })
                }
                return g = dust.helpers.tap(d.value, a, b), e(coerce(g, d.type, b), coerce(f, d.type, b)) ? (isSelect(b) && (b.current().isResolved = !0), h ? a.render(h, b) : (_console.log("Missing body block in the " + i + " helper "), a)) : c["else"] ? a.render(c["else"], b) : a
            }

            function coerce(a, b, c) {
                if (a) switch (b || typeof a) {
                    case "number":
                        return +a;
                    case "string":
                        return String(a);
                    case "boolean":
                        return a = "false" === a ? !1 : a, Boolean(a);
                    case "date":
                        return new Date(a);
                    case "context":
                        return c.get(a)
                }
                return a
            }
            var _console = "undefined" != typeof console ? console : {
                    log: function() {}
                },
                helpers = {
                    tap: function(a, b, c) {
                        var d = a;
                        return "function" == typeof a && (a.isFunction === !0 ? d = a() : (d = "", b.tap(function(a) {
                            return d += a, ""
                        }).render(a, c).untap(), "" === d && (d = !1))), d
                    },
                    sep: function(a, b, c) {
                        var d = c.block;
                        return b.stack.index === b.stack.of - 1 ? a : d ? c.block(a, b) : a
                    },
                    idx: function(a, b, c) {
                        var d = c.block;
                        return d ? c.block(a, b.push(b.stack.index)) : a
                    },
                    contextDump: function(a, b, c, d) {
                        var e, f = d || {},
                            g = f.to || "output",
                            h = f.key || "current";
                        return g = dust.helpers.tap(g, a, b), h = dust.helpers.tap(h, a, b), e = "full" === h ? JSON.stringify(b.stack, jsonFilter, 2) : JSON.stringify(b.stack.head, jsonFilter, 2), "console" === g ? (_console.log(e), a) : a.write(e)
                    },
                    "if": function(chunk, context, bodies, params) {
                        var body = bodies.block,
                            skip = bodies["else"];
                        if (params && params.cond) {
                            var cond = params.cond;
                            if (cond = dust.helpers.tap(cond, chunk, context), eval(cond)) return body ? chunk.render(bodies.block, context) : (_console.log("Missing body block in the if helper!"), chunk);
                            if (skip) return chunk.render(bodies["else"], context)
                        } else _console.log("No condition given in the if helper!");
                        return chunk
                    },
                    math: function(a, b, c, d) {
                        if (d && "undefined" != typeof d.key && d.method) {
                            var e = d.key,
                                f = d.method,
                                g = d.operand,
                                h = d.round,
                                i = null;
                            switch (e = dust.helpers.tap(e, a, b), g = dust.helpers.tap(g, a, b), f) {
                                case "mod":
                                    (0 === g || g === -0) && _console.log("operand for divide operation is 0/-0: expect Nan!"), i = parseFloat(e) % parseFloat(g);
                                    break;
                                case "add":
                                    i = parseFloat(e) + parseFloat(g);
                                    break;
                                case "subtract":
                                    i = parseFloat(e) - parseFloat(g);
                                    break;
                                case "multiply":
                                    i = parseFloat(e) * parseFloat(g);
                                    break;
                                case "divide":
                                    (0 === g || g === -0) && _console.log("operand for divide operation is 0/-0: expect Nan/Infinity!"), i = parseFloat(e) / parseFloat(g);
                                    break;
                                case "ceil":
                                    i = Math.ceil(parseFloat(e));
                                    break;
                                case "floor":
                                    i = Math.floor(parseFloat(e));
                                    break;
                                case "round":
                                    i = Math.round(parseFloat(e));
                                    break;
                                case "abs":
                                    i = Math.abs(parseFloat(e));
                                    break;
                                default:
                                    _console.log("method passed is not supported")
                            }
                            return null !== i ? (h && (i = Math.round(i)), c && c.block ? a.render(c.block, b.push({
                                isSelect: !0,
                                isResolved: !1,
                                selectKey: i
                            })) : a.write(i)) : a
                        }
                        return _console.log("Key is a required parameter for math helper along with method/operand!"), a
                    },
                    select: function(a, b, c, d) {
                        var e = c.block;
                        if (d && "undefined" != typeof d.key) {
                            var f = dust.helpers.tap(d.key, a, b);
                            return e ? a.render(c.block, b.push({
                                isSelect: !0,
                                isResolved: !1,
                                selectKey: f
                            })) : (_console.log("Missing body block in the select helper "), a)
                        }
                        return _console.log("No key given in the select helper!"), a
                    },
                    eq: function(a, b, c, d) {
                        return d && (d.filterOpType = "eq"), filter(a, b, c, d, function(a, b) {
                            return b === a
                        })
                    },
                    ne: function(a, b, c, d) {
                        return d ? (d.filterOpType = "ne", filter(a, b, c, d, function(a, b) {
                            return b !== a
                        })) : a
                    },
                    lt: function(a, b, c, d) {
                        return d ? (d.filterOpType = "lt", filter(a, b, c, d, function(a, b) {
                            return a > b
                        })) : void 0
                    },
                    lte: function(a, b, c, d) {
                        return d ? (d.filterOpType = "lte", filter(a, b, c, d, function(a, b) {
                            return a >= b
                        })) : a
                    },
                    gt: function(a, b, c, d) {
                        return d ? (d.filterOpType = "gt", filter(a, b, c, d, function(a, b) {
                            return b > a
                        })) : a
                    },
                    gte: function(a, b, c, d) {
                        return d ? (d.filterOpType = "gte", filter(a, b, c, d, function(a, b) {
                            return b >= a
                        })) : a
                    },
                    "default": function(a, b, c, d) {
                        return d && (d.filterOpType = "default"), filter(a, b, c, d, function() {
                            return !0
                        })
                    },
                    size: function(a, b, c, d) {
                        var e, f, g, h = 0;
                        if (d = d || {}, e = d.key, e && e !== !0)
                            if (dust.isArray(e)) h = e.length;
                            else if (!isNaN(parseFloat(e)) && isFinite(e)) h = e;
                        else if ("object" == typeof e) {
                            f = 0;
                            for (g in e) Object.hasOwnProperty.call(e, g) && f++;
                            h = f
                        } else h = (e + "").length;
                        else h = 0;
                        return a.write(h)
                    }
                };
            dust.helpers = helpers
        }("undefined" != typeof exports ? module.exports = require("dustjs-linkedin") : dust), define("dust-helpers", ["dust"], function() {}), define("lavaca-dust-helpers", ["require", "dust", "dust-helpers"], function(a) {
            var b = a("dust");
            a("dust-helpers"), b.helpers = b.helpers || {}, b.helpers.include = function(a, c, d, e) {
                var f, g = b.helpers.tap(e.name, a, c);
                return b.render(g, c.stack.head, function(a, b) {
                    f = b
                }), a.write(f)
            }
        }), define("lavaca/util/extend", [], function() {
            var a = function(b, c, d) {
                function e() {}
                if ("object" == typeof b ? (d = b, b = Object, c = function() {}) : "object" == typeof c && (d = c, c = b, b = Object), e.prototype = b.prototype, c.prototype = new e, c.prototype.constructor = c, d)
                    for (var f in d) c.prototype[f] = d[f];
                return c.extend = function(b, d) {
                    return "object" == typeof b && (d = b, b = function() {
                        c.apply(this, arguments)
                    }), a(c, b, d), b
                }, c
            };
            return a
        }), define("lavaca/util/Disposable", ["require", "./extend"], function(a) {
            function b(a) {
                var c, d, e;
                for (c in a)
                    if (a.hasOwnProperty(c) && (d = a[c]))
                        if ("object" == typeof d && "function" == typeof d.dispose) d.dispose();
                        else if (d instanceof Array)
                    for (e = d.length - 1; e > -1; e--) d[e] && "function" == typeof d[e].dispose ? d[e].dispose() : b(d[e])
            }
            var c = a("./extend"),
                d = c({
                    dispose: function() {
                        b(this)
                    }
                });
            return d
        }), define("mout/object/hasOwn", [], function() {
            function a(a, b) {
                return Object.prototype.hasOwnProperty.call(a, b)
            }
            return a
        }), define("mout/object/forIn", [], function() {
            function a() {
                e = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], d = !0;
                for (var a in {
                        toString: null
                    }) d = !1
            }

            function b(b, f, g) {
                var h, i = 0;
                null == d && a();
                for (h in b)
                    if (c(f, b, h, g) === !1) break;
                if (d)
                    for (;
                        (h = e[i++]) && (b[h] === Object.prototype[h] || c(f, b, h, g) !== !1););
            }

            function c(a, b, c, d) {
                return a.call(d, b[c], c, b)
            }
            var d, e;
            return b
        }), define("mout/object/forOwn", ["./hasOwn", "./forIn"], function(a, b) {
            function c(c, d, e) {
                b(c, function(b, f) {
                    return a(c, f) ? d.call(e, c[f], f, c) : void 0
                })
            }
            return c
        }), define("mout/lang/isPlainObject", [], function() {
            function a(a) {
                return !!a && "object" == typeof a && a.constructor === Object
            }
            return a
        }), define("mout/object/deepMixIn", ["./forOwn", "../lang/isPlainObject"], function(a, b) {
            function c(b) {
                for (var c, e = 0, f = arguments.length; ++e < f;) c = arguments[e], c && a(c, d, b);
                return b
            }

            function d(a, d) {
                var e = this[d];
                b(a) && b(e) ? c(e, a) : this[d] = a
            }
            return c
        }), define("lavaca/events/EventDispatcher", ["require", "lavaca/util/Disposable", "mout/object/deepMixIn"], function(a) {
            function b(a, b) {
                return a === b || a.fn === b || a.fn && a.fn.guid && a.fn.guid === b.guid || a.fn && a.fn._zid && a.fn._zid === b._zid ? !0 : !1
            }
            var c = a("lavaca/util/Disposable"),
                d = a("mout/object/deepMixIn"),
                e = c.extend({
                    suppressEvents: !1,
                    on: function(a, b, c) {
                        var d = this.callbacks || (this.callbacks = {}),
                            e = d[a] || (d[a] = []);
                        return e[e.length] = {
                            fn: b,
                            thisp: c
                        }, this
                    },
                    off: function(a, c, d) {
                        var e, f, g = this.callbacks;
                        if (a) {
                            if (g)
                                if (c) {
                                    if (e = g[a])
                                        for (var h = e.length - 1; h >= 0; h--) f = d && (e[h].thisp === d || e[h].fn.thisp === d), (b(e[h].fn, c) || d && !f) && g[a].splice(h, 1)
                                } else delete g[a]
                        } else delete this.callbacks;
                        return this
                    },
                    trigger: function(a, b) {
                        if (!this.suppressEvents && this.callbacks) {
                            var c, d = this.callbacks[a],
                                e = this.createEvent(a, b),
                                f = -1;
                            if (d)
                                for (; c = d[++f];) c.fn.apply(c.thisp || this, [e])
                        }
                        return this
                    },
                    createEvent: function(a, b) {
                        return d({}, b || {}, {
                            type: a,
                            target: b && b.target ? b.target : this,
                            currentTarget: this
                        })
                    }
                });
            return e
        }), define("lavaca/util/uuid", [], function() {
            var a = {},
                b = function(b) {
                    return b = b || "__defaultNS", "number" != typeof a[b] && (a[b] = 0), a[b]++
                };
            return b
        }), define("lavaca/net/History", ["require", "lavaca/events/EventDispatcher", "lavaca/util/uuid"], function(a) {
            function b(a, b, d, e, f, g) {
                a.position = b;
                var h = {
                    id: d,
                    state: e,
                    title: f,
                    url: g
                };
                a.sequence[b] = h;
                var i = g + "#@" + d;
                return i = c = k ? "!" + i : i, location.hash = i, h
            }
            var c, d, e, f = a("lavaca/events/EventDispatcher"),
                g = a("lavaca/util/uuid"),
                h = navigator.userAgent.indexOf("Android") > -1,
                i = !h && "function" == typeof history.pushState,
                j = !1,
                k = !1,
                l = 0,
                m = f.extend(function() {
                    f.call(this), this.sequence = [], this.position = -1;
                    var a = this;
                    if (i) {
                        var a = this;
                        this.onPopState = function(b) {
                            if (b.state) {
                                l--;
                                var c = e;
                                e = b.state.id, a.trigger("popstate", {
                                    state: b.state.state,
                                    title: b.state.title,
                                    url: b.state.url,
                                    id: b.state.id,
                                    direction: e > c ? "forward" : "back"
                                })
                            }
                        }, window.addEventListener("popstate", this.onPopState, !1)
                    } else this.onPopState = function() {
                        var b, d, e, f, g = location.hash,
                            h = -1;
                        if (g && (g = k ? g.replace(/^#!/, "") : g.replace(/^#/, "")), g !== c)
                            if (f = c.split("#@")[1], c = g, g) {
                                for (l--, b = g.split("#@")[1], b || window.location.reload(); e = a.sequence[++h];)
                                    if (e.id === parseInt(b, 10)) {
                                        d = e, a.position = h;
                                        break
                                    }
                                if (d) {
                                    var i = d.url + "#@" + d.id;
                                    i = k ? "!" + i : i, location.hash = i, document.title = d.title, a.trigger("popstate", {
                                        state: d.state,
                                        title: d.title,
                                        url: d.url,
                                        id: d.id,
                                        direction: d.id > parseInt(f, 10) ? "forward" : "back"
                                    })
                                }
                            } else m.back()
                    }, window.attachEvent ? window.attachEvent("onhashchange", this.onPopState) : window.addEventListener("hashchange", this.onPopState, !1)
                }, {
                    current: function() {
                        return this.sequence[this.position] || null
                    },
                    hasHistory: function() {
                        return l > 0
                    },
                    push: function(a, c, d) {
                        l++, j ? (document.title = c, e = g("history"), i ? history.pushState({
                            state: a,
                            title: c,
                            url: d,
                            id: e
                        }, c, d) : b(this, ++this.position, e, a, c, d)) : this.replace(a, c, d)
                    },
                    replace: function(a, c, d) {
                        j = !0, document.title = c, i ? history.replaceState({
                            state: a,
                            title: c,
                            url: d,
                            id: e
                        }, c, d) : (this.position < 0 && (this.position = 0), b(this, this.position, "undefined" != typeof e ? e : g("history"), a, c, d))
                    },
                    dispose: function() {
                        this.onPopState && (i ? window.removeEventListener("popstate", this.onPopState, !1) : window.detachEvent ? window.detachEvent("onhashchange", this.onPopState) : window.removeEventListener("hashchange", this.onPopState, !1)), f.prototype.dispose.call(this)
                    }
                });
            return m.init = function(a) {
                return d || (a && m.overrideStandardsMode(), d = new m), d
            }, m.push = function() {
                m.init().push.apply(d, arguments)
            }, m.replace = function() {
                m.init().replace.apply(d, arguments)
            }, m.back = function() {
                history.back()
            }, m.forward = function() {
                history.forward()
            }, m.dispose = function() {
                d && (d.dispose(), d = null)
            }, m.on = function() {
                return m.init().on.apply(d, arguments)
            }, m.off = function() {
                return m.init().off.apply(d, arguments)
            }, m.overrideStandardsMode = function() {
                i = !1
            }, m.useHashBang = function() {
                k = !0
            }, m.animationBreadcrumb = [], m.isRoutingBack = !1, m
        }),
        function(a, b) {
            "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function(a) {
                if (!a.document) throw new Error("jQuery requires a window with a document");
                return b(a)
            } : b(a)
        }("undefined" != typeof window ? window : this, function(a, b) {
            function c(a) {
                var b = a.length,
                    c = _.type(a);
                return "function" === c || _.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a
            }

            function d(a, b, c) {
                if (_.isFunction(b)) return _.grep(a, function(a, d) {
                    return !!b.call(a, d, a) !== c
                });
                if (b.nodeType) return _.grep(a, function(a) {
                    return a === b !== c
                });
                if ("string" == typeof b) {
                    if (hb.test(b)) return _.filter(b, a, c);
                    b = _.filter(b, a)
                }
                return _.grep(a, function(a) {
                    return U.call(b, a) >= 0 !== c
                })
            }

            function e(a, b) {
                for (;
                    (a = a[b]) && 1 !== a.nodeType;);
                return a
            }

            function f(a) {
                var b = ob[a] = {};
                return _.each(a.match(nb) || [], function(a, c) {
                    b[c] = !0
                }), b
            }

            function g() {
                Z.removeEventListener("DOMContentLoaded", g, !1), a.removeEventListener("load", g, !1), _.ready()
            }

            function h() {
                Object.defineProperty(this.cache = {}, 0, {
                    get: function() {
                        return {}
                    }
                }), this.expando = _.expando + h.uid++
            }

            function i(a, b, c) {
                var d;
                if (void 0 === c && 1 === a.nodeType)
                    if (d = "data-" + b.replace(ub, "-$1").toLowerCase(), c = a.getAttribute(d), "string" == typeof c) {
                        try {
                            c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : tb.test(c) ? _.parseJSON(c) : c
                        } catch (e) {}
                        sb.set(a, b, c)
                    } else c = void 0;
                return c
            }

            function j() {
                return !0
            }

            function k() {
                return !1
            }

            function l() {
                try {
                    return Z.activeElement
                } catch (a) {}
            }

            function m(a, b) {
                return _.nodeName(a, "table") && _.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a
            }

            function n(a) {
                return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a
            }

            function o(a) {
                var b = Kb.exec(a.type);
                return b ? a.type = b[1] : a.removeAttribute("type"), a
            }

            function p(a, b) {
                for (var c = 0, d = a.length; d > c; c++) rb.set(a[c], "globalEval", !b || rb.get(b[c], "globalEval"))
            }

            function q(a, b) {
                var c, d, e, f, g, h, i, j;
                if (1 === b.nodeType) {
                    if (rb.hasData(a) && (f = rb.access(a), g = rb.set(b, f), j = f.events)) {
                        delete g.handle, g.events = {};
                        for (e in j)
                            for (c = 0, d = j[e].length; d > c; c++) _.event.add(b, e, j[e][c])
                    }
                    sb.hasData(a) && (h = sb.access(a), i = _.extend({}, h), sb.set(b, i))
                }
            }

            function r(a, b) {
                var c = a.getElementsByTagName ? a.getElementsByTagName(b || "*") : a.querySelectorAll ? a.querySelectorAll(b || "*") : [];
                return void 0 === b || b && _.nodeName(a, b) ? _.merge([a], c) : c
            }

            function s(a, b) {
                var c = b.nodeName.toLowerCase();
                "input" === c && yb.test(a.type) ? b.checked = a.checked : ("input" === c || "textarea" === c) && (b.defaultValue = a.defaultValue)
            }

            function t(b, c) {
                var d, e = _(c.createElement(b)).appendTo(c.body),
                    f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(e[0])) ? d.display : _.css(e[0], "display");
                return e.detach(), f
            }

            function u(a) {
                var b = Z,
                    c = Ob[a];
                return c || (c = t(a, b), "none" !== c && c || (Nb = (Nb || _("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement), b = Nb[0].contentDocument, b.write(), b.close(), c = t(a, b), Nb.detach()), Ob[a] = c), c
            }

            function v(a, b, c) {
                var d, e, f, g, h = a.style;
                return c = c || Rb(a), c && (g = c.getPropertyValue(b) || c[b]), c && ("" !== g || _.contains(a.ownerDocument, a) || (g = _.style(a, b)), Qb.test(g) && Pb.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 !== g ? g + "" : g
            }

            function w(a, b) {
                return {
                    get: function() {
                        return a() ? (delete this.get, void 0) : (this.get = b).apply(this, arguments)
                    }
                }
            }

            function x(a, b) {
                if (b in a) return b;
                for (var c = b[0].toUpperCase() + b.slice(1), d = b, e = Xb.length; e--;)
                    if (b = Xb[e] + c, b in a) return b;
                return d
            }

            function y(a, b, c) {
                var d = Tb.exec(b);
                return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b
            }

            function z(a, b, c, d, e) {
                for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; 4 > f; f += 2) "margin" === c && (g += _.css(a, c + wb[f], !0, e)), d ? ("content" === c && (g -= _.css(a, "padding" + wb[f], !0, e)), "margin" !== c && (g -= _.css(a, "border" + wb[f] + "Width", !0, e))) : (g += _.css(a, "padding" + wb[f], !0, e), "padding" !== c && (g += _.css(a, "border" + wb[f] + "Width", !0, e)));
                return g
            }

            function A(a, b, c) {
                var d = !0,
                    e = "width" === b ? a.offsetWidth : a.offsetHeight,
                    f = Rb(a),
                    g = "border-box" === _.css(a, "boxSizing", !1, f);
                if (0 >= e || null == e) {
                    if (e = v(a, b, f), (0 > e || null == e) && (e = a.style[b]), Qb.test(e)) return e;
                    d = g && (Y.boxSizingReliable() || e === a.style[b]), e = parseFloat(e) || 0
                }
                return e + z(a, b, c || (g ? "border" : "content"), d, f) + "px"
            }

            function B(a, b) {
                for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++) d = a[g], d.style && (f[g] = rb.get(d, "olddisplay"), c = d.style.display, b ? (f[g] || "none" !== c || (d.style.display = ""), "" === d.style.display && xb(d) && (f[g] = rb.access(d, "olddisplay", u(d.nodeName)))) : (e = xb(d), "none" === c && e || rb.set(d, "olddisplay", e ? c : _.css(d, "display"))));
                for (g = 0; h > g; g++) d = a[g], d.style && (b && "none" !== d.style.display && "" !== d.style.display || (d.style.display = b ? f[g] || "" : "none"));
                return a
            }

            function C(a, b, c, d, e) {
                return new C.prototype.init(a, b, c, d, e)
            }

            function D() {
                return setTimeout(function() {
                    Yb = void 0
                }), Yb = _.now()
            }

            function E(a, b) {
                var c, d = 0,
                    e = {
                        height: a
                    };
                for (b = b ? 1 : 0; 4 > d; d += 2 - b) c = wb[d], e["margin" + c] = e["padding" + c] = a;
                return b && (e.opacity = e.width = a), e
            }

            function F(a, b, c) {
                for (var d, e = (cc[b] || []).concat(cc["*"]), f = 0, g = e.length; g > f; f++)
                    if (d = e[f].call(c, b, a)) return d
            }

            function G(a, b, c) {
                var d, e, f, g, h, i, j, k, l = this,
                    m = {},
                    n = a.style,
                    o = a.nodeType && xb(a),
                    p = rb.get(a, "fxshow");
                c.queue || (h = _._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued = 0, i = h.empty.fire, h.empty.fire = function() {
                    h.unqueued || i()
                }), h.unqueued++, l.always(function() {
                    l.always(function() {
                        h.unqueued--, _.queue(a, "fx").length || h.empty.fire()
                    })
                })), 1 === a.nodeType && ("height" in b || "width" in b) && (c.overflow = [n.overflow, n.overflowX, n.overflowY], j = _.css(a, "display"), k = "none" === j ? rb.get(a, "olddisplay") || u(a.nodeName) : j, "inline" === k && "none" === _.css(a, "float") && (n.display = "inline-block")), c.overflow && (n.overflow = "hidden", l.always(function() {
                    n.overflow = c.overflow[0], n.overflowX = c.overflow[1], n.overflowY = c.overflow[2]
                }));
                for (d in b)
                    if (e = b[d], $b.exec(e)) {
                        if (delete b[d], f = f || "toggle" === e, e === (o ? "hide" : "show")) {
                            if ("show" !== e || !p || void 0 === p[d]) continue;
                            o = !0
                        }
                        m[d] = p && p[d] || _.style(a, d)
                    } else j = void 0;
                if (_.isEmptyObject(m)) "inline" === ("none" === j ? u(a.nodeName) : j) && (n.display = j);
                else {
                    p ? "hidden" in p && (o = p.hidden) : p = rb.access(a, "fxshow", {}), f && (p.hidden = !o), o ? _(a).show() : l.done(function() {
                        _(a).hide()
                    }), l.done(function() {
                        var b;
                        rb.remove(a, "fxshow");
                        for (b in m) _.style(a, b, m[b])
                    });
                    for (d in m) g = F(o ? p[d] : 0, d, l), d in p || (p[d] = g.start, o && (g.end = g.start, g.start = "width" === d || "height" === d ? 1 : 0))
                }
            }

            function H(a, b) {
                var c, d, e, f, g;
                for (c in a)
                    if (d = _.camelCase(c), e = b[d], f = a[c], _.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = _.cssHooks[d], g && "expand" in g) {
                        f = g.expand(f), delete a[d];
                        for (c in f) c in a || (a[c] = f[c], b[c] = e)
                    } else b[d] = e
            }

            function I(a, b, c) {
                var d, e, f = 0,
                    g = bc.length,
                    h = _.Deferred().always(function() {
                        delete i.elem
                    }),
                    i = function() {
                        if (e) return !1;
                        for (var b = Yb || D(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; i > g; g++) j.tweens[g].run(f);
                        return h.notifyWith(a, [j, f, c]), 1 > f && i ? c : (h.resolveWith(a, [j]), !1)
                    },
                    j = h.promise({
                        elem: a,
                        props: _.extend({}, b),
                        opts: _.extend(!0, {
                            specialEasing: {}
                        }, c),
                        originalProperties: b,
                        originalOptions: c,
                        startTime: Yb || D(),
                        duration: c.duration,
                        tweens: [],
                        createTween: function(b, c) {
                            var d = _.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                            return j.tweens.push(d), d
                        },
                        stop: function(b) {
                            var c = 0,
                                d = b ? j.tweens.length : 0;
                            if (e) return this;
                            for (e = !0; d > c; c++) j.tweens[c].run(1);
                            return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]), this
                        }
                    }),
                    k = j.props;
                for (H(k, j.opts.specialEasing); g > f; f++)
                    if (d = bc[f].call(j, a, k, j.opts)) return d;
                return _.map(k, F, j), _.isFunction(j.opts.start) && j.opts.start.call(a, j), _.fx.timer(_.extend(i, {
                    elem: a,
                    anim: j,
                    queue: j.opts.queue
                })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always)
            }

            function J(a) {
                return function(b, c) {
                    "string" != typeof b && (c = b, b = "*");
                    var d, e = 0,
                        f = b.toLowerCase().match(nb) || [];
                    if (_.isFunction(c))
                        for (; d = f[e++];) "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c)
                }
            }

            function K(a, b, c, d) {
                function e(h) {
                    var i;
                    return f[h] = !0, _.each(a[h] || [], function(a, h) {
                        var j = h(b, c, d);
                        return "string" != typeof j || g || f[j] ? g ? !(i = j) : void 0 : (b.dataTypes.unshift(j), e(j), !1)
                    }), i
                }
                var f = {},
                    g = a === tc;
                return e(b.dataTypes[0]) || !f["*"] && e("*")
            }

            function L(a, b) {
                var c, d, e = _.ajaxSettings.flatOptions || {};
                for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
                return d && _.extend(!0, a, d), a
            }

            function M(a, b, c) {
                for (var d, e, f, g, h = a.contents, i = a.dataTypes;
                    "*" === i[0];) i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));
                if (d)
                    for (e in h)
                        if (h[e] && h[e].test(d)) {
                            i.unshift(e);
                            break
                        }
                if (i[0] in c) f = i[0];
                else {
                    for (e in c) {
                        if (!i[0] || a.converters[e + " " + i[0]]) {
                            f = e;
                            break
                        }
                        g || (g = e)
                    }
                    f = f || g
                }
                return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0
            }

            function N(a, b, c, d) {
                var e, f, g, h, i, j = {},
                    k = a.dataTypes.slice();
                if (k[1])
                    for (g in a.converters) j[g.toLowerCase()] = a.converters[g];
                for (f = k.shift(); f;)
                    if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift())
                        if ("*" === f) f = i;
                        else if ("*" !== i && i !== f) {
                    if (g = j[i + " " + f] || j["* " + f], !g)
                        for (e in j)
                            if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                                g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));
                                break
                            }
                    if (g !== !0)
                        if (g && a["throws"]) b = g(b);
                        else try {
                            b = g(b)
                        } catch (l) {
                            return {
                                state: "parsererror",
                                error: g ? l : "No conversion from " + i + " to " + f
                            }
                        }
                }
                return {
                    state: "success",
                    data: b
                }
            }

            function O(a, b, c, d) {
                var e;
                if (_.isArray(b)) _.each(b, function(b, e) {
                    c || yc.test(a) ? d(a, e) : O(a + "[" + ("object" == typeof e ? b : "") + "]", e, c, d)
                });
                else if (c || "object" !== _.type(b)) d(a, b);
                else
                    for (e in b) O(a + "[" + e + "]", b[e], c, d)
            }

            function P(a) {
                return _.isWindow(a) ? a : 9 === a.nodeType && a.defaultView
            }
            var Q = [],
                R = Q.slice,
                S = Q.concat,
                T = Q.push,
                U = Q.indexOf,
                V = {},
                W = V.toString,
                X = V.hasOwnProperty,
                Y = {},
                Z = a.document,
                $ = "2.1.3",
                _ = function(a, b) {
                    return new _.fn.init(a, b)
                },
                ab = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
                bb = /^-ms-/,
                cb = /-([\da-z])/gi,
                db = function(a, b) {
                    return b.toUpperCase()
                };
            _.fn = _.prototype = {
                jquery: $,
                constructor: _,
                selector: "",
                length: 0,
                toArray: function() {
                    return R.call(this)
                },
                get: function(a) {
                    return null != a ? 0 > a ? this[a + this.length] : this[a] : R.call(this)
                },
                pushStack: function(a) {
                    var b = _.merge(this.constructor(), a);
                    return b.prevObject = this, b.context = this.context, b
                },
                each: function(a, b) {
                    return _.each(this, a, b)
                },
                map: function(a) {
                    return this.pushStack(_.map(this, function(b, c) {
                        return a.call(b, c, b)
                    }))
                },
                slice: function() {
                    return this.pushStack(R.apply(this, arguments))
                },
                first: function() {
                    return this.eq(0)
                },
                last: function() {
                    return this.eq(-1)
                },
                eq: function(a) {
                    var b = this.length,
                        c = +a + (0 > a ? b : 0);
                    return this.pushStack(c >= 0 && b > c ? [this[c]] : [])
                },
                end: function() {
                    return this.prevObject || this.constructor(null)
                },
                push: T,
                sort: Q.sort,
                splice: Q.splice
            }, _.extend = _.fn.extend = function() {
                var a, b, c, d, e, f, g = arguments[0] || {},
                    h = 1,
                    i = arguments.length,
                    j = !1;
                for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || _.isFunction(g) || (g = {}), h === i && (g = this, h--); i > h; h++)
                    if (null != (a = arguments[h]))
                        for (b in a) c = g[b], d = a[b], g !== d && (j && d && (_.isPlainObject(d) || (e = _.isArray(d))) ? (e ? (e = !1, f = c && _.isArray(c) ? c : []) : f = c && _.isPlainObject(c) ? c : {}, g[b] = _.extend(j, f, d)) : void 0 !== d && (g[b] = d));
                return g
            }, _.extend({
                expando: "jQuery" + ($ + Math.random()).replace(/\D/g, ""),
                isReady: !0,
                error: function(a) {
                    throw new Error(a)
                },
                noop: function() {},
                isFunction: function(a) {
                    return "function" === _.type(a)
                },
                isArray: Array.isArray,
                isWindow: function(a) {
                    return null != a && a === a.window
                },
                isNumeric: function(a) {
                    return !_.isArray(a) && a - parseFloat(a) + 1 >= 0
                },
                isPlainObject: function(a) {
                    return "object" !== _.type(a) || a.nodeType || _.isWindow(a) ? !1 : a.constructor && !X.call(a.constructor.prototype, "isPrototypeOf") ? !1 : !0
                },
                isEmptyObject: function(a) {
                    var b;
                    for (b in a) return !1;
                    return !0
                },
                type: function(a) {
                    return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? V[W.call(a)] || "object" : typeof a
                },
                globalEval: function(a) {
                    var b, c = eval;
                    a = _.trim(a), a && (1 === a.indexOf("use strict") ? (b = Z.createElement("script"), b.text = a, Z.head.appendChild(b).parentNode.removeChild(b)) : c(a))
                },
                camelCase: function(a) {
                    return a.replace(bb, "ms-").replace(cb, db)
                },
                nodeName: function(a, b) {
                    return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase()
                },
                each: function(a, b, d) {
                    var e, f = 0,
                        g = a.length,
                        h = c(a);
                    if (d) {
                        if (h)
                            for (; g > f && (e = b.apply(a[f], d), e !== !1); f++);
                        else
                            for (f in a)
                                if (e = b.apply(a[f], d), e === !1) break
                    } else if (h)
                        for (; g > f && (e = b.call(a[f], f, a[f]), e !== !1); f++);
                    else
                        for (f in a)
                            if (e = b.call(a[f], f, a[f]), e === !1) break; return a
                },
                trim: function(a) {
                    return null == a ? "" : (a + "").replace(ab, "")
                },
                makeArray: function(a, b) {
                    var d = b || [];
                    return null != a && (c(Object(a)) ? _.merge(d, "string" == typeof a ? [a] : a) : T.call(d, a)), d
                },
                inArray: function(a, b, c) {
                    return null == b ? -1 : U.call(b, a, c)
                },
                merge: function(a, b) {
                    for (var c = +b.length, d = 0, e = a.length; c > d; d++) a[e++] = b[d];
                    return a.length = e, a
                },
                grep: function(a, b, c) {
                    for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++) d = !b(a[f], f), d !== h && e.push(a[f]);
                    return e
                },
                map: function(a, b, d) {
                    var e, f = 0,
                        g = a.length,
                        h = c(a),
                        i = [];
                    if (h)
                        for (; g > f; f++) e = b(a[f], f, d), null != e && i.push(e);
                    else
                        for (f in a) e = b(a[f], f, d), null != e && i.push(e);
                    return S.apply([], i)
                },
                guid: 1,
                proxy: function(a, b) {
                    var c, d, e;
                    return "string" == typeof b && (c = a[b], b = a, a = c), _.isFunction(a) ? (d = R.call(arguments, 2), e = function() {
                        return a.apply(b || this, d.concat(R.call(arguments)))
                    }, e.guid = a.guid = a.guid || _.guid++, e) : void 0
                },
                now: Date.now,
                support: Y
            }), _.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(a, b) {
                V["[object " + b + "]"] = b.toLowerCase()
            });
            var eb = function(a) {
                function b(a, b, c, d) {
                    var e, f, g, h, i, j, l, n, o, p;
                    if ((b ? b.ownerDocument || b : O) !== G && F(b), b = b || G, c = c || [], h = b.nodeType, "string" != typeof a || !a || 1 !== h && 9 !== h && 11 !== h) return c;
                    if (!d && I) {
                        if (11 !== h && (e = sb.exec(a)))
                            if (g = e[1]) {
                                if (9 === h) {
                                    if (f = b.getElementById(g), !f || !f.parentNode) return c;
                                    if (f.id === g) return c.push(f), c
                                } else if (b.ownerDocument && (f = b.ownerDocument.getElementById(g)) && M(b, f) && f.id === g) return c.push(f), c
                            } else {
                                if (e[2]) return $.apply(c, b.getElementsByTagName(a)), c;
                                if ((g = e[3]) && v.getElementsByClassName) return $.apply(c, b.getElementsByClassName(g)), c
                            }
                        if (v.qsa && (!J || !J.test(a))) {
                            if (n = l = N, o = b, p = 1 !== h && a, 1 === h && "object" !== b.nodeName.toLowerCase()) {
                                for (j = z(a), (l = b.getAttribute("id")) ? n = l.replace(ub, "\\$&") : b.setAttribute("id", n), n = "[id='" + n + "'] ", i = j.length; i--;) j[i] = n + m(j[i]);
                                o = tb.test(a) && k(b.parentNode) || b, p = j.join(",")
                            }
                            if (p) try {
                                return $.apply(c, o.querySelectorAll(p)), c
                            } catch (q) {} finally {
                                l || b.removeAttribute("id")
                            }
                        }
                    }
                    return B(a.replace(ib, "$1"), b, c, d)
                }

                function c() {
                    function a(c, d) {
                        return b.push(c + " ") > w.cacheLength && delete a[b.shift()], a[c + " "] = d
                    }
                    var b = [];
                    return a
                }

                function d(a) {
                    return a[N] = !0, a
                }

                function e(a) {
                    var b = G.createElement("div");
                    try {
                        return !!a(b)
                    } catch (c) {
                        return !1
                    } finally {
                        b.parentNode && b.parentNode.removeChild(b), b = null
                    }
                }

                function f(a, b) {
                    for (var c = a.split("|"), d = a.length; d--;) w.attrHandle[c[d]] = b
                }

                function g(a, b) {
                    var c = b && a,
                        d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || V) - (~a.sourceIndex || V);
                    if (d) return d;
                    if (c)
                        for (; c = c.nextSibling;)
                            if (c === b) return -1;
                    return a ? 1 : -1
                }

                function h(a) {
                    return function(b) {
                        var c = b.nodeName.toLowerCase();
                        return "input" === c && b.type === a
                    }
                }

                function i(a) {
                    return function(b) {
                        var c = b.nodeName.toLowerCase();
                        return ("input" === c || "button" === c) && b.type === a
                    }
                }

                function j(a) {
                    return d(function(b) {
                        return b = +b, d(function(c, d) {
                            for (var e, f = a([], c.length, b), g = f.length; g--;) c[e = f[g]] && (c[e] = !(d[e] = c[e]))
                        })
                    })
                }

                function k(a) {
                    return a && "undefined" != typeof a.getElementsByTagName && a
                }

                function l() {}

                function m(a) {
                    for (var b = 0, c = a.length, d = ""; c > b; b++) d += a[b].value;
                    return d
                }

                function n(a, b, c) {
                    var d = b.dir,
                        e = c && "parentNode" === d,
                        f = Q++;
                    return b.first ? function(b, c, f) {
                        for (; b = b[d];)
                            if (1 === b.nodeType || e) return a(b, c, f)
                    } : function(b, c, g) {
                        var h, i, j = [P, f];
                        if (g) {
                            for (; b = b[d];)
                                if ((1 === b.nodeType || e) && a(b, c, g)) return !0
                        } else
                            for (; b = b[d];)
                                if (1 === b.nodeType || e) {
                                    if (i = b[N] || (b[N] = {}), (h = i[d]) && h[0] === P && h[1] === f) return j[2] = h[2];
                                    if (i[d] = j, j[2] = a(b, c, g)) return !0
                                }
                    }
                }

                function o(a) {
                    return a.length > 1 ? function(b, c, d) {
                        for (var e = a.length; e--;)
                            if (!a[e](b, c, d)) return !1;
                        return !0
                    } : a[0]
                }

                function p(a, c, d) {
                    for (var e = 0, f = c.length; f > e; e++) b(a, c[e], d);
                    return d
                }

                function q(a, b, c, d, e) {
                    for (var f, g = [], h = 0, i = a.length, j = null != b; i > h; h++)(f = a[h]) && (!c || c(f, d, e)) && (g.push(f), j && b.push(h));
                    return g
                }

                function r(a, b, c, e, f, g) {
                    return e && !e[N] && (e = r(e)), f && !f[N] && (f = r(f, g)), d(function(d, g, h, i) {
                        var j, k, l, m = [],
                            n = [],
                            o = g.length,
                            r = d || p(b || "*", h.nodeType ? [h] : h, []),
                            s = !a || !d && b ? r : q(r, m, a, h, i),
                            t = c ? f || (d ? a : o || e) ? [] : g : s;
                        if (c && c(s, t, h, i), e)
                            for (j = q(t, n), e(j, [], h, i), k = j.length; k--;)(l = j[k]) && (t[n[k]] = !(s[n[k]] = l));
                        if (d) {
                            if (f || a) {
                                if (f) {
                                    for (j = [], k = t.length; k--;)(l = t[k]) && j.push(s[k] = l);
                                    f(null, t = [], j, i)
                                }
                                for (k = t.length; k--;)(l = t[k]) && (j = f ? ab(d, l) : m[k]) > -1 && (d[j] = !(g[j] = l))
                            }
                        } else t = q(t === g ? t.splice(o, t.length) : t), f ? f(null, g, t, i) : $.apply(g, t)
                    })
                }

                function s(a) {
                    for (var b, c, d, e = a.length, f = w.relative[a[0].type], g = f || w.relative[" "], h = f ? 1 : 0, i = n(function(a) {
                            return a === b
                        }, g, !0), j = n(function(a) {
                            return ab(b, a) > -1
                        }, g, !0), k = [function(a, c, d) {
                            var e = !f && (d || c !== C) || ((b = c).nodeType ? i(a, c, d) : j(a, c, d));
                            return b = null, e
                        }]; e > h; h++)
                        if (c = w.relative[a[h].type]) k = [n(o(k), c)];
                        else {
                            if (c = w.filter[a[h].type].apply(null, a[h].matches), c[N]) {
                                for (d = ++h; e > d && !w.relative[a[d].type]; d++);
                                return r(h > 1 && o(k), h > 1 && m(a.slice(0, h - 1).concat({
                                    value: " " === a[h - 2].type ? "*" : ""
                                })).replace(ib, "$1"), c, d > h && s(a.slice(h, d)), e > d && s(a = a.slice(d)), e > d && m(a))
                            }
                            k.push(c)
                        }
                    return o(k)
                }

                function t(a, c) {
                    var e = c.length > 0,
                        f = a.length > 0,
                        g = function(d, g, h, i, j) {
                            var k, l, m, n = 0,
                                o = "0",
                                p = d && [],
                                r = [],
                                s = C,
                                t = d || f && w.find.TAG("*", j),
                                u = P += null == s ? 1 : Math.random() || .1,
                                v = t.length;
                            for (j && (C = g !== G && g); o !== v && null != (k = t[o]); o++) {
                                if (f && k) {
                                    for (l = 0; m = a[l++];)
                                        if (m(k, g, h)) {
                                            i.push(k);
                                            break
                                        }
                                    j && (P = u)
                                }
                                e && ((k = !m && k) && n--, d && p.push(k))
                            }
                            if (n += o, e && o !== n) {
                                for (l = 0; m = c[l++];) m(p, r, g, h);
                                if (d) {
                                    if (n > 0)
                                        for (; o--;) p[o] || r[o] || (r[o] = Y.call(i));
                                    r = q(r)
                                }
                                $.apply(i, r), j && !d && r.length > 0 && n + c.length > 1 && b.uniqueSort(i)
                            }
                            return j && (P = u, C = s), p
                        };
                    return e ? d(g) : g
                }
                var u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N = "sizzle" + 1 * new Date,
                    O = a.document,
                    P = 0,
                    Q = 0,
                    R = c(),
                    S = c(),
                    T = c(),
                    U = function(a, b) {
                        return a === b && (E = !0), 0
                    },
                    V = 1 << 31,
                    W = {}.hasOwnProperty,
                    X = [],
                    Y = X.pop,
                    Z = X.push,
                    $ = X.push,
                    _ = X.slice,
                    ab = function(a, b) {
                        for (var c = 0, d = a.length; d > c; c++)
                            if (a[c] === b) return c;
                        return -1
                    },
                    bb = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                    cb = "[\\x20\\t\\r\\n\\f]",
                    db = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
                    eb = db.replace("w", "w#"),
                    fb = "\\[" + cb + "*(" + db + ")(?:" + cb + "*([*^$|!~]?=)" + cb + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + eb + "))|)" + cb + "*\\]",
                    gb = ":(" + db + ")(?:\\((" + "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + "((?:\\\\.|[^\\\\()[\\]]|" + fb + ")*)|" + ".*" + ")\\)|)",
                    hb = new RegExp(cb + "+", "g"),
                    ib = new RegExp("^" + cb + "+|((?:^|[^\\\\])(?:\\\\.)*)" + cb + "+$", "g"),
                    jb = new RegExp("^" + cb + "*," + cb + "*"),
                    kb = new RegExp("^" + cb + "*([>+~]|" + cb + ")" + cb + "*"),
                    lb = new RegExp("=" + cb + "*([^\\]'\"]*?)" + cb + "*\\]", "g"),
                    mb = new RegExp(gb),
                    nb = new RegExp("^" + eb + "$"),
                    ob = {
                        ID: new RegExp("^#(" + db + ")"),
                        CLASS: new RegExp("^\\.(" + db + ")"),
                        TAG: new RegExp("^(" + db.replace("w", "w*") + ")"),
                        ATTR: new RegExp("^" + fb),
                        PSEUDO: new RegExp("^" + gb),
                        CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + cb + "*(even|odd|(([+-]|)(\\d*)n|)" + cb + "*(?:([+-]|)" + cb + "*(\\d+)|))" + cb + "*\\)|)", "i"),
                        bool: new RegExp("^(?:" + bb + ")$", "i"),
                        needsContext: new RegExp("^" + cb + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + cb + "*((?:-\\d)?\\d*)" + cb + "*\\)|)(?=[^-]|$)", "i")
                    },
                    pb = /^(?:input|select|textarea|button)$/i,
                    qb = /^h\d$/i,
                    rb = /^[^{]+\{\s*\[native \w/,
                    sb = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                    tb = /[+~]/,
                    ub = /'|\\/g,
                    vb = new RegExp("\\\\([\\da-f]{1,6}" + cb + "?|(" + cb + ")|.)", "ig"),
                    wb = function(a, b, c) {
                        var d = "0x" + b - 65536;
                        return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode(55296 | d >> 10, 56320 | 1023 & d)
                    },
                    xb = function() {
                        F()
                    };
                try {
                    $.apply(X = _.call(O.childNodes), O.childNodes), X[O.childNodes.length].nodeType
                } catch (yb) {
                    $ = {
                        apply: X.length ? function(a, b) {
                            Z.apply(a, _.call(b))
                        } : function(a, b) {
                            for (var c = a.length, d = 0; a[c++] = b[d++];);
                            a.length = c - 1
                        }
                    }
                }
                v = b.support = {}, y = b.isXML = function(a) {
                    var b = a && (a.ownerDocument || a).documentElement;
                    return b ? "HTML" !== b.nodeName : !1
                }, F = b.setDocument = function(a) {
                    var b, c, d = a ? a.ownerDocument || a : O;
                    return d !== G && 9 === d.nodeType && d.documentElement ? (G = d, H = d.documentElement, c = d.defaultView, c && c !== c.top && (c.addEventListener ? c.addEventListener("unload", xb, !1) : c.attachEvent && c.attachEvent("onunload", xb)), I = !y(d), v.attributes = e(function(a) {
                        return a.className = "i", !a.getAttribute("className")
                    }), v.getElementsByTagName = e(function(a) {
                        return a.appendChild(d.createComment("")), !a.getElementsByTagName("*").length
                    }), v.getElementsByClassName = rb.test(d.getElementsByClassName), v.getById = e(function(a) {
                        return H.appendChild(a).id = N, !d.getElementsByName || !d.getElementsByName(N).length
                    }), v.getById ? (w.find.ID = function(a, b) {
                        if ("undefined" != typeof b.getElementById && I) {
                            var c = b.getElementById(a);
                            return c && c.parentNode ? [c] : []
                        }
                    }, w.filter.ID = function(a) {
                        var b = a.replace(vb, wb);
                        return function(a) {
                            return a.getAttribute("id") === b
                        }
                    }) : (delete w.find.ID, w.filter.ID = function(a) {
                        var b = a.replace(vb, wb);
                        return function(a) {
                            var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");
                            return c && c.value === b
                        }
                    }), w.find.TAG = v.getElementsByTagName ? function(a, b) {
                        return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : v.qsa ? b.querySelectorAll(a) : void 0
                    } : function(a, b) {
                        var c, d = [],
                            e = 0,
                            f = b.getElementsByTagName(a);
                        if ("*" === a) {
                            for (; c = f[e++];) 1 === c.nodeType && d.push(c);
                            return d
                        }
                        return f
                    }, w.find.CLASS = v.getElementsByClassName && function(a, b) {
                        return I ? b.getElementsByClassName(a) : void 0
                    }, K = [], J = [], (v.qsa = rb.test(d.querySelectorAll)) && (e(function(a) {
                        H.appendChild(a).innerHTML = "<a id='" + N + "'></a>" + "<select id='" + N + "-\f]' msallowcapture=''>" + "<option selected=''></option></select>", a.querySelectorAll("[msallowcapture^='']").length && J.push("[*^$]=" + cb + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || J.push("\\[" + cb + "*(?:value|" + bb + ")"), a.querySelectorAll("[id~=" + N + "-]").length || J.push("~="), a.querySelectorAll(":checked").length || J.push(":checked"), a.querySelectorAll("a#" + N + "+*").length || J.push(".#.+[+~]")
                    }), e(function(a) {
                        var b = d.createElement("input");
                        b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && J.push("name" + cb + "*[*^$|!~]?="), a.querySelectorAll(":enabled").length || J.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), J.push(",.*:")
                    })), (v.matchesSelector = rb.test(L = H.matches || H.webkitMatchesSelector || H.mozMatchesSelector || H.oMatchesSelector || H.msMatchesSelector)) && e(function(a) {
                        v.disconnectedMatch = L.call(a, "div"), L.call(a, "[s!='']:x"), K.push("!=", gb)
                    }), J = J.length && new RegExp(J.join("|")), K = K.length && new RegExp(K.join("|")), b = rb.test(H.compareDocumentPosition), M = b || rb.test(H.contains) ? function(a, b) {
                        var c = 9 === a.nodeType ? a.documentElement : a,
                            d = b && b.parentNode;
                        return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)))
                    } : function(a, b) {
                        if (b)
                            for (; b = b.parentNode;)
                                if (b === a) return !0;
                        return !1
                    }, U = b ? function(a, b) {
                        if (a === b) return E = !0, 0;
                        var c = !a.compareDocumentPosition - !b.compareDocumentPosition;
                        return c ? c : (c = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & c || !v.sortDetached && b.compareDocumentPosition(a) === c ? a === d || a.ownerDocument === O && M(O, a) ? -1 : b === d || b.ownerDocument === O && M(O, b) ? 1 : D ? ab(D, a) - ab(D, b) : 0 : 4 & c ? -1 : 1)
                    } : function(a, b) {
                        if (a === b) return E = !0, 0;
                        var c, e = 0,
                            f = a.parentNode,
                            h = b.parentNode,
                            i = [a],
                            j = [b];
                        if (!f || !h) return a === d ? -1 : b === d ? 1 : f ? -1 : h ? 1 : D ? ab(D, a) - ab(D, b) : 0;
                        if (f === h) return g(a, b);
                        for (c = a; c = c.parentNode;) i.unshift(c);
                        for (c = b; c = c.parentNode;) j.unshift(c);
                        for (; i[e] === j[e];) e++;
                        return e ? g(i[e], j[e]) : i[e] === O ? -1 : j[e] === O ? 1 : 0
                    }, d) : G
                }, b.matches = function(a, c) {
                    return b(a, null, null, c)
                }, b.matchesSelector = function(a, c) {
                    if ((a.ownerDocument || a) !== G && F(a), c = c.replace(lb, "='$1']"), !(!v.matchesSelector || !I || K && K.test(c) || J && J.test(c))) try {
                        var d = L.call(a, c);
                        if (d || v.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d
                    } catch (e) {}
                    return b(c, G, null, [a]).length > 0
                }, b.contains = function(a, b) {
                    return (a.ownerDocument || a) !== G && F(a), M(a, b)
                }, b.attr = function(a, b) {
                    (a.ownerDocument || a) !== G && F(a);
                    var c = w.attrHandle[b.toLowerCase()],
                        d = c && W.call(w.attrHandle, b.toLowerCase()) ? c(a, b, !I) : void 0;
                    return void 0 !== d ? d : v.attributes || !I ? a.getAttribute(b) : (d = a.getAttributeNode(b)) && d.specified ? d.value : null
                }, b.error = function(a) {
                    throw new Error("Syntax error, unrecognized expression: " + a)
                }, b.uniqueSort = function(a) {
                    var b, c = [],
                        d = 0,
                        e = 0;
                    if (E = !v.detectDuplicates, D = !v.sortStable && a.slice(0), a.sort(U), E) {
                        for (; b = a[e++];) b === a[e] && (d = c.push(e));
                        for (; d--;) a.splice(c[d], 1)
                    }
                    return D = null, a
                }, x = b.getText = function(a) {
                    var b, c = "",
                        d = 0,
                        e = a.nodeType;
                    if (e) {
                        if (1 === e || 9 === e || 11 === e) {
                            if ("string" == typeof a.textContent) return a.textContent;
                            for (a = a.firstChild; a; a = a.nextSibling) c += x(a)
                        } else if (3 === e || 4 === e) return a.nodeValue
                    } else
                        for (; b = a[d++];) c += x(b);
                    return c
                }, w = b.selectors = {
                    cacheLength: 50,
                    createPseudo: d,
                    match: ob,
                    attrHandle: {},
                    find: {},
                    relative: {
                        ">": {
                            dir: "parentNode",
                            first: !0
                        },
                        " ": {
                            dir: "parentNode"
                        },
                        "+": {
                            dir: "previousSibling",
                            first: !0
                        },
                        "~": {
                            dir: "previousSibling"
                        }
                    },
                    preFilter: {
                        ATTR: function(a) {
                            return a[1] = a[1].replace(vb, wb), a[3] = (a[3] || a[4] || a[5] || "").replace(vb, wb), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4)
                        },
                        CHILD: function(a) {
                            return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || b.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && b.error(a[0]), a
                        },
                        PSEUDO: function(a) {
                            var b, c = !a[6] && a[2];
                            return ob.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && mb.test(c) && (b = z(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3))
                        }
                    },
                    filter: {
                        TAG: function(a) {
                            var b = a.replace(vb, wb).toLowerCase();
                            return "*" === a ? function() {
                                return !0
                            } : function(a) {
                                return a.nodeName && a.nodeName.toLowerCase() === b
                            }
                        },
                        CLASS: function(a) {
                            var b = R[a + " "];
                            return b || (b = new RegExp("(^|" + cb + ")" + a + "(" + cb + "|$)")) && R(a, function(a) {
                                return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "")
                            })
                        },
                        ATTR: function(a, c, d) {
                            return function(e) {
                                var f = b.attr(e, a);
                                return null == f ? "!=" === c : c ? (f += "", "=" === c ? f === d : "!=" === c ? f !== d : "^=" === c ? d && 0 === f.indexOf(d) : "*=" === c ? d && f.indexOf(d) > -1 : "$=" === c ? d && f.slice(-d.length) === d : "~=" === c ? (" " + f.replace(hb, " ") + " ").indexOf(d) > -1 : "|=" === c ? f === d || f.slice(0, d.length + 1) === d + "-" : !1) : !0
                            }
                        },
                        CHILD: function(a, b, c, d, e) {
                            var f = "nth" !== a.slice(0, 3),
                                g = "last" !== a.slice(-4),
                                h = "of-type" === b;
                            return 1 === d && 0 === e ? function(a) {
                                return !!a.parentNode
                            } : function(b, c, i) {
                                var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling",
                                    q = b.parentNode,
                                    r = h && b.nodeName.toLowerCase(),
                                    s = !i && !h;
                                if (q) {
                                    if (f) {
                                        for (; p;) {
                                            for (l = b; l = l[p];)
                                                if (h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) return !1;
                                            o = p = "only" === a && !o && "nextSibling"
                                        }
                                        return !0
                                    }
                                    if (o = [g ? q.firstChild : q.lastChild], g && s) {
                                        for (k = q[N] || (q[N] = {}), j = k[a] || [], n = j[0] === P && j[1], m = j[0] === P && j[2], l = n && q.childNodes[n]; l = ++n && l && l[p] || (m = n = 0) || o.pop();)
                                            if (1 === l.nodeType && ++m && l === b) {
                                                k[a] = [P, n, m];
                                                break
                                            }
                                    } else if (s && (j = (b[N] || (b[N] = {}))[a]) && j[0] === P) m = j[1];
                                    else
                                        for (;
                                            (l = ++n && l && l[p] || (m = n = 0) || o.pop()) && ((h ? l.nodeName.toLowerCase() !== r : 1 !== l.nodeType) || !++m || (s && ((l[N] || (l[N] = {}))[a] = [P, m]), l !== b)););
                                    return m -= e, m === d || 0 === m % d && m / d >= 0
                                }
                            }
                        },
                        PSEUDO: function(a, c) {
                            var e, f = w.pseudos[a] || w.setFilters[a.toLowerCase()] || b.error("unsupported pseudo: " + a);
                            return f[N] ? f(c) : f.length > 1 ? (e = [a, a, "", c], w.setFilters.hasOwnProperty(a.toLowerCase()) ? d(function(a, b) {
                                for (var d, e = f(a, c), g = e.length; g--;) d = ab(a, e[g]), a[d] = !(b[d] = e[g])
                            }) : function(a) {
                                return f(a, 0, e)
                            }) : f
                        }
                    },
                    pseudos: {
                        not: d(function(a) {
                            var b = [],
                                c = [],
                                e = A(a.replace(ib, "$1"));
                            return e[N] ? d(function(a, b, c, d) {
                                for (var f, g = e(a, null, d, []), h = a.length; h--;)(f = g[h]) && (a[h] = !(b[h] = f))
                            }) : function(a, d, f) {
                                return b[0] = a, e(b, null, f, c), b[0] = null, !c.pop()
                            }
                        }),
                        has: d(function(a) {
                            return function(c) {
                                return b(a, c).length > 0
                            }
                        }),
                        contains: d(function(a) {
                            return a = a.replace(vb, wb),
                                function(b) {
                                    return (b.textContent || b.innerText || x(b)).indexOf(a) > -1
                                }
                        }),
                        lang: d(function(a) {
                            return nb.test(a || "") || b.error("unsupported lang: " + a), a = a.replace(vb, wb).toLowerCase(),
                                function(b) {
                                    var c;
                                    do
                                        if (c = I ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-");
                                    while ((b = b.parentNode) && 1 === b.nodeType);
                                    return !1
                                }
                        }),
                        target: function(b) {
                            var c = a.location && a.location.hash;
                            return c && c.slice(1) === b.id
                        },
                        root: function(a) {
                            return a === H
                        },
                        focus: function(a) {
                            return a === G.activeElement && (!G.hasFocus || G.hasFocus()) && !!(a.type || a.href || ~a.tabIndex)
                        },
                        enabled: function(a) {
                            return a.disabled === !1
                        },
                        disabled: function(a) {
                            return a.disabled === !0
                        },
                        checked: function(a) {
                            var b = a.nodeName.toLowerCase();
                            return "input" === b && !!a.checked || "option" === b && !!a.selected
                        },
                        selected: function(a) {
                            return a.parentNode && a.parentNode.selectedIndex, a.selected === !0
                        },
                        empty: function(a) {
                            for (a = a.firstChild; a; a = a.nextSibling)
                                if (a.nodeType < 6) return !1;
                            return !0
                        },
                        parent: function(a) {
                            return !w.pseudos.empty(a)
                        },
                        header: function(a) {
                            return qb.test(a.nodeName)
                        },
                        input: function(a) {
                            return pb.test(a.nodeName)
                        },
                        button: function(a) {
                            var b = a.nodeName.toLowerCase();
                            return "input" === b && "button" === a.type || "button" === b
                        },
                        text: function(a) {
                            var b;
                            return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase())
                        },
                        first: j(function() {
                            return [0]
                        }),
                        last: j(function(a, b) {
                            return [b - 1]
                        }),
                        eq: j(function(a, b, c) {
                            return [0 > c ? c + b : c]
                        }),
                        even: j(function(a, b) {
                            for (var c = 0; b > c; c += 2) a.push(c);
                            return a
                        }),
                        odd: j(function(a, b) {
                            for (var c = 1; b > c; c += 2) a.push(c);
                            return a
                        }),
                        lt: j(function(a, b, c) {
                            for (var d = 0 > c ? c + b : c; --d >= 0;) a.push(d);
                            return a
                        }),
                        gt: j(function(a, b, c) {
                            for (var d = 0 > c ? c + b : c; ++d < b;) a.push(d);
                            return a
                        })
                    }
                }, w.pseudos.nth = w.pseudos.eq;
                for (u in {
                        radio: !0,
                        checkbox: !0,
                        file: !0,
                        password: !0,
                        image: !0
                    }) w.pseudos[u] = h(u);
                for (u in {
                        submit: !0,
                        reset: !0
                    }) w.pseudos[u] = i(u);
                return l.prototype = w.filters = w.pseudos, w.setFilters = new l, z = b.tokenize = function(a, c) {
                    var d, e, f, g, h, i, j, k = S[a + " "];
                    if (k) return c ? 0 : k.slice(0);
                    for (h = a, i = [], j = w.preFilter; h;) {
                        (!d || (e = jb.exec(h))) && (e && (h = h.slice(e[0].length) || h), i.push(f = [])), d = !1, (e = kb.exec(h)) && (d = e.shift(), f.push({
                            value: d,
                            type: e[0].replace(ib, " ")
                        }), h = h.slice(d.length));
                        for (g in w.filter) !(e = ob[g].exec(h)) || j[g] && !(e = j[g](e)) || (d = e.shift(), f.push({
                            value: d,
                            type: g,
                            matches: e
                        }), h = h.slice(d.length));
                        if (!d) break
                    }
                    return c ? h.length : h ? b.error(a) : S(a, i).slice(0)
                }, A = b.compile = function(a, b) {
                    var c, d = [],
                        e = [],
                        f = T[a + " "];
                    if (!f) {
                        for (b || (b = z(a)), c = b.length; c--;) f = s(b[c]), f[N] ? d.push(f) : e.push(f);
                        f = T(a, t(e, d)), f.selector = a
                    }
                    return f
                }, B = b.select = function(a, b, c, d) {
                    var e, f, g, h, i, j = "function" == typeof a && a,
                        l = !d && z(a = j.selector || a);
                    if (c = c || [], 1 === l.length) {
                        if (f = l[0] = l[0].slice(0), f.length > 2 && "ID" === (g = f[0]).type && v.getById && 9 === b.nodeType && I && w.relative[f[1].type]) {
                            if (b = (w.find.ID(g.matches[0].replace(vb, wb), b) || [])[0], !b) return c;
                            j && (b = b.parentNode), a = a.slice(f.shift().value.length)
                        }
                        for (e = ob.needsContext.test(a) ? 0 : f.length; e-- && (g = f[e], !w.relative[h = g.type]);)
                            if ((i = w.find[h]) && (d = i(g.matches[0].replace(vb, wb), tb.test(f[0].type) && k(b.parentNode) || b))) {
                                if (f.splice(e, 1), a = d.length && m(f), !a) return $.apply(c, d), c;
                                break
                            }
                    }
                    return (j || A(a, l))(d, b, !I, c, tb.test(a) && k(b.parentNode) || b), c
                }, v.sortStable = N.split("").sort(U).join("") === N, v.detectDuplicates = !!E, F(), v.sortDetached = e(function(a) {
                    return 1 & a.compareDocumentPosition(G.createElement("div"))
                }), e(function(a) {
                    return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href")
                }) || f("type|href|height|width", function(a, b, c) {
                    return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2)
                }), v.attributes && e(function(a) {
                    return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value")
                }) || f("value", function(a, b, c) {
                    return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue
                }), e(function(a) {
                    return null == a.getAttribute("disabled")
                }) || f(bb, function(a, b, c) {
                    var d;
                    return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null
                }), b
            }(a);
            _.find = eb, _.expr = eb.selectors, _.expr[":"] = _.expr.pseudos, _.unique = eb.uniqueSort, _.text = eb.getText, _.isXMLDoc = eb.isXML, _.contains = eb.contains;
            var fb = _.expr.match.needsContext,
                gb = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
                hb = /^.[^:#\[\.,]*$/;
            _.filter = function(a, b, c) {
                var d = b[0];
                return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? _.find.matchesSelector(d, a) ? [d] : [] : _.find.matches(a, _.grep(b, function(a) {
                    return 1 === a.nodeType
                }))
            }, _.fn.extend({
                find: function(a) {
                    var b, c = this.length,
                        d = [],
                        e = this;
                    if ("string" != typeof a) return this.pushStack(_(a).filter(function() {
                        for (b = 0; c > b; b++)
                            if (_.contains(e[b], this)) return !0
                    }));
                    for (b = 0; c > b; b++) _.find(a, e[b], d);
                    return d = this.pushStack(c > 1 ? _.unique(d) : d), d.selector = this.selector ? this.selector + " " + a : a, d
                },
                filter: function(a) {
                    return this.pushStack(d(this, a || [], !1))
                },
                not: function(a) {
                    return this.pushStack(d(this, a || [], !0))
                },
                is: function(a) {
                    return !!d(this, "string" == typeof a && fb.test(a) ? _(a) : a || [], !1).length
                }
            });
            var ib, jb = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
                kb = _.fn.init = function(a, b) {
                    var c, d;
                    if (!a) return this;
                    if ("string" == typeof a) {
                        if (c = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : jb.exec(a), !c || !c[1] && b) return !b || b.jquery ? (b || ib).find(a) : this.constructor(b).find(a);
                        if (c[1]) {
                            if (b = b instanceof _ ? b[0] : b, _.merge(this, _.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : Z, !0)), gb.test(c[1]) && _.isPlainObject(b))
                                for (c in b) _.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c]);
                            return this
                        }
                        return d = Z.getElementById(c[2]), d && d.parentNode && (this.length = 1, this[0] = d), this.context = Z, this.selector = a, this
                    }
                    return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : _.isFunction(a) ? "undefined" != typeof ib.ready ? ib.ready(a) : a(_) : (void 0 !== a.selector && (this.selector = a.selector, this.context = a.context), _.makeArray(a, this))
                };
            kb.prototype = _.fn, ib = _(Z);
            var lb = /^(?:parents|prev(?:Until|All))/,
                mb = {
                    children: !0,
                    contents: !0,
                    next: !0,
                    prev: !0
                };
            _.extend({
                dir: function(a, b, c) {
                    for (var d = [], e = void 0 !== c;
                        (a = a[b]) && 9 !== a.nodeType;)
                        if (1 === a.nodeType) {
                            if (e && _(a).is(c)) break;
                            d.push(a)
                        }
                    return d
                },
                sibling: function(a, b) {
                    for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
                    return c
                }
            }), _.fn.extend({
                has: function(a) {
                    var b = _(a, this),
                        c = b.length;
                    return this.filter(function() {
                        for (var a = 0; c > a; a++)
                            if (_.contains(this, b[a])) return !0
                    })
                },
                closest: function(a, b) {
                    for (var c, d = 0, e = this.length, f = [], g = fb.test(a) || "string" != typeof a ? _(a, b || this.context) : 0; e > d; d++)
                        for (c = this[d]; c && c !== b; c = c.parentNode)
                            if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && _.find.matchesSelector(c, a))) {
                                f.push(c);
                                break
                            }
                    return this.pushStack(f.length > 1 ? _.unique(f) : f)
                },
                index: function(a) {
                    return a ? "string" == typeof a ? U.call(_(a), this[0]) : U.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
                },
                add: function(a, b) {
                    return this.pushStack(_.unique(_.merge(this.get(), _(a, b))))
                },
                addBack: function(a) {
                    return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
                }
            }), _.each({
                parent: function(a) {
                    var b = a.parentNode;
                    return b && 11 !== b.nodeType ? b : null
                },
                parents: function(a) {
                    return _.dir(a, "parentNode")
                },
                parentsUntil: function(a, b, c) {
                    return _.dir(a, "parentNode", c)
                },
                next: function(a) {
                    return e(a, "nextSibling")
                },
                prev: function(a) {
                    return e(a, "previousSibling")
                },
                nextAll: function(a) {
                    return _.dir(a, "nextSibling")
                },
                prevAll: function(a) {
                    return _.dir(a, "previousSibling")
                },
                nextUntil: function(a, b, c) {
                    return _.dir(a, "nextSibling", c)
                },
                prevUntil: function(a, b, c) {
                    return _.dir(a, "previousSibling", c)
                },
                siblings: function(a) {
                    return _.sibling((a.parentNode || {}).firstChild, a)
                },
                children: function(a) {
                    return _.sibling(a.firstChild)
                },
                contents: function(a) {
                    return a.contentDocument || _.merge([], a.childNodes)
                }
            }, function(a, b) {
                _.fn[a] = function(c, d) {
                    var e = _.map(this, b, c);
                    return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = _.filter(d, e)), this.length > 1 && (mb[a] || _.unique(e), lb.test(a) && e.reverse()), this.pushStack(e)
                }
            });
            var nb = /\S+/g,
                ob = {};
            _.Callbacks = function(a) {
                a = "string" == typeof a ? ob[a] || f(a) : _.extend({}, a);
                var b, c, d, e, g, h, i = [],
                    j = !a.once && [],
                    k = function(f) {
                        for (b = a.memory && f, c = !0, h = e || 0, e = 0, g = i.length, d = !0; i && g > h; h++)
                            if (i[h].apply(f[0], f[1]) === !1 && a.stopOnFalse) {
                                b = !1;
                                break
                            }
                        d = !1, i && (j ? j.length && k(j.shift()) : b ? i = [] : l.disable())
                    },
                    l = {
                        add: function() {
                            if (i) {
                                var c = i.length;
                                ! function f(b) {
                                    _.each(b, function(b, c) {
                                        var d = _.type(c);
                                        "function" === d ? a.unique && l.has(c) || i.push(c) : c && c.length && "string" !== d && f(c)
                                    })
                                }(arguments), d ? g = i.length : b && (e = c, k(b))
                            }
                            return this
                        },
                        remove: function() {
                            return i && _.each(arguments, function(a, b) {
                                for (var c;
                                    (c = _.inArray(b, i, c)) > -1;) i.splice(c, 1), d && (g >= c && g--, h >= c && h--)
                            }), this
                        },
                        has: function(a) {
                            return a ? _.inArray(a, i) > -1 : !(!i || !i.length)
                        },
                        empty: function() {
                            return i = [], g = 0, this
                        },
                        disable: function() {
                            return i = j = b = void 0, this
                        },
                        disabled: function() {
                            return !i
                        },
                        lock: function() {
                            return j = void 0, b || l.disable(), this
                        },
                        locked: function() {
                            return !j
                        },
                        fireWith: function(a, b) {
                            return !i || c && !j || (b = b || [], b = [a, b.slice ? b.slice() : b], d ? j.push(b) : k(b)), this
                        },
                        fire: function() {
                            return l.fireWith(this, arguments), this
                        },
                        fired: function() {
                            return !!c
                        }
                    };
                return l
            }, _.extend({
                Deferred: function(a) {
                    var b = [
                            ["resolve", "done", _.Callbacks("once memory"), "resolved"],
                            ["reject", "fail", _.Callbacks("once memory"), "rejected"],
                            ["notify", "progress", _.Callbacks("memory")]
                        ],
                        c = "pending",
                        d = {
                            state: function() {
                                return c
                            },
                            always: function() {
                                return e.done(arguments).fail(arguments), this
                            },
                            then: function() {
                                var a = arguments;
                                return _.Deferred(function(c) {
                                    _.each(b, function(b, f) {
                                        var g = _.isFunction(a[b]) && a[b];
                                        e[f[1]](function() {
                                            var a = g && g.apply(this, arguments);
                                            a && _.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [a] : arguments)
                                        })
                                    }), a = null
                                }).promise()
                            },
                            promise: function(a) {
                                return null != a ? _.extend(a, d) : d
                            }
                        },
                        e = {};
                    return d.pipe = d.then, _.each(b, function(a, f) {
                        var g = f[2],
                            h = f[3];
                        d[f[1]] = g.add, h && g.add(function() {
                            c = h
                        }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function() {
                            return e[f[0] + "With"](this === e ? d : this, arguments), this
                        }, e[f[0] + "With"] = g.fireWith
                    }), d.promise(e), a && a.call(e, e), e
                },
                when: function(a) {
                    var b, c, d, e = 0,
                        f = R.call(arguments),
                        g = f.length,
                        h = 1 !== g || a && _.isFunction(a.promise) ? g : 0,
                        i = 1 === h ? a : _.Deferred(),
                        j = function(a, c, d) {
                            return function(e) {
                                c[a] = this, d[a] = arguments.length > 1 ? R.call(arguments) : e, d === b ? i.notifyWith(c, d) : --h || i.resolveWith(c, d)
                            }
                        };
                    if (g > 1)
                        for (b = new Array(g), c = new Array(g), d = new Array(g); g > e; e++) f[e] && _.isFunction(f[e].promise) ? f[e].promise().done(j(e, d, f)).fail(i.reject).progress(j(e, c, b)) : --h;
                    return h || i.resolveWith(d, f), i.promise()
                }
            });
            var pb;
            _.fn.ready = function(a) {
                return _.ready.promise().done(a), this
            }, _.extend({
                isReady: !1,
                readyWait: 1,
                holdReady: function(a) {
                    a ? _.readyWait++ : _.ready(!0)
                },
                ready: function(a) {
                    (a === !0 ? --_.readyWait : _.isReady) || (_.isReady = !0, a !== !0 && --_.readyWait > 0 || (pb.resolveWith(Z, [_]), _.fn.triggerHandler && (_(Z).triggerHandler("ready"), _(Z).off("ready"))))
                }
            }), _.ready.promise = function(b) {
                return pb || (pb = _.Deferred(), "complete" === Z.readyState ? setTimeout(_.ready) : (Z.addEventListener("DOMContentLoaded", g, !1), a.addEventListener("load", g, !1))), pb.promise(b)
            }, _.ready.promise();
            var qb = _.access = function(a, b, c, d, e, f, g) {
                var h = 0,
                    i = a.length,
                    j = null == c;
                if ("object" === _.type(c)) {
                    e = !0;
                    for (h in c) _.access(a, b, h, c[h], !0, f, g)
                } else if (void 0 !== d && (e = !0, _.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function(a, b, c) {
                        return j.call(_(a), c)
                    })), b))
                    for (; i > h; h++) b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
                return e ? a : j ? b.call(a) : i ? b(a[0], c) : f
            };
            _.acceptData = function(a) {
                return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType
            }, h.uid = 1, h.accepts = _.acceptData, h.prototype = {
                key: function(a) {
                    if (!h.accepts(a)) return 0;
                    var b = {},
                        c = a[this.expando];
                    if (!c) {
                        c = h.uid++;
                        try {
                            b[this.expando] = {
                                value: c
                            }, Object.defineProperties(a, b)
                        } catch (d) {
                            b[this.expando] = c, _.extend(a, b)
                        }
                    }
                    return this.cache[c] || (this.cache[c] = {}), c
                },
                set: function(a, b, c) {
                    var d, e = this.key(a),
                        f = this.cache[e];
                    if ("string" == typeof b) f[b] = c;
                    else if (_.isEmptyObject(f)) _.extend(this.cache[e], b);
                    else
                        for (d in b) f[d] = b[d];
                    return f
                },
                get: function(a, b) {
                    var c = this.cache[this.key(a)];
                    return void 0 === b ? c : c[b]
                },
                access: function(a, b, c) {
                    var d;
                    return void 0 === b || b && "string" == typeof b && void 0 === c ? (d = this.get(a, b), void 0 !== d ? d : this.get(a, _.camelCase(b))) : (this.set(a, b, c), void 0 !== c ? c : b)
                },
                remove: function(a, b) {
                    var c, d, e, f = this.key(a),
                        g = this.cache[f];
                    if (void 0 === b) this.cache[f] = {};
                    else {
                        _.isArray(b) ? d = b.concat(b.map(_.camelCase)) : (e = _.camelCase(b), b in g ? d = [b, e] : (d = e, d = d in g ? [d] : d.match(nb) || [])), c = d.length;
                        for (; c--;) delete g[d[c]]
                    }
                },
                hasData: function(a) {
                    return !_.isEmptyObject(this.cache[a[this.expando]] || {})
                },
                discard: function(a) {
                    a[this.expando] && delete this.cache[a[this.expando]]
                }
            };
            var rb = new h,
                sb = new h,
                tb = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                ub = /([A-Z])/g;
            _.extend({
                hasData: function(a) {
                    return sb.hasData(a) || rb.hasData(a)
                },
                data: function(a, b, c) {
                    return sb.access(a, b, c)
                },
                removeData: function(a, b) {
                    sb.remove(a, b)
                },
                _data: function(a, b, c) {
                    return rb.access(a, b, c)
                },
                _removeData: function(a, b) {
                    rb.remove(a, b)
                }
            }), _.fn.extend({
                data: function(a, b) {
                    var c, d, e, f = this[0],
                        g = f && f.attributes;
                    if (void 0 === a) {
                        if (this.length && (e = sb.get(f), 1 === f.nodeType && !rb.get(f, "hasDataAttrs"))) {
                            for (c = g.length; c--;) g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = _.camelCase(d.slice(5)), i(f, d, e[d])));
                            rb.set(f, "hasDataAttrs", !0)
                        }
                        return e
                    }
                    return "object" == typeof a ? this.each(function() {
                        sb.set(this, a)
                    }) : qb(this, function(b) {
                        var c, d = _.camelCase(a);
                        if (f && void 0 === b) {
                            if (c = sb.get(f, a), void 0 !== c) return c;
                            if (c = sb.get(f, d), void 0 !== c) return c;
                            if (c = i(f, d, void 0), void 0 !== c) return c
                        } else this.each(function() {
                            var c = sb.get(this, d);
                            sb.set(this, d, b), -1 !== a.indexOf("-") && void 0 !== c && sb.set(this, a, b)
                        })
                    }, null, b, arguments.length > 1, null, !0)
                },
                removeData: function(a) {
                    return this.each(function() {
                        sb.remove(this, a)
                    })
                }
            }), _.extend({
                queue: function(a, b, c) {
                    var d;
                    return a ? (b = (b || "fx") + "queue", d = rb.get(a, b), c && (!d || _.isArray(c) ? d = rb.access(a, b, _.makeArray(c)) : d.push(c)), d || []) : void 0
                },
                dequeue: function(a, b) {
                    b = b || "fx";
                    var c = _.queue(a, b),
                        d = c.length,
                        e = c.shift(),
                        f = _._queueHooks(a, b),
                        g = function() {
                            _.dequeue(a, b)
                        };
                    "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire()
                },
                _queueHooks: function(a, b) {
                    var c = b + "queueHooks";
                    return rb.get(a, c) || rb.access(a, c, {
                        empty: _.Callbacks("once memory").add(function() {
                            rb.remove(a, [b + "queue", c])
                        })
                    })
                }
            }), _.fn.extend({
                queue: function(a, b) {
                    var c = 2;
                    return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? _.queue(this[0], a) : void 0 === b ? this : this.each(function() {
                        var c = _.queue(this, a, b);
                        _._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && _.dequeue(this, a)
                    })
                },
                dequeue: function(a) {
                    return this.each(function() {
                        _.dequeue(this, a)
                    })
                },
                clearQueue: function(a) {
                    return this.queue(a || "fx", [])
                },
                promise: function(a, b) {
                    var c, d = 1,
                        e = _.Deferred(),
                        f = this,
                        g = this.length,
                        h = function() {
                            --d || e.resolveWith(f, [f])
                        };
                    for ("string" != typeof a && (b = a, a = void 0), a = a || "fx"; g--;) c = rb.get(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));
                    return h(), e.promise(b)
                }
            });
            var vb = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                wb = ["Top", "Right", "Bottom", "Left"],
                xb = function(a, b) {
                    return a = b || a, "none" === _.css(a, "display") || !_.contains(a.ownerDocument, a)
                },
                yb = /^(?:checkbox|radio)$/i;
            ! function() {
                var a = Z.createDocumentFragment(),
                    b = a.appendChild(Z.createElement("div")),
                    c = Z.createElement("input");
                c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), b.appendChild(c), Y.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = "<textarea>x</textarea>", Y.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue
            }();
            var zb = "undefined";
            Y.focusinBubbles = "onfocusin" in a;
            var Ab = /^key/,
                Bb = /^(?:mouse|pointer|contextmenu)|click/,
                Cb = /^(?:focusinfocus|focusoutblur)$/,
                Db = /^([^.]*)(?:\.(.+)|)$/;
            _.event = {
                global: {},
                add: function(a, b, c, d, e) {
                    var f, g, h, i, j, k, l, m, n, o, p, q = rb.get(a);
                    if (q)
                        for (c.handler && (f = c, c = f.handler, e = f.selector), c.guid || (c.guid = _.guid++), (i = q.events) || (i = q.events = {}), (g = q.handle) || (g = q.handle = function(b) {
                                return typeof _ !== zb && _.event.triggered !== b.type ? _.event.dispatch.apply(a, arguments) : void 0
                            }), b = (b || "").match(nb) || [""], j = b.length; j--;) h = Db.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n && (l = _.event.special[n] || {}, n = (e ? l.delegateType : l.bindType) || n, l = _.event.special[n] || {}, k = _.extend({
                            type: n,
                            origType: p,
                            data: d,
                            handler: c,
                            guid: c.guid,
                            selector: e,
                            needsContext: e && _.expr.match.needsContext.test(e),
                            namespace: o.join(".")
                        }, f), (m = i[n]) || (m = i[n] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, o, g) !== !1 || a.addEventListener && a.addEventListener(n, g, !1)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), _.event.global[n] = !0)
                },
                remove: function(a, b, c, d, e) {
                    var f, g, h, i, j, k, l, m, n, o, p, q = rb.hasData(a) && rb.get(a);
                    if (q && (i = q.events)) {
                        for (b = (b || "").match(nb) || [""], j = b.length; j--;)
                            if (h = Db.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n) {
                                for (l = _.event.special[n] || {}, n = (d ? l.delegateType : l.bindType) || n, m = i[n] || [], h = h[2] && new RegExp("(^|\\.)" + o.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length; f--;) k = m[f], !e && p !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
                                g && !m.length && (l.teardown && l.teardown.call(a, o, q.handle) !== !1 || _.removeEvent(a, n, q.handle), delete i[n])
                            } else
                                for (n in i) _.event.remove(a, n + b[j], c, d, !0);
                        _.isEmptyObject(i) && (delete q.handle, rb.remove(a, "events"))
                    }
                },
                trigger: function(b, c, d, e) {
                    var f, g, h, i, j, k, l, m = [d || Z],
                        n = X.call(b, "type") ? b.type : b,
                        o = X.call(b, "namespace") ? b.namespace.split(".") : [];
                    if (g = h = d = d || Z, 3 !== d.nodeType && 8 !== d.nodeType && !Cb.test(n + _.event.triggered) && (n.indexOf(".") >= 0 && (o = n.split("."), n = o.shift(), o.sort()), j = n.indexOf(":") < 0 && "on" + n, b = b[_.expando] ? b : new _.Event(n, "object" == typeof b && b), b.isTrigger = e ? 2 : 3, b.namespace = o.join("."), b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + o.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = d), c = null == c ? [b] : _.makeArray(c, [b]), l = _.event.special[n] || {}, e || !l.trigger || l.trigger.apply(d, c) !== !1)) {
                        if (!e && !l.noBubble && !_.isWindow(d)) {
                            for (i = l.delegateType || n, Cb.test(i + n) || (g = g.parentNode); g; g = g.parentNode) m.push(g), h = g;
                            h === (d.ownerDocument || Z) && m.push(h.defaultView || h.parentWindow || a)
                        }
                        for (f = 0;
                            (g = m[f++]) && !b.isPropagationStopped();) b.type = f > 1 ? i : l.bindType || n, k = (rb.get(g, "events") || {})[b.type] && rb.get(g, "handle"), k && k.apply(g, c), k = j && g[j], k && k.apply && _.acceptData(g) && (b.result = k.apply(g, c), b.result === !1 && b.preventDefault());
                        return b.type = n, e || b.isDefaultPrevented() || l._default && l._default.apply(m.pop(), c) !== !1 || !_.acceptData(d) || j && _.isFunction(d[n]) && !_.isWindow(d) && (h = d[j], h && (d[j] = null), _.event.triggered = n, d[n](), _.event.triggered = void 0, h && (d[j] = h)), b.result
                    }
                },
                dispatch: function(a) {
                    a = _.event.fix(a);
                    var b, c, d, e, f, g = [],
                        h = R.call(arguments),
                        i = (rb.get(this, "events") || {})[a.type] || [],
                        j = _.event.special[a.type] || {};
                    if (h[0] = a, a.delegateTarget = this, !j.preDispatch || j.preDispatch.call(this, a) !== !1) {
                        for (g = _.event.handlers.call(this, a, i), b = 0;
                            (e = g[b++]) && !a.isPropagationStopped();)
                            for (a.currentTarget = e.elem, c = 0;
                                (f = e.handlers[c++]) && !a.isImmediatePropagationStopped();)(!a.namespace_re || a.namespace_re.test(f.namespace)) && (a.handleObj = f, a.data = f.data, d = ((_.event.special[f.origType] || {}).handle || f.handler).apply(e.elem, h), void 0 !== d && (a.result = d) === !1 && (a.preventDefault(), a.stopPropagation()));
                        return j.postDispatch && j.postDispatch.call(this, a), a.result
                    }
                },
                handlers: function(a, b) {
                    var c, d, e, f, g = [],
                        h = b.delegateCount,
                        i = a.target;
                    if (h && i.nodeType && (!a.button || "click" !== a.type))
                        for (; i !== this; i = i.parentNode || this)
                            if (i.disabled !== !0 || "click" !== a.type) {
                                for (d = [], c = 0; h > c; c++) f = b[c], e = f.selector + " ", void 0 === d[e] && (d[e] = f.needsContext ? _(e, this).index(i) >= 0 : _.find(e, this, null, [i]).length), d[e] && d.push(f);
                                d.length && g.push({
                                    elem: i,
                                    handlers: d
                                })
                            }
                    return h < b.length && g.push({
                        elem: this,
                        handlers: b.slice(h)
                    }), g
                },
                props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
                fixHooks: {},
                keyHooks: {
                    props: "char charCode key keyCode".split(" "),
                    filter: function(a, b) {
                        return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode), a
                    }
                },
                mouseHooks: {
                    props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
                    filter: function(a, b) {
                        var c, d, e, f = b.button;
                        return null == a.pageX && null != b.clientX && (c = a.target.ownerDocument || Z, d = c.documentElement, e = c.body, a.pageX = b.clientX + (d && d.scrollLeft || e && e.scrollLeft || 0) - (d && d.clientLeft || e && e.clientLeft || 0), a.pageY = b.clientY + (d && d.scrollTop || e && e.scrollTop || 0) - (d && d.clientTop || e && e.clientTop || 0)), a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0), a
                    }
                },
                fix: function(a) {
                    if (a[_.expando]) return a;
                    var b, c, d, e = a.type,
                        f = a,
                        g = this.fixHooks[e];
                    for (g || (this.fixHooks[e] = g = Bb.test(e) ? this.mouseHooks : Ab.test(e) ? this.keyHooks : {}), d = g.props ? this.props.concat(g.props) : this.props, a = new _.Event(f), b = d.length; b--;) c = d[b], a[c] = f[c];
                    return a.target || (a.target = Z), 3 === a.target.nodeType && (a.target = a.target.parentNode), g.filter ? g.filter(a, f) : a
                },
                special: {
                    load: {
                        noBubble: !0
                    },
                    focus: {
                        trigger: function() {
                            return this !== l() && this.focus ? (this.focus(), !1) : void 0
                        },
                        delegateType: "focusin"
                    },
                    blur: {
                        trigger: function() {
                            return this === l() && this.blur ? (this.blur(), !1) : void 0
                        },
                        delegateType: "focusout"
                    },
                    click: {
                        trigger: function() {
                            return "checkbox" === this.type && this.click && _.nodeName(this, "input") ? (this.click(), !1) : void 0
                        },
                        _default: function(a) {
                            return _.nodeName(a.target, "a")
                        }
                    },
                    beforeunload: {
                        postDispatch: function(a) {
                            void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result)
                        }
                    }
                },
                simulate: function(a, b, c, d) {
                    var e = _.extend(new _.Event, c, {
                        type: a,
                        isSimulated: !0,
                        originalEvent: {}
                    });
                    d ? _.event.trigger(e, null, b) : _.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault()
                }
            }, _.removeEvent = function(a, b, c) {
                a.removeEventListener && a.removeEventListener(b, c, !1)
            }, _.Event = function(a, b) {
                return this instanceof _.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? j : k) : this.type = a, b && _.extend(this, b), this.timeStamp = a && a.timeStamp || _.now(), this[_.expando] = !0, void 0) : new _.Event(a, b)
            }, _.Event.prototype = {
                isDefaultPrevented: k,
                isPropagationStopped: k,
                isImmediatePropagationStopped: k,
                preventDefault: function() {
                    var a = this.originalEvent;
                    this.isDefaultPrevented = j, a && a.preventDefault && a.preventDefault()
                },
                stopPropagation: function() {
                    var a = this.originalEvent;
                    this.isPropagationStopped = j, a && a.stopPropagation && a.stopPropagation()
                },
                stopImmediatePropagation: function() {
                    var a = this.originalEvent;
                    this.isImmediatePropagationStopped = j, a && a.stopImmediatePropagation && a.stopImmediatePropagation(), this.stopPropagation()
                }
            }, _.each({
                mouseenter: "mouseover",
                mouseleave: "mouseout",
                pointerenter: "pointerover",
                pointerleave: "pointerout"
            }, function(a, b) {
                _.event.special[a] = {
                    delegateType: b,
                    bindType: b,
                    handle: function(a) {
                        var c, d = this,
                            e = a.relatedTarget,
                            f = a.handleObj;
                        return (!e || e !== d && !_.contains(d, e)) && (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c
                    }
                }
            }), Y.focusinBubbles || _.each({
                focus: "focusin",
                blur: "focusout"
            }, function(a, b) {
                var c = function(a) {
                    _.event.simulate(b, a.target, _.event.fix(a), !0)
                };
                _.event.special[b] = {
                    setup: function() {
                        var d = this.ownerDocument || this,
                            e = rb.access(d, b);
                        e || d.addEventListener(a, c, !0), rb.access(d, b, (e || 0) + 1)
                    },
                    teardown: function() {
                        var d = this.ownerDocument || this,
                            e = rb.access(d, b) - 1;
                        e ? rb.access(d, b, e) : (d.removeEventListener(a, c, !0), rb.remove(d, b))
                    }
                }
            }), _.fn.extend({
                on: function(a, b, c, d, e) {
                    var f, g;
                    if ("object" == typeof a) {
                        "string" != typeof b && (c = c || b, b = void 0);
                        for (g in a) this.on(g, b, c, a[g], e);
                        return this
                    }
                    if (null == c && null == d ? (d = b, c = b = void 0) : null == d && ("string" == typeof b ? (d = c, c = void 0) : (d = c, c = b, b = void 0)), d === !1) d = k;
                    else if (!d) return this;
                    return 1 === e && (f = d, d = function(a) {
                        return _().off(a), f.apply(this, arguments)
                    }, d.guid = f.guid || (f.guid = _.guid++)), this.each(function() {
                        _.event.add(this, a, d, c, b)
                    })
                },
                one: function(a, b, c, d) {
                    return this.on(a, b, c, d, 1)
                },
                off: function(a, b, c) {
                    var d, e;
                    if (a && a.preventDefault && a.handleObj) return d = a.handleObj, _(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;
                    if ("object" == typeof a) {
                        for (e in a) this.off(e, b, a[e]);
                        return this
                    }
                    return (b === !1 || "function" == typeof b) && (c = b, b = void 0), c === !1 && (c = k), this.each(function() {
                        _.event.remove(this, a, c, b)
                    })
                },
                trigger: function(a, b) {
                    return this.each(function() {
                        _.event.trigger(a, b, this)
                    })
                },
                triggerHandler: function(a, b) {
                    var c = this[0];
                    return c ? _.event.trigger(a, b, c, !0) : void 0
                }
            });
            var Eb = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
                Fb = /<([\w:]+)/,
                Gb = /<|&#?\w+;/,
                Hb = /<(?:script|style|link)/i,
                Ib = /checked\s*(?:[^=]|=\s*.checked.)/i,
                Jb = /^$|\/(?:java|ecma)script/i,
                Kb = /^true\/(.*)/,
                Lb = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
                Mb = {
                    option: [1, "<select multiple='multiple'>", "</select>"],
                    thead: [1, "<table>", "</table>"],
                    col: [2, "<table><colgroup>", "</colgroup></table>"],
                    tr: [2, "<table><tbody>", "</tbody></table>"],
                    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                    _default: [0, "", ""]
                };
            Mb.optgroup = Mb.option, Mb.tbody = Mb.tfoot = Mb.colgroup = Mb.caption = Mb.thead, Mb.th = Mb.td, _.extend({
                clone: function(a, b, c) {
                    var d, e, f, g, h = a.cloneNode(!0),
                        i = _.contains(a.ownerDocument, a);
                    if (!(Y.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || _.isXMLDoc(a)))
                        for (g = r(h), f = r(a), d = 0, e = f.length; e > d; d++) s(f[d], g[d]);
                    if (b)
                        if (c)
                            for (f = f || r(a), g = g || r(h), d = 0, e = f.length; e > d; d++) q(f[d], g[d]);
                        else q(a, h);
                    return g = r(h, "script"), g.length > 0 && p(g, !i && r(a, "script")), h
                },
                buildFragment: function(a, b, c, d) {
                    for (var e, f, g, h, i, j, k = b.createDocumentFragment(), l = [], m = 0, n = a.length; n > m; m++)
                        if (e = a[m], e || 0 === e)
                            if ("object" === _.type(e)) _.merge(l, e.nodeType ? [e] : e);
                            else if (Gb.test(e)) {
                        for (f = f || k.appendChild(b.createElement("div")), g = (Fb.exec(e) || ["", ""])[1].toLowerCase(), h = Mb[g] || Mb._default, f.innerHTML = h[1] + e.replace(Eb, "<$1></$2>") + h[2], j = h[0]; j--;) f = f.lastChild;
                        _.merge(l, f.childNodes), f = k.firstChild, f.textContent = ""
                    } else l.push(b.createTextNode(e));
                    for (k.textContent = "", m = 0; e = l[m++];)
                        if ((!d || -1 === _.inArray(e, d)) && (i = _.contains(e.ownerDocument, e), f = r(k.appendChild(e), "script"), i && p(f), c))
                            for (j = 0; e = f[j++];) Jb.test(e.type || "") && c.push(e);
                    return k
                },
                cleanData: function(a) {
                    for (var b, c, d, e, f = _.event.special, g = 0; void 0 !== (c = a[g]); g++) {
                        if (_.acceptData(c) && (e = c[rb.expando], e && (b = rb.cache[e]))) {
                            if (b.events)
                                for (d in b.events) f[d] ? _.event.remove(c, d) : _.removeEvent(c, d, b.handle);
                            rb.cache[e] && delete rb.cache[e]
                        }
                        delete sb.cache[c[sb.expando]]
                    }
                }
            }), _.fn.extend({
                text: function(a) {
                    return qb(this, function(a) {
                        return void 0 === a ? _.text(this) : this.empty().each(function() {
                            (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && (this.textContent = a)
                        })
                    }, null, a, arguments.length)
                },
                append: function() {
                    return this.domManip(arguments, function(a) {
                        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                            var b = m(this, a);
                            b.appendChild(a)
                        }
                    })
                },
                prepend: function() {
                    return this.domManip(arguments, function(a) {
                        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                            var b = m(this, a);
                            b.insertBefore(a, b.firstChild)
                        }
                    })
                },
                before: function() {
                    return this.domManip(arguments, function(a) {
                        this.parentNode && this.parentNode.insertBefore(a, this)
                    })
                },
                after: function() {
                    return this.domManip(arguments, function(a) {
                        this.parentNode && this.parentNode.insertBefore(a, this.nextSibling)
                    })
                },
                remove: function(a, b) {
                    for (var c, d = a ? _.filter(a, this) : this, e = 0; null != (c = d[e]); e++) b || 1 !== c.nodeType || _.cleanData(r(c)), c.parentNode && (b && _.contains(c.ownerDocument, c) && p(r(c, "script")), c.parentNode.removeChild(c));
                    return this
                },
                empty: function() {
                    for (var a, b = 0; null != (a = this[b]); b++) 1 === a.nodeType && (_.cleanData(r(a, !1)), a.textContent = "");
                    return this
                },
                clone: function(a, b) {
                    return a = null == a ? !1 : a, b = null == b ? a : b, this.map(function() {
                        return _.clone(this, a, b)
                    })
                },
                html: function(a) {
                    return qb(this, function(a) {
                        var b = this[0] || {},
                            c = 0,
                            d = this.length;
                        if (void 0 === a && 1 === b.nodeType) return b.innerHTML;
                        if ("string" == typeof a && !Hb.test(a) && !Mb[(Fb.exec(a) || ["", ""])[1].toLowerCase()]) {
                            a = a.replace(Eb, "<$1></$2>");
                            try {
                                for (; d > c; c++) b = this[c] || {}, 1 === b.nodeType && (_.cleanData(r(b, !1)), b.innerHTML = a);
                                b = 0
                            } catch (e) {}
                        }
                        b && this.empty().append(a)
                    }, null, a, arguments.length)
                },
                replaceWith: function() {
                    var a = arguments[0];
                    return this.domManip(arguments, function(b) {
                        a = this.parentNode, _.cleanData(r(this)), a && a.replaceChild(b, this)
                    }), a && (a.length || a.nodeType) ? this : this.remove()
                },
                detach: function(a) {
                    return this.remove(a, !0)
                },
                domManip: function(a, b) {
                    a = S.apply([], a);
                    var c, d, e, f, g, h, i = 0,
                        j = this.length,
                        k = this,
                        l = j - 1,
                        m = a[0],
                        p = _.isFunction(m);
                    if (p || j > 1 && "string" == typeof m && !Y.checkClone && Ib.test(m)) return this.each(function(c) {
                        var d = k.eq(c);
                        p && (a[0] = m.call(this, c, d.html())), d.domManip(a, b)
                    });
                    if (j && (c = _.buildFragment(a, this[0].ownerDocument, !1, this), d = c.firstChild, 1 === c.childNodes.length && (c = d), d)) {
                        for (e = _.map(r(c, "script"), n), f = e.length; j > i; i++) g = c, i !== l && (g = _.clone(g, !0, !0), f && _.merge(e, r(g, "script"))), b.call(this[i], g, i);
                        if (f)
                            for (h = e[e.length - 1].ownerDocument, _.map(e, o), i = 0; f > i; i++) g = e[i], Jb.test(g.type || "") && !rb.access(g, "globalEval") && _.contains(h, g) && (g.src ? _._evalUrl && _._evalUrl(g.src) : _.globalEval(g.textContent.replace(Lb, "")))
                    }
                    return this
                }
            }), _.each({
                appendTo: "append",
                prependTo: "prepend",
                insertBefore: "before",
                insertAfter: "after",
                replaceAll: "replaceWith"
            }, function(a, b) {
                _.fn[a] = function(a) {
                    for (var c, d = [], e = _(a), f = e.length - 1, g = 0; f >= g; g++) c = g === f ? this : this.clone(!0), _(e[g])[b](c), T.apply(d, c.get());
                    return this.pushStack(d)
                }
            });
            var Nb, Ob = {},
                Pb = /^margin/,
                Qb = new RegExp("^(" + vb + ")(?!px)[a-z%]+$", "i"),
                Rb = function(b) {
                    return b.ownerDocument.defaultView.opener ? b.ownerDocument.defaultView.getComputedStyle(b, null) : a.getComputedStyle(b, null)
                };
            ! function() {
                function b() {
                    g.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", g.innerHTML = "", e.appendChild(f);
                    var b = a.getComputedStyle(g, null);
                    c = "1%" !== b.top, d = "4px" === b.width, e.removeChild(f)
                }
                var c, d, e = Z.documentElement,
                    f = Z.createElement("div"),
                    g = Z.createElement("div");
                g.style && (g.style.backgroundClip = "content-box", g.cloneNode(!0).style.backgroundClip = "", Y.clearCloneStyle = "content-box" === g.style.backgroundClip, f.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute", f.appendChild(g), a.getComputedStyle && _.extend(Y, {
                    pixelPosition: function() {
                        return b(), c
                    },
                    boxSizingReliable: function() {
                        return null == d && b(), d
                    },
                    reliableMarginRight: function() {
                        var b, c = g.appendChild(Z.createElement("div"));
                        return c.style.cssText = g.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", c.style.marginRight = c.style.width = "0", g.style.width = "1px", e.appendChild(f), b = !parseFloat(a.getComputedStyle(c, null).marginRight), e.removeChild(f), g.removeChild(c), b
                    }
                }))
            }(), _.swap = function(a, b, c, d) {
                var e, f, g = {};
                for (f in b) g[f] = a.style[f], a.style[f] = b[f];
                e = c.apply(a, d || []);
                for (f in b) a.style[f] = g[f];
                return e
            };
            var Sb = /^(none|table(?!-c[ea]).+)/,
                Tb = new RegExp("^(" + vb + ")(.*)$", "i"),
                Ub = new RegExp("^([+-])=(" + vb + ")", "i"),
                Vb = {
                    position: "absolute",
                    visibility: "hidden",
                    display: "block"
                },
                Wb = {
                    letterSpacing: "0",
                    fontWeight: "400"
                },
                Xb = ["Webkit", "O", "Moz", "ms"];
            _.extend({
                cssHooks: {
                    opacity: {
                        get: function(a, b) {
                            if (b) {
                                var c = v(a, "opacity");
                                return "" === c ? "1" : c
                            }
                        }
                    }
                },
                cssNumber: {
                    columnCount: !0,
                    fillOpacity: !0,
                    flexGrow: !0,
                    flexShrink: !0,
                    fontWeight: !0,
                    lineHeight: !0,
                    opacity: !0,
                    order: !0,
                    orphans: !0,
                    widows: !0,
                    zIndex: !0,
                    zoom: !0
                },
                cssProps: {
                    "float": "cssFloat"
                },
                style: function(a, b, c, d) {
                    if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                        var e, f, g, h = _.camelCase(b),
                            i = a.style;
                        return b = _.cssProps[h] || (_.cssProps[h] = x(i, h)), g = _.cssHooks[b] || _.cssHooks[h], void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b] : (f = typeof c, "string" === f && (e = Ub.exec(c)) && (c = (e[1] + 1) * e[2] + parseFloat(_.css(a, b)), f = "number"), null != c && c === c && ("number" !== f || _.cssNumber[h] || (c += "px"), Y.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i[b] = c)), void 0)
                    }
                },
                css: function(a, b, c, d) {
                    var e, f, g, h = _.camelCase(b);
                    return b = _.cssProps[h] || (_.cssProps[h] = x(a.style, h)), g = _.cssHooks[b] || _.cssHooks[h], g && "get" in g && (e = g.get(a, !0, c)), void 0 === e && (e = v(a, b, d)), "normal" === e && b in Wb && (e = Wb[b]), "" === c || c ? (f = parseFloat(e), c === !0 || _.isNumeric(f) ? f || 0 : e) : e
                }
            }), _.each(["height", "width"], function(a, b) {
                _.cssHooks[b] = {
                    get: function(a, c, d) {
                        return c ? Sb.test(_.css(a, "display")) && 0 === a.offsetWidth ? _.swap(a, Vb, function() {
                            return A(a, b, d)
                        }) : A(a, b, d) : void 0
                    },
                    set: function(a, c, d) {
                        var e = d && Rb(a);
                        return y(a, c, d ? z(a, b, d, "border-box" === _.css(a, "boxSizing", !1, e), e) : 0)
                    }
                }
            }), _.cssHooks.marginRight = w(Y.reliableMarginRight, function(a, b) {
                return b ? _.swap(a, {
                    display: "inline-block"
                }, v, [a, "marginRight"]) : void 0
            }), _.each({
                margin: "",
                padding: "",
                border: "Width"
            }, function(a, b) {
                _.cssHooks[a + b] = {
                    expand: function(c) {
                        for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; 4 > d; d++) e[a + wb[d] + b] = f[d] || f[d - 2] || f[0];
                        return e
                    }
                }, Pb.test(a) || (_.cssHooks[a + b].set = y)
            }), _.fn.extend({
                css: function(a, b) {
                    return qb(this, function(a, b, c) {
                        var d, e, f = {},
                            g = 0;
                        if (_.isArray(b)) {
                            for (d = Rb(a), e = b.length; e > g; g++) f[b[g]] = _.css(a, b[g], !1, d);
                            return f
                        }
                        return void 0 !== c ? _.style(a, b, c) : _.css(a, b)
                    }, a, b, arguments.length > 1)
                },
                show: function() {
                    return B(this, !0)
                },
                hide: function() {
                    return B(this)
                },
                toggle: function(a) {
                    return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function() {
                        xb(this) ? _(this).show() : _(this).hide()
                    })
                }
            }), _.Tween = C, C.prototype = {
                constructor: C,
                init: function(a, b, c, d, e, f) {
                    this.elem = a, this.prop = c, this.easing = e || "swing", this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (_.cssNumber[c] ? "" : "px")
                },
                cur: function() {
                    var a = C.propHooks[this.prop];
                    return a && a.get ? a.get(this) : C.propHooks._default.get(this)
                },
                run: function(a) {
                    var b, c = C.propHooks[this.prop];
                    return this.pos = b = this.options.duration ? _.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : C.propHooks._default.set(this), this
                }
            }, C.prototype.init.prototype = C.prototype, C.propHooks = {
                _default: {
                    get: function(a) {
                        var b;
                        return null == a.elem[a.prop] || a.elem.style && null != a.elem.style[a.prop] ? (b = _.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0) : a.elem[a.prop]
                    },
                    set: function(a) {
                        _.fx.step[a.prop] ? _.fx.step[a.prop](a) : a.elem.style && (null != a.elem.style[_.cssProps[a.prop]] || _.cssHooks[a.prop]) ? _.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now
                    }
                }
            }, C.propHooks.scrollTop = C.propHooks.scrollLeft = {
                set: function(a) {
                    a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)
                }
            }, _.easing = {
                linear: function(a) {
                    return a
                },
                swing: function(a) {
                    return .5 - Math.cos(a * Math.PI) / 2
                }
            }, _.fx = C.prototype.init, _.fx.step = {};
            var Yb, Zb, $b = /^(?:toggle|show|hide)$/,
                _b = new RegExp("^(?:([+-])=|)(" + vb + ")([a-z%]*)$", "i"),
                ac = /queueHooks$/,
                bc = [G],
                cc = {
                    "*": [function(a, b) {
                        var c = this.createTween(a, b),
                            d = c.cur(),
                            e = _b.exec(b),
                            f = e && e[3] || (_.cssNumber[a] ? "" : "px"),
                            g = (_.cssNumber[a] || "px" !== f && +d) && _b.exec(_.css(c.elem, a)),
                            h = 1,
                            i = 20;
                        if (g && g[3] !== f) {
                            f = f || g[3], e = e || [], g = +d || 1;
                            do h = h || ".5", g /= h, _.style(c.elem, a, g + f); while (h !== (h = c.cur() / d) && 1 !== h && --i)
                        }
                        return e && (g = c.start = +g || +d || 0, c.unit = f, c.end = e[1] ? g + (e[1] + 1) * e[2] : +e[2]), c
                    }]
                };
            _.Animation = _.extend(I, {
                    tweener: function(a, b) {
                        _.isFunction(a) ? (b = a, a = ["*"]) : a = a.split(" ");
                        for (var c, d = 0, e = a.length; e > d; d++) c = a[d], cc[c] = cc[c] || [], cc[c].unshift(b)
                    },
                    prefilter: function(a, b) {
                        b ? bc.unshift(a) : bc.push(a)
                    }
                }), _.speed = function(a, b, c) {
                    var d = a && "object" == typeof a ? _.extend({}, a) : {
                        complete: c || !c && b || _.isFunction(a) && a,
                        duration: a,
                        easing: c && b || b && !_.isFunction(b) && b
                    };
                    return d.duration = _.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in _.fx.speeds ? _.fx.speeds[d.duration] : _.fx.speeds._default, (null == d.queue || d.queue === !0) && (d.queue = "fx"), d.old = d.complete, d.complete = function() {
                        _.isFunction(d.old) && d.old.call(this), d.queue && _.dequeue(this, d.queue)
                    }, d
                }, _.fn.extend({
                    fadeTo: function(a, b, c, d) {
                        return this.filter(xb).css("opacity", 0).show().end().animate({
                            opacity: b
                        }, a, c, d)
                    },
                    animate: function(a, b, c, d) {
                        var e = _.isEmptyObject(a),
                            f = _.speed(b, c, d),
                            g = function() {
                                var b = I(this, _.extend({}, a), f);
                                (e || rb.get(this, "finish")) && b.stop(!0)
                            };
                        return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g)
                    },
                    stop: function(a, b, c) {
                        var d = function(a) {
                            var b = a.stop;
                            delete a.stop, b(c)
                        };
                        return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function() {
                            var b = !0,
                                e = null != a && a + "queueHooks",
                                f = _.timers,
                                g = rb.get(this);
                            if (e) g[e] && g[e].stop && d(g[e]);
                            else
                                for (e in g) g[e] && g[e].stop && ac.test(e) && d(g[e]);
                            for (e = f.length; e--;) f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1));
                            (b || !c) && _.dequeue(this, a)
                        })
                    },
                    finish: function(a) {
                        return a !== !1 && (a = a || "fx"), this.each(function() {
                            var b, c = rb.get(this),
                                d = c[a + "queue"],
                                e = c[a + "queueHooks"],
                                f = _.timers,
                                g = d ? d.length : 0;
                            for (c.finish = !0, _.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;) f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1));
                            for (b = 0; g > b; b++) d[b] && d[b].finish && d[b].finish.call(this);
                            delete c.finish
                        })
                    }
                }), _.each(["toggle", "show", "hide"], function(a, b) {
                    var c = _.fn[b];
                    _.fn[b] = function(a, d, e) {
                        return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(E(b, !0), a, d, e)
                    }
                }), _.each({
                    slideDown: E("show"),
                    slideUp: E("hide"),
                    slideToggle: E("toggle"),
                    fadeIn: {
                        opacity: "show"
                    },
                    fadeOut: {
                        opacity: "hide"
                    },
                    fadeToggle: {
                        opacity: "toggle"
                    }
                }, function(a, b) {
                    _.fn[a] = function(a, c, d) {
                        return this.animate(b, a, c, d)
                    }
                }), _.timers = [], _.fx.tick = function() {
                    var a, b = 0,
                        c = _.timers;
                    for (Yb = _.now(); b < c.length; b++) a = c[b], a() || c[b] !== a || c.splice(b--, 1);
                    c.length || _.fx.stop(), Yb = void 0
                }, _.fx.timer = function(a) {
                    _.timers.push(a), a() ? _.fx.start() : _.timers.pop()
                }, _.fx.interval = 13, _.fx.start = function() {
                    Zb || (Zb = setInterval(_.fx.tick, _.fx.interval))
                }, _.fx.stop = function() {
                    clearInterval(Zb), Zb = null
                }, _.fx.speeds = {
                    slow: 600,
                    fast: 200,
                    _default: 400
                }, _.fn.delay = function(a, b) {
                    return a = _.fx ? _.fx.speeds[a] || a : a, b = b || "fx", this.queue(b, function(b, c) {
                        var d = setTimeout(b, a);
                        c.stop = function() {
                            clearTimeout(d)
                        }
                    })
                },
                function() {
                    var a = Z.createElement("input"),
                        b = Z.createElement("select"),
                        c = b.appendChild(Z.createElement("option"));
                    a.type = "checkbox", Y.checkOn = "" !== a.value, Y.optSelected = c.selected, b.disabled = !0, Y.optDisabled = !c.disabled, a = Z.createElement("input"), a.value = "t", a.type = "radio", Y.radioValue = "t" === a.value
                }();
            var dc, ec, fc = _.expr.attrHandle;
            _.fn.extend({
                attr: function(a, b) {
                    return qb(this, _.attr, a, b, arguments.length > 1)
                },
                removeAttr: function(a) {
                    return this.each(function() {
                        _.removeAttr(this, a)
                    })
                }
            }), _.extend({
                attr: function(a, b, c) {
                    var d, e, f = a.nodeType;
                    if (a && 3 !== f && 8 !== f && 2 !== f) return typeof a.getAttribute === zb ? _.prop(a, b, c) : (1 === f && _.isXMLDoc(a) || (b = b.toLowerCase(), d = _.attrHooks[b] || (_.expr.match.bool.test(b) ? ec : dc)), void 0 === c ? d && "get" in d && null !== (e = d.get(a, b)) ? e : (e = _.find.attr(a, b), null == e ? void 0 : e) : null !== c ? d && "set" in d && void 0 !== (e = d.set(a, c, b)) ? e : (a.setAttribute(b, c + ""), c) : (_.removeAttr(a, b), void 0))
                },
                removeAttr: function(a, b) {
                    var c, d, e = 0,
                        f = b && b.match(nb);
                    if (f && 1 === a.nodeType)
                        for (; c = f[e++];) d = _.propFix[c] || c, _.expr.match.bool.test(c) && (a[d] = !1), a.removeAttribute(c)
                },
                attrHooks: {
                    type: {
                        set: function(a, b) {
                            if (!Y.radioValue && "radio" === b && _.nodeName(a, "input")) {
                                var c = a.value;
                                return a.setAttribute("type", b), c && (a.value = c), b
                            }
                        }
                    }
                }
            }), ec = {
                set: function(a, b, c) {
                    return b === !1 ? _.removeAttr(a, c) : a.setAttribute(c, c), c
                }
            }, _.each(_.expr.match.bool.source.match(/\w+/g), function(a, b) {
                var c = fc[b] || _.find.attr;
                fc[b] = function(a, b, d) {
                    var e, f;
                    return d || (f = fc[b], fc[b] = e, e = null != c(a, b, d) ? b.toLowerCase() : null, fc[b] = f), e
                }
            });
            var gc = /^(?:input|select|textarea|button)$/i;
            _.fn.extend({
                prop: function(a, b) {
                    return qb(this, _.prop, a, b, arguments.length > 1)
                },
                removeProp: function(a) {
                    return this.each(function() {
                        delete this[_.propFix[a] || a]
                    })
                }
            }), _.extend({
                propFix: {
                    "for": "htmlFor",
                    "class": "className"
                },
                prop: function(a, b, c) {
                    var d, e, f, g = a.nodeType;
                    if (a && 3 !== g && 8 !== g && 2 !== g) return f = 1 !== g || !_.isXMLDoc(a), f && (b = _.propFix[b] || b, e = _.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b]
                },
                propHooks: {
                    tabIndex: {
                        get: function(a) {
                            return a.hasAttribute("tabindex") || gc.test(a.nodeName) || a.href ? a.tabIndex : -1
                        }
                    }
                }
            }), Y.optSelected || (_.propHooks.selected = {
                get: function(a) {
                    var b = a.parentNode;
                    return b && b.parentNode && b.parentNode.selectedIndex, null
                }
            }), _.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
                _.propFix[this.toLowerCase()] = this
            });
            var hc = /[\t\r\n\f]/g;
            _.fn.extend({
                addClass: function(a) {
                    var b, c, d, e, f, g, h = "string" == typeof a && a,
                        i = 0,
                        j = this.length;
                    if (_.isFunction(a)) return this.each(function(b) {
                        _(this).addClass(a.call(this, b, this.className))
                    });
                    if (h)
                        for (b = (a || "").match(nb) || []; j > i; i++)
                            if (c = this[i], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(hc, " ") : " ")) {
                                for (f = 0; e = b[f++];) d.indexOf(" " + e + " ") < 0 && (d += e + " ");
                                g = _.trim(d), c.className !== g && (c.className = g)
                            }
                    return this
                },
                removeClass: function(a) {
                    var b, c, d, e, f, g, h = 0 === arguments.length || "string" == typeof a && a,
                        i = 0,
                        j = this.length;
                    if (_.isFunction(a)) return this.each(function(b) {
                        _(this).removeClass(a.call(this, b, this.className))
                    });
                    if (h)
                        for (b = (a || "").match(nb) || []; j > i; i++)
                            if (c = this[i], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(hc, " ") : "")) {
                                for (f = 0; e = b[f++];)
                                    for (; d.indexOf(" " + e + " ") >= 0;) d = d.replace(" " + e + " ", " ");
                                g = a ? _.trim(d) : "", c.className !== g && (c.className = g)
                            }
                    return this
                },
                toggleClass: function(a, b) {
                    var c = typeof a;
                    return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : _.isFunction(a) ? this.each(function(c) {
                        _(this).toggleClass(a.call(this, c, this.className, b), b)
                    }) : this.each(function() {
                        if ("string" === c)
                            for (var b, d = 0, e = _(this), f = a.match(nb) || []; b = f[d++];) e.hasClass(b) ? e.removeClass(b) : e.addClass(b);
                        else(c === zb || "boolean" === c) && (this.className && rb.set(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : rb.get(this, "__className__") || "")
                    })
                },
                hasClass: function(a) {
                    for (var b = " " + a + " ", c = 0, d = this.length; d > c; c++)
                        if (1 === this[c].nodeType && (" " + this[c].className + " ").replace(hc, " ").indexOf(b) >= 0) return !0;
                    return !1
                }
            });
            var ic = /\r/g;
            _.fn.extend({
                val: function(a) {
                    var b, c, d, e = this[0]; {
                        if (arguments.length) return d = _.isFunction(a), this.each(function(c) {
                            var e;
                            1 === this.nodeType && (e = d ? a.call(this, c, _(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : _.isArray(e) && (e = _.map(e, function(a) {
                                return null == a ? "" : a + ""
                            })), b = _.valHooks[this.type] || _.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e))
                        });
                        if (e) return b = _.valHooks[e.type] || _.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(ic, "") : null == c ? "" : c)
                    }
                }
            }), _.extend({
                valHooks: {
                    option: {
                        get: function(a) {
                            var b = _.find.attr(a, "value");
                            return null != b ? b : _.trim(_.text(a))
                        }
                    },
                    select: {
                        get: function(a) {
                            for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type || 0 > e, g = f ? null : [], h = f ? e + 1 : d.length, i = 0 > e ? h : f ? e : 0; h > i; i++)
                                if (c = d[i], !(!c.selected && i !== e || (Y.optDisabled ? c.disabled : null !== c.getAttribute("disabled")) || c.parentNode.disabled && _.nodeName(c.parentNode, "optgroup"))) {
                                    if (b = _(c).val(), f) return b;
                                    g.push(b)
                                }
                            return g
                        },
                        set: function(a, b) {
                            for (var c, d, e = a.options, f = _.makeArray(b), g = e.length; g--;) d = e[g], (d.selected = _.inArray(d.value, f) >= 0) && (c = !0);
                            return c || (a.selectedIndex = -1), f
                        }
                    }
                }
            }), _.each(["radio", "checkbox"], function() {
                _.valHooks[this] = {
                    set: function(a, b) {
                        return _.isArray(b) ? a.checked = _.inArray(_(a).val(), b) >= 0 : void 0
                    }
                }, Y.checkOn || (_.valHooks[this].get = function(a) {
                    return null === a.getAttribute("value") ? "on" : a.value
                })
            }), _.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
                _.fn[b] = function(a, c) {
                    return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
                }
            }), _.fn.extend({
                hover: function(a, b) {
                    return this.mouseenter(a).mouseleave(b || a)
                },
                bind: function(a, b, c) {
                    return this.on(a, null, b, c)
                },
                unbind: function(a, b) {
                    return this.off(a, null, b)
                },
                delegate: function(a, b, c, d) {
                    return this.on(b, a, c, d)
                },
                undelegate: function(a, b, c) {
                    return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c)
                }
            });
            var jc = _.now(),
                kc = /\?/;
            _.parseJSON = function(a) {
                return JSON.parse(a + "")
            }, _.parseXML = function(a) {
                var b, c;
                if (!a || "string" != typeof a) return null;
                try {
                    c = new DOMParser, b = c.parseFromString(a, "text/xml")
                } catch (d) {
                    b = void 0
                }
                return (!b || b.getElementsByTagName("parsererror").length) && _.error("Invalid XML: " + a), b
            };
            var lc = /#.*$/,
                mc = /([?&])_=[^&]*/,
                nc = /^(.*?):[ \t]*([^\r\n]*)$/gm,
                oc = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                pc = /^(?:GET|HEAD)$/,
                qc = /^\/\//,
                rc = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
                sc = {},
                tc = {},
                uc = "*/".concat("*"),
                vc = a.location.href,
                wc = rc.exec(vc.toLowerCase()) || [];
            _.extend({
                active: 0,
                lastModified: {},
                etag: {},
                ajaxSettings: {
                    url: vc,
                    type: "GET",
                    isLocal: oc.test(wc[1]),
                    global: !0,
                    processData: !0,
                    async: !0,
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    accepts: {
                        "*": uc,
                        text: "text/plain",
                        html: "text/html",
                        xml: "application/xml, text/xml",
                        json: "application/json, text/javascript"
                    },
                    contents: {
                        xml: /xml/,
                        html: /html/,
                        json: /json/
                    },
                    responseFields: {
                        xml: "responseXML",
                        text: "responseText",
                        json: "responseJSON"
                    },
                    converters: {
                        "* text": String,
                        "text html": !0,
                        "text json": _.parseJSON,
                        "text xml": _.parseXML
                    },
                    flatOptions: {
                        url: !0,
                        context: !0
                    }
                },
                ajaxSetup: function(a, b) {
                    return b ? L(L(a, _.ajaxSettings), b) : L(_.ajaxSettings, a)
                },
                ajaxPrefilter: J(sc),
                ajaxTransport: J(tc),
                ajax: function(a, b) {
                    function c(a, b, c, g) {
                        var i, k, r, s, u, w = b;
                        2 !== t && (t = 2, h && clearTimeout(h), d = void 0, f = g || "", v.readyState = a > 0 ? 4 : 0, i = a >= 200 && 300 > a || 304 === a, c && (s = M(l, v, c)), s = N(l, s, v, i), i ? (l.ifModified && (u = v.getResponseHeader("Last-Modified"), u && (_.lastModified[e] = u), u = v.getResponseHeader("etag"), u && (_.etag[e] = u)), 204 === a || "HEAD" === l.type ? w = "nocontent" : 304 === a ? w = "notmodified" : (w = s.state, k = s.data, r = s.error, i = !r)) : (r = w, (a || !w) && (w = "error", 0 > a && (a = 0))), v.status = a, v.statusText = (b || w) + "", i ? o.resolveWith(m, [k, w, v]) : o.rejectWith(m, [v, w, r]), v.statusCode(q), q = void 0, j && n.trigger(i ? "ajaxSuccess" : "ajaxError", [v, l, i ? k : r]), p.fireWith(m, [v, w]), j && (n.trigger("ajaxComplete", [v, l]), --_.active || _.event.trigger("ajaxStop")))
                    }
                    "object" == typeof a && (b = a, a = void 0), b = b || {};
                    var d, e, f, g, h, i, j, k, l = _.ajaxSetup({}, b),
                        m = l.context || l,
                        n = l.context && (m.nodeType || m.jquery) ? _(m) : _.event,
                        o = _.Deferred(),
                        p = _.Callbacks("once memory"),
                        q = l.statusCode || {},
                        r = {},
                        s = {},
                        t = 0,
                        u = "canceled",
                        v = {
                            readyState: 0,
                            getResponseHeader: function(a) {
                                var b;
                                if (2 === t) {
                                    if (!g)
                                        for (g = {}; b = nc.exec(f);) g[b[1].toLowerCase()] = b[2];
                                    b = g[a.toLowerCase()]
                                }
                                return null == b ? null : b
                            },
                            getAllResponseHeaders: function() {
                                return 2 === t ? f : null
                            },
                            setRequestHeader: function(a, b) {
                                var c = a.toLowerCase();
                                return t || (a = s[c] = s[c] || a, r[a] = b), this
                            },
                            overrideMimeType: function(a) {
                                return t || (l.mimeType = a), this
                            },
                            statusCode: function(a) {
                                var b;
                                if (a)
                                    if (2 > t)
                                        for (b in a) q[b] = [q[b], a[b]];
                                    else v.always(a[v.status]);
                                return this
                            },
                            abort: function(a) {
                                var b = a || u;
                                return d && d.abort(b), c(0, b), this
                            }
                        };
                    if (o.promise(v).complete = p.add, v.success = v.done, v.error = v.fail, l.url = ((a || l.url || vc) + "").replace(lc, "").replace(qc, wc[1] + "//"), l.type = b.method || b.type || l.method || l.type, l.dataTypes = _.trim(l.dataType || "*").toLowerCase().match(nb) || [""], null == l.crossDomain && (i = rc.exec(l.url.toLowerCase()), l.crossDomain = !(!i || i[1] === wc[1] && i[2] === wc[2] && (i[3] || ("http:" === i[1] ? "80" : "443")) === (wc[3] || ("http:" === wc[1] ? "80" : "443")))), l.data && l.processData && "string" != typeof l.data && (l.data = _.param(l.data, l.traditional)), K(sc, l, b, v), 2 === t) return v;
                    j = _.event && l.global, j && 0 === _.active++ && _.event.trigger("ajaxStart"), l.type = l.type.toUpperCase(), l.hasContent = !pc.test(l.type), e = l.url, l.hasContent || (l.data && (e = l.url += (kc.test(e) ? "&" : "?") + l.data, delete l.data), l.cache === !1 && (l.url = mc.test(e) ? e.replace(mc, "$1_=" + jc++) : e + (kc.test(e) ? "&" : "?") + "_=" + jc++)), l.ifModified && (_.lastModified[e] && v.setRequestHeader("If-Modified-Since", _.lastModified[e]), _.etag[e] && v.setRequestHeader("If-None-Match", _.etag[e])), (l.data && l.hasContent && l.contentType !== !1 || b.contentType) && v.setRequestHeader("Content-Type", l.contentType), v.setRequestHeader("Accept", l.dataTypes[0] && l.accepts[l.dataTypes[0]] ? l.accepts[l.dataTypes[0]] + ("*" !== l.dataTypes[0] ? ", " + uc + "; q=0.01" : "") : l.accepts["*"]);
                    for (k in l.headers) v.setRequestHeader(k, l.headers[k]);
                    if (l.beforeSend && (l.beforeSend.call(m, v, l) === !1 || 2 === t)) return v.abort();
                    u = "abort";
                    for (k in {
                            success: 1,
                            error: 1,
                            complete: 1
                        }) v[k](l[k]);
                    if (d = K(tc, l, b, v)) {
                        v.readyState = 1, j && n.trigger("ajaxSend", [v, l]), l.async && l.timeout > 0 && (h = setTimeout(function() {
                            v.abort("timeout")
                        }, l.timeout));
                        try {
                            t = 1, d.send(r, c)
                        } catch (w) {
                            if (!(2 > t)) throw w;
                            c(-1, w)
                        }
                    } else c(-1, "No Transport");
                    return v
                },
                getJSON: function(a, b, c) {
                    return _.get(a, b, c, "json")
                },
                getScript: function(a, b) {
                    return _.get(a, void 0, b, "script")
                }
            }), _.each(["get", "post"], function(a, b) {
                _[b] = function(a, c, d, e) {
                    return _.isFunction(c) && (e = e || d, d = c, c = void 0), _.ajax({
                        url: a,
                        type: b,
                        dataType: e,
                        data: c,
                        success: d
                    })
                }
            }), _._evalUrl = function(a) {
                return _.ajax({
                    url: a,
                    type: "GET",
                    dataType: "script",
                    async: !1,
                    global: !1,
                    "throws": !0
                })
            }, _.fn.extend({
                wrapAll: function(a) {
                    var b;
                    return _.isFunction(a) ? this.each(function(b) {
                        _(this).wrapAll(a.call(this, b))
                    }) : (this[0] && (b = _(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
                        for (var a = this; a.firstElementChild;) a = a.firstElementChild;
                        return a
                    }).append(this)), this)
                },
                wrapInner: function(a) {
                    return _.isFunction(a) ? this.each(function(b) {
                        _(this).wrapInner(a.call(this, b))
                    }) : this.each(function() {
                        var b = _(this),
                            c = b.contents();
                        c.length ? c.wrapAll(a) : b.append(a)
                    })
                },
                wrap: function(a) {
                    var b = _.isFunction(a);
                    return this.each(function(c) {
                        _(this).wrapAll(b ? a.call(this, c) : a)
                    })
                },
                unwrap: function() {
                    return this.parent().each(function() {
                        _.nodeName(this, "body") || _(this).replaceWith(this.childNodes)
                    }).end()
                }
            }), _.expr.filters.hidden = function(a) {
                return a.offsetWidth <= 0 && a.offsetHeight <= 0
            }, _.expr.filters.visible = function(a) {
                return !_.expr.filters.hidden(a)
            };
            var xc = /%20/g,
                yc = /\[\]$/,
                zc = /\r?\n/g,
                Ac = /^(?:submit|button|image|reset|file)$/i,
                Bc = /^(?:input|select|textarea|keygen)/i;
            _.param = function(a, b) {
                var c, d = [],
                    e = function(a, b) {
                        b = _.isFunction(b) ? b() : null == b ? "" : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
                    };
                if (void 0 === b && (b = _.ajaxSettings && _.ajaxSettings.traditional), _.isArray(a) || a.jquery && !_.isPlainObject(a)) _.each(a, function() {
                    e(this.name, this.value)
                });
                else
                    for (c in a) O(c, a[c], b, e);
                return d.join("&").replace(xc, "+")
            }, _.fn.extend({
                serialize: function() {
                    return _.param(this.serializeArray())
                },
                serializeArray: function() {
                    return this.map(function() {
                        var a = _.prop(this, "elements");
                        return a ? _.makeArray(a) : this
                    }).filter(function() {
                        var a = this.type;
                        return this.name && !_(this).is(":disabled") && Bc.test(this.nodeName) && !Ac.test(a) && (this.checked || !yb.test(a))
                    }).map(function(a, b) {
                        var c = _(this).val();
                        return null == c ? null : _.isArray(c) ? _.map(c, function(a) {
                            return {
                                name: b.name,
                                value: a.replace(zc, "\r\n")
                            }
                        }) : {
                            name: b.name,
                            value: c.replace(zc, "\r\n")
                        }
                    }).get()
                }
            }), _.ajaxSettings.xhr = function() {
                try {
                    return new XMLHttpRequest
                } catch (a) {}
            };
            var Cc = 0,
                Dc = {},
                Ec = {
                    0: 200,
                    1223: 204
                },
                Fc = _.ajaxSettings.xhr();
            a.attachEvent && a.attachEvent("onunload", function() {
                for (var a in Dc) Dc[a]()
            }), Y.cors = !!Fc && "withCredentials" in Fc, Y.ajax = Fc = !!Fc, _.ajaxTransport(function(a) {
                var b;
                return Y.cors || Fc && !a.crossDomain ? {
                    send: function(c, d) {
                        var e, f = a.xhr(),
                            g = ++Cc;
                        if (f.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields)
                            for (e in a.xhrFields) f[e] = a.xhrFields[e];
                        a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType), a.crossDomain || c["X-Requested-With"] || (c["X-Requested-With"] = "XMLHttpRequest");
                        for (e in c) f.setRequestHeader(e, c[e]);
                        b = function(a) {
                            return function() {
                                b && (delete Dc[g], b = f.onload = f.onerror = null, "abort" === a ? f.abort() : "error" === a ? d(f.status, f.statusText) : d(Ec[f.status] || f.status, f.statusText, "string" == typeof f.responseText ? {
                                    text: f.responseText
                                } : void 0, f.getAllResponseHeaders()))
                            }
                        }, f.onload = b(), f.onerror = b("error"), b = Dc[g] = b("abort");
                        try {
                            f.send(a.hasContent && a.data || null)
                        } catch (h) {
                            if (b) throw h
                        }
                    },
                    abort: function() {
                        b && b()
                    }
                } : void 0
            }), _.ajaxSetup({
                accepts: {
                    script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
                },
                contents: {
                    script: /(?:java|ecma)script/
                },
                converters: {
                    "text script": function(a) {
                        return _.globalEval(a), a
                    }
                }
            }), _.ajaxPrefilter("script", function(a) {
                void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET")
            }), _.ajaxTransport("script", function(a) {
                if (a.crossDomain) {
                    var b, c;
                    return {
                        send: function(d, e) {
                            b = _("<script>").prop({
                                async: !0,
                                charset: a.scriptCharset,
                                src: a.url
                            }).on("load error", c = function(a) {
                                b.remove(), c = null, a && e("error" === a.type ? 404 : 200, a.type)
                            }), Z.head.appendChild(b[0])
                        },
                        abort: function() {
                            c && c()
                        }
                    }
                }
            });
            var Gc = [],
                Hc = /(=)\?(?=&|$)|\?\?/;
            _.ajaxSetup({
                jsonp: "callback",
                jsonpCallback: function() {
                    var a = Gc.pop() || _.expando + "_" + jc++;
                    return this[a] = !0, a
                }
            }), _.ajaxPrefilter("json jsonp", function(b, c, d) {
                var e, f, g, h = b.jsonp !== !1 && (Hc.test(b.url) ? "url" : "string" == typeof b.data && !(b.contentType || "").indexOf("application/x-www-form-urlencoded") && Hc.test(b.data) && "data");
                return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback = _.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(Hc, "$1" + e) : b.jsonp !== !1 && (b.url += (kc.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function() {
                    return g || _.error(e + " was not called"), g[0]
                }, b.dataTypes[0] = "json", f = a[e], a[e] = function() {
                    g = arguments
                }, d.always(function() {
                    a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Gc.push(e)), g && _.isFunction(f) && f(g[0]), g = f = void 0
                }), "script") : void 0
            }), _.parseHTML = function(a, b, c) {
                if (!a || "string" != typeof a) return null;
                "boolean" == typeof b && (c = b, b = !1), b = b || Z;
                var d = gb.exec(a),
                    e = !c && [];
                return d ? [b.createElement(d[1])] : (d = _.buildFragment([a], b, e), e && e.length && _(e).remove(), _.merge([], d.childNodes))
            };
            var Ic = _.fn.load;
            _.fn.load = function(a, b, c) {
                if ("string" != typeof a && Ic) return Ic.apply(this, arguments);
                var d, e, f, g = this,
                    h = a.indexOf(" ");
                return h >= 0 && (d = _.trim(a.slice(h)), a = a.slice(0, h)), _.isFunction(b) ? (c = b, b = void 0) : b && "object" == typeof b && (e = "POST"), g.length > 0 && _.ajax({
                    url: a,
                    type: e,
                    dataType: "html",
                    data: b
                }).done(function(a) {
                    f = arguments, g.html(d ? _("<div>").append(_.parseHTML(a)).find(d) : a)
                }).complete(c && function(a, b) {
                    g.each(c, f || [a.responseText, b, a])
                }), this
            }, _.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(a, b) {
                _.fn[b] = function(a) {
                    return this.on(b, a)
                }
            }), _.expr.filters.animated = function(a) {
                return _.grep(_.timers, function(b) {
                    return a === b.elem
                }).length
            };
            var Jc = a.document.documentElement;
            _.offset = {
                setOffset: function(a, b, c) {
                    var d, e, f, g, h, i, j, k = _.css(a, "position"),
                        l = _(a),
                        m = {};
                    "static" === k && (a.style.position = "relative"), h = l.offset(), f = _.css(a, "top"), i = _.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), _.isFunction(b) && (b = b.call(a, c, h)), null != b.top && (m.top = b.top - h.top + g), null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m)
                }
            }, _.fn.extend({
                offset: function(a) {
                    if (arguments.length) return void 0 === a ? this : this.each(function(b) {
                        _.offset.setOffset(this, a, b)
                    });
                    var b, c, d = this[0],
                        e = {
                            top: 0,
                            left: 0
                        },
                        f = d && d.ownerDocument;
                    if (f) return b = f.documentElement, _.contains(b, d) ? (typeof d.getBoundingClientRect !== zb && (e = d.getBoundingClientRect()), c = P(f), {
                        top: e.top + c.pageYOffset - b.clientTop,
                        left: e.left + c.pageXOffset - b.clientLeft
                    }) : e
                },
                position: function() {
                    if (this[0]) {
                        var a, b, c = this[0],
                            d = {
                                top: 0,
                                left: 0
                            };
                        return "fixed" === _.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), _.nodeName(a[0], "html") || (d = a.offset()), d.top += _.css(a[0], "borderTopWidth", !0), d.left += _.css(a[0], "borderLeftWidth", !0)), {
                            top: b.top - d.top - _.css(c, "marginTop", !0),
                            left: b.left - d.left - _.css(c, "marginLeft", !0)
                        }
                    }
                },
                offsetParent: function() {
                    return this.map(function() {
                        for (var a = this.offsetParent || Jc; a && !_.nodeName(a, "html") && "static" === _.css(a, "position");) a = a.offsetParent;
                        return a || Jc
                    })
                }
            }), _.each({
                scrollLeft: "pageXOffset",
                scrollTop: "pageYOffset"
            }, function(b, c) {
                var d = "pageYOffset" === c;
                _.fn[b] = function(e) {
                    return qb(this, function(b, e, f) {
                        var g = P(b);
                        return void 0 === f ? g ? g[c] : b[e] : (g ? g.scrollTo(d ? a.pageXOffset : f, d ? f : a.pageYOffset) : b[e] = f, void 0)
                    }, b, e, arguments.length, null)
                }
            }), _.each(["top", "left"], function(a, b) {
                _.cssHooks[b] = w(Y.pixelPosition, function(a, c) {
                    return c ? (c = v(a, b), Qb.test(c) ? _(a).position()[b] + "px" : c) : void 0
                })
            }), _.each({
                Height: "height",
                Width: "width"
            }, function(a, b) {
                _.each({
                    padding: "inner" + a,
                    content: b,
                    "": "outer" + a
                }, function(c, d) {
                    _.fn[d] = function(d, e) {
                        var f = arguments.length && (c || "boolean" != typeof d),
                            g = c || (d === !0 || e === !0 ? "margin" : "border");
                        return qb(this, function(b, c, d) {
                            var e;
                            return _.isWindow(b) ? b.document.documentElement["client" + a] : 9 === b.nodeType ? (e = b.documentElement, Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a])) : void 0 === d ? _.css(b, c, g) : _.style(b, c, d, g)
                        }, b, f ? d : void 0, f, null)
                    }
                })
            }), _.fn.size = function() {
                return this.length
            }, _.fn.andSelf = _.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function() {
                return _
            });
            var Kc = a.jQuery,
                Lc = a.$;
            return _.noConflict = function(b) {
                return a.$ === _ && (a.$ = Lc), b && a.jQuery === _ && (a.jQuery = Kc), _
            }, typeof b === zb && (a.jQuery = a.$ = _), _
        }), define("$", function(a) {
            return function() {
                var b;
                return b || a.$
            }
        }(this)), define("mout/object/get", [], function() {
            function a(a, b) {
                for (var c = b.split("."), d = c.pop(); b = c.shift();)
                    if (a = a[b], "object" != typeof a || !a) return;
                return a[d]
            }
            return a
        }), define("lavaca/net/Connectivity", ["require", "$", "mout/object/get"], function(a) {
            function b(a) {
                if (a === h)
                    for (var b, c = -1; b = g[++c];) b(a)
            }

            function c(a) {
                return a.indexOf(".local") > 0 || a.indexOf("localhost") > 0 || "file" === a.substring(0, 4)
            }
            var d = a("$"),
                e = a("mout/object/get"),
                f = "boolean" == typeof navigator.onLine,
                g = [],
                h = "offline",
                i = {};
            return i.isOffline = function() {
                var a = e(window, "navigator.connection.type"),
                    b = e(window, "Connection.NONE");
                return a && b ? a === b : a && "none" !== a ? !1 : f ? !navigator.onLine : !1
            }, i.ajax = function(a) {
                return Promise.resolve().then(function() {
                    if (i.isOffline() && !c(a.url)) throw h
                }).then(function() {
                    return d.ajax(a)
                }).catch(b)
            }, i.registerOfflineAjaxHandler = function(a) {
                g.push(a)
            }, i
        }), define("lavaca/util/Cache", ["require", "lavaca/util/Disposable", "lavaca/util/uuid"], function(a) {
            var b = a("lavaca/util/Disposable"),
                c = a("lavaca/util/uuid"),
                d = b.extend({
                    get: function(a, b) {
                        var c = this["@" + a];
                        return void 0 === c && void 0 !== b && (c = this["@" + a] = b), void 0 === c ? null : c
                    },
                    set: function(a, b) {
                        this["@" + a] = b
                    },
                    add: function(a) {
                        var b = c();
                        return this.set(b, a), b
                    },
                    remove: function(a) {
                        delete this["@" + a]
                    },
                    each: function(a, b) {
                        var c, d;
                        for (c in this)
                            if (this.hasOwnProperty(c) && 0 === c.indexOf("@") && (d = a.call(b || this, c.slice(1), this[c]), d === !1)) break
                    },
                    toObject: function() {
                        var a = {};
                        return this.each(function(b, c) {
                            a[b] = c && "function" == typeof c.toObject ? c.toObject() : c
                        }), a
                    },
                    toJSON: function() {
                        return JSON.stringify(this.toObject())
                    },
                    toArray: function() {
                        var a = [];
                        return a.ids = [], this.each(function(b, c) {
                            a.push("function" == typeof c.toObject ? c.toObject() : c), a.ids.push(b)
                        }), a
                    },
                    clear: function() {
                        this.each(function(a) {
                            this.remove(a)
                        }, this)
                    },
                    count: function() {
                        var a = 0;
                        return this.each(function() {
                            a++
                        }, this), a
                    },
                    dispose: function() {
                        this.clear(), b.prototype.dispose.apply(this, arguments)
                    }
                });
            return d
        }), define("mout/lang/kindOf", [], function() {
            function a(a) {
                return null === a ? "Null" : a === b ? "Undefined" : c.exec(d.call(a))[1]
            }
            var b, c = /^\[object (.*)\]$/,
                d = Object.prototype.toString;
            return a
        }), define("mout/object/mixIn", ["./forOwn"], function(a) {
            function b(b) {
                for (var d, e = 0, f = arguments.length; ++e < f;) d = arguments[e], null != d && a(d, c, b);
                return b
            }

            function c(a, b) {
                this[b] = a
            }
            return b
        }), define("mout/lang/clone", ["./kindOf", "./isPlainObject", "../object/mixIn"], function(a, b, c) {
            function d(b) {
                switch (a(b)) {
                    case "Object":
                        return e(b);
                    case "Array":
                        return h(b);
                    case "RegExp":
                        return f(b);
                    case "Date":
                        return g(b);
                    default:
                        return b
                }
            }

            function e(a) {
                return b(a) ? c({}, a) : a
            }

            function f(a) {
                var b = "";
                return b += a.multiline ? "m" : "", b += a.global ? "g" : "", b += a.ignorecase ? "i" : "", new RegExp(a.source, b)
            }

            function g(a) {
                return new Date(+a)
            }

            function h(a) {
                return a.slice()
            }
            return d
        }), define("mout/lang/deepClone", ["./clone", "../object/forOwn", "./kindOf", "./isPlainObject"], function(a, b, c, d) {
            function e(b, d) {
                switch (c(b)) {
                    case "Object":
                        return f(b, d);
                    case "Array":
                        return g(b, d);
                    default:
                        return a(b)
                }
            }

            function f(a, c) {
                if (d(a)) {
                    var f = {};
                    return b(a, function(a, b) {
                        this[b] = e(a, c)
                    }, f), f
                }
                return c ? c(a) : a
            }

            function g(a, b) {
                for (var c = [], d = -1, f = a.length; ++d < f;) c[d] = e(a[d], b);
                return c
            }
            return e
        }), define("mout/array/indexOf", [], function() {
            function a(a, b, c) {
                if (c = c || 0, null == a) return -1;
                for (var d = a.length, e = 0 > c ? d + c : c; d > e;) {
                    if (a[e] === b) return e;
                    e++
                }
                return -1
            }
            return a
        }), define("mout/array/contains", ["./indexOf"], function(a) {
            function b(b, c) {
                return -1 !== a(b, c)
            }
            return b
        }), define("mout/array/removeAll", ["./indexOf"], function(a) {
            function b(b, c) {
                for (var d = a(b, c); - 1 !== d;) b.splice(d, 1), d = a(b, c, d)
            }
            return b
        }), define("mout/lang/isKind", ["./kindOf"], function(a) {
            function b(b, c) {
                return a(b) === c
            }
            return b
        }), define("mout/lang/isObject", ["./isKind"], function(a) {
            function b(b) {
                return a(b, "Object")
            }
            return b
        }), define("mout/object/merge", ["./hasOwn", "../lang/deepClone", "../lang/isObject"], function(a, b, c) {
            function d() {
                var e, f, g, h, i = 1;
                for (h = b(arguments[0]); g = arguments[i++];)
                    for (e in g) a(g, e) && (f = g[e], h[e] = c(f) && c(h[e]) ? d(h[e], f) : b(f));
                return h
            }
            return d
        }), define("lavaca/mvc/Model", ["require", "lavaca/events/EventDispatcher", "lavaca/net/Connectivity", "lavaca/util/Cache", "mout/lang/deepClone", "mout/array/contains", "mout/array/removeAll", "mout/object/merge"], function(a) {
            function b(a, b, c, d, e, g) {
                a.trigger(b, {
                    attribute: c,
                    previous: d === f ? null : d,
                    value: e === f ? a.get(c) : e,
                    messages: g || []
                })
            }

            function c(a, b, c) {
                var d = a.flags[c];
                d || (d = a.flags[c] = []), i(d, b) || d.push(b)
            }

            function d(a, b, c) {
                b = !!b;
                for (var d, e, f = ["suppressValidation", "suppressEvents", "suppressTracking"], g = {}, h = -1; d = f[++h];) g[d] = a[d], a[d] = b || a[d];
                for (e = c.call(a), h = -1; d = f[++h];) a[d] = g[d];
                return e
            }

            function e(a) {
                var b = !0;
                for (var c in a) a[c].length > 0 && (b = !1);
                return a.isValid = b, a
            }
            var f, g = a("lavaca/events/EventDispatcher"),
                h = (a("lavaca/net/Connectivity"), a("lavaca/util/Cache")),
                i = (a("mout/lang/deepClone"), a("mout/array/contains")),
                j = a("mout/array/removeAll"),
                k = a("mout/object/merge"),
                l = g.extend(function(a) {
                    var b, c;
                    g.call(this), this.attributes = new h, this.rules = new h, this.unsavedAttributes = [], this.flags = {}, this.defaults && (a = k({}, this.defaults, a)), a && (b = this.suppressEvents, c = this.suppressTracking, this.suppressEvents = this.suppressTracking = !0, this.apply(a), this.suppressEvents = b, this.suppressTracking = c)
                }, {
                    suppressValidation: !1,
                    suppressTracking: !1,
                    get: function(a) {
                        var b, c = this.attributes.get(a);
                        return "function" == typeof c ? (b = this.flags[l.DO_NOT_COMPUTE], b && -1 !== b.indexOf(a) ? c : c.call(this)) : c
                    },
                    canSet: function() {
                        return !0
                    },
                    set: function(a, e, f, g) {
                        return d(this, g, function() {
                            if (!this.canSet(a)) return !1;
                            var d = this.attributes.get(a),
                                g = this.suppressValidation ? [] : this.validate(a, e);
                            return g.length ? (b(this, "invalid", a, d, e, g), !1) : (d !== e && (this.attributes.set(a, e), f && c(this, a, f), b(this, "change", a, d, e), this.suppressTracking || i(this.unsavedAttributes, a) || this.unsavedAttributes.push(a)), !0)
                        })
                    },
                    has: function(a) {
                        return null !== this.get(a)
                    },
                    idAttribute: "id",
                    id: function() {
                        return this.get(this.idAttribute)
                    },
                    isNew: function() {
                        return null === this.id()
                    },
                    parse: function(a) {
                        return "string" == typeof a && (a = JSON.parse(a)), a
                    },
                    apply: function(a, b) {
                        d(this, b, function() {
                            a = this.parse(a);
                            for (var b in a) this.set(b, a[b])
                        })
                    },
                    clear: function(a) {
                        if (a) {
                            var b, c, d = this.flags[a],
                                e = -1;
                            if (d)
                                for (; b = d[++e];) j(this.unsavedAttributes, b), c = this.get(b), c && c.dispose && c.dispose(), this.set(b, null)
                        } else this.attributes.dispose(), this.attributes = new h, this.unsavedAttributes.length = 0
                    },
                    clone: function() {
                        return new this.constructor(this.attributes.toObject())
                    },
                    addRule: function(a, b, c) {
                        this.rules.get(a, []).push({
                            rule: b,
                            message: c
                        })
                    },
                    validate: function(a, b) {
                        var c, d, g, h = -1;
                        if (a) {
                            if (c = [], b = b === f ? this.get(a, b) : b, d = this.rules.get(a))
                                for (; g = d[++h];) g.rule(a, b) || c.push(g.message);
                            return c
                        }
                        return c = {}, this.rules.each(function(a) {
                            c[a] = this.validate(a)
                        }, this), e(c)
                    },
                    toObject: function() {
                        var a, b = this.attributes.toObject();
                        for (var c in b) "function" == typeof b[c] && (a = this.flags[l.DO_NOT_COMPUTE], a && -1 !== a.indexOf(c) || (b[c] = b[c].call(this)));
                        return b
                    },
                    toJSON: function() {
                        return JSON.stringify(this.toObject())
                    },
                    on: function(a, b, c, d) {
                        function e(a) {
                            !c || b && a.attribute !== b || c.call(d || this, a)
                        }
                        return "function" == typeof b && (d = c, c = b, b = null), e.fn = c, e.thisp = d, g.prototype.on.call(this, a, e, d)
                    }
                });
            return l.SENSITIVE = "sensitive", l.DO_NOT_COMPUTE = "do_not_compute", l
        }), define("app/env/Config", ["require"], function() {
            var a = {};
            switch (window.env) {
                case "production":
                    a = {
                        mock_url: "assets/mock/{0}.json",
                        api_url: "https://api.sleepiq.sleepnumber.com/rest/{0}",
                        proxy_url: "http://localhost:8080/api/rest/{0}",
                        mixpanel_key: "92c6dea791409ad3fdd2c1fdea1119d3",
                        artificial_network_delay: 0,
                        google_analytics_id: "UA-53983103-1",
                        debugging: !1,
                        disableActivation: !1,
                        username: "",
                        password: "",
                        google_api_key: "AIzaSyCzetqEd7Fc0ea3vdii5vmsIjfyZYYA0tc",
                        google_api_url: "https://maps.googleapis.com/maps/api/{0}",
                        appstore_url: "https://itunes.apple.com/us/app/sleepiq/id811684463?mt=8&uo=4",
                        playstore_url: "https://play.google.com/store/apps/details?id=com.selectcomfort.SleepIQ",
                        url_scheme: "sleepiq://",
                        track_url: "http://www.sleepnumber.com/sn/en/order-details",
                        edp_url: "https://sleepiqapi.azure-api.net/prod/{0}",
                        edp_subscription_key: "a6b6cfd7079b4cfd9edf9fee927de59b"
                    };
                    break;
                case "staging":
                    a = {
                        mock_url: "assets/mock/{0}.json",
                        api_url: "https://api.firefly.siq.sleepnumber.com/rest/{0}",
                        proxy_url: "http://localhost:8080/api/rest/{0}",
                        mixpanel_key: "9991d0ac6803140fc22eaf422142eca2",
                        artificial_network_delay: 0,
                        google_analytics_id: "UA-53983103-1",
                        debugging: !1,
                        disableActivation: !1,
                        username: "craig.benson@selectcomfort.com",
                        password: "404040",
                        google_api_key: "AIzaSyCzetqEd7Fc0ea3vdii5vmsIjfyZYYA0tc",
                        google_api_url: "https://maps.googleapis.com/maps/api/{0}",
                        appstore_url: "https://itunes.apple.com/us/app/sleepiq/id811684463?mt=8&uo=4",
                        playstore_url: "https://play.google.com/store/apps/details?id=com.selectcomfort.SleepIQ",
                        url_scheme: "sleepiq://",
                        track_url: "http://www.sleepnumber.com/sn/en/order-status",
                        edp_url: "https://sleepiqapi.azure-api.net/stage/{0}",
                        edp_subscription_key: "a6b6cfd7079b4cfd9edf9fee927de59b"
                    };
                    break;
                case "test":
                    a = {
                        mock_url: "assets/mock/{0}.json",
                        api_url: "https://api.fireflytest.siq.sleepnumber.com/rest/{0}",
                        proxy_url: "http://localhost:8080/api/rest/{0}",
                        mixpanel_key: "7e9da23b4ae8dfd6a1a31ced879df23a",
                        artificial_network_delay: 0,
                        google_analytics_id: "UA-53983103-1",
                        debugging: !1,
                        disableActivation: !1,
                        username: "craig.benson@selectcomfort.com",
                        password: "404040",
                        google_api_key: "AIzaSyCzetqEd7Fc0ea3vdii5vmsIjfyZYYA0tc",
                        google_api_url: "https://maps.googleapis.com/maps/api/{0}",
                        appstore_url: "https://itunes.apple.com/us/app/sleepiq/id811684463?mt=8&uo=4",
                        playstore_url: "https://play.google.com/store/apps/details?id=com.selectcomfort.SleepIQ",
                        url_scheme: "sleepiq://",
                        track_url: "http://testweb.sleepnumber.com/sn/en/order-status",
                        edp_url: "https://sleepiq.azure-api.net/test/{0}",
                        edp_subscription_key: "b26ec87efcd44ebf98802d9565dcf723"
                    };
                    break;
                default:
                    a = {
                        mock_url: "assets/mock/{0}.json",
                        api_url: "https://api.fireflytest.siq.sleepnumber.com/rest/{0}",
                        proxy_url: "http://localhost:8080/api/rest/{0}",
                        mixpanel_key: "7e9da23b4ae8dfd6a1a31ced879df23a",
                        artificial_network_delay: 0,
                        google_analytics_id: "UA-53983103-1",
                        debugging: !0,
                        disableActivation: !1,
                        username: "craig.benson@selectcomfort.com",
                        password: "404040",
                        google_api_key: "AIzaSyCzetqEd7Fc0ea3vdii5vmsIjfyZYYA0tc",
                        google_api_url: "https://maps.googleapis.com/maps/api/{0}",
                        appstore_url: "https://itunes.apple.com/us/app/sleepiq/id811684463?mt=8&uo=4",
                        playstore_url: "https://play.google.com/store/apps/details?id=com.selectcomfort.SleepIQ",
                        url_scheme: "sleepiq://",
                        track_url: "http://testweb.sleepnumber.com/sn/en/order-status",
                        edp_url: "https://sleepiq.azure-api.net/test/{0}",
                        edp_subscription_key: "b26ec87efcd44ebf98802d9565dcf723"
                    }
            }
            return a
        }),
        function(a) {
            function b(a, b, c) {
                switch (arguments.length) {
                    case 2:
                        return null != a ? a : b;
                    case 3:
                        return null != a ? a : null != b ? b : c;
                    default:
                        throw new Error("Implement me")
                }
            }

            function c(a, b) {
                return zb.call(a, b)
            }

            function d() {
                return {
                    empty: !1,
                    unusedTokens: [],
                    unusedInput: [],
                    overflow: -2,
                    charsLeftOver: 0,
                    nullInput: !1,
                    invalidMonth: null,
                    invalidFormat: !1,
                    userInvalidated: !1,
                    iso: !1
                }
            }

            function e(a) {
                tb.suppressDeprecationWarnings === !1 && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + a)
            }

            function f(a, b) {
                var c = !0;
                return m(function() {
                    return c && (e(a), c = !1), b.apply(this, arguments)
                }, b)
            }

            function g(a, b) {
                qc[a] || (e(b), qc[a] = !0)
            }

            function h(a, b) {
                return function(c) {
                    return p(a.call(this, c), b)
                }
            }

            function i(a, b) {
                return function(c) {
                    return this.localeData().ordinal(a.call(this, c), b)
                }
            }

            function j() {}

            function k(a, b) {
                b !== !1 && F(a), n(this, a), this._d = new Date(+a._d)
            }

            function l(a) {
                var b = y(a),
                    c = b.year || 0,
                    d = b.quarter || 0,
                    e = b.month || 0,
                    f = b.week || 0,
                    g = b.day || 0,
                    h = b.hour || 0,
                    i = b.minute || 0,
                    j = b.second || 0,
                    k = b.millisecond || 0;
                this._milliseconds = +k + 1e3 * j + 6e4 * i + 36e5 * h, this._days = +g + 7 * f, this._months = +e + 3 * d + 12 * c, this._data = {}, this._locale = tb.localeData(), this._bubble()
            }

            function m(a, b) {
                for (var d in b) c(b, d) && (a[d] = b[d]);
                return c(b, "toString") && (a.toString = b.toString), c(b, "valueOf") && (a.valueOf = b.valueOf), a
            }

            function n(a, b) {
                var c, d, e;
                if ("undefined" != typeof b._isAMomentObject && (a._isAMomentObject = b._isAMomentObject), "undefined" != typeof b._i && (a._i = b._i), "undefined" != typeof b._f && (a._f = b._f), "undefined" != typeof b._l && (a._l = b._l), "undefined" != typeof b._strict && (a._strict = b._strict), "undefined" != typeof b._tzm && (a._tzm = b._tzm), "undefined" != typeof b._isUTC && (a._isUTC = b._isUTC), "undefined" != typeof b._offset && (a._offset = b._offset), "undefined" != typeof b._pf && (a._pf = b._pf), "undefined" != typeof b._locale && (a._locale = b._locale), Ib.length > 0)
                    for (c in Ib) d = Ib[c], e = b[d], "undefined" != typeof e && (a[d] = e);
                return a
            }

            function o(a) {
                return 0 > a ? Math.ceil(a) : Math.floor(a)
            }

            function p(a, b, c) {
                for (var d = "" + Math.abs(a), e = a >= 0; d.length < b;) d = "0" + d;
                return (e ? c ? "+" : "" : "-") + d
            }

            function q(a, b) {
                var c = {
                    milliseconds: 0,
                    months: 0
                };
                return c.months = b.month() - a.month() + 12 * (b.year() - a.year()), a.clone().add(c.months, "M").isAfter(b) && --c.months, c.milliseconds = +b - +a.clone().add(c.months, "M"), c
            }

            function r(a, b) {
                var c;
                return b = K(b, a), a.isBefore(b) ? c = q(a, b) : (c = q(b, a), c.milliseconds = -c.milliseconds, c.months = -c.months), c
            }

            function s(a, b) {
                return function(c, d) {
                    var e, f;
                    return null === d || isNaN(+d) || (g(b, "moment()." + b + "(period, number) is deprecated. Please use moment()." + b + "(number, period)."), f = c, c = d, d = f), c = "string" == typeof c ? +c : c, e = tb.duration(c, d), t(this, e, a), this
                }
            }

            function t(a, b, c, d) {
                var e = b._milliseconds,
                    f = b._days,
                    g = b._months;
                d = null == d ? !0 : d, e && a._d.setTime(+a._d + e * c), f && nb(a, "Date", mb(a, "Date") + f * c), g && lb(a, mb(a, "Month") + g * c), d && tb.updateOffset(a, f || g)
            }

            function u(a) {
                return "[object Array]" === Object.prototype.toString.call(a)
            }

            function v(a) {
                return "[object Date]" === Object.prototype.toString.call(a) || a instanceof Date
            }

            function w(a, b, c) {
                var d, e = Math.min(a.length, b.length),
                    f = Math.abs(a.length - b.length),
                    g = 0;
                for (d = 0; e > d; d++)(c && a[d] !== b[d] || !c && A(a[d]) !== A(b[d])) && g++;
                return g + f
            }

            function x(a) {
                if (a) {
                    var b = a.toLowerCase().replace(/(.)s$/, "$1");
                    a = jc[a] || kc[b] || b
                }
                return a
            }

            function y(a) {
                var b, d, e = {};
                for (d in a) c(a, d) && (b = x(d), b && (e[b] = a[d]));
                return e
            }

            function z(b) {
                var c, d;
                if (0 === b.indexOf("week")) c = 7, d = "day";
                else {
                    if (0 !== b.indexOf("month")) return;
                    c = 12, d = "month"
                }
                tb[b] = function(e, f) {
                    var g, h, i = tb._locale[b],
                        j = [];
                    if ("number" == typeof e && (f = e, e = a), h = function(a) {
                            var b = tb().utc().set(d, a);
                            return i.call(tb._locale, b, e || "")
                        }, null != f) return h(f);
                    for (g = 0; c > g; g++) j.push(h(g));
                    return j
                }
            }

            function A(a) {
                var b = +a,
                    c = 0;
                return 0 !== b && isFinite(b) && (c = b >= 0 ? Math.floor(b) : Math.ceil(b)), c
            }

            function B(a, b) {
                return new Date(Date.UTC(a, b + 1, 0)).getUTCDate()
            }

            function C(a, b, c) {
                return hb(tb([a, 11, 31 + b - c]), b, c).week
            }

            function D(a) {
                return E(a) ? 366 : 365
            }

            function E(a) {
                return 0 === a % 4 && 0 !== a % 100 || 0 === a % 400
            }

            function F(a) {
                var b;
                a._a && -2 === a._pf.overflow && (b = a._a[Bb] < 0 || a._a[Bb] > 11 ? Bb : a._a[Cb] < 1 || a._a[Cb] > B(a._a[Ab], a._a[Bb]) ? Cb : a._a[Db] < 0 || a._a[Db] > 23 ? Db : a._a[Eb] < 0 || a._a[Eb] > 59 ? Eb : a._a[Fb] < 0 || a._a[Fb] > 59 ? Fb : a._a[Gb] < 0 || a._a[Gb] > 999 ? Gb : -1, a._pf._overflowDayOfYear && (Ab > b || b > Cb) && (b = Cb), a._pf.overflow = b)
            }

            function G(a) {
                return null == a._isValid && (a._isValid = !isNaN(a._d.getTime()) && a._pf.overflow < 0 && !a._pf.empty && !a._pf.invalidMonth && !a._pf.nullInput && !a._pf.invalidFormat && !a._pf.userInvalidated, a._strict && (a._isValid = a._isValid && 0 === a._pf.charsLeftOver && 0 === a._pf.unusedTokens.length)), a._isValid
            }

            function H(a) {
                return a ? a.toLowerCase().replace("_", "-") : a
            }

            function I(a) {
                for (var b, c, d, e, f = 0; f < a.length;) {
                    for (e = H(a[f]).split("-"), b = e.length, c = H(a[f + 1]), c = c ? c.split("-") : null; b > 0;) {
                        if (d = J(e.slice(0, b).join("-"))) return d;
                        if (c && c.length >= b && w(e, c, !0) >= b - 1) break;
                        b--
                    }
                    f++
                }
                return null
            }

            function J(a) {
                var b = null;
                if (!Hb[a] && Jb) try {
                    b = tb.locale(), require("./locale/" + a), tb.locale(b)
                } catch (c) {}
                return Hb[a]
            }

            function K(a, b) {
                return b._isUTC ? tb(a).zone(b._offset || 0) : tb(a).local()
            }

            function L(a) {
                return a.match(/\[[\s\S]/) ? a.replace(/^\[|\]$/g, "") : a.replace(/\\/g, "")
            }

            function M(a) {
                var b, c, d = a.match(Nb);
                for (b = 0, c = d.length; c > b; b++) d[b] = pc[d[b]] ? pc[d[b]] : L(d[b]);
                return function(e) {
                    var f = "";
                    for (b = 0; c > b; b++) f += d[b] instanceof Function ? d[b].call(e, a) : d[b];
                    return f
                }
            }

            function N(a, b) {
                return a.isValid() ? (b = O(b, a.localeData()), lc[b] || (lc[b] = M(b)), lc[b](a)) : a.localeData().invalidDate()
            }

            function O(a, b) {
                function c(a) {
                    return b.longDateFormat(a) || a
                }
                var d = 5;
                for (Ob.lastIndex = 0; d >= 0 && Ob.test(a);) a = a.replace(Ob, c), Ob.lastIndex = 0, d -= 1;
                return a
            }

            function P(a, b) {
                var c, d = b._strict;
                switch (a) {
                    case "Q":
                        return Zb;
                    case "DDDD":
                        return _b;
                    case "YYYY":
                    case "GGGG":
                    case "gggg":
                        return d ? ac : Rb;
                    case "Y":
                    case "G":
                    case "g":
                        return cc;
                    case "YYYYYY":
                    case "YYYYY":
                    case "GGGGG":
                    case "ggggg":
                        return d ? bc : Sb;
                    case "S":
                        if (d) return Zb;
                    case "SS":
                        if (d) return $b;
                    case "SSS":
                        if (d) return _b;
                    case "DDD":
                        return Qb;
                    case "MMM":
                    case "MMMM":
                    case "dd":
                    case "ddd":
                    case "dddd":
                        return Ub;
                    case "a":
                    case "A":
                        return b._locale._meridiemParse;
                    case "X":
                        return Xb;
                    case "Z":
                    case "ZZ":
                        return Vb;
                    case "T":
                        return Wb;
                    case "SSSS":
                        return Tb;
                    case "MM":
                    case "DD":
                    case "YY":
                    case "GG":
                    case "gg":
                    case "HH":
                    case "hh":
                    case "mm":
                    case "ss":
                    case "ww":
                    case "WW":
                        return d ? $b : Pb;
                    case "M":
                    case "D":
                    case "d":
                    case "H":
                    case "h":
                    case "m":
                    case "s":
                    case "w":
                    case "W":
                    case "e":
                    case "E":
                        return Pb;
                    case "Do":
                        return Yb;
                    default:
                        return c = new RegExp(Y(X(a.replace("\\", "")), "i"))
                }
            }

            function Q(a) {
                a = a || "";
                var b = a.match(Vb) || [],
                    c = b[b.length - 1] || [],
                    d = (c + "").match(hc) || ["-", 0, 0],
                    e = +(60 * d[1]) + A(d[2]);
                return "+" === d[0] ? -e : e
            }

            function R(a, b, c) {
                var d, e = c._a;
                switch (a) {
                    case "Q":
                        null != b && (e[Bb] = 3 * (A(b) - 1));
                        break;
                    case "M":
                    case "MM":
                        null != b && (e[Bb] = A(b) - 1);
                        break;
                    case "MMM":
                    case "MMMM":
                        d = c._locale.monthsParse(b), null != d ? e[Bb] = d : c._pf.invalidMonth = b;
                        break;
                    case "D":
                    case "DD":
                        null != b && (e[Cb] = A(b));
                        break;
                    case "Do":
                        null != b && (e[Cb] = A(parseInt(b, 10)));
                        break;
                    case "DDD":
                    case "DDDD":
                        null != b && (c._dayOfYear = A(b));
                        break;
                    case "YY":
                        e[Ab] = tb.parseTwoDigitYear(b);
                        break;
                    case "YYYY":
                    case "YYYYY":
                    case "YYYYYY":
                        e[Ab] = A(b);
                        break;
                    case "a":
                    case "A":
                        c._isPm = c._locale.isPM(b);
                        break;
                    case "H":
                    case "HH":
                    case "h":
                    case "hh":
                        e[Db] = A(b);
                        break;
                    case "m":
                    case "mm":
                        e[Eb] = A(b);
                        break;
                    case "s":
                    case "ss":
                        e[Fb] = A(b);
                        break;
                    case "S":
                    case "SS":
                    case "SSS":
                    case "SSSS":
                        e[Gb] = A(1e3 * ("0." + b));
                        break;
                    case "X":
                        c._d = new Date(1e3 * parseFloat(b));
                        break;
                    case "Z":
                    case "ZZ":
                        c._useUTC = !0, c._tzm = Q(b);
                        break;
                    case "dd":
                    case "ddd":
                    case "dddd":
                        d = c._locale.weekdaysParse(b), null != d ? (c._w = c._w || {}, c._w.d = d) : c._pf.invalidWeekday = b;
                        break;
                    case "w":
                    case "ww":
                    case "W":
                    case "WW":
                    case "d":
                    case "e":
                    case "E":
                        a = a.substr(0, 1);
                    case "gggg":
                    case "GGGG":
                    case "GGGGG":
                        a = a.substr(0, 2), b && (c._w = c._w || {}, c._w[a] = A(b));
                        break;
                    case "gg":
                    case "GG":
                        c._w = c._w || {}, c._w[a] = tb.parseTwoDigitYear(b)
                }
            }

            function S(a) {
                var c, d, e, f, g, h, i;
                c = a._w, null != c.GG || null != c.W || null != c.E ? (g = 1, h = 4, d = b(c.GG, a._a[Ab], hb(tb(), 1, 4).year), e = b(c.W, 1), f = b(c.E, 1)) : (g = a._locale._week.dow, h = a._locale._week.doy, d = b(c.gg, a._a[Ab], hb(tb(), g, h).year), e = b(c.w, 1), null != c.d ? (f = c.d, g > f && ++e) : f = null != c.e ? c.e + g : g), i = ib(d, e, f, h, g), a._a[Ab] = i.year, a._dayOfYear = i.dayOfYear
            }

            function T(a) {
                var c, d, e, f, g = [];
                if (!a._d) {
                    for (e = V(a), a._w && null == a._a[Cb] && null == a._a[Bb] && S(a), a._dayOfYear && (f = b(a._a[Ab], e[Ab]), a._dayOfYear > D(f) && (a._pf._overflowDayOfYear = !0), d = db(f, 0, a._dayOfYear), a._a[Bb] = d.getUTCMonth(), a._a[Cb] = d.getUTCDate()), c = 0; 3 > c && null == a._a[c]; ++c) a._a[c] = g[c] = e[c];
                    for (; 7 > c; c++) a._a[c] = g[c] = null == a._a[c] ? 2 === c ? 1 : 0 : a._a[c];
                    a._d = (a._useUTC ? db : cb).apply(null, g), null != a._tzm && a._d.setUTCMinutes(a._d.getUTCMinutes() + a._tzm)
                }
            }

            function U(a) {
                var b;
                a._d || (b = y(a._i), a._a = [b.year, b.month, b.day, b.hour, b.minute, b.second, b.millisecond], T(a))
            }

            function V(a) {
                var b = new Date;
                return a._useUTC ? [b.getUTCFullYear(), b.getUTCMonth(), b.getUTCDate()] : [b.getFullYear(), b.getMonth(), b.getDate()]
            }

            function W(a) {
                if (a._f === tb.ISO_8601) return $(a), void 0;
                a._a = [], a._pf.empty = !0;
                var b, c, d, e, f, g = "" + a._i,
                    h = g.length,
                    i = 0;
                for (d = O(a._f, a._locale).match(Nb) || [], b = 0; b < d.length; b++) e = d[b], c = (g.match(P(e, a)) || [])[0], c && (f = g.substr(0, g.indexOf(c)), f.length > 0 && a._pf.unusedInput.push(f), g = g.slice(g.indexOf(c) + c.length), i += c.length), pc[e] ? (c ? a._pf.empty = !1 : a._pf.unusedTokens.push(e), R(e, c, a)) : a._strict && !c && a._pf.unusedTokens.push(e);
                a._pf.charsLeftOver = h - i, g.length > 0 && a._pf.unusedInput.push(g), a._isPm && a._a[Db] < 12 && (a._a[Db] += 12), a._isPm === !1 && 12 === a._a[Db] && (a._a[Db] = 0), T(a), F(a)
            }

            function X(a) {
                return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(a, b, c, d, e) {
                    return b || c || d || e
                })
            }

            function Y(a) {
                return a.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
            }

            function Z(a) {
                var b, c, e, f, g;
                if (0 === a._f.length) return a._pf.invalidFormat = !0, a._d = new Date(0 / 0), void 0;
                for (f = 0; f < a._f.length; f++) g = 0, b = n({}, a), null != a._useUTC && (b._useUTC = a._useUTC), b._pf = d(), b._f = a._f[f], W(b), G(b) && (g += b._pf.charsLeftOver, g += 10 * b._pf.unusedTokens.length, b._pf.score = g, (null == e || e > g) && (e = g, c = b));
                m(a, c || b)
            }

            function $(a) {
                var b, c, d = a._i,
                    e = dc.exec(d);
                if (e) {
                    for (a._pf.iso = !0, b = 0, c = fc.length; c > b; b++)
                        if (fc[b][1].exec(d)) {
                            a._f = fc[b][0] + (e[6] || " ");
                            break
                        }
                    for (b = 0, c = gc.length; c > b; b++)
                        if (gc[b][1].exec(d)) {
                            a._f += gc[b][0];
                            break
                        }
                    d.match(Vb) && (a._f += "Z"), W(a)
                } else a._isValid = !1
            }

            function _(a) {
                $(a), a._isValid === !1 && (delete a._isValid, tb.createFromInputFallback(a))
            }

            function ab(a, b) {
                var c, d = [];
                for (c = 0; c < a.length; ++c) d.push(b(a[c], c));
                return d
            }

            function bb(b) {
                var c, d = b._i;
                d === a ? b._d = new Date : v(d) ? b._d = new Date(+d) : null !== (c = Kb.exec(d)) ? b._d = new Date(+c[1]) : "string" == typeof d ? _(b) : u(d) ? (b._a = ab(d.slice(0), function(a) {
                    return parseInt(a, 10)
                }), T(b)) : "object" == typeof d ? U(b) : "number" == typeof d ? b._d = new Date(d) : tb.createFromInputFallback(b)
            }

            function cb(a, b, c, d, e, f, g) {
                var h = new Date(a, b, c, d, e, f, g);
                return 1970 > a && h.setFullYear(a), h
            }

            function db(a) {
                var b = new Date(Date.UTC.apply(null, arguments));
                return 1970 > a && b.setUTCFullYear(a), b
            }

            function eb(a, b) {
                if ("string" == typeof a)
                    if (isNaN(a)) {
                        if (a = b.weekdaysParse(a), "number" != typeof a) return null
                    } else a = parseInt(a, 10);
                return a
            }

            function fb(a, b, c, d, e) {
                return e.relativeTime(b || 1, !!c, a, d)
            }

            function gb(a, b, c) {
                var d = tb.duration(a).abs(),
                    e = yb(d.as("s")),
                    f = yb(d.as("m")),
                    g = yb(d.as("h")),
                    h = yb(d.as("d")),
                    i = yb(d.as("M")),
                    j = yb(d.as("y")),
                    k = e < mc.s && ["s", e] || 1 === f && ["m"] || f < mc.m && ["mm", f] || 1 === g && ["h"] || g < mc.h && ["hh", g] || 1 === h && ["d"] || h < mc.d && ["dd", h] || 1 === i && ["M"] || i < mc.M && ["MM", i] || 1 === j && ["y"] || ["yy", j];
                return k[2] = b, k[3] = +a > 0, k[4] = c, fb.apply({}, k)
            }

            function hb(a, b, c) {
                var d, e = c - b,
                    f = c - a.day();
                return f > e && (f -= 7), e - 7 > f && (f += 7), d = tb(a).add(f, "d"), {
                    week: Math.ceil(d.dayOfYear() / 7),
                    year: d.year()
                }
            }

            function ib(a, b, c, d, e) {
                var f, g, h = db(a, 0, 1).getUTCDay();
                return h = 0 === h ? 7 : h, c = null != c ? c : e, f = e - h + (h > d ? 7 : 0) - (e > h ? 7 : 0), g = 7 * (b - 1) + (c - e) + f + 1, {
                    year: g > 0 ? a : a - 1,
                    dayOfYear: g > 0 ? g : D(a - 1) + g
                }
            }

            function jb(b) {
                var c = b._i,
                    d = b._f;
                return b._locale = b._locale || tb.localeData(b._l), null === c || d === a && "" === c ? tb.invalid({
                    nullInput: !0
                }) : ("string" == typeof c && (b._i = c = b._locale.preparse(c)), tb.isMoment(c) ? new k(c, !0) : (d ? u(d) ? Z(b) : W(b) : bb(b), new k(b)))
            }

            function kb(a, b) {
                var c, d;
                if (1 === b.length && u(b[0]) && (b = b[0]), !b.length) return tb();
                for (c = b[0], d = 1; d < b.length; ++d) b[d][a](c) && (c = b[d]);
                return c
            }

            function lb(a, b) {
                var c;
                return "string" == typeof b && (b = a.localeData().monthsParse(b), "number" != typeof b) ? a : (c = Math.min(a.date(), B(a.year(), b)), a._d["set" + (a._isUTC ? "UTC" : "") + "Month"](b, c), a)
            }

            function mb(a, b) {
                return a._d["get" + (a._isUTC ? "UTC" : "") + b]()
            }

            function nb(a, b, c) {
                return "Month" === b ? lb(a, c) : a._d["set" + (a._isUTC ? "UTC" : "") + b](c)
            }

            function ob(a, b) {
                return function(c) {
                    return null != c ? (nb(this, a, c), tb.updateOffset(this, b), this) : mb(this, a)
                }
            }

            function pb(a) {
                return 400 * a / 146097
            }

            function qb(a) {
                return 146097 * a / 400
            }

            function rb(a) {
                tb.duration.fn[a] = function() {
                    return this._data[a]
                }
            }

            function sb(a) {
                "undefined" == typeof ender && (ub = xb.moment, xb.moment = a ? f("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.", tb) : tb)
            }
            for (var tb, ub, vb, wb = "2.8.3", xb = "undefined" != typeof global ? global : this, yb = Math.round, zb = Object.prototype.hasOwnProperty, Ab = 0, Bb = 1, Cb = 2, Db = 3, Eb = 4, Fb = 5, Gb = 6, Hb = {}, Ib = [], Jb = "undefined" != typeof module && module.exports, Kb = /^\/?Date\((\-?\d+)/i, Lb = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/, Mb = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/, Nb = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g, Ob = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g, Pb = /\d\d?/, Qb = /\d{1,3}/, Rb = /\d{1,4}/, Sb = /[+\-]?\d{1,6}/, Tb = /\d+/, Ub = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, Vb = /Z|[\+\-]\d\d:?\d\d/gi, Wb = /T/i, Xb = /[\+\-]?\d+(\.\d{1,3})?/, Yb = /\d{1,2}/, Zb = /\d/, $b = /\d\d/, _b = /\d{3}/, ac = /\d{4}/, bc = /[+-]?\d{6}/, cc = /[+-]?\d+/, dc = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/, ec = "YYYY-MM-DDTHH:mm:ssZ", fc = [
                    ["YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/],
                    ["YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/],
                    ["GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/],
                    ["GGGG-[W]WW", /\d{4}-W\d{2}/],
                    ["YYYY-DDD", /\d{4}-\d{3}/]
                ], gc = [
                    ["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/],
                    ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],
                    ["HH:mm", /(T| )\d\d:\d\d/],
                    ["HH", /(T| )\d\d/]
                ], hc = /([\+\-]|\d\d)/gi, ic = ("Date|Hours|Minutes|Seconds|Milliseconds".split("|"), {
                    Milliseconds: 1,
                    Seconds: 1e3,
                    Minutes: 6e4,
                    Hours: 36e5,
                    Days: 864e5,
                    Months: 2592e6,
                    Years: 31536e6
                }), jc = {
                    ms: "millisecond",
                    s: "second",
                    m: "minute",
                    h: "hour",
                    d: "day",
                    D: "date",
                    w: "week",
                    W: "isoWeek",
                    M: "month",
                    Q: "quarter",
                    y: "year",
                    DDD: "dayOfYear",
                    e: "weekday",
                    E: "isoWeekday",
                    gg: "weekYear",
                    GG: "isoWeekYear"
                }, kc = {
                    dayofyear: "dayOfYear",
                    isoweekday: "isoWeekday",
                    isoweek: "isoWeek",
                    weekyear: "weekYear",
                    isoweekyear: "isoWeekYear"
                }, lc = {}, mc = {
                    s: 45,
                    m: 45,
                    h: 22,
                    d: 26,
                    M: 11
                }, nc = "DDD w W M D d".split(" "), oc = "M D H h m s w W".split(" "), pc = {
                    M: function() {
                        return this.month() + 1
                    },
                    MMM: function(a) {
                        return this.localeData().monthsShort(this, a)
                    },
                    MMMM: function(a) {
                        return this.localeData().months(this, a)
                    },
                    D: function() {
                        return this.date()
                    },
                    DDD: function() {
                        return this.dayOfYear()
                    },
                    d: function() {
                        return this.day()
                    },
                    dd: function(a) {
                        return this.localeData().weekdaysMin(this, a)
                    },
                    ddd: function(a) {
                        return this.localeData().weekdaysShort(this, a)
                    },
                    dddd: function(a) {
                        return this.localeData().weekdays(this, a)
                    },
                    w: function() {
                        return this.week()
                    },
                    W: function() {
                        return this.isoWeek()
                    },
                    YY: function() {
                        return p(this.year() % 100, 2)
                    },
                    YYYY: function() {
                        return p(this.year(), 4)
                    },
                    YYYYY: function() {
                        return p(this.year(), 5)
                    },
                    YYYYYY: function() {
                        var a = this.year(),
                            b = a >= 0 ? "+" : "-";
                        return b + p(Math.abs(a), 6)
                    },
                    gg: function() {
                        return p(this.weekYear() % 100, 2)
                    },
                    gggg: function() {
                        return p(this.weekYear(), 4)
                    },
                    ggggg: function() {
                        return p(this.weekYear(), 5)
                    },
                    GG: function() {
                        return p(this.isoWeekYear() % 100, 2)
                    },
                    GGGG: function() {
                        return p(this.isoWeekYear(), 4)
                    },
                    GGGGG: function() {
                        return p(this.isoWeekYear(), 5)
                    },
                    e: function() {
                        return this.weekday()
                    },
                    E: function() {
                        return this.isoWeekday()
                    },
                    a: function() {
                        return this.localeData().meridiem(this.hours(), this.minutes(), !0)
                    },
                    A: function() {
                        return this.localeData().meridiem(this.hours(), this.minutes(), !1)
                    },
                    H: function() {
                        return this.hours()
                    },
                    h: function() {
                        return this.hours() % 12 || 12
                    },
                    m: function() {
                        return this.minutes()
                    },
                    s: function() {
                        return this.seconds()
                    },
                    S: function() {
                        return A(this.milliseconds() / 100)
                    },
                    SS: function() {
                        return p(A(this.milliseconds() / 10), 2)
                    },
                    SSS: function() {
                        return p(this.milliseconds(), 3)
                    },
                    SSSS: function() {
                        return p(this.milliseconds(), 3)
                    },
                    Z: function() {
                        var a = -this.zone(),
                            b = "+";
                        return 0 > a && (a = -a, b = "-"), b + p(A(a / 60), 2) + ":" + p(A(a) % 60, 2)
                    },
                    ZZ: function() {
                        var a = -this.zone(),
                            b = "+";
                        return 0 > a && (a = -a, b = "-"), b + p(A(a / 60), 2) + p(A(a) % 60, 2)
                    },
                    z: function() {
                        return this.zoneAbbr()
                    },
                    zz: function() {
                        return this.zoneName()
                    },
                    X: function() {
                        return this.unix()
                    },
                    Q: function() {
                        return this.quarter()
                    }
                }, qc = {}, rc = ["months", "monthsShort", "weekdays", "weekdaysShort", "weekdaysMin"]; nc.length;) vb = nc.pop(), pc[vb + "o"] = i(pc[vb], vb);
            for (; oc.length;) vb = oc.pop(), pc[vb + vb] = h(pc[vb], 2);
            pc.DDDD = h(pc.DDD, 3), m(j.prototype, {
                set: function(a) {
                    var b, c;
                    for (c in a) b = a[c], "function" == typeof b ? this[c] = b : this["_" + c] = b
                },
                _months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                months: function(a) {
                    return this._months[a.month()]
                },
                _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                monthsShort: function(a) {
                    return this._monthsShort[a.month()]
                },
                monthsParse: function(a) {
                    var b, c, d;
                    for (this._monthsParse || (this._monthsParse = []), b = 0; 12 > b; b++)
                        if (this._monthsParse[b] || (c = tb.utc([2e3, b]), d = "^" + this.months(c, "") + "|^" + this.monthsShort(c, ""), this._monthsParse[b] = new RegExp(d.replace(".", ""), "i")), this._monthsParse[b].test(a)) return b
                },
                _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                weekdays: function(a) {
                    return this._weekdays[a.day()]
                },
                _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                weekdaysShort: function(a) {
                    return this._weekdaysShort[a.day()]
                },
                _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                weekdaysMin: function(a) {
                    return this._weekdaysMin[a.day()]
                },
                weekdaysParse: function(a) {
                    var b, c, d;
                    for (this._weekdaysParse || (this._weekdaysParse = []), b = 0; 7 > b; b++)
                        if (this._weekdaysParse[b] || (c = tb([2e3, 1]).day(b), d = "^" + this.weekdays(c, "") + "|^" + this.weekdaysShort(c, "") + "|^" + this.weekdaysMin(c, ""), this._weekdaysParse[b] = new RegExp(d.replace(".", ""), "i")), this._weekdaysParse[b].test(a)) return b
                },
                _longDateFormat: {
                    LT: "h:mm A",
                    L: "MM/DD/YYYY",
                    LL: "MMMM D, YYYY",
                    LLL: "MMMM D, YYYY LT",
                    LLLL: "dddd, MMMM D, YYYY LT"
                },
                longDateFormat: function(a) {
                    var b = this._longDateFormat[a];
                    return !b && this._longDateFormat[a.toUpperCase()] && (b = this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function(a) {
                        return a.slice(1)
                    }), this._longDateFormat[a] = b), b
                },
                isPM: function(a) {
                    return "p" === (a + "").toLowerCase().charAt(0)
                },
                _meridiemParse: /[ap]\.?m?\.?/i,
                meridiem: function(a, b, c) {
                    return a > 11 ? c ? "pm" : "PM" : c ? "am" : "AM"
                },
                _calendar: {
                    sameDay: "[Today at] LT",
                    nextDay: "[Tomorrow at] LT",
                    nextWeek: "dddd [at] LT",
                    lastDay: "[Yesterday at] LT",
                    lastWeek: "[Last] dddd [at] LT",
                    sameElse: "L"
                },
                calendar: function(a, b) {
                    var c = this._calendar[a];
                    return "function" == typeof c ? c.apply(b) : c
                },
                _relativeTime: {
                    future: "in %s",
                    past: "%s ago",
                    s: "a few seconds",
                    m: "a minute",
                    mm: "%d minutes",
                    h: "an hour",
                    hh: "%d hours",
                    d: "a day",
                    dd: "%d days",
                    M: "a month",
                    MM: "%d months",
                    y: "a year",
                    yy: "%d years"
                },
                relativeTime: function(a, b, c, d) {
                    var e = this._relativeTime[c];
                    return "function" == typeof e ? e(a, b, c, d) : e.replace(/%d/i, a)
                },
                pastFuture: function(a, b) {
                    var c = this._relativeTime[a > 0 ? "future" : "past"];
                    return "function" == typeof c ? c(b) : c.replace(/%s/i, b)
                },
                ordinal: function(a) {
                    return this._ordinal.replace("%d", a)
                },
                _ordinal: "%d",
                preparse: function(a) {
                    return a
                },
                postformat: function(a) {
                    return a
                },
                week: function(a) {
                    return hb(a, this._week.dow, this._week.doy).week
                },
                _week: {
                    dow: 0,
                    doy: 6
                },
                _invalidDate: "Invalid date",
                invalidDate: function() {
                    return this._invalidDate
                }
            }), tb = function(b, c, e, f) {
                var g;
                return "boolean" == typeof e && (f = e, e = a), g = {}, g._isAMomentObject = !0, g._i = b, g._f = c, g._l = e, g._strict = f, g._isUTC = !1, g._pf = d(), jb(g)
            }, tb.suppressDeprecationWarnings = !1, tb.createFromInputFallback = f("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.", function(a) {
                a._d = new Date(a._i)
            }), tb.min = function() {
                var a = [].slice.call(arguments, 0);
                return kb("isBefore", a)
            }, tb.max = function() {
                var a = [].slice.call(arguments, 0);
                return kb("isAfter", a)
            }, tb.utc = function(b, c, e, f) {
                var g;
                return "boolean" == typeof e && (f = e, e = a), g = {}, g._isAMomentObject = !0, g._useUTC = !0, g._isUTC = !0, g._l = e, g._i = b, g._f = c, g._strict = f, g._pf = d(), jb(g).utc()
            }, tb.unix = function(a) {
                return tb(1e3 * a)
            }, tb.duration = function(a, b) {
                var d, e, f, g, h = a,
                    i = null;
                return tb.isDuration(a) ? h = {
                    ms: a._milliseconds,
                    d: a._days,
                    M: a._months
                } : "number" == typeof a ? (h = {}, b ? h[b] = a : h.milliseconds = a) : (i = Lb.exec(a)) ? (d = "-" === i[1] ? -1 : 1, h = {
                    y: 0,
                    d: A(i[Cb]) * d,
                    h: A(i[Db]) * d,
                    m: A(i[Eb]) * d,
                    s: A(i[Fb]) * d,
                    ms: A(i[Gb]) * d
                }) : (i = Mb.exec(a)) ? (d = "-" === i[1] ? -1 : 1, f = function(a) {
                    var b = a && parseFloat(a.replace(",", "."));
                    return (isNaN(b) ? 0 : b) * d
                }, h = {
                    y: f(i[2]),
                    M: f(i[3]),
                    d: f(i[4]),
                    h: f(i[5]),
                    m: f(i[6]),
                    s: f(i[7]),
                    w: f(i[8])
                }) : "object" == typeof h && ("from" in h || "to" in h) && (g = r(tb(h.from), tb(h.to)), h = {}, h.ms = g.milliseconds, h.M = g.months), e = new l(h), tb.isDuration(a) && c(a, "_locale") && (e._locale = a._locale), e
            }, tb.version = wb, tb.defaultFormat = ec, tb.ISO_8601 = function() {}, tb.momentProperties = Ib, tb.updateOffset = function() {}, tb.relativeTimeThreshold = function(b, c) {
                return mc[b] === a ? !1 : c === a ? mc[b] : (mc[b] = c, !0)
            }, tb.lang = f("moment.lang is deprecated. Use moment.locale instead.", function(a, b) {
                return tb.locale(a, b)
            }), tb.locale = function(a, b) {
                var c;
                return a && (c = "undefined" != typeof b ? tb.defineLocale(a, b) : tb.localeData(a), c && (tb.duration._locale = tb._locale = c)), tb._locale._abbr
            }, tb.defineLocale = function(a, b) {
                return null !== b ? (b.abbr = a, Hb[a] || (Hb[a] = new j), Hb[a].set(b), tb.locale(a), Hb[a]) : (delete Hb[a], null)
            }, tb.langData = f("moment.langData is deprecated. Use moment.localeData instead.", function(a) {
                return tb.localeData(a)
            }), tb.localeData = function(a) {
                var b;
                if (a && a._locale && a._locale._abbr && (a = a._locale._abbr), !a) return tb._locale;
                if (!u(a)) {
                    if (b = J(a)) return b;
                    a = [a]
                }
                return I(a)
            }, tb.isMoment = function(a) {
                return a instanceof k || null != a && c(a, "_isAMomentObject")
            }, tb.isDuration = function(a) {
                return a instanceof l
            };
            for (vb = rc.length - 1; vb >= 0; --vb) z(rc[vb]);
            tb.normalizeUnits = function(a) {
                return x(a)
            }, tb.invalid = function(a) {
                var b = tb.utc(0 / 0);
                return null != a ? m(b._pf, a) : b._pf.userInvalidated = !0, b
            }, tb.parseZone = function() {
                return tb.apply(null, arguments).parseZone()
            }, tb.parseTwoDigitYear = function(a) {
                return A(a) + (A(a) > 68 ? 1900 : 2e3)
            }, m(tb.fn = k.prototype, {
                clone: function() {
                    return tb(this)
                },
                valueOf: function() {
                    return +this._d + 6e4 * (this._offset || 0)
                },
                unix: function() {
                    return Math.floor(+this / 1e3)
                },
                toString: function() {
                    return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
                },
                toDate: function() {
                    return this._offset ? new Date(+this) : this._d
                },
                toISOString: function() {
                    var a = tb(this).utc();
                    return 0 < a.year() && a.year() <= 9999 ? N(a, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") : N(a, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
                },
                toArray: function() {
                    var a = this;
                    return [a.year(), a.month(), a.date(), a.hours(), a.minutes(), a.seconds(), a.milliseconds()]
                },
                isValid: function() {
                    return G(this)
                },
                isDSTShifted: function() {
                    return this._a ? this.isValid() && w(this._a, (this._isUTC ? tb.utc(this._a) : tb(this._a)).toArray()) > 0 : !1
                },
                parsingFlags: function() {
                    return m({}, this._pf)
                },
                invalidAt: function() {
                    return this._pf.overflow
                },
                utc: function(a) {
                    return this.zone(0, a)
                },
                local: function(a) {
                    return this._isUTC && (this.zone(0, a), this._isUTC = !1, a && this.add(this._dateTzOffset(), "m")), this
                },
                format: function(a) {
                    var b = N(this, a || tb.defaultFormat);
                    return this.localeData().postformat(b)
                },
                add: s(1, "add"),
                subtract: s(-1, "subtract"),
                diff: function(a, b, c) {
                    var d, e, f, g = K(a, this),
                        h = 6e4 * (this.zone() - g.zone());
                    return b = x(b), "year" === b || "month" === b ? (d = 432e5 * (this.daysInMonth() + g.daysInMonth()), e = 12 * (this.year() - g.year()) + (this.month() - g.month()), f = this - tb(this).startOf("month") - (g - tb(g).startOf("month")), f -= 6e4 * (this.zone() - tb(this).startOf("month").zone() - (g.zone() - tb(g).startOf("month").zone())), e += f / d, "year" === b && (e /= 12)) : (d = this - g, e = "second" === b ? d / 1e3 : "minute" === b ? d / 6e4 : "hour" === b ? d / 36e5 : "day" === b ? (d - h) / 864e5 : "week" === b ? (d - h) / 6048e5 : d), c ? e : o(e)
                },
                from: function(a, b) {
                    return tb.duration({
                        to: this,
                        from: a
                    }).locale(this.locale()).humanize(!b)
                },
                fromNow: function(a) {
                    return this.from(tb(), a)
                },
                calendar: function(a) {
                    var b = a || tb(),
                        c = K(b, this).startOf("day"),
                        d = this.diff(c, "days", !0),
                        e = -6 > d ? "sameElse" : -1 > d ? "lastWeek" : 0 > d ? "lastDay" : 1 > d ? "sameDay" : 2 > d ? "nextDay" : 7 > d ? "nextWeek" : "sameElse";
                    return this.format(this.localeData().calendar(e, this))
                },
                isLeapYear: function() {
                    return E(this.year())
                },
                isDST: function() {
                    return this.zone() < this.clone().month(0).zone() || this.zone() < this.clone().month(5).zone()
                },
                day: function(a) {
                    var b = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
                    return null != a ? (a = eb(a, this.localeData()), this.add(a - b, "d")) : b
                },
                month: ob("Month", !0),
                startOf: function(a) {
                    switch (a = x(a)) {
                        case "year":
                            this.month(0);
                        case "quarter":
                        case "month":
                            this.date(1);
                        case "week":
                        case "isoWeek":
                        case "day":
                            this.hours(0);
                        case "hour":
                            this.minutes(0);
                        case "minute":
                            this.seconds(0);
                        case "second":
                            this.milliseconds(0)
                    }
                    return "week" === a ? this.weekday(0) : "isoWeek" === a && this.isoWeekday(1), "quarter" === a && this.month(3 * Math.floor(this.month() / 3)), this
                },
                endOf: function(a) {
                    return a = x(a), this.startOf(a).add(1, "isoWeek" === a ? "week" : a).subtract(1, "ms")
                },
                isAfter: function(a, b) {
                    return b = x("undefined" != typeof b ? b : "millisecond"), "millisecond" === b ? (a = tb.isMoment(a) ? a : tb(a), +this > +a) : +this.clone().startOf(b) > +tb(a).startOf(b)
                },
                isBefore: function(a, b) {
                    return b = x("undefined" != typeof b ? b : "millisecond"), "millisecond" === b ? (a = tb.isMoment(a) ? a : tb(a), +a > +this) : +this.clone().startOf(b) < +tb(a).startOf(b)
                },
                isSame: function(a, b) {
                    return b = x(b || "millisecond"), "millisecond" === b ? (a = tb.isMoment(a) ? a : tb(a), +this === +a) : +this.clone().startOf(b) === +K(a, this).startOf(b)
                },
                min: f("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548", function(a) {
                    return a = tb.apply(null, arguments), this > a ? this : a
                }),
                max: f("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548", function(a) {
                    return a = tb.apply(null, arguments), a > this ? this : a
                }),
                zone: function(a, b) {
                    var c, d = this._offset || 0;
                    return null == a ? this._isUTC ? d : this._dateTzOffset() : ("string" == typeof a && (a = Q(a)), Math.abs(a) < 16 && (a = 60 * a), !this._isUTC && b && (c = this._dateTzOffset()), this._offset = a, this._isUTC = !0, null != c && this.subtract(c, "m"), d !== a && (!b || this._changeInProgress ? t(this, tb.duration(d - a, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, tb.updateOffset(this, !0), this._changeInProgress = null)), this)
                },
                zoneAbbr: function() {
                    return this._isUTC ? "UTC" : ""
                },
                zoneName: function() {
                    return this._isUTC ? "Coordinated Universal Time" : ""
                },
                parseZone: function() {
                    return this._tzm ? this.zone(this._tzm) : "string" == typeof this._i && this.zone(this._i), this
                },
                hasAlignedHourOffset: function(a) {
                    return a = a ? tb(a).zone() : 0, 0 === (this.zone() - a) % 60
                },
                daysInMonth: function() {
                    return B(this.year(), this.month())
                },
                dayOfYear: function(a) {
                    var b = yb((tb(this).startOf("day") - tb(this).startOf("year")) / 864e5) + 1;
                    return null == a ? b : this.add(a - b, "d")
                },
                quarter: function(a) {
                    return null == a ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (a - 1) + this.month() % 3)
                },
                weekYear: function(a) {
                    var b = hb(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
                    return null == a ? b : this.add(a - b, "y")
                },
                isoWeekYear: function(a) {
                    var b = hb(this, 1, 4).year;
                    return null == a ? b : this.add(a - b, "y")
                },
                week: function(a) {
                    var b = this.localeData().week(this);
                    return null == a ? b : this.add(7 * (a - b), "d")
                },
                isoWeek: function(a) {
                    var b = hb(this, 1, 4).week;
                    return null == a ? b : this.add(7 * (a - b), "d")
                },
                weekday: function(a) {
                    var b = (this.day() + 7 - this.localeData()._week.dow) % 7;
                    return null == a ? b : this.add(a - b, "d")
                },
                isoWeekday: function(a) {
                    return null == a ? this.day() || 7 : this.day(this.day() % 7 ? a : a - 7)
                },
                isoWeeksInYear: function() {
                    return C(this.year(), 1, 4)
                },
                weeksInYear: function() {
                    var a = this.localeData()._week;
                    return C(this.year(), a.dow, a.doy)
                },
                get: function(a) {
                    return a = x(a), this[a]()
                },
                set: function(a, b) {
                    return a = x(a), "function" == typeof this[a] && this[a](b), this
                },
                locale: function(b) {
                    var c;
                    return b === a ? this._locale._abbr : (c = tb.localeData(b), null != c && (this._locale = c), this)
                },
                lang: f("moment().lang() is deprecated. Use moment().localeData() instead.", function(b) {
                    return b === a ? this.localeData() : this.locale(b)
                }),
                localeData: function() {
                    return this._locale
                },
                _dateTzOffset: function() {
                    return 15 * Math.round(this._d.getTimezoneOffset() / 15)
                }
            }), tb.fn.millisecond = tb.fn.milliseconds = ob("Milliseconds", !1), tb.fn.second = tb.fn.seconds = ob("Seconds", !1), tb.fn.minute = tb.fn.minutes = ob("Minutes", !1), tb.fn.hour = tb.fn.hours = ob("Hours", !0), tb.fn.date = ob("Date", !0), tb.fn.dates = f("dates accessor is deprecated. Use date instead.", ob("Date", !0)), tb.fn.year = ob("FullYear", !0), tb.fn.years = f("years accessor is deprecated. Use year instead.", ob("FullYear", !0)), tb.fn.days = tb.fn.day, tb.fn.months = tb.fn.month, tb.fn.weeks = tb.fn.week, tb.fn.isoWeeks = tb.fn.isoWeek, tb.fn.quarters = tb.fn.quarter, tb.fn.toJSON = tb.fn.toISOString, m(tb.duration.fn = l.prototype, {
                _bubble: function() {
                    var a, b, c, d = this._milliseconds,
                        e = this._days,
                        f = this._months,
                        g = this._data,
                        h = 0;
                    g.milliseconds = d % 1e3, a = o(d / 1e3), g.seconds = a % 60, b = o(a / 60), g.minutes = b % 60, c = o(b / 60), g.hours = c % 24, e += o(c / 24), h = o(pb(e)), e -= o(qb(h)), f += o(e / 30), e %= 30, h += o(f / 12), f %= 12, g.days = e, g.months = f, g.years = h
                },
                abs: function() {
                    return this._milliseconds = Math.abs(this._milliseconds), this._days = Math.abs(this._days), this._months = Math.abs(this._months), this._data.milliseconds = Math.abs(this._data.milliseconds), this._data.seconds = Math.abs(this._data.seconds), this._data.minutes = Math.abs(this._data.minutes), this._data.hours = Math.abs(this._data.hours), this._data.months = Math.abs(this._data.months), this._data.years = Math.abs(this._data.years), this
                },
                weeks: function() {
                    return o(this.days() / 7)
                },
                valueOf: function() {
                    return this._milliseconds + 864e5 * this._days + 2592e6 * (this._months % 12) + 31536e6 * A(this._months / 12)
                },
                humanize: function(a) {
                    var b = gb(this, !a, this.localeData());
                    return a && (b = this.localeData().pastFuture(+this, b)), this.localeData().postformat(b)
                },
                add: function(a, b) {
                    var c = tb.duration(a, b);
                    return this._milliseconds += c._milliseconds, this._days += c._days, this._months += c._months, this._bubble(), this
                },
                subtract: function(a, b) {
                    var c = tb.duration(a, b);
                    return this._milliseconds -= c._milliseconds, this._days -= c._days, this._months -= c._months, this._bubble(), this
                },
                get: function(a) {
                    return a = x(a), this[a.toLowerCase() + "s"]()
                },
                as: function(a) {
                    var b, c;
                    if (a = x(a), "month" === a || "year" === a) return b = this._days + this._milliseconds / 864e5, c = this._months + 12 * pb(b), "month" === a ? c : c / 12;
                    switch (b = this._days + qb(this._months / 12), a) {
                        case "week":
                            return b / 7 + this._milliseconds / 6048e5;
                        case "day":
                            return b + this._milliseconds / 864e5;
                        case "hour":
                            return 24 * b + this._milliseconds / 36e5;
                        case "minute":
                            return 60 * 24 * b + this._milliseconds / 6e4;
                        case "second":
                            return 60 * 60 * 24 * b + this._milliseconds / 1e3;
                        case "millisecond":
                            return Math.floor(1e3 * 60 * 60 * 24 * b) + this._milliseconds;
                        default:
                            throw new Error("Unknown unit " + a)
                    }
                },
                lang: tb.fn.lang,
                locale: tb.fn.locale,
                toIsoString: f("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", function() {
                    return this.toISOString()
                }),
                toISOString: function() {
                    var a = Math.abs(this.years()),
                        b = Math.abs(this.months()),
                        c = Math.abs(this.days()),
                        d = Math.abs(this.hours()),
                        e = Math.abs(this.minutes()),
                        f = Math.abs(this.seconds() + this.milliseconds() / 1e3);
                    return this.asSeconds() ? (this.asSeconds() < 0 ? "-" : "") + "P" + (a ? a + "Y" : "") + (b ? b + "M" : "") + (c ? c + "D" : "") + (d || e || f ? "T" : "") + (d ? d + "H" : "") + (e ? e + "M" : "") + (f ? f + "S" : "") : "P0D"
                },
                localeData: function() {
                    return this._locale
                }
            }), tb.duration.fn.toString = tb.duration.fn.toISOString;
            for (vb in ic) c(ic, vb) && rb(vb.toLowerCase());
            tb.duration.fn.asMilliseconds = function() {
                return this.as("ms")
            }, tb.duration.fn.asSeconds = function() {
                return this.as("s")
            }, tb.duration.fn.asMinutes = function() {
                return this.as("m")
            }, tb.duration.fn.asHours = function() {
                return this.as("h")
            }, tb.duration.fn.asDays = function() {
                return this.as("d")
            }, tb.duration.fn.asWeeks = function() {
                return this.as("weeks")
            }, tb.duration.fn.asMonths = function() {
                return this.as("M")
            }, tb.duration.fn.asYears = function() {
                return this.as("y")
            }, tb.locale("en", {
                ordinal: function(a) {
                    var b = a % 10,
                        c = 1 === A(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th";
                    return a + c
                }
            }), Jb ? module.exports = tb : "function" == typeof define && define.amd ? (define("moment", ["require", "exports", "module"], function(a, b, c) {
                return c.config && c.config() && c.config().noGlobal === !0 && (xb.moment = ub), tb
            }), sb(!0)) : sb()
        }.call(this), define("app/models/StateModel", ["require", "lavaca/mvc/Model", "app/env/Config", "moment"], function(a) {
            var b = a("lavaca/mvc/Model"),
                c = a("app/env/Config"),
                d = a("moment"),
                e = b.extend(function() {
                    b.call(this, arguments), this.set("activeDate", d().format("YYYY-MM-DD")), this.set("accountActivation", !c.disableActivation), this.set("demoMode", !1), this.set("hasSeenAlert", !1), this.set("toggleView", "Chart View")
                }, {
                    isNewFetchDate: function() {
                        var a = d(),
                            b = d(this.get("activeDate"));
                        return 0 !== a.diff(b, "days") ? (this.set("activeDate", a.format("YYYY-MM-DD")), !0) : !1
                    },
                    getRegistrationState: function() {
                        if (this.get("demoMode")) return "13";
                        var a = !1;
                        if (Modernizr.localstorage && (a = localStorage.getItem("registrationState")), a && !isNaN(a)) {
                            switch (a = parseInt(a, 10)) {
                                case 0:
                                    a = "10";
                                    break;
                                case 1:
                                    a = "10";
                                    break;
                                case 2:
                                    a = "10";
                                    break;
                                case 3:
                                    a = "11";
                                    break;
                                case 4:
                                    a = "13"
                            }
                            a && this.trigger("updateState", {
                                state: a + ""
                            })
                        }
                        return a + ""
                    }
                });
            return new e
        }), define("mout/lang/isString", ["./isKind"], function(a) {
            function b(b) {
                return a(b, "String")
            }
            return b
        }), define("mout/lang/isBoolean", ["./isKind"], function(a) {
            function b(b) {
                return a(b, "Boolean")
            }
            return b
        }), define("mout/lang/isArray", ["./isKind"], function(a) {
            var b = Array.isArray || function(b) {
                return a(b, "Array")
            };
            return b
        }), define("lavaca/mvc/ChildViewManager", ["require", "$", "lavaca/util/Cache", "lavaca/util/Disposable", "mout/array/contains", "lavaca/net/History", "mout/array/removeAll"], function(a) {
            function b(a) {
                var b = !1;
                if (this.routes)
                    for (var c in this.routes)(c === a || this.routes[c].step === a) && (b = c);
                return b
            }

            function c(a, b) {
                if (b && b.childViewSelector === this.elName) {
                    if ("back" === b.route || "#back" === b.route) return this.back(), void 0;
                    if ("stepback" === b.route || "#stepback" === b.route) return this.stepback(), void 0;
                    this.exec(b.route)
                }
            }
            var d = a("$"),
                e = a("lavaca/util/Cache"),
                f = a("lavaca/util/Disposable"),
                g = a("mout/array/contains"),
                h = a("lavaca/net/History"),
                i = a("mout/array/removeAll"),
                j = f.extend(function(a, b, g) {
                    if (f.call(this), this.childViews = new e, this.layers = [], this.exitingViews = [], this.enteringViews = [], this.routes = {}, this.elName = a, this.parentView = g, "object" != typeof b) return console.warn("You must pass mapChildViewManager an element string and object of the routes."), void 0;
                    for (var h in b) this.routes[h] = {
                        TView: b[h].TView,
                        model: b[h].model,
                        step: b[h].step
                    };
                    d(window).on("cvmexec." + this.id, c.bind(this))
                }, {
                    history: [],
                    animationBreadcrumb: [],
                    step: 1,
                    initialStep: 1,
                    routes: [],
                    currentView: !1,
                    isRoutingBack: !1,
                    init: function(a) {
                        this.el = a.find(this.elName), this.el.addClass("cvm"), this.exec()
                    },
                    back: function() {
                        if (!this.history || this.history.length - 1 <= 0) h.back();
                        else {
                            this.history.pop();
                            var a = this.history.pop();
                            this.isRoutingBack = !0;
                            var b = function() {
                                this.isRoutingBack = !1
                            }.bind(this);
                            this.exec(a).then(b, b)
                        }
                    },
                    stepBack: function() {
                        if (this.history.length > 1) {
                            var a = b.call(this, this.history[this.history.length - 1]);
                            this.routes[a].step !== this.initialStep ? this.back() : h.back()
                        } else this.back()
                    },
                    exec: function(a) {
                        if (a || (a = 1), a = b.call(this, a)) {
                            this.history.push(a);
                            var c = this.routes[a].TView,
                                d = this.routes[a].model,
                                e = c.prototype.layer || 0,
                                f = new c(null, d, this.parentView);
                            return f.layer = e, f.render().then(function() {
                                return this.currentView = f, this.enteringViews = [f], Promise.all([function() {
                                    return this.layers[e] !== f ? f.enter(this.el, this.exitingViews) : Promise.resolve()
                                }.bind(this)(), function() {
                                    return this.dismissLayersAbove(e - 1, f)
                                }.bind(this)()])
                            }.bind(this)).then(function() {
                                this.enteringPageViews = [], this.step = this.routes[a].step, this.layers[e] = f, this.parentView && this.parentView.onChildViewManagerExec && "function" == typeof this.parentView.onChildViewManagerExec && this.parentView.onChildViewManagerExec(a, this.step)
                            }.bind(this))
                        }
                    },
                    dismiss: function(a) {
                        if ("number" == typeof a) return this.dismissLayersAbove(a - 1);
                        a = d(a);
                        var b = a.attr("data-layer-index");
                        return null === b && (a = a.closest("[data-layer-index]"), b = a.attr("data-layer-index")), null !== b ? this.dismiss(Number(b)) : void 0
                    },
                    dismissLayersAbove: function(a, b) {
                        var c = this.layers.slice(a + 1).filter(function(a) {
                            return a && (!b || b !== a)
                        });
                        this.layers = this.layers.map(function(a) {
                            return g(c, a) ? null : a
                        });
                        var d = c.map(function(a) {
                            return Promise.resolve().then(function() {
                                return this.exitingViews.push(a), a.exit(this.el, this.enteringViews)
                            }.bind(this)).then(function() {
                                i(this.exitingViews, a), a.dispose()
                            }.bind(this))
                        }.bind(this));
                        return Promise.all(d)
                    },
                    dispose: function() {
                        this.model = this.parentView = null, d(window).off("cvmexec." + this.id), f.prototype.dispose.call(this)
                    },
                    flush: function() {
                        this.history = [], this.childViews.dispose(), this.childViews = new e
                    }
                });
            return j
        }), define("lavaca/mvc/View", ["require", "$", "mout/lang/isString", "mout/lang/isBoolean", "mout/lang/isObject", "mout/lang/isArray", "lavaca/events/EventDispatcher", "lavaca/mvc/Model", "lavaca/util/Cache", "lavaca/mvc/ChildViewManager", "lavaca/util/uuid"], function(a) {
            var b, c = a("$"),
                d = a("mout/lang/isString"),
                e = a("mout/lang/isBoolean"),
                f = a("mout/lang/isObject"),
                g = a("mout/lang/isArray"),
                h = a("lavaca/events/EventDispatcher"),
                i = a("lavaca/mvc/Model"),
                j = a("lavaca/util/Cache"),
                k = a("lavaca/mvc/ChildViewManager"),
                l = a("lavaca/util/uuid"),
                m = h.extend(function(a, b, e) {
                    h.call(this), this.model = b || null, this.id = (this.className + "-" + l()).replace(" ", "-"), "number" != typeof e ? this.parentView = e || null : this.layer = e, this.el = d(a) ? c(a) : a && a.length ? a : c("<div></div>"), this.el.addClass("view"), this.el.addClass(this.className), this.el.data("view", this), this.el.attr("data-view-id", this.id), this.eventMap = {}, this.extEventMap = [], this.childViewMap = {}, this.childViews = new j, this.widgetMap = {}, this.widgets = new j, this.childViewEventMap = {}, this.on("rendersuccess", this.onRenderSuccess).on("rendererror", this.onRenderError)
                }, {
                    autoRender: !1,
                    template: null,
                    className: null,
                    layer: 0,
                    viewType: null,
                    childViewManager: !1,
                    generateHtml: function() {
                        return ""
                    },
                    _parseRenderArguments: function() {
                        var a = Array.prototype.slice.call(arguments),
                            b = {
                                selector: null,
                                model: null,
                                shouldRedraw: null
                            };
                        return 0 === a.length ? (b.selector = null, b.model = this.model, b.shouldRedraw = !0) : 1 === a.length ? d(a[0]) ? (b.selector = a[0], b.model = this.model, b.shouldRedraw = !1) : f(a[0]) || a[0] instanceof i ? (b.selector = null, b.model = a[0], b.shouldRedraw = !0) : e(a[0]) && (b.selector = null, b.model = this.model, b.shouldRedraw = a[0]) : 2 === a.length && (d(a[0]) ? (b.selector = a[0], b.model = a[1], b.shouldRedraw = !1) : e(a[0]) && (b.selector = null, b.shouldRedraw = a[0], b.model = a[1])), b.model instanceof i && (b.model = b.model.toObject()), b
                    },
                    render: function() {
                        var a = this._parseRenderArguments.apply(this, arguments),
                            b = !this.hasRendered;
                        b && this.applyEvents();
                        var d = Promise.resolve(this.generateHtml(a.model)).then(function(d) {
                            if (b || a.shouldRedraw) this.disposeChildViews(this.el), this.disposeWidgets(this.el), this.el.html(d), this.hasRendered = !0;
                            else if (a.selector) {
                                var e = c("<div>" + d + "</div>").find(a.selector),
                                    f = this.el.find(a.selector);
                                if (e.length !== f.length) throw "Count of items matching selector is not the same in the original html and in the newly rendered html.";
                                f.each(function(a, b) {
                                    var d = c(b);
                                    this.disposeChildViews(d), this.disposeWidgets(d), d.replaceWith(e.eq(a)).remove()
                                }.bind(this))
                            }
                            return this.createWidgets(), this.createChildViews(), this.applyChildViewEvents(), this.childViewManager && this.childViewManager.init(this.el), d
                        }.bind(this));
                        return d.then(function() {
                            b ? this.trigger("rendersuccess") : this.trigger("redrawsuccess")
                        }.bind(this), function(a) {
                            throw this.trigger("rendererror", {
                                err: a
                            }), a
                        }.bind(this)), d
                    },
                    disposeChildViews: function(a) {
                        var b, d = this;
                        b = a.find("[data-view-id]"), a !== d.el && a.is("[data-view-id]") && (b = b.add(a)), b.each(function(a, b) {
                            var e = c(b),
                                f = e.data("view");
                            f && (d.childViews.remove(f.id), f.dispose())
                        })
                    },
                    disposeWidgets: function(a) {
                        var b = this;
                        a.add(a.find("[data-has-widgets]")).each(function(a, d) {
                            var e, f, g = c(d),
                                h = g.data("widgets");
                            for (e in h) f = h[e], b.widgets.remove(f.id), f.dispose()
                        }), a.removeData("widgets")
                    },
                    clearModelEvents: function() {
                        var a, b, c;
                        if (this.eventMap && this.eventMap.model && this.model && this.model instanceof h)
                            for (a in this.eventMap.model) b = this.eventMap.model[a], "object" == typeof b && (b = b.on), c = a.indexOf("."), -1 !== c && (a = a.substr(0, c)), this.model.off(a, b, this)
                    },
                    clearExtEvents: function() {
                        this.extEventMap.forEach(function(a) {
                            a.delegate.off(a.event, a.callback)
                        }), this.extEventMap = []
                    },
                    applyEvents: function() {
                        var a, c, e, f, g, h, j, k = this.el;
                        for (f in this.eventMap) {
                            a = this.eventMap[f], "self" === f && (f = null);
                            for (g in a) c = a[g], e = b, "object" == typeof c ? (j = c, c = c.on) : j = void 0, c = d(c) && c in this ? this[c].bind(this) : c.bind(this), "model" === f ? this.model && this.model instanceof i && (h = g.indexOf("."), -1 !== h && (e = g.substr(h + 1), g = g.substr(0, h)), this.model.on(g, e, c)) : "animationEnd" === g && k.animationEnd ? k.animationEnd(f, c) : "transitionEnd" === g && k.transitionEnd ? k.transitionEnd(f, c) : k.hammer ? k.hammer({
                                domEvents: !0
                            }).on(g, f, c) : k.on(g, f, c)
                        }
                    },
                    mapEvent: function(a, b, c) {
                        var d;
                        if ("object" == typeof a) {
                            d = a;
                            for (a in d)
                                for (b in d[a]) "ext" === a ? this.mapExtEvent(d[a][b].object, d[a][b].events) : this.mapEvent(a, b, d[a][b])
                        } else d = this.eventMap[a], d || (d = this.eventMap[a] = {}), d[b] = c;
                        return this
                    },
                    mapExtEvent: function(a, b) {
                        var c;
                        if (a && a instanceof h)
                            for (var d in b) c = b[d], a.on(d, c), this.extEventMap.push({
                                delegate: a,
                                event: d,
                                callback: c
                            });
                        else console.warn("You are trying to call mapExtEvent with something that does not extend from EventDispatcher.")
                    },
                    createWidgets: function() {
                        var a, b, d, e, f, h = this.widgets;
                        for (a in this.widgetMap) b = this.widgetMap[a], "object" == typeof b ? (d = b.TWidget, f = b.args ? g(b.args) ? b.args : [b.args] : null) : (d = b, f = null), e = f ? function(a) {
                            var b = d.bind.apply(d, [null, a].concat(f));
                            return new b
                        } : function(a) {
                            return new d(a)
                        }, ("self" === a ? this.el : this.el.find(a)).each(function(b, d) {
                            var f, g = c(d),
                                i = g.data("widgets") || {};
                            i[a] || (f = e(c(d)), i[a] = f, h.set(f.id, f), g.data("widgets", i), g.attr("data-has-widgets", ""))
                        })
                    },
                    mapWidget: function(a, b) {
                        if ("object" == typeof a) {
                            var c = a;
                            for (a in c) this.mapWidget(a, c[a])
                        } else this.widgetMap[a] = b;
                        return this
                    },
                    createChildViews: function() {
                        var a, b, d = this.childViews,
                            e = this;
                        for (a in this.childViewMap) b = this.childViewMap[a], this.el.find(a).each(function(a, f) {
                            var g, h, i = c(f);
                            i.data("view") || (h = "function" == typeof b.model ? b.model.call(e, a, f) : b.model || e.model, g = new b.TView(i, h, e), d.set(g.id, g), g.autoRender && g.render())
                        })
                    },
                    mapChildView: function(a, b, c) {
                        if ("object" == typeof a) {
                            var d = a;
                            for (a in d) this.mapChildView(a, d[a].TView, d[a].model)
                        } else this.childViewMap[a] = {
                            TView: b,
                            model: c
                        };
                        return this
                    },
                    mapChildViewManager: function(a, b) {
                        this.childViewManager = new k(a, b, this)
                    },
                    mapChildViewEvent: function(a, b, c) {
                        if ("object" == typeof a) {
                            var d = a;
                            for (a in d) this.mapChildViewEvent(a, d[a].callback, d[a].TView)
                        } else this.childViewEventMap[a] = {
                            TView: c,
                            callback: b
                        }
                    },
                    applyChildViewEvents: function() {
                        var a, b = this.childViewEventMap;
                        for (a in b) this.childViews.each(function(c, d) {
                            var e, f, g = -1;
                            if (!b[a].TView || d instanceof b[a].TView) {
                                for (e = d.callbacks[a] || []; f = e[++g];)
                                    if (f === b[a].callback) return;
                                d.on(a, b[a].callback)
                            }
                        })
                    },
                    onRenderSuccess: function() {},
                    onRenderError: function(a) {
                        console.log(a.err)
                    },
                    dispose: function() {
                        this.model && this.clearModelEvents(), this.childViews.count() && this.disposeChildViews(this.el), this.widgets.count() && this.disposeWidgets(this.el), this.extEventMap.length && this.clearExtEvents(), this.template = this.model = this.parentView = null, h.prototype.dispose.apply(this, arguments)
                    },
                    insertInto: function(a) {
                        if (this.el.parent()[0] !== a[0]) {
                            for (var b, d = a.children("[data-layer-index]"), e = -1; b = d[++e];)
                                if (b = c(b), b.attr("data-layer-index") > this.index) return this.el.insertBefore(b), void 0;
                            a.append(this.el)
                        }
                    },
                    enter: function(a) {
                        var b;
                        return this.hasRendered || (b = this.render()), Promise.resolve().then(b).then(function() {
                            return this.insertInto(c(a))
                        }.bind(this)).then(function() {
                            this.trigger("enter")
                        }.bind(this))
                    },
                    exit: function() {
                        return this.el.detach(), this.trigger("exit"), Promise.resolve()
                    },
                    getWidgets: function(a) {
                        var b = [];
                        return this.widgets.each(function(c, d) {
                            d.el.is(a) && b.push(d)
                        }), b
                    },
                    getChildViews: function(a) {
                        var b = [];
                        return this.childViews.each(function(c, d) {
                            d.el.is(a) && b.push(d)
                        }), b
                    }
                });
            return m
        }), define("lavaca/mvc/ViewManager", ["require", "$", "lavaca/mvc/View", "lavaca/util/Cache", "lavaca/util/Disposable", "mout/object/merge", "mout/array/contains", "mout/array/removeAll"], function(a) {
            var b = a("$"),
                c = a("lavaca/mvc/View"),
                d = a("lavaca/util/Cache"),
                e = a("lavaca/util/Disposable"),
                f = a("mout/object/merge"),
                g = a("mout/array/contains"),
                h = a("mout/array/removeAll"),
                i = e.extend(function(a) {
                    e.call(this), this.el = b(a || document.body), this.pageViews = new d, this.layers = [], this.exitingPageViews = [], this.enteringPageViews = []
                }, {
                    locked: !1,
                    setEl: function(a) {
                        return this.el = "string" == typeof a ? b(a) : a, this
                    },
                    load: function(a, b, c, d) {
                        if (this.locked) return Promise.reject("locked");
                        this.locked = !0, d = d || {};
                        var e = b.prototype.layer || 0,
                            g = this.pageViews.get(a);
                        "number" == typeof d ? e = d : d.layer && (e = d.layer);
                        var h = !1;
                        return g ? "object" == typeof d && f(g, d) : (g = new b(null, c, e), "object" == typeof d && f(g, d), h = !0, null !== a && (this.pageViews.set(a, g), g.cacheKey = a)), Promise.resolve().then(function() {
                            return h ? g.render() : void 0
                        }).then(function() {
                            return this.beforeEnterExit(e - 1, g)
                        }.bind(this)).then(function() {
                            return this.enteringPageViews = [g], Promise.all([function() {
                                return this.layers[e] !== g ? g.enter(this.el, this.exitingPageViews) : void 0
                            }.bind(this)(), function() {
                                return this.dismissLayersAbove(e - 1, g)
                            }.bind(this)()])
                        }.bind(this)).then(function() {
                            this.locked = !1, this.enteringPageViews = [], this.layers[e] = g
                        }.bind(this))
                    },
                    beforeEnterExit: function(a, b) {
                        var c, d, e = [];
                        for (b && "function" == typeof b.beforeEnter && e.push(b.beforeEnter()), c = this.layers.length - 1; c > a; c--) !(d = this.layers[c]) || b && b === d || function(a) {
                            "function" == typeof a.beforeExit && e.push(a.beforeExit())
                        }.call(this, d);
                        return Promise.all(e)
                    },
                    dismiss: function(a) {
                        if ("number" == typeof a) return this.dismissLayersAbove(a - 1);
                        if (a instanceof c) return this.dismiss(a.layer);
                        a = b(a);
                        var d = a.attr("data-layer-index");
                        return null === d && (a = a.closest("[data-layer-index]"), d = a.attr("data-layer-index")), null !== d ? this.dismiss(Number(d)) : void 0
                    },
                    dismissLayersAbove: function(a, b) {
                        var c = this.layers.slice(a + 1).filter(function(a) {
                            return a && (!b || b !== a)
                        });
                        this.layers = this.layers.map(function(a) {
                            return g(c, a) ? null : a
                        });
                        var d = c.map(function(a) {
                            return Promise.resolve().then(function() {
                                return this.exitingPageViews.push(a), a.exit(this.el, this.enteringPageViews)
                            }.bind(this)).then(function() {
                                h(this.exitingPageViews, a), (!a.cacheKey || b && b.cacheKey === a.cacheKey) && a.dispose()
                            }.bind(this))
                        }.bind(this));
                        return Promise.all(d)
                    },
                    flush: function(a) {
                        if (a) this.pageViews.remove(a);
                        else {
                            for (var b, c = -1; b = this.layers[++c];) b.cacheKey && this.pageViews.remove(b.cacheKey);
                            this.pageViews.dispose(), this.pageViews = new d
                        }
                    },
                    dispose: function() {
                        e.prototype.dispose.call(this)
                    }
                });
            return new i(null)
        }), define("lavaca/mvc/Route", ["require", "lavaca/util/Disposable", "mout/lang/deepClone", "mout/object/merge"], function(a) {
            function b() {
                return new RegExp("\\{\\*(.*?)\\}", "g")
            }

            function c() {
                return new RegExp("\\{([^\\/]*?)\\}", "g")
            }

            function d() {
                return new RegExp("[\\{\\}\\*]", "g")
            }

            function e() {
                return new RegExp("^\\d{4}-[0-1]\\d-[0-3]\\d$", "g")
            }

            function f(a) {
                if ("/" === a) return new RegExp("^\\/(\\?.*)?(#.*)?$", "g");
                "/" === a.charAt(0) && (a = a.slice(1)), a = a.split("/");
                for (var d, e = "^", f = -1; d = a[++f];) e += b().test(d) ? "(/([^/?#]+))*?" : c().test(d) ? "/([^/?#]+)" : "/" + d;
                return e += "(\\?.*)?(#\\.*)?$", new RegExp(e, "g")
            }

            function g(a) {
                return a = decodeURIComponent(a), isNaN(a) ? "true" === a.toLowerCase() ? a = !0 : "false" === a.toLowerCase() ? a = !1 : e().test(a) && (a = a.split("-"), a = new Date(Number(a[0]), Number(a[1]) - 1, Number(a[2]))) : a = Number(a), a
            }
            var h = a("lavaca/util/Disposable"),
                i = a("mout/lang/deepClone"),
                j = a("mout/object/merge"),
                k = h.extend(function(a, b, c, d) {
                    h.call(this), this.pattern = a, this.TController = b, this.action = c, this.params = d || {}
                }, {
                    matches: function(a) {
                        return f(this.pattern).test(a)
                    },
                    parse: function(a) {
                        var e, f, h, j, k, l, m = i(this.params),
                            n = this.pattern.slice(1),
                            o = a.split("#");
                        if (m.url = a, m.route = this, o = o[1] ? o[1].split("?") : o[0].split("?"), f = o[1])
                            for (e = -1, f = f.split("&"); j = f[++e];) j = j.split("="), l = decodeURIComponent(j[0]), void 0 !== m[l] ? (m[l] instanceof Array || (m[l] = [m[l]]), m[l].push(g(j[1]))) : m[l] = g(j[1]);
                        e = 0, h = o[0].replace(/(^(http(s?)\:\/\/[^\/]+)?\/?)|(\/$)/, "");
                        for (var p = new RegExp(n.replace(b(), "(.+)").replace(c(), "([^/]+)")), q = p.exec(h), r = p.exec(n); j = q[++e];) k = r[e], b().test(k) && (j = j.split("/")), m[k.replace(d(), "")] = j;
                        return m
                    },
                    exec: function(a, b, c, d, e) {
                        var f, g = new this.TController(b, c),
                            h = this.parse(a);
                        return g.params = e, g.state = d, d && (f = d.state), e = j(h, e), Promise.resolve().then(function() {
                            return g[this.action](e, f)
                        }.bind(this)).then(function() {
                            d && (document.title = d.title)
                        }).then(this.dispose.bind(this)).catch(function(a) {
                            throw this.dispose(), a
                        }.bind(this))
                    }
                });
            return k
        }), define("lavaca/mvc/Router", ["require", "./Route", "lavaca/net/History", "lavaca/util/Disposable"], function(a) {
            function b(a, b, c) {
                for (var d, e = -1;
                    (d = this.routes[++e]) && !d.matches(a););
                return d ? Promise.resolve().then(function() {
                    return d.exec(a, this, this.viewManager, b, c)
                }.bind(this)).then(function() {
                    this.hasNavigated = !0
                }.bind(this)).then(this.unlock.bind(this)).catch(function(a) {
                    throw this.unlock(), a
                }.bind(this)) : Promise.reject([a, b])
            }
            var c = a("./Route"),
                d = a("lavaca/net/History"),
                e = a("lavaca/util/Disposable"),
                f = e.extend(function(a) {
                    e.call(this), this.routes = [], this.viewManager = a
                }, {
                    locked: !1,
                    hasNavigated: !1,
                    runAuthenticationCheck: !1,
                    startHistory: function() {
                        this.onpopstate = function(a) {
                            if (this.hasNavigated) {
                                d.isRoutingBack = "back" === a.direction;
                                var b = function() {
                                    d.isRoutingBack = !1
                                };
                                this.exec(a.url, a).then(b, b)
                            }
                        }, d.on("popstate", this.onpopstate, this)
                    },
                    setViewManager: function(a) {
                        return this.viewManager = a, this
                    },
                    add: function(a, b, d, e) {
                        if ("object" == typeof a)
                            for (var f in a) {
                                var g = a[f];
                                g instanceof Array ? (b = g[0], d = g[1], e = g[2]) : (b = g.controller, d = g.action, e = g.params), this.add(f, b, d, e)
                            } else this.routes.push(new c(a, b, d, e));
                        return this
                    },
                    exec: function(a, c, d) {
                        if (this.locked) return Promise.reject("locked");
                        this.locked = !0, a || (a = "/"), 0 === a.indexOf("http") && (a = a.replace(/^http(s?):\/\/.+?/, ""));
                        for (var e, f = -1;
                            (e = this.routes[++f]) && !e.matches(a););
                        var g = d && d.auth && "boolean" == typeof d.auth.runAuthenticationCheck ? d.auth.runAuthenticationCheck : this.runAuthenticationCheck,
                            h = d && d.auth && "function" == typeof d.auth.func ? d.auth.func : this.authenticate,
                            i = d && d.auth && "string" == typeof d.auth.failRoute ? d.auth.failRoute : this.failRoute,
                            j = e && e.params && e.params.ignoreAuth ? e.params.ignoreAuth : !1;
                        return e && e.params && "function" == typeof e.params.func && (h = e.params.func), g && i !== a && !j ? h().then(function() {
                            return b.call(this, a, c, d)
                        }.bind(this), function() {
                            return b.call(this, i, c, d)
                        }.bind(this)) : b.call(this, a, c, d)
                    },
                    unlock: function() {
                        return this.locked = !1, this
                    },
                    setAuth: function(a, b, c) {
                        "function" == typeof a && "string" == typeof b ? (this.runAuthenticationCheck = "boolean" == typeof c ? c : !0, this.authenticate = a, this.failRoute = b) : console.warn("You must pass Router.setAuth() a function and a route to execute if authentication fails")
                    },
                    dispose: function() {
                        this.onpopstate && (d.off("popstate", this.onpopstate), this.onpopstate = null), e.prototype.dispose.apply(this, arguments)
                    }
                });
            return new f
        }), define("mout/function/prop", [], function() {
            function a(a) {
                return function(b) {
                    return b[a]
                }
            }
            return a
        }), define("mout/object/deepMatches", ["./forOwn", "../lang/isArray"], function(a, b) {
            function c(a, b) {
                for (var c = -1, d = a.length; ++c < d;)
                    if (f(a[c], b)) return !0;
                return !1
            }

            function d(a, b) {
                for (var d = -1, e = b.length; ++d < e;)
                    if (!c(a, b[d])) return !1;
                return !0
            }

            function e(b, c) {
                var d = !0;
                return a(c, function(a, c) {
                    return f(b[c], a) ? void 0 : d = !1
                }), d
            }

            function f(a, c) {
                return a && "object" == typeof a ? b(a) && b(c) ? d(a, c) : e(a, c) : a === c
            }
            return f
        }), define("mout/function/makeIterator_", ["./prop", "../object/deepMatches"], function(a, b) {
            function c(c, d) {
                switch (typeof c) {
                    case "function":
                        return "undefined" != typeof d ? function(a, b, e) {
                            return c.call(d, a, b, e)
                        } : c;
                    case "object":
                        return null != c ? function(a) {
                            return b(a, c)
                        } : c;
                    case "string":
                    case "number":
                        return a(c);
                    default:
                        return c
                }
            }
            return c
        }), define("mout/array/filter", ["../function/makeIterator_"], function(a) {
            function b(b, c, d) {
                c = a(c, d);
                var e = [];
                if (null == b) return e;
                for (var f, g = -1, h = b.length; ++g < h;) f = b[g], c(f, g, b) && e.push(f);
                return e
            }
            return b
        }), define("mout/array/unique", ["./indexOf", "./filter"], function(a, b) {
            function c(a) {
                return b(a, d)
            }

            function d(b, c, d) {
                return -1 === a(d, b, c + 1)
            }
            return c
        }), define("mout/array/some", ["../function/makeIterator_"], function(a) {
            function b(b, c, d) {
                c = a(c, d);
                var e = !1;
                if (null == b) return e;
                for (var f = -1, g = b.length; ++f < g;)
                    if (c(b[f], f, b)) {
                        e = !0;
                        break
                    }
                return e
            }
            return b
        }), define("mout/array/difference", ["./unique", "./filter", "./some", "./contains"], function(a, b, c, d) {
            function e(e) {
                var f = Array.prototype.slice.call(arguments, 1),
                    g = b(a(e), function(a) {
                        return !c(f, function(b) {
                            return d(b, a)
                        })
                    });
                return g
            }
            return e
        }), define("mout/lang/toArray", ["./kindOf"], function(a) {
            function b(b) {
                var d, e = [],
                    f = a(b);
                if (null != b)
                    if (null == b.length || "String" === f || "Function" === f || "RegExp" === f || b === c) e[e.length] = b;
                    else
                        for (d = b.length; d--;) e[d] = b[d];
                return e
            }
            var c = this;
            return b
        }), define("mout/array/insert", ["./difference", "../lang/toArray"], function(a, b) {
            function c(c) {
                var d = a(b(arguments).slice(1), c);
                return d.length && Array.prototype.push.apply(c, d), c.length
            }
            return c
        }), define("lavaca/mvc/Collection", ["require", "lavaca/mvc/Model", "lavaca/net/Connectivity", "mout/lang/isArray", "mout/lang/deepClone", "mout/array/removeAll", "mout/array/insert", "mout/object/merge"], function(a) {
            function b(a, b, c, d, e) {
                a.trigger(b, {
                    previousIndex: c,
                    index: d,
                    model: e
                })
            }

            function c(a, b) {
                var c = b ? 1 : -1;
                return function(b, d) {
                    var e = b.get(a),
                        f = d.get(a);
                    return e === f ? 0 : f > e ? c : -c
                }
            }
            var d, e = a("lavaca/mvc/Model"),
                f = (a("lavaca/net/Connectivity"), a("mout/lang/isArray")),
                g = a("mout/lang/deepClone"),
                h = a("mout/array/removeAll"),
                i = a("mout/array/insert"),
                j = a("mout/object/merge"),
                k = e.extend(function(a, b) {
                    e.call(this, b), this.models = [], this.changedOrder = !1, this.addedItems = [], this.removedItems = [], this.changedItems = [], a && (this.suppressEvents = !0, this.add.apply(this, a), this.suppressEvents = !1)
                }, {
                    TModel: e,
                    itemsProperty: "items",
                    allowDuplicatedIds: !1,
                    clear: function() {
                        e.prototype.clear.apply(this, arguments), this.clearModels()
                    },
                    clearModels: function() {
                        for (var a; a = this.models[0];) this.remove(a);
                        this.changedOrder = !1, this.addedItems.length = this.removedItems.length = this.changedItems.length = this.models.length = 0
                    },
                    prepare: function(a) {
                        var b = a instanceof this.TModel ? a : this.TModel.prototype instanceof k ? new this.TModel(a[this.TModel.prototype.itemsProperty], a) : new this.TModel(a),
                            c = this.models.indexOf(b);
                        return -1 === c && b.on("change", this.onItemEvent, this).on("invalid", this.onItemEvent, this), b
                    },
                    canSet: function(a) {
                        return a !== this.itemsProperty
                    },
                    insert: function(a, c) {
                        var d, e, g, j, k, l, m = !1,
                            n = this.TModel.prototype.idAttribute,
                            o = {};
                        for (l = c && f(c) ? c : Array.prototype.slice.call(arguments, 1), e = 0, g = l.length; g > e; e++) {
                            if (j = l[e], "object" != typeof j) throw "Only objects can be added to a Collection.";
                            j = this.prepare(j), d = j.get(n), null !== d && (o[n] = d, k = this.indexOf(o), k > -1 && !this.allowDuplicatedIds && this.remove(k)), this.models.splice(a, 0, j), this.suppressTracking || (h(this.removedItems, j), h(this.changedItems, j), i(this.addedItems, j)), b(this, "addItem", null, a, this.models[a]), a++, m = !0
                        }
                        return m
                    },
                    add: function() {
                        return arguments.length && arguments[0] instanceof Array ? this.add.apply(this, arguments[0]) : this.insert.call(this, this.count(), Array.prototype.slice.call(arguments, 0))
                    },
                    moveTo: function(a, c) {
                        if (a instanceof this.TModel && (a = this.models.indexOf(a)), a > -1) {
                            var d = this.models.splice(a, 1)[0];
                            d && (this.models.splice(c, 0, d), this.suppressTracking || (this.changedOrder = !0), b(this, "moveItem", a, c, d))
                        }
                    },
                    remove: function(a) {
                        var c, d, e, g, j, k;
                        if (1 === arguments.length && f(a)) {
                            for (c = 0, k = []; d = a[c++];) k.push(this.remove(d));
                            return k
                        }
                        if (arguments.length > 1) return "number" == typeof a && 0 === a % 1 ? this.remove(a) : this.remove([].slice.call(arguments));
                        if (a instanceof this.TModel) return g = this.models.indexOf(a), h(this.models, a), g > -1 ? (this.suppressTracking || (h(this.addedItems, a), h(this.changedItems, a), i(this.removedItems, a)), a.off("change", this.onItemEvent).off("invalid", this.onItemEvent), b(this, "removeItem", g, null, a), !0) : !1;
                        if ("number" == typeof a && 0 === a % 1) return a >= 0 && a < this.count() ? this.remove(this.itemAt(a)) : !1;
                        for (e = this.filter(a), j = -1, k = !1; a = e[++j];) k = this.remove(a) || k;
                        return k
                    },
                    filter: function(a, b) {
                        b = b === d ? Number.MAX_VALUE : b;
                        var c, e, f = [],
                            g = -1;
                        for ("function" != typeof a && (e = a, a = function(a, b) {
                                for (var c in e)
                                    if (b.get(c) !== e[c]) return !1;
                                return !0
                            });
                            (c = this.models[++g]) && !(a(g, c) && (f.push(c), --b < 1)););
                        return f
                    },
                    first: function(a) {
                        return this.filter(a, 1)[0] || null
                    },
                    indexOf: function(a) {
                        var b = this.first(a);
                        return b ? this.models.indexOf(b) : -1
                    },
                    itemAt: function(a) {
                        return this.models[a]
                    },
                    count: function() {
                        return this.models.length
                    },
                    each: function(a, b) {
                        for (var c, d, e = -1;
                            (d = this.itemAt(++e)) && (c = a.call(b || this, e, d), c !== !1););
                    },
                    sort: function(a, d) {
                        var e, f = "function" == typeof a ? a : c(a, d),
                            h = g(this.models);
                        return this.models.sort(f, this), this.suppressTracking || (this.changedOrder = !0), this.suppressEvents || this.each(function(a, c) {
                            e = h.indexOf(c), e !== a && b(this, "moveItem", h.indexOf(c), a, c)
                        }), this
                    },
                    reverse: function() {
                        var a, c = g(this.models);
                        return this.models.reverse(), this.suppressTracking || (this.changedOrder = !0), this.suppressEvents || this.each(function(d, e) {
                            a = c.indexOf(e), a !== d && b(this, "moveItem", c.indexOf(e), d, e)
                        }), this
                    },
                    onItemEvent: function(a) {
                        var b = a.target,
                            c = this.models.indexOf(b);
                        this.suppressTracking || "change" === a.type && i(this.changedItems, b), this.trigger(a.type + "Item", j({}, a, {
                            target: b,
                            model: b,
                            index: c,
                            previousIndex: null
                        }))
                    },
                    toObject: function(a) {
                        for (var b, c = e.prototype.toObject.apply(this, arguments), d = this.itemsProperty, f = c[d] = [], g = -1; b = this.models[++g];) f[c[d].length] = a && !b.isNew() ? b.id() : b.toObject();
                        return c
                    },
                    deepApply: function(a) {
                        var b;
                        a = this.parse(a), b = a, b instanceof Array || (this.apply(a), a && a.hasOwnProperty(this.itemsProperty) && (b = a[this.itemsProperty])), this.add.apply(this, b), this.trigger("deepApply", {
                            obj: a
                        })
                    }
                });
            return k
        }), define("app/utils/hash", [], function() {
            return function(a) {
                return a ? a.split("").reduce(function(a, b) {
                    return a = (a << 5) - a + b.charCodeAt(0), a & a
                }, 0) : ""
            }
        }), define("app/models/AuthModel", ["require", "lavaca/mvc/Model", "./StateModel"], function(a) {
            var b = a("lavaca/mvc/Model"),
                c = a("./StateModel"),
                d = "Mu7ual M0b!l3",
                e = b.extend(function(a) {
                    a ? this.clearStore() : a = this.getStore() || {}, this.isAuthenticated = !1, Modernizr.localstorage && (this.isAuthenticated = sessionStorage.isAuthenticated || !1, sessionStorage.isAuthenticated = sessionStorage.isAuthenticated || !1), b.call(this, a), this.set("valid", !0)
                }, {
                    recordId: "auth",
                    setStore: function() {
                        var a = this.toObject(),
                            b = CryptoJS.AES.encrypt(JSON.stringify(a), d);
                        Modernizr.localstorage && !c.get("demoMode") && localStorage.setItem(this.recordId, b)
                    },
                    clearStore: function() {
                        Modernizr.localstorage && !c.get("demoMode") && localStorage.removeItem(this.recordId), this.isAuthenticated = !1
                    },
                    getStore: function() {
                        try {
                            var a = CryptoJS.AES.decrypt(localStorage.getItem(this.recordId), d),
                                b = JSON.parse(a.toString(CryptoJS.enc.Utf8));
                            if (b && b.hasOwnProperty("valid")) return b;
                            throw new Error("invalid")
                        } catch (c) {
                            return Modernizr.localstorage && localStorage.removeItem(this.recordId), null
                        }
                    },
                    clearAll: function() {
                        this.clear(), this.clearStore()
                    },
                    onUserLogin: function(a, b, d) {
                        var e = !1;
                        a && a.userId && !c.get("demoMode") && (this.isAuthenticated = !0, Modernizr.localstorage && (sessionStorage.isAuthenticated = !0), this.set("userId", a.userId), this.set("accountKey", a.key || ""), b && this.set("username", b), d && this.set("password", d), e = !0, c.trigger("authenticationSuccessful")), this.set("valid", e), this.setStore()
                    },
                    onUserEDPLogin: function(a) {
                        a && a.sleeperId && !c.get("demoMode") && (this.isAuthenticated = !0, Modernizr.localstorage && (sessionStorage.isAuthenticated = !0), this.set("sleeperIdEDP", a.sleeperId), this.set("tokenEDP", a.token)), this.setStore()
                    },
                    onPasswordReset: function(a) {
                        a && (this.set("password", a), this.setStore())
                    }
                });
            return new e
        }), define("mout/lang/toString", [], function() {
            function a(a) {
                return null == a ? "" : a.toString()
            }
            return a
        }), define("mout/string/interpolate", ["../lang/toString"], function(a) {
            function b(b, d, e) {
                b = a(b);
                var f = function(b, c) {
                    return c in d ? a(d[c]) : ""
                };
                return b.replace(e || c, f)
            }
            var c = /\{\{(\w+)\}\}/g;
            return b
        }), define("app/service/Service", ["require", "lavaca/util/Disposable", "app/env/Config", "app/utils/hash", "app/models/AuthModel", "$", "mout/string/interpolate", "lavaca/net/Connectivity", "mout/object/get", "app/models/StateModel", "mout/object/merge"], function(a) {
            function b(a) {
                return new Promise(function(b, c) {
                    return a ? (b(), void 0) : j.isAuthenticated === !0 || "true" === j.isAuthenticated ? (this.isAttemptingLogin = !1, b(), void 0) : (this.makeLoginRequest().then(function() {
                        this.loginPromise = k.Deferred(), b()
                    }.bind(this), function(a) {
                        this.loginPromise = k.Deferred(), c(a)
                    }.bind(this)), void 0)
                }.bind(this))
            }

            function c() {
                this.isAttemptingLogin || (j.isAuthenticated = !1, Modernizr.localstorage && (sessionStorage.isAuthenticated = !1))
            }

            function d(a) {
                return 0 === a.indexOf("login") || a.indexOf("&_k") >= 0 || a.indexOf("?_k") >= 0 || 0 === a.indexOf("order") || 0 === a.indexOf("token") || 0 === a.indexOf("license")
            }

            function e(a, b) {
                return b ? a.slice(0, a.indexOf("_k") + 3) + j.get("accountKey") : a.indexOf("?") >= 0 ? a + "&_k=" + j.get("accountKey") : a + "?_k=" + j.get("accountKey")
            }

            function f(a, b, c, d, e) {
                var f;
                return a = a || {}, p({}, this.defaultAjaxOptions, {
                    url: c,
                    dataType: a.dataType || "json",
                    type: b,
                    data: d,
                    contentType: a.contentType || "application/json",
                    processData: "GET" === b,
                    dataFilter: function(a, b) {
                        return "" === a && "json" === b ? "null" : (f = i(a), a)
                    },
                    xhrFields: {
                        withCredentials: !0
                    },
                    beforeSend: function(a) {
                        a.setRequestHeader("X-App-Version", window.appVersion)
                    },
                    success: function(a, b) {
                        return "success" !== b ? Promise.reject(a) : e ? (setTimeout(function() {
                            return Promise.resolve(a, f)
                        }, e), void 0) : Promise.resolve(a, f)
                    },
                    error: function(a, b) {
                        var c = Array.prototype.slice.call(arguments, 0);
                        if ("timeout" === b) {
                            var d = "Pardon us. We are experiencing technical difficulties; please check back later.";
                            window.customAlert.alert(d, null, "Error")
                        }
                        return e ? (setTimeout(function() {
                            return Promise.reject(c)
                        }, e), void 0) : Promise.reject(c)
                    }.bind(this),
                    timeout: 3e4
                })
            }
            var g = a("lavaca/util/Disposable"),
                h = a("app/env/Config"),
                i = a("app/utils/hash"),
                j = a("app/models/AuthModel"),
                k = a("$"),
                l = a("mout/string/interpolate"),
                m = a("lavaca/net/Connectivity"),
                n = a("mout/object/get"),
                o = a("app/models/StateModel"),
                p = a("mout/object/merge"),
                q = g.extend(function() {
                    g.apply(this), this._USEMOCK = !1, this.loginPromise = k.Deferred()
                }, {
                    isAttemptingLogin: !1,
                    apiURLKey: "api_url",
                    proxyURLKey: "proxy_url",
                    mockURLKey: "mock_url",
                    artificialDelayKey: "artificial_network_delay",
                    defaultAjaxOptions: {},
                    makeRequest: function(a, g, i, p) {
                        return new Promise(function(q, r) {
                            return b.call(this, p).then(function() {
                                d(a) ? (a.indexOf("&_k") > -1 || a.indexOf("?_k") > -1) && (a = e(a, !0)) : g && "POST" !== i && "PUT" !== i && "DELETE" !== i ? g._k = j.get("accountKey") : "POST" !== i && "PUT" !== i && "DELETE" !== i ? g = {
                                    _k: j.get("accountKey")
                                } : a = e(a);
                                var b, s = h[this.artificialDelayKey],
                                    t = l(h[this.apiURLKey], [a], /\{([^}])\}/g);
                                if (this.overrideURL && (t = l(this.overrideURL, [a], /\{([^}])\}/g)), g = g || {}, i = i || "GET", b = "GET" === i ? g : JSON.stringify(g), m.isOffline()) {
                                    console.log("rejecting call - offline notified");
                                    var u = "You currently do not have internet connectivity. Please check your ";
                                    return u += Modernizr.desktop ? "internet settings." : "cellular network or internet settings.", r(u)
                                }
                                this.offlineNotified = !1;
                                var v = f.call(this, g, i, t, b, s),
                                    w = k.ajax(v);
                                w.error(function() {
                                    w.abort()
                                }), w.then(function(a) {
                                    return w.getResponseHeader("LicenseNumber") && o.set("licenseVersion", w.getResponseHeader("LicenseNumber")), a && a.result && "ERROR" === a.result ? r(new Error("Pardon us. We are experiencing technical difficulties; please check back later.")) : q(a)
                                }.bind(this), function(b) {
                                    return b = b || new Error("Pardon us. We are experiencing technical difficulties; please check back later."), 401 === n(b, "status") && "Session is invalid" === n(b, "responseJSON.Error.Message") || 401 === n(b, "status") && "HTTP 401 Unauthorized" === n(b, "responseJSON.Error.Message") ? (c.call(this), j.get("accountKey") ? (this.makeLoginRequest().then(function() {
                                        console.warn("Had to relogin due to 401."), this.makeRequest(a, g, i, p, !0).then(function(a) {
                                            return this.loginPromise = k.Deferred(), a && a.result && "ERROR" === a.result ? r(new Error("Error in API Call")) : q(a)
                                        }.bind(this), function(a) {
                                            return r(a)
                                        }.bind(this))
                                    }.bind(this), function(a) {
                                        o.trigger("logout"), console.warn(a)
                                    }), void 0) : r(b)) : 500 === n(b, "status") || 503 === n(b, "status") ? (console.warn("Connection Error: ", b), r("Pardon us. We are experiencing technical difficulties; please check back later.")) : (console.warn("Connection Error: ", b), r(b))
                                }.bind(this))
                            }.bind(this), function(a) {
                                return r(a)
                            }.bind(this))
                        }.bind(this))
                    },
                    makeLoginRequest: function(a) {
                        if (!a) {
                            if (!j.get("username")) return Promise.reject();
                            a = {
                                login: j.get("username"),
                                password: j.get("password")
                            }
                        }
                        if (!this.isAttemptingLogin) {
                            this.loginPromise = k.Deferred(), this.isAttemptingLogin = !0;
                            var b = l(h[this.apiURLKey], ["login"], /\{([^}])\}/g);
                            if (this.overrideURL && (b = l(this.overrideURL, ["login"], /\{([^}])\}/g)), m.isOffline()) {
                                this.isAttemptingLogin = !1, console.log("login fail - offline notified");
                                var c = "You currently do not have internet connectivity. Please check your ";
                                c += Modernizr.desktop ? "internet settings." : "cellular network or internet settings.", this.loginPromise.reject(c)
                            } else {
                                this.offlineNotified = !1;
                                var d = f.call(this, a, "PUT", b, JSON.stringify(a)),
                                    e = k.ajax(d);
                                e.error(function() {
                                    e.abort()
                                }), e.then(function(b) {
                                    this.isAttemptingLogin = !1, b && b.result && "ERROR" === b.result ? this.loginPromise.reject(new Error("Error in API Call")) : (j.onUserLogin(b, a.login, a.password), this.loginPromise.resolve(b))
                                }.bind(this), function(a) {
                                    this.isAttemptingLogin = !1, this.loginPromise.reject(a)
                                }.bind(this))
                            }
                        }
                        return this.loginPromise
                    },
                    getAPIKey: function() {
                        return this.overrideURL ? this.overrideURL : h[this.apiURLKey]
                    }
                });
            return new q
        }), define("app/service/demodata/getsleepers", ["require"], function() {
            return {
                sleepers: [{
                    firstName: "Charlie",
                    active: !0,
                    emailValidated: !0,
                    isChild: !0,
                    bedId: "-9223372036841039804",
                    birthYear: "2009",
                    zipCode: "55449",
                    timezone: "US/Central",
                    isMale: !0,
                    weight: 55,
                    duration: 35,
                    sleeperId: "-9223372036840837804",
                    height: 38,
                    licenseVersion: 0,
                    username: "charlie@demo.com",
                    birthMonth: null,
                    sleepGoal: 540,
                    isAccountOwner: !1,
                    accountId: "-9223372036841191305",
                    email: "charlie@demo.com",
                    avatar: "",
                    lastLogin: "2015-02-25 09:05:16 CST",
                    side: 1
                }, {
                    firstName: "Megan",
                    active: !0,
                    emailValidated: !0,
                    isChild: !0,
                    bedId: "-9223372036841039805",
                    birthYear: "2007",
                    zipCode: "55449",
                    timezone: "US/Central",
                    isMale: !1,
                    weight: 65,
                    duration: 35,
                    sleeperId: "-9223372036840837805",
                    height: 50,
                    licenseVersion: 0,
                    username: "megan@demo.com",
                    birthMonth: null,
                    sleepGoal: 540,
                    isAccountOwner: !1,
                    accountId: "-9223372036841191305",
                    email: "megan@demo.com",
                    avatar: "",
                    lastLogin: "2015-02-25 09:05:16 CST",
                    side: 1
                }, {
                    firstName: "Sara",
                    active: !0,
                    emailValidated: !0,
                    isChild: !1,
                    bedId: "-9223372036827455184",
                    birthYear: "1981",
                    zipCode: "55449",
                    timezone: "US/Central",
                    isMale: !1,
                    weight: 128,
                    duration: null,
                    sleeperId: "-9223372036829727789",
                    height: 62,
                    licenseVersion: 0,
                    username: "sara@demo.com",
                    birthMonth: null,
                    sleepGoal: 390,
                    isAccountOwner: !0,
                    accountId: "-9223372036841191305",
                    email: "sara@demo.com",
                    avatar: "",
                    lastLogin: "2015-06-09 14:27:30 CDT",
                    side: 1
                }, {
                    firstName: "Jason",
                    active: !0,
                    emailValidated: !0,
                    isChild: !1,
                    bedId: "-9223372036827455184",
                    birthYear: "1981",
                    zipCode: "55449",
                    timezone: "US/Central",
                    isMale: !0,
                    weight: 140,
                    duration: null,
                    sleeperId: "-9223372036829727788",
                    height: 66,
                    licenseVersion: 0,
                    username: "jason@demo.com",
                    birthMonth: null,
                    sleepGoal: 480,
                    isAccountOwner: !1,
                    accountId: "-9223372036841191305",
                    email: "jason@demo.com",
                    avatar: "",
                    lastLogin: "null",
                    side: 0
                }]
            }
        }), define("app/service/demodata/sleeptips", ["require"], function() {
            return function() {
                var a = Math.floor(28 * Math.random());
                switch (a) {
                    case 0:
                        return "Move a clock out of sight if looking at it makes you worry about how much time you have before you have to get up.";
                    case 1:
                        return "Write down what’s likely to keep you up at night and set it aside for another time. Many find this simple exercise to be effective.";
                    case 2:
                        return "“Screen time” before bedtime may interfere with sleep due to its light or its stimulating content.";
                    case 3:
                        return "A consistent sleep schedule reinforces your body’s sleep-wake cycle and helps promote better sleep at night.";
                    case 4:
                        return "Your immune system depends on adequate sleep.  Poor sleep increases the likelihood of catching a cold when you’re exposed to the virus.";
                    case 5:
                        return "If you choose to take a nap during the day, limit it to around 20 minutes and not too close to bedtime.";
                    case 6:
                        return "A cooler core body temperature helps promote sleep.  It’s best to finish your workouts a few hours before bedtime.";
                    case 7:
                        return "Get up and go to bed at the same time each and every day, even on weekends, days off and holidays.  This prevents “social jetlag.”";
                    case 8:
                        return "A consistent sleep schedule reinforces your body’s sleep-wake cycle and helps promote better sleep at night.";
                    case 9:
                        return "Blue light in the bedroom (from a TV, computer or other device) strongly sways your internal clock, insisting that it’s still daytime.";
                    case 10:
                        return "Your body can’t “learn” to get by on less sleep, and you can’t “catch up” on your days off.  It’s best to get 7 to 8 hours every night.";
                    case 11:
                        return "A cooler body temperature promotes sleep. Avoid activities that raise body temperature near bedtime: exercise, meals, caffeine.";
                    case 12:
                        return "“Screen time” before bedtime may interfere with sleep due to its light or its stimulating content.";
                    case 13:
                        return "The temperature of your bedroom affects sleep. Most people sleep best in a slightly cool room (around 65° F) with ample air circulation.";
                    case 14:
                        return "Get up and go to bed at the same time each and every day, even on weekends, days off and holidays.  This prevents “social jetlag.”";
                    case 15:
                        return "A cooler core body temperature helps promote sleep.  It’s best to finish your workouts a few hours before bedtime.";
                    case 16:
                        return "Your immune system depends on adequate sleep.  Poor sleep increases the likelihood of catching a cold when you’re exposed to the virus.";
                    case 17:
                        return "Move a clock out of sight if looking at it makes you worry about how much time you have before you have to get up.";
                    case 18:
                        return "Your skin temperature rises significantly near bedtime to facilitate a drop in core body temperature.  A cool bedroom is important.";
                    case 19:
                        return "The temperature of your bedroom affects sleep. Most people sleep best in a slightly cool room (around 65° F) with ample air circulation.";
                    case 20:
                        return "Some studies suggest that a warm bath or shower before bed can ease the transition into deeper sleep.";
                    case 21:
                        return "Write down what’s likely to keep you up at night and set it aside for another time. Many find this simple exercise to be effective.";
                    case 22:
                        return "A cooler core body temperature helps promote sleep.  It’s best to finish your workouts a few hours before bedtime.";
                    case 23:
                        return "Hours spent in front of most screens can suppress your body’s production of melatonin and make it harder to sleep.";
                    case 24:
                        return "Move a clock out of sight if looking at it makes you worry about how much time you have before you have to get up.";
                    case 25:
                        return "Get up and go to bed at the same time each and every day, even on weekends, days off and holidays.  This prevents “social jetlag.”";
                    case 26:
                        return "Start each day in bright light. Sunlight or any other bright light informs your body’s biological clock that it’s time to wake up.";
                    default:
                        return "If it’s still light outside at bedtime, use light-blocking curtains or shades on bedroom windows; small amounts of light can disrupt sleep."
                }
            }
        }), define("app/service/demodata/sleepdata", ["require", "app/service/demodata/sleeptips"], function(a) {
            var b = a("app/service/demodata/sleeptips"),
                c = moment();
            return function(a, d, e) {
                switch (e) {
                    case "-9223372036829727788":
                        return {
                            sleeperId: "-9223372036829727788",
                            message: "",
                            tip: b(),
                            avgHeartRate: 25,
                            avgRespirationRate: 13,
                            totalSleepSessionTime: 906482,
                            inBed: 893303,
                            outOfBed: 13179,
                            restful: 812250,
                            restless: 81053,
                            avgSleepIQ: 69,
                            sleepData: [{
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-01",
                                sessions: [{
                                    startDate: d + "T20:38:58",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: d + "T20:38:58",
                                    restful: 30419,
                                    originalEndDate: a + "-01T06:12:15",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 34397,
                                    avgHeartRate: 62,
                                    restless: 3760,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 80,
                                    endDate: a + "-01T06:12:15",
                                    outOfBed: 218,
                                    inBed: 34179
                                }],
                                goalEntry: null,
                                tags: ["Caffeine", "TV", "Exercise", "TV/Media"]
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-02",
                                sessions: [{
                                    startDate: a + "-01T20:51:36",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-01T20:51:36",
                                    restful: 28561,
                                    originalEndDate: a + "-02T05:57:27",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 32751,
                                    avgHeartRate: 63,
                                    restless: 3531,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 84,
                                    endDate: a + "-02T05:57:27",
                                    outOfBed: 659,
                                    inBed: 32092
                                }],
                                goalEntry: null,
                                tags: ["Caffeine", "TV", "Exercise", "TV/Media"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-03",
                                sessions: [{
                                    startDate: a + "-02T21:12:41",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-02T21:12:41",
                                    restful: 27377,
                                    originalEndDate: a + "-03T05:57:09",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 31468,
                                    avgHeartRate: 64,
                                    restless: 4091,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 94,
                                    endDate: a + "-03T05:57:09",
                                    outOfBed: 0,
                                    inBed: 31468
                                }],
                                goalEntry: null,
                                tags: ["Caffeine", "TV", "Exercise", "TV/Media"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-04",
                                sessions: [{
                                    startDate: a + "-03T20:30:27",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-03T20:30:27",
                                    restful: 30356,
                                    originalEndDate: a + "-04T06:07:09",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 34602,
                                    avgHeartRate: 55,
                                    restless: 4140,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-04T06:07:09",
                                    outOfBed: 106,
                                    inBed: 34496
                                }],
                                goalEntry: null,
                                tags: ["Caffeine", "TV", "Exercise", "TV/Media"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-05",
                                sessions: [{
                                    startDate: a + "-04T21:34:34",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-04T21:34:34",
                                    restful: 16439,
                                    originalEndDate: a + "-05T02:32:23",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 17869,
                                    avgHeartRate: 62,
                                    restless: 1430,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 83,
                                    endDate: a + "-05T02:32:23",
                                    outOfBed: 0,
                                    inBed: 17869
                                }],
                                goalEntry: null,
                                tags: ["Caffeine", "TV", "Exercise", "TV/Media"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-06",
                                sessions: [{
                                    startDate: a + "-05T22:19:12",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-05T22:19:12",
                                    restful: 29045,
                                    originalEndDate: a + "-06T07:16:47",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 32255,
                                    avgHeartRate: 75,
                                    restless: 2873,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-06T07:16:47",
                                    outOfBed: 337,
                                    inBed: 31918
                                }],
                                goalEntry: null,
                                tags: ["Caffeine", "TV", "Exercise", "TV/Media"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-07",
                                sessions: [{
                                    startDate: a + "-06T21:23:38",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-06T21:23:38",
                                    restful: 30663,
                                    originalEndDate: a + "-07T06:58:28",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 34490,
                                    avgHeartRate: 66,
                                    restless: 3033,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-07T06:58:28",
                                    outOfBed: 794,
                                    inBed: 33696
                                }],
                                goalEntry: null,
                                tags: ["Caffeine", "TV", "Exercise", "TV/Media"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-08",
                                sessions: [{
                                    startDate: a + "-07T20:34:36",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-07T20:34:36",
                                    restful: 30663,
                                    originalEndDate: a + "-08T06:07:01",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 34345,
                                    avgHeartRate: 60,
                                    restless: 3408,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 78,
                                    endDate: a + "-08T06:07:01",
                                    outOfBed: 274,
                                    inBed: 34071
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "",
                                date: a + "-09",
                                sessions: [{
                                    startDate: a + "-08T21:10:58",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-08T21:10:58",
                                    restful: 28780,
                                    originalEndDate: a + "-09T06:03:56",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 31978,
                                    avgHeartRate: 65,
                                    restless: 3198,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 93,
                                    endDate: a + "-09T06:03:56",
                                    outOfBed: 0,
                                    inBed: 31978
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-10",
                                sessions: [{
                                    startDate: a + "-09T22:03:18",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-09T22:03:18",
                                    restful: 28527,
                                    originalEndDate: a + "-10T07:04:05",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 32447,
                                    avgHeartRate: 75,
                                    restless: 3526,
                                    avgRespirationRate: 12,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-10T07:04:05",
                                    outOfBed: 394,
                                    inBed: 32053
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-11",
                                sessions: [{
                                    startDate: a + "-10T20:32:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-10T20:32:24",
                                    restful: 31114,
                                    originalEndDate: a + "-11T06:09:54",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 34650,
                                    avgHeartRate: 69,
                                    restless: 3458,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 94,
                                    endDate: a + "-11T06:09:54",
                                    outOfBed: 78,
                                    inBed: 34572
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-12",
                                sessions: [{
                                    startDate: a + "-11T20:46:48",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-11T20:46:48",
                                    restful: 28638,
                                    originalEndDate: a + "-12T06:01:49",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 33301,
                                    avgHeartRate: 65,
                                    restless: 4663,
                                    avgRespirationRate: 12,
                                    isFinalized: !0,
                                    sleepQuotient: 91,
                                    endDate: a + "-12T06:01:49",
                                    outOfBed: 0,
                                    inBed: 33301
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-13",
                                sessions: [{
                                    startDate: a + "-12T20:46:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-12T20:46:03",
                                    restful: 30552,
                                    originalEndDate: a + "-13T05:59:32",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 33209,
                                    avgHeartRate: 67,
                                    restless: 2657,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 71,
                                    endDate: a + "-13T05:59:32",
                                    outOfBed: 0,
                                    inBed: 33209
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-14",
                                sessions: [{
                                    startDate: a + "-13T21:10:45",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-13T21:10:45",
                                    restful: 28417,
                                    originalEndDate: a + "-14T05:54:36",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 31431,
                                    avgHeartRate: 75,
                                    restless: 2811,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 68,
                                    endDate: a + "-14T05:54:36",
                                    outOfBed: 203,
                                    inBed: 31228
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-15",
                                sessions: [{
                                    startDate: a + "-14T21:46:42",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-14T21:46:42",
                                    restful: 26133,
                                    originalEndDate: a + "-15T05:46:59",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 28817,
                                    avgHeartRate: 65,
                                    restless: 2585,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-15T05:46:59",
                                    outOfBed: 99,
                                    inBed: 28718
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-16",
                                sessions: [{
                                    startDate: a + "-15T21:35:21",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-15T21:35:21",
                                    restful: 34841,
                                    originalEndDate: a + "-16T07:53:06",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 37065,
                                    avgHeartRate: 65,
                                    restless: 2224,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 67,
                                    endDate: a + "-16T07:53:06",
                                    outOfBed: 0,
                                    inBed: 37065
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-17",
                                sessions: [{
                                    startDate: a + "-16T21:10:29",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-16T21:10:29",
                                    restful: 33909,
                                    originalEndDate: a + "-17T07:31:32",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 37263,
                                    avgHeartRate: 87,
                                    restless: 3354,
                                    avgRespirationRate: 12,
                                    isFinalized: !0,
                                    sleepQuotient: 85,
                                    endDate: a + "-17T07:31:32",
                                    outOfBed: 0,
                                    inBed: 37263
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-18",
                                sessions: [{
                                    startDate: a + "-17T20:17:53",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-17T20:17:53",
                                    restful: 33455,
                                    originalEndDate: a + "-18T06:26:15",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 36502,
                                    avgHeartRate: 65,
                                    restless: 2136,
                                    avgRespirationRate: 9,
                                    isFinalized: !0,
                                    sleepQuotient: 60,
                                    endDate: a + "-18T06:26:15",
                                    outOfBed: 911,
                                    inBed: 35591
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-19",
                                sessions: [{
                                    startDate: a + "-18T21:23:44",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-18T21:23:44",
                                    restful: 26179,
                                    originalEndDate: a + "-19T05:51:05",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 30441,
                                    avgHeartRate: 67,
                                    restless: 4262,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 78,
                                    endDate: a + "-19T05:51:05",
                                    outOfBed: 0,
                                    inBed: 30441
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-20",
                                sessions: [{
                                    startDate: a + "-19T21:28:33",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-19T21:28:33",
                                    restful: 28223,
                                    originalEndDate: a + "-20T06:01:26",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 30773,
                                    avgHeartRate: 75,
                                    restless: 2455,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 82,
                                    endDate: a + "-20T06:01:26",
                                    outOfBed: 95,
                                    inBed: 30678
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-21",
                                sessions: [{
                                    startDate: a + "-20T22:11:58",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-20T22:11:58",
                                    restful: 26326,
                                    originalEndDate: a + "-21T06:03:46",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 28308,
                                    avgHeartRate: 70,
                                    restless: 1982,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 62,
                                    endDate: a + "-21T06:03:46",
                                    outOfBed: 0,
                                    inBed: 28308
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-22",
                                sessions: [{
                                    startDate: a + "-21T22:05:12",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-21T22:05:12",
                                    restful: 24738,
                                    originalEndDate: a + "-22T06:06:54",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 28902,
                                    avgHeartRate: 65,
                                    restless: 4028,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 67,
                                    endDate: a + "-22T06:06:54",
                                    outOfBed: 136,
                                    inBed: 28766
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-23",
                                sessions: [{
                                    startDate: a + "-22T22:05:12",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-22T22:05:12",
                                    restful: 24738,
                                    originalEndDate: a + "-23T06:06:54",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 28902,
                                    avgHeartRate: 65,
                                    restless: 4028,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 63,
                                    endDate: a + "-23T06:06:54",
                                    outOfBed: 136,
                                    inBed: 28766
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-24",
                                sessions: [{
                                    startDate: a + "-23T22:05:12",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-23T22:05:12",
                                    restful: 24738,
                                    originalEndDate: a + "-24T06:06:54",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 28902,
                                    avgHeartRate: 65,
                                    restless: 4028,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 77,
                                    endDate: a + "-24T06:06:54",
                                    outOfBed: 136,
                                    inBed: 28766
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-25",
                                sessions: [{
                                    startDate: a + "-24T20:51:36",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-24T20:51:36",
                                    restful: 28561,
                                    originalEndDate: a + "-25T05:57:27",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 32751,
                                    avgHeartRate: 63,
                                    restless: 3531,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 84,
                                    endDate: a + "-25T05:57:27",
                                    outOfBed: 659,
                                    inBed: 32092
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-26",
                                sessions: [{
                                    startDate: a + "-25T20:51:36",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-25T20:51:36",
                                    restful: 28561,
                                    originalEndDate: a + "-26T05:57:27",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 32751,
                                    avgHeartRate: 63,
                                    restless: 3531,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 88,
                                    endDate: a + "-26T05:57:27",
                                    outOfBed: 659,
                                    inBed: 32092
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-27",
                                sessions: [{
                                    startDate: a + "-26T20:51:36",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-26T20:51:36",
                                    restful: 28561,
                                    originalEndDate: a + "-27T05:57:27",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 32751,
                                    avgHeartRate: 63,
                                    restless: 3531,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 84,
                                    endDate: a + "-27T05:57:27",
                                    outOfBed: 659,
                                    inBed: 32092
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-28",
                                sessions: [{
                                    startDate: a + "-28T01:57:05",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-28T01:57:05",
                                    restful: 12624,
                                    originalEndDate: a + "-28T05:56:11",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 14346,
                                    avgHeartRate: 60,
                                    restless: 1722,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 65,
                                    endDate: a + "-28T05:56:11",
                                    outOfBed: 0,
                                    inBed: 14346
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-29",
                                sessions: [{
                                    startDate: a + "-28T20:38:02",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-28T20:38:02",
                                    restful: 29815,
                                    originalEndDate: a + "-29T06:22:36",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 35074,
                                    avgHeartRate: 80,
                                    restless: 4456,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 75,
                                    endDate: a + "-29T06:22:36",
                                    outOfBed: 803,
                                    inBed: 34271
                                }],
                                goalEntry: null,
                                tags: []
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-30",
                                sessions: [{
                                    startDate: a + "-29T20:24:11",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-29T20:24:11",
                                    restful: 34813,
                                    originalEndDate: a + "-30T07:51:05",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 41214,
                                    avgHeartRate: 74,
                                    restless: 5668,
                                    avgRespirationRate: 12,
                                    isFinalized: !0,
                                    sleepQuotient: 67,
                                    endDate: a + "-30T07:51:05",
                                    outOfBed: 733,
                                    inBed: 40481
                                }],
                                goalEntry: null,
                                tags: []
                            }]
                        };
                    case "-9223372036829727789":
                        return {
                            sleeperId: "-9223372036829727789",
                            message: "",
                            tip: b(),
                            avgHeartRate: 58,
                            avgRespirationRate: 16,
                            totalSleepSessionTime: 732521,
                            inBed: 715922,
                            outOfBed: 16599,
                            restful: 663997,
                            restless: 51925,
                            avgSleepIQ: 76,
                            sleepData: [{
                                tip: "You get your best SleepIQ scores when you’re active in the morning.",
                                message: "You had a restless nights sleep",
                                date: c.clone().subtract(2, "days").format("YYYY-MM-DD"),
                                sessions: [{
                                    startDate: c.clone().subtract(3, "days").format("YYYY-MM-DD") + "T21:23:34",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: c.clone().subtract(3, "days").format("YYYY-MM-DD") + "T21:23:34",
                                    restful: 23506,
                                    originalEndDate: c.clone().subtract(2, "days").format("YYYY-MM-DD") + "T04:15:58",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 24744,
                                    avgHeartRate: 58,
                                    restless: 1238,
                                    avgRespirationRate: 16,
                                    isFinalized: !0,
                                    sleepQuotient: 84,
                                    endDate: c.clone().subtract(2, "days").format("YYYY-MM-DD") + "T04:15:58",
                                    outOfBed: 0,
                                    inBed: 24744
                                }],
                                goalEntry: null,
                                tags: ["Running", "Caffeine"]
                            }, {
                                tip: "It should take 10-20 minutes to fall asleep. If you’re having difficulty, leave your bed and retreat to a quiet place for a relaxing activity.",
                                message: "You had a restless nights sleep",
                                date: c.clone().subtract(1, "days").format("YYYY-MM-DD"),
                                sessions: [{
                                    startDate: c.clone().subtract(2, "days").format("YYYY-MM-DD") + "T20:54:31",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: c.clone().subtract(2, "days").format("YYYY-MM-DD") + "T20:54:31",
                                    restful: 23973,
                                    originalEndDate: c.clone().subtract(1, "days").format("YYYY-MM-DD") + "T04:15:07",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 26436,
                                    avgHeartRate: 61,
                                    restless: 2085,
                                    avgRespirationRate: 16,
                                    isFinalized: !0,
                                    sleepQuotient: 65,
                                    endDate: c.clone().subtract(1, "days").format("YYYY-MM-DD") + "T04:15:07",
                                    outOfBed: 378,
                                    inBed: 26058
                                }],
                                goalEntry: null,
                                tags: ["Wine", "Caffeine"]
                            }, {
                                tip: "Moving regularly (250 steps / hours) promotes mental sharpness, as does a good night of sleep. Move often, sleep well and you’ll be unstoppable!",
                                message: "You had a restless nights sleep",
                                date: c.format("YYYY-MM-DD"),
                                sessions: [{
                                    startDate: c.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:10:49",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: c.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:10:49",
                                    restful: 26152,
                                    originalEndDate: c.format("YYYY-MM-DD") + "T04:15:07",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 29058,
                                    avgHeartRate: 59,
                                    restless: 2906,
                                    avgRespirationRate: 16,
                                    isFinalized: !0,
                                    sleepQuotient: 77,
                                    endDate: c.format("YYYY-MM-DD") + "T04:15:07",
                                    outOfBed: 0,
                                    inBed: 29058
                                }],
                                goalEntry: null,
                                tags: ["Caffeine", "Weights", "Walking"]
                            }]
                        };
                    case "-9223372036840837805":
                        return {
                            sleeperId: "-9223372036840837805",
                            message: "",
                            tip: b(),
                            avgHeartRate: 35,
                            avgRespirationRate: 14,
                            totalSleepSessionTime: 1023125,
                            inBed: 1020571,
                            outOfBed: 2554,
                            restful: 861472,
                            restless: 159099,
                            avgSleepIQ: 84,
                            sleepData: [{
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-01",
                                sessions: [{
                                    startDate: d + "T20:00:52",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: d + "T20:00:52",
                                    restful: 26223,
                                    originalEndDate: "2015-06-01T05:43:36",
                                    sleepNumber: 100,
                                    totalSleepSessionTime: 34964,
                                    avgHeartRate: 65,
                                    restless: 8741,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 74,
                                    endDate: a + "-01T05:43:36",
                                    outOfBed: 0,
                                    inBed: 34964
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-02",
                                sessions: [{
                                    startDate: a + "-01T20:15:22",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-01T20:15:22",
                                    restful: 33810,
                                    originalEndDate: a + "-02T06:41:29",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 37567,
                                    avgHeartRate: 101,
                                    restless: 3757,
                                    avgRespirationRate: 20,
                                    isFinalized: !0,
                                    sleepQuotient: 88,
                                    endDate: a + "-02T06:41:29",
                                    outOfBed: 0,
                                    inBed: 37567
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-03",
                                sessions: [{
                                    startDate: a + "-02T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-02T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-03T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-03T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-04",
                                sessions: [{
                                    startDate: a + "-03T21:20:49",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-03T21:20:49",
                                    restful: 30346,
                                    originalEndDate: a + "-04T07:22:07",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36078,
                                    avgHeartRate: 60,
                                    restless: 3002,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 86,
                                    endDate: a + "-04T07:22:07",
                                    outOfBed: 2730,
                                    inBed: 33348
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-05",
                                sessions: [{
                                    startDate: a + "-04T20:18:32",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-04T20:18:32",
                                    restful: 34092,
                                    originalEndDate: a + "-05T06:42:56",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 37464,
                                    avgHeartRate: 65,
                                    restless: 3372,
                                    avgRespirationRate: 16,
                                    isFinalized: !0,
                                    sleepQuotient: 93,
                                    endDate: a + "-05T06:42:56",
                                    outOfBed: 0,
                                    inBed: 37464
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-06",
                                sessions: [{
                                    startDate: a + "-05T20:53:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-05T20:53:03",
                                    restful: 36629,
                                    originalEndDate: a + "-06T07:49:30",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 39387,
                                    avgHeartRate: 70,
                                    restless: 2758,
                                    avgRespirationRate: 19,
                                    isFinalized: !0,
                                    sleepQuotient: 89,
                                    endDate: a + "-06T07:49:30",
                                    outOfBed: 0,
                                    inBed: 39387
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-07",
                                sessions: [{
                                    startDate: a + "-06T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-06T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-07T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-07T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-08",
                                sessions: [{
                                    startDate: a + "-07T20:16:41",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-07T20:16:41",
                                    restful: 16069,
                                    originalEndDate: a + "-08T01:04:40",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 17279,
                                    avgHeartRate: 70,
                                    restless: 1210,
                                    avgRespirationRate: 16,
                                    isFinalized: !0,
                                    sleepQuotient: 92,
                                    endDate: a + "-08T01:04:40",
                                    outOfBed: 0,
                                    inBed: 17279
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-09",
                                sessions: [{
                                    startDate: a + "-08T20:16:41",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-08T20:16:41",
                                    restful: 16069,
                                    originalEndDate: a + "-09T01:04:40",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 17279,
                                    avgHeartRate: 70,
                                    restless: 1210,
                                    avgRespirationRate: 16,
                                    isFinalized: !0,
                                    sleepQuotient: 92,
                                    endDate: a + "-09T01:04:40",
                                    outOfBed: 0,
                                    inBed: 17279
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-10",
                                sessions: [{
                                    startDate: a + "-09T20:31:59",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-09T20:31:59",
                                    restful: 32979,
                                    originalEndDate: a + "-10T06:56:36",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 37477,
                                    avgHeartRate: 60,
                                    restless: 4498,
                                    avgRespirationRate: 18,
                                    isFinalized: !0,
                                    sleepQuotient: 87,
                                    endDate: a + "-10T06:56:36",
                                    outOfBed: 0,
                                    inBed: 37477
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-11",
                                sessions: [{
                                    startDate: a + "-10T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-10T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-11T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 75,
                                    endDate: a + "-11T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-12",
                                sessions: [{
                                    startDate: a + "-11T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-11T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-12T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 75,
                                    endDate: a + "-12T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-13",
                                sessions: [{
                                    startDate: a + "-12T20:41:51",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-12T20:41:51",
                                    restful: 33547,
                                    originalEndDate: a + "-13T06:49:36",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36465,
                                    avgHeartRate: 65,
                                    restless: 2918,
                                    avgRespirationRate: 12,
                                    isFinalized: !0,
                                    sleepQuotient: 74,
                                    endDate: a + "-13T06:49:36",
                                    outOfBed: 0,
                                    inBed: 36465
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-14",
                                sessions: [{
                                    startDate: a + "-13T20:24:29",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-13T20:24:29",
                                    restful: 31622,
                                    originalEndDate: a + "-14T06:37:19",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36770,
                                    avgHeartRate: 92,
                                    restless: 5148,
                                    avgRespirationRate: 20,
                                    isFinalized: !0,
                                    sleepQuotient: 83,
                                    endDate: a + "-14T06:37:19",
                                    outOfBed: 0,
                                    inBed: 36770
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-15",
                                sessions: [{
                                    startDate: a + "-14T22:06:05",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-14T22:06:05",
                                    restful: 29135,
                                    originalEndDate: a + "-15T06:42:40",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 30995,
                                    avgHeartRate: 65,
                                    restless: 1860,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 77,
                                    endDate: a + "-15T06:42:40",
                                    outOfBed: 0,
                                    inBed: 30995
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-16",
                                sessions: [{
                                    startDate: a + "-15T19:43:23",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-15T19:43:23",
                                    restful: 33693,
                                    originalEndDate: a + "-16T06:30:43",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 38840,
                                    avgHeartRate: 80,
                                    restless: 4595,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 73,
                                    endDate: a + "-16T06:30:43",
                                    outOfBed: 552,
                                    inBed: 38288
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-17",
                                sessions: [{
                                    startDate: a + "-16T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-16T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-17T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 75,
                                    endDate: a + "-17T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-18",
                                sessions: [{
                                    startDate: a + "-17T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-17T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-18T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 77,
                                    endDate: a + "-18T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-19",
                                sessions: [{
                                    startDate: a + "-18T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-18T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-19T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 77,
                                    endDate: a + "-19T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-20",
                                sessions: [{
                                    startDate: a + "-19T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-19T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-20T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 73,
                                    endDate: a + "-20T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-21",
                                sessions: [{
                                    startDate: a + "-20T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-20T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-21T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 85,
                                    endDate: a + "-21T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-22",
                                sessions: [{
                                    startDate: a + "-21T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-21T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-22T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 90,
                                    endDate: a + "-22T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }, {
                                    startDate: "2015-06-22T08:41:38",
                                    longest: !1,
                                    sleepIQCalculating: !1,
                                    originalStartDate: "2015-06-22T08:41:38",
                                    restful: 3294,
                                    originalEndDate: "2015-06-22T10:11:39",
                                    sleepNumber: 100,
                                    totalSleepSessionTime: 5401,
                                    avgHeartRate: 60,
                                    restless: 2107,
                                    avgRespirationRate: 8,
                                    isFinalized: !0,
                                    sleepQuotient: 26,
                                    endDate: "2015-06-22T10:11:39",
                                    outOfBed: 0,
                                    inBed: 5401
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-23",
                                sessions: [{
                                    startDate: a + "-22T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-22T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-23T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 75,
                                    endDate: a + "-23T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-24",
                                sessions: [{
                                    startDate: a + "-23T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-23T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-24T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 75,
                                    endDate: a + "-24T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-25",
                                sessions: [{
                                    startDate: a + "-24T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-24T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-25T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-25T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-26",
                                sessions: [{
                                    startDate: a + "-25T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-25T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-26T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 81,
                                    endDate: a + "-26T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-27",
                                sessions: [{
                                    startDate: a + "-26T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-26T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-27T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-27T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-28",
                                sessions: [{
                                    startDate: a + "-27T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-27T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-28T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 90,
                                    endDate: a + "-28T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-29",
                                sessions: [{
                                    startDate: a + "-28T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-28T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-29T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-29T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "",
                                date: a + "-30",
                                sessions: [{
                                    startDate: a + "-29T16:35:56",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-29T16:35:56",
                                    restful: 47923,
                                    originalEndDate: a + "-30T07:43:55",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 54479,
                                    avgHeartRate: 93,
                                    restless: 6536,
                                    avgRespirationRate: 12,
                                    isFinalized: !0,
                                    sleepQuotient: 78,
                                    endDate: a + "-30T07:43:55",
                                    outOfBed: 20,
                                    inBed: 54459
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }]
                        };
                    case "-9223372036840837804":
                        return {
                            sleeperId: "-9223372036840837804",
                            message: "",
                            tip: b(),
                            avgHeartRate: 35,
                            avgRespirationRate: 14,
                            totalSleepSessionTime: 1023125,
                            inBed: 815912,
                            outOfBed: 2554,
                            restful: 861472,
                            restless: 159099,
                            avgSleepIQ: 84,
                            sleepData: [{
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-01",
                                sessions: [{
                                    startDate: d + "T20:10:49",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: d + "T20:10:49",
                                    restful: 26152,
                                    originalEndDate: a + "-01T04:15:07",
                                    sleepNumber: 85,
                                    totalSleepSessionTime: 29058,
                                    avgHeartRate: 59,
                                    restless: 2906,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 73,
                                    endDate: a + "-01T04:15:07",
                                    outOfBed: 0,
                                    inBed: 29058
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-02",
                                sessions: [{
                                    startDate: a + "-01T21:20:49",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-01T21:20:49",
                                    restful: 30346,
                                    originalEndDate: a + "-02T07:22:07",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36078,
                                    avgHeartRate: 60,
                                    restless: 3002,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 85,
                                    endDate: a + "-03T07:22:07",
                                    outOfBed: 2730,
                                    inBed: 33348
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: "",
                                message: "You had a restless nights sleep",
                                date: a + "-03",
                                sessions: [{
                                    startDate: a + "-02T21:20:49",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-02T21:20:49",
                                    restful: 30346,
                                    originalEndDate: a + "-03T07:22:07",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36078,
                                    avgHeartRate: 60,
                                    restless: 3002,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 85,
                                    endDate: a + "-03T07:22:07",
                                    outOfBed: 2730,
                                    inBed: 33348
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-04",
                                sessions: [{
                                    startDate: a + "-03T20:18:32",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-03T20:18:32",
                                    restful: 34092,
                                    originalEndDate: a + "-04T06:42:56",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 37464,
                                    avgHeartRate: 65,
                                    restless: 3372,
                                    avgRespirationRate: 16,
                                    isFinalized: !0,
                                    sleepQuotient: 84,
                                    endDate: a + "-04T06:42:56",
                                    outOfBed: 0,
                                    inBed: 37464
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-05",
                                sessions: [{
                                    startDate: a + "-04T20:53:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-04T20:53:03",
                                    restful: 36629,
                                    originalEndDate: a + "-05T07:49:30",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 39387,
                                    avgHeartRate: 60,
                                    restless: 2758,
                                    avgRespirationRate: 19,
                                    isFinalized: !0,
                                    sleepQuotient: 90,
                                    endDate: a + "-05T07:49:30",
                                    outOfBed: 0,
                                    inBed: 39387
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-06",
                                sessions: [{
                                    startDate: a + "-05T21:28:40",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-05T21:28:40",
                                    restful: 33698,
                                    originalEndDate: a + "-06T07:45:51",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 37031,
                                    avgHeartRate: 65,
                                    restless: 3333,
                                    avgRespirationRate: 18,
                                    isFinalized: !0,
                                    sleepQuotient: 95,
                                    endDate: a + "-06T07:45:51",
                                    outOfBed: 0,
                                    inBed: 37031
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-07",
                                sessions: [{
                                    startDate: a + "-06T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-06T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-07T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 76,
                                    endDate: a + "-07T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-08",
                                sessions: [{
                                    startDate: a + "-07T20:16:41",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-07T20:16:41",
                                    restful: 16069,
                                    originalEndDate: a + "-08T01:04:40",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 17279,
                                    avgHeartRate: 60,
                                    restless: 1210,
                                    avgRespirationRate: 16,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-08T01:04:40",
                                    outOfBed: 0,
                                    inBed: 17279
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a restless nights sleep",
                                date: a + "-09",
                                sessions: [{
                                    startDate: a + "-08T20:31:59",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-08T20:31:59",
                                    restful: 32979,
                                    originalEndDate: a + "-09T06:56:36",
                                    sleepNumber: 84,
                                    totalSleepSessionTime: 37477,
                                    avgHeartRate: 60,
                                    restless: 4498,
                                    avgRespirationRate: 18,
                                    isFinalized: !0,
                                    sleepQuotient: 92,
                                    endDate: a + "-09T06:56:36",
                                    outOfBed: 0,
                                    inBed: 37477
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-10",
                                sessions: [{
                                    startDate: a + "-09T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-09T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-10T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 76,
                                    endDate: a + "-10T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-11",
                                sessions: [{
                                    startDate: a + "-010T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-010T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-11T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 76,
                                    endDate: a + "-11T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-12",
                                sessions: [{
                                    startDate: a + "-11T20:41:51",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-11T20:41:51",
                                    restful: 33547,
                                    originalEndDate: a + "-12T06:49:36",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36465,
                                    avgHeartRate: 65,
                                    restless: 2918,
                                    avgRespirationRate: 12,
                                    isFinalized: !0,
                                    sleepQuotient: 84,
                                    endDate: a + "-12T06:49:36",
                                    outOfBed: 0,
                                    inBed: 36465
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-13",
                                sessions: [{
                                    startDate: a + "-12T20:24:29",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-12T20:24:29",
                                    restful: 31622,
                                    originalEndDate: a + "-13T06:37:19",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36770,
                                    avgHeartRate: 92,
                                    restless: 5148,
                                    avgRespirationRate: 20,
                                    isFinalized: !0,
                                    sleepQuotient: 69,
                                    endDate: a + "-13T06:37:19",
                                    outOfBed: 0,
                                    inBed: 36770
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-14",
                                sessions: [{
                                    startDate: a + "-13T22:06:05",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-13T22:06:05",
                                    restful: 29135,
                                    originalEndDate: a + "-14T06:42:40",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 30995,
                                    avgHeartRate: 65,
                                    restless: 1860,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 87,
                                    endDate: a + "-14T06:42:40",
                                    outOfBed: 0,
                                    inBed: 30995
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-15",
                                sessions: [{
                                    startDate: a + "-14T19:43:23",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-14T19:43:23",
                                    restful: 33693,
                                    originalEndDate: a + "-15T06:30:43",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 38840,
                                    avgHeartRate: 80,
                                    restless: 4595,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 70,
                                    endDate: a + "-15T06:30:43",
                                    outOfBed: 552,
                                    inBed: 38288
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-16",
                                sessions: [{
                                    startDate: a + "-15T19:43:23",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-15T19:43:23",
                                    restful: 33693,
                                    originalEndDate: a + "-16T06:30:43",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 38840,
                                    avgHeartRate: 80,
                                    restless: 4595,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 84,
                                    endDate: a + "-16T06:30:43",
                                    outOfBed: 552,
                                    inBed: 38288
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-17",
                                sessions: [{
                                    startDate: a + "-16T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-16T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-17T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 80,
                                    endDate: a + "-17T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-18",
                                sessions: [{
                                    startDate: a + "-17T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-17T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-18T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 80,
                                    endDate: a + "-18T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-19",
                                sessions: [{
                                    startDate: a + "-18T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-18T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-19T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-19T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-20",
                                sessions: [{
                                    startDate: a + "-19T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-19T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-20T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 84,
                                    endDate: a + "-20T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-21",
                                sessions: [{
                                    startDate: a + "-20T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-20T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-21T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 85,
                                    endDate: a + "-21T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-22",
                                sessions: [{
                                    startDate: a + "-21T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-21T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-22T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 92,
                                    endDate: a + "-22T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-23",
                                sessions: [{
                                    startDate: a + "-22T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-22T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-23T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 90,
                                    endDate: a + "-23T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }, {
                                    startDate: "2015-06-22T08:41:38",
                                    longest: !1,
                                    sleepIQCalculating: !1,
                                    originalStartDate: "2015-06-22T08:41:38",
                                    restful: 3294,
                                    originalEndDate: "2015-06-22T10:11:39",
                                    sleepNumber: 100,
                                    totalSleepSessionTime: 5401,
                                    avgHeartRate: 60,
                                    restless: 2107,
                                    avgRespirationRate: 8,
                                    isFinalized: !0,
                                    sleepQuotient: 26,
                                    endDate: "2015-06-22T10:11:39",
                                    outOfBed: 0,
                                    inBed: 5401
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-24",
                                sessions: [{
                                    startDate: a + "-23T21:48:03",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-23T21:48:03",
                                    restful: 29487,
                                    originalEndDate: a + "-24T07:47:59",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35996,
                                    avgHeartRate: 68,
                                    restless: 1883,
                                    avgRespirationRate: 13,
                                    isFinalized: !0,
                                    sleepQuotient: 80,
                                    endDate: a + "-24T07:47:59",
                                    outOfBed: 4626,
                                    inBed: 31370
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-25",
                                sessions: [{
                                    startDate: a + "-24T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-24T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-25T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 79,
                                    endDate: a + "-25T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-26",
                                sessions: [{
                                    startDate: a + "-25T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-25T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-26T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 82,
                                    endDate: a + "-26T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had a GOOD nights sleep",
                                date: a + "-27",
                                sessions: [{
                                    startDate: a + "-26T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-26T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-27T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 90,
                                    endDate: a + "-27T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-28",
                                sessions: [{
                                    startDate: a + "-27T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-27T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-28T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 81,
                                    endDate: a + "-28T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "You had an EXCELLENT nights sleep",
                                date: a + "-29",
                                sessions: [{
                                    startDate: a + "-28T20:29:24",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-28T20:29:24",
                                    restful: 33202,
                                    originalEndDate: a + "-29T06:38:34",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 36550,
                                    avgHeartRate: 65,
                                    restless: 3284,
                                    avgRespirationRate: 17,
                                    isFinalized: !0,
                                    sleepQuotient: 90,
                                    endDate: a + "-29T06:38:34",
                                    outOfBed: 64,
                                    inBed: 36486
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }, {
                                tip: b(),
                                message: "",
                                date: a + "-30",
                                sessions: [{
                                    startDate: a + "-29T16:35:56",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a + "-29T16:35:56",
                                    restful: 47923,
                                    originalEndDate: a + "-30T07:43:55",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 54479,
                                    avgHeartRate: 93,
                                    restless: 6536,
                                    avgRespirationRate: 12,
                                    isFinalized: !0,
                                    sleepQuotient: 75,
                                    endDate: a + "-30T07:43:55",
                                    outOfBed: 20,
                                    inBed: 54459
                                }],
                                goalEntry: null,
                                tags: ["Homework", "Test/Exam", "Soccer"]
                            }]
                        };
                    default:
                        return {}
                }
            }
        }), define("app/service/demodata/slicesdata", ["require"], function() {
            return function(a, b) {
                switch (a) {
                    case 1:
                        return [{
                            date: b,
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 402,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 198
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 530,
                                type: 1,
                                restlessTime: 1,
                                outOfBedTime: 69
                            }, {
                                restfulTime: 316,
                                type: 1,
                                restlessTime: 0,
                                outOfBedTime: 284
                            }, {
                                restfulTime: 559,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 41
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 598,
                                type: 2,
                                restlessTime: 2,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 245,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 355
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(1, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 456,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 144
                            }, {
                                restfulTime: 598,
                                type: 2,
                                restlessTime: 2,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 596,
                                type: 2,
                                restlessTime: 4,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 522,
                                type: 1,
                                restlessTime: 0,
                                outOfBedTime: 78
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 594,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 6
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(2, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 192,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 408
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 598,
                                type: 2,
                                restlessTime: 2,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 109,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 491
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(3, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 237,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 363
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 572,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 28
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(4, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 553,
                                type: 2,
                                restlessTime: 2,
                                outOfBedTime: 45
                            }, {
                                restfulTime: 598,
                                type: 2,
                                restlessTime: 2,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 401,
                                type: 1,
                                restlessTime: 4,
                                outOfBedTime: 195
                            }, {
                                restfulTime: 589,
                                type: 1,
                                restlessTime: 3,
                                outOfBedTime: 8
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 276,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 324
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(5, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 198,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 402
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 500,
                                type: 1,
                                restlessTime: 1,
                                outOfBedTime: 99
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 419,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 181
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(6, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 279,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 321
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 186,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 414
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }];
                    default:
                        return [{
                            date: b,
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 598,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 1
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 376,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 224
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(1, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 459,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 140
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 417,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 183
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(2, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 568,
                                type: 2,
                                restlessTime: 4,
                                outOfBedTime: 28
                            }, {
                                restfulTime: 593,
                                type: 2,
                                restlessTime: 7,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 361,
                                type: 1,
                                restlessTime: 2,
                                outOfBedTime: 237
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 561,
                                type: 1,
                                restlessTime: 0,
                                outOfBedTime: 39
                            }, {
                                restfulTime: 37,
                                type: 1,
                                restlessTime: 0,
                                outOfBedTime: 563
                            }, {
                                restfulTime: 316,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 284
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 517,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 83
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(3, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 15,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 585
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 597,
                                type: 2,
                                restlessTime: 3,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 583,
                                type: 1,
                                restlessTime: 0,
                                outOfBedTime: 17
                            }, {
                                restfulTime: 511,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 89
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 443,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 157
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(4, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 437,
                                type: 2,
                                restlessTime: 2,
                                outOfBedTime: 161
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 569,
                                type: 1,
                                restlessTime: 1,
                                outOfBedTime: 30
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 598,
                                type: 2,
                                restlessTime: 2,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 442,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 158
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(5, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 324,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 275
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 34,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 566
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }, {
                            date: moment(b).add(6, "days").format("YYYY-MM-DD"),
                            sliceList: [{
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 153,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 447
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 3,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 514,
                                type: 1,
                                restlessTime: 0,
                                outOfBedTime: 86
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 599,
                                type: 2,
                                restlessTime: 1,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 600,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 169,
                                type: 2,
                                restlessTime: 0,
                                outOfBedTime: 431
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }, {
                                restfulTime: 0,
                                type: 3,
                                restlessTime: 0,
                                outOfBedTime: 0
                            }]
                        }]
                }
            }
        }), define("app/service/demodata/sleepslices", ["require", "app/service/demodata/slicesdata"], function(a) {
            var b = a("app/service/demodata/slicesdata");
            return function(a, c) {
                var d = Math.floor(2 * Math.random());
                if (!c) return {
                    sleepers: [{
                        days: b(Math.floor(2 * Math.random()), a),
                        sleeperId: "-9223372036840837804",
                        sliceSize: 600
                    }, {
                        days: b(Math.floor(2 * Math.random()), a),
                        sleeperId: "-9223372036840837805",
                        sliceSize: 600
                    }, {
                        days: b(Math.floor(2 * Math.random()), a),
                        sleeperId: "-9223372036829727789",
                        sliceSize: 600
                    }, {
                        days: b(Math.floor(2 * Math.random()), a),
                        sleeperId: "-9223372036829727788",
                        sliceSize: 600
                    }]
                };
                switch (d) {
                    case 1:
                        return {
                            sleepers: [{
                                days: b(1, a),
                                sleeperId: c,
                                sliceSize: 600
                            }]
                        };
                    default:
                        return {
                            sleepers: [{
                                days: b(0, a),
                                sleeperId: c,
                                sliceSize: 600
                            }]
                        }
                }
            }
        }), define("app/service/demodata/databymonth", ["require"], function() {
            var a = moment();
            return function(b) {
                return {
                    monthSleepData: {
                        date: b,
                        sleepers: [{
                            avgHeartRate: 40,
                            avgRespirationRate: 17,
                            avgSleepIQ: 84,
                            inBed: 715922,
                            message: "",
                            outOfBed: 2794,
                            restful: 254388,
                            restless: 25997,
                            sleeperId: "-9223372036840837804",
                            tip: "Nighttime sleep may be affected by long daytime naps, especially if you’re struggling with poor sleep quality at night.",
                            totalSleepSessionTime: 283179
                        }, {
                            avgHeartRate: 40,
                            avgRespirationRate: 17,
                            avgSleepIQ: 81,
                            inBed: 280385,
                            message: "",
                            outOfBed: 2794,
                            restful: 254388,
                            restless: 25997,
                            sleeperId: "-9223372036840837805",
                            tip: "Nighttime sleep may be affected by long daytime naps, especially if you’re struggling with poor sleep quality at night.",
                            totalSleepSessionTime: 283179
                        }, {
                            avgHeartRate: 43,
                            avgRespirationRate: 13,
                            avgSleepIQ: 73,
                            inBed: 248264,
                            message: "",
                            outOfBed: 1883,
                            restful: 226528,
                            restless: 21736,
                            sleeperId: "-9223372036829727789",
                            tip: "Start each day in bright light. Sunlight or any other bright light informs your body’s biological clock that it’s time to wake up.",
                            totalSleepSessionTime: 250147
                        }, {
                            avgHeartRate: 30,
                            avgRespirationRate: 15,
                            avgSleepIQ: 79,
                            inBed: 281767,
                            message: "",
                            outOfBed: 2388,
                            restful: 252303,
                            restless: 29464,
                            sleeperId: "-9223372036829727788",
                            tip: "“Screen time” before bedtime may interfere with sleep due to its light or its stimulating content.",
                            totalSleepSessionTime: 284155
                        }],
                        days: [{
                            date: a.format("YYYY-MM-DD"),
                            sleepers: [{
                                sleeperId: "-9223372036840837804",
                                name: "Charlie",
                                session: {
                                    startDate: a.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:38:58",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:15:22",
                                    restful: 33810,
                                    originalEndDate: a.format("YYYY-MM-DD") + "T06:41:29",
                                    sleepNumber: 45,
                                    totalSleepSessionTime: 35100,
                                    avgHeartRate: 101,
                                    restless: 3757,
                                    avgRespirationRate: 20,
                                    isFinalized: !0,
                                    sleepQuotient: 88,
                                    endDate: a.format("YYYY-MM-DD") + "T06:41:29",
                                    outOfBed: 0,
                                    inBed: 35100
                                }
                            }, {
                                sleeperId: "-9223372036840837805",
                                name: "Megan",
                                session: {
                                    startDate: a.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:38:58",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:10:49",
                                    restful: 26152,
                                    originalEndDate: a.format("YYYY-MM-DD") + "T04:15:07",
                                    sleepNumber: 85,
                                    totalSleepSessionTime: 32700,
                                    avgHeartRate: 59,
                                    restless: 2906,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 82,
                                    endDate: a.format("YYYY-MM-DD") + "T04:15:07",
                                    outOfBed: 0,
                                    inBed: 32700
                                }
                            }, {
                                sleeperId: "-9223372036829727789",
                                name: "Sara",
                                session: {
                                    startDate: a.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:38:58",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:10:49",
                                    restful: 26152,
                                    originalEndDate: a.format("YYYY-MM-DD") + "T04:15:07",
                                    sleepNumber: 85,
                                    totalSleepSessionTime: 27900,
                                    avgHeartRate: 59,
                                    restless: 2906,
                                    avgRespirationRate: 14,
                                    isFinalized: !0,
                                    sleepQuotient: 77,
                                    endDate: a.format("YYYY-MM-DD") + "T04:15:07",
                                    outOfBed: 0,
                                    inBed: 27900
                                }
                            }, {
                                sleeperId: "-9223372036829727788",
                                name: "Jason",
                                session: {
                                    startDate: a.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:38:58",
                                    longest: !0,
                                    sleepIQCalculating: !1,
                                    originalStartDate: a.clone().subtract(1, "days").format("YYYY-MM-DD") + "T20:38:58",
                                    restful: 30419,
                                    originalEndDate: a.format("YYYY-MM-DD") + "T06:12:15",
                                    sleepNumber: 65,
                                    totalSleepSessionTime: 23820,
                                    avgHeartRate: 62,
                                    restless: 3760,
                                    avgRespirationRate: 15,
                                    isFinalized: !0,
                                    sleepQuotient: 72,
                                    endDate: a.format("YYYY-MM-DD") + "T06:12:15",
                                    outOfBed: 218,
                                    inBed: 23820
                                }
                            }]
                        }]
                    }
                }
            }
        }), define("app/service/demodata/providersdata", ["require"], function() {
            return {
                providers: [{
                    id: "fitbit",
                    name: "Fitbit",
                    description: "Fitbit",
                    image: "",
                    scope: ["Activity data", "Activity duration", "Daily steps", "Distance", "Calories burned"],
                    platforms: ["ios", "android", "web"],
                    data_types: ["activity"],
                    connected: !0,
                    order: 1,
                    connectedAt: "2016-07-21T18:30:42.000Z",
                    last_sync: "2016-07-20",
                    is_valid: !0
                }, {
                    id: "health",
                    name: "Microsoft Health",
                    description: "Microsoft Health",
                    image: "iVBORw0KGgoAAAANSUhEUgAAATgAAAEMCAYAAABQlKrRAAABGWlDQ1BJQ0MgUHJvZmlsZQAAKJFjYGBSSCwoyGESYGDIzSspCnJ3UoiIjFJgf8DAxiDGIMigwyCVmFxc4BgQ4MMABDAaFXy7xsAIoi/rgszClMcLuFJSi5OB9B8gzk4uKCphYGDMALKVy0sKQOweIFskKRvMXgBiFwEdCGRvAbHTIewTYDUQ9h2wmpAgZyD7A5DNlwRmM4Hs4kuHsAVAbKi9ICDomJKflKoA8r2GoaWlhSaJfiAISlIrSkC0c35BZVFmekaJgiMwpFIVPPOS9XQUjAwMzRgYQOEOUf05EByejGJnEGIIgBCbI8HA4L+UgYHlD0LMpJeBYYEOAwP/VISYmiEDg4A+A8O+OcmlRWVQYxiZjBkYCPEBRGZKamL8C4UAAAAJcEhZcwAAFxIAABcSAWef0lIAAA1tSURBVHgB7d1NiF1nGQfw9869dzL5ntoPKxEr1BZqAxUMQcS0ahFEsIRqsX7UEtCN1JQK4sqN4KpKKRE33RQ3laAoCG4qhQpxYTdKlUpBFGsiEa2NtDUhScfJoieZMqc5d5jnvh/zm03P3PPe533e33P6T24+2tHK6leq4OtSm/cefKyYTo+fOJqmi5NB/Zw7ez7df+jYoLXzWPSz574xj23mvsfJv76cHrrvybnvu96G+266Jv3gJ0fWu7Xuay/+4R/pW0eeWvfevF88/MCB9ODRO+e9bch+CyFVFSVAgEABAgKugCFogQCBGAEBF+OqKgECBQgIuAKGoAUCBGIEBFyMq6oECBQgIOAKGIIWCBCIERBwMa6qEiBQgICAK2AIWiBAIEZAwMW4qkqAQAECAq6AIWiBAIEYAQEX46oqAQIFCAi4AoagBQIEYgQEXIyrqgQIFCAg4AoYghYIEIgREHAxrqoSIFCAgIArYAhaIEAgRkDAxbiqSoBAAQICroAhaIEAgRgBARfjqioBAgUICLgChqAFAgRiBARcjKuqBAgUICDgChiCFggQiBEQcDGuqhIgUICAgCtgCFogQCBGQMDFuKpKgEABAgKugCFogQCBGAEBF+OqKgECBQgIuAKGoAUCBGIEBFyMq6oECBQgIOAKGIIWCBCIERBwMa6qEiBQgICAK2AIWiBAIEZAwMW4qkqAQAECkwJ6GNTCaDRKn/vqhwatnceihfHwHxsmk3FRvc/DJ8ceu5e3F+O8Z3nHTATX3rCrmN5vu2PfTL2XvHi0svpVcoN6I0CAwEYFhv80ZKM7eB8BAgQyCQi4TPC2JUAgXkDAxRvbgQCBTAICLhO8bQkQiBcQcPHGdiBAIJOAgMsEb1sCBOIFBFy8sR0IEMgkIOAywduWAIF4AQEXb2wHAgQyCQi4TPC2JUAgXmDy9M+fj9+lwR3uvmd/WlgYDTrZxYtvpGd+8cdBay26LDBe/fu+H//07ZdfuMrVa6+eS7/51YtXWTWf2zt3b0sfvvvWwZud+c/r6bfP/nnw+siF773l+nTL7TcO3uKlv/w7/en3pwavj1x46/53pZved123xeSH3326+8bFcIGPfuq2tLA47L9VcOH8xcR5uO2bK6eL45kC7pV/vVaM876brpkp4E6fPFNM74cfODBTwD3/3EvpiUefeXNsWf955JG71gScj6hZx2FzAgQiBQRcpK7aBAhkFRBwWfltToBApICAi9RVmwCBrAICLiu/zQkQiBQQcJG6ahMgkFVAwGXltzkBApECAi5SV20CBLIKCLis/DYnQCBSQMBF6qpNgEBWAQGXld/mBAhECgi4SF21CRDIKiDgsvLbnACBSAEBF6mrNgECWQUEXFZ+mxMgECkg4CJ11SZAIKuAgMvKb3MCBCIFBFykrtoECGQVEHBZ+W1OgECkgICL1FWbAIGsAgIuK7/NCRCIFBBwkbpqEyCQVUDAZeW3OQECkQICLlJXbQIEsgoIuKz8NidAIFJAwEXqqk2AQFYBAZeV3+YECEQKCLhIXbUJEMgqIOCy8tucAIFIAQEXqas2AQJZBQRcVn6bEyAQKSDgInXVJkAgq4CAy8pvcwIEIgUmkcXVJjBPgfFkIb3j+l3z3LJ3r+Vrd/beW+/GZDIupvedu7at12Lva0s7psX0vrR9uqbP0eED319Z84pvBgkcP3E0TReH/fhw7uz5dP+hY4PqWnRZYLo4TsdPPHz5BVcEZhTwEXVGMMsJEKhHQMDVMyudEiAwo4CAmxHMcgIE6hEQcPXMSqcECMwoIOBmBLOcAIF6BARcPbPSKQECMwoIuBnBLCdAoB4BAVfPrHRKgMCMAgJuRjDLCRCoR0DA1TMrnRIgMKPAsL9rNGNRywnkELhw4WL656n/5ti6qT137VlKe5a3Dz7Ta6+eS2defn3w+siFe6/ZnnbuXuq2EHAdhYvaBU7//Ux66L4naz9G9v4PP3AgPXj0zsF9PPvLF9ITjz4zeH3kwiOP3JXu+cIHuy18RO0oXBAg0JqAgGttos5DgEAnIOA6ChcECLQmIOBam6jzECDQCQi4jsIFAQKtCQi41ibqPAQIdAICrqNwQYBAawICrrWJOg8BAp2AgOsoXBAg0JqAgGttos5DgEAnIOA6ChcECLQmIOBam6jzECDQCQi4jsIFAQKtCQi41ibqPAQIdAICrqNwQYBAawICrrWJOg8BAp2AgOsoXBAg0JqAgGttos5DgEAnIOA6ChcECLQmIOBam6jzECDQCQi4jsIFAQKtCQi41ibqPAQIdAICrqNwQYBAawICrrWJOg8BAp2AgOsoXBAg0JqAgGttos5DgEAnIOA6ChcECLQmIOBam6jzECDQCQi4jsIFAQKtCQi41ibqPAQIdAKTp3799e4bF8MFpouTwYu3LU0T58Fc3cLRqLt0QWBDApOl7dMNvdGbZhPgPJuX1QQ2Q8BH1M1QVIMAgSIFBFyRY9EUAQKbITD8F5I2Yzc1CBBoTuCTn70jfeLw/iLOtTBe+3M2AVfEWDRBoF6BhYVRWpjhN93medK1cTfPne1FgACBYAEBFwysPAEC+QQEXD57OxMgECwg4IKBlSdAIJ+AgMtnb2cCBIIFBFwwsPIECOQTqOaPiaysrKR7Dz6WT+otOx8/cTQN/fuo586eT/cfOvaWCr69msB0cZyOn3j4asvcJ9Ar4GdwvTRuECBQu4CAq32C+idAoFdAwPXSuEGAQO0CAq72CeqfAIFeAQHXS+MGAQK1Cwi42ieofwIEegUEXC+NGwQI1C4g4GqfoP4JEOgVEHC9NG4QIFC7gICrfYL6J0CgV0DA9dK4QYBA7QICrvYJ6p8AgV4BAddL4wYBArULCLjaJ6h/AgR6BQRcL40bBAjULiDgap+g/gkQ6BUQcL00bhAgULuAgKt9gvonQKBXQMD10rhBgEDtAgKu9gnqnwCBXgEB10vjBgECtQsIuNonqH8CBHoFBFwvjRsECNQuIOBqn6D+CRDoFRBwvTRuECBQu4CAq32C+idAoFdAwPXSuEGAQO0CAq72CeqfAIFeAQHXS+MGAQK1Cwi42ieofwIEegUEXC+NGwQI1C4g4GqfoP4JEOgVEHC9NG4QIFC7gICrfYL6J0CgV2DSe6ewG6PRKH3vR18spqvJdFxMLxohQGB9gWoC7lL7N9/2zvVP4VUCBAisI+Aj6jooXiJAoA0BAdfGHJ2CAIF1BKr6iLpO/14i0AncsG9vevzHX+6+d7ExgT3L2zf2xgLfJeAKHIqWNiYwXf2Nn/fcfN3G3uxdTQr4iNrkWB2KAIFLAgLOc0CAQLMCAq7Z0ToYAQICzjNAgECzAgKu2dE6GAECAs4zQIBAswICrtnROhgBAgLOM0CAQLMCAq7Z0ToYAQICzjNAgECzAv6qVrOj3XoHO33yTPrO0Z8WcfAb372cvv34vUX0spWbEHBbefqNnf3C+Yvp1N9eKeJUl/4Drb7yC/iImn8GOiBAIEhAwAXBKkuAQH4BAZd/BjogQCBIQMAFwSpLgEB+AQGXfwY6IEAgSEDABcEqS4BAfgEBl38GOiBAIEhAwAXBKkuAQH4BAZd/BjogQCBIQMAFwSpLgEB+AQGXfwY6IEAgSEDABcEqS4BAfgEBl38GOiBAIEhAwAXBKkuAQH4BAZd/BjogQCBIQMAFwSpLgEB+AQGXfwY6IEAgSEDABcEqS4BAfgEBl38GOiBAIEhAwAXBKkuAQH4BAZd/BjogQCBIQMAFwSpLgEB+AQGXfwY6IEAgSEDABcEqS4BAfgEBl38GOiBAIEjA/9k+CPbKspPJOH3myMErX3I9QGAy8ePvACZL3kZAwL0NzmbdGq/+i/qlr31ks8qpQ4DAQAE/RA6EsowAgfoEBFx9M9MxAQIDBQTcQCjLCBCoT0DA1TczHRMgMFBAwA2EsowAgfoEBFx9M9MxAQIDBfwxkYFQlpUvsHztjvSVb36siEZ37V4qoo+t3sRoZfVrqyM4PwECbQr4iNrmXJ2KAIFVAQHnMSBAoFkBvwbX7Gg3drA33lhJL/zu5MbevMnvGi2M0vs/sG+Tqyq3lQT8GtxWmvaAs5793/n0+TuPDVgZv2S6OE7HTzwcv5EdmhXwEbXZ0ToYAQICzjNAgECzAgKu2dE6GAECAs4zQIBAswICrtnROhgBAgLOM0CAQLMCAq7Z0ToYAQICzjNAgECzAgKu2dE6GAECAs4zQIBAswICrtnROhgBAgLOM0CAQLMCAq7Z0ToYAQICzjNAgECzAgKu2dE6GAECAs4zQIBAswICrtnROhgBAgLOM0CAQLMCAq7Z0ToYAQICzjNAgECzAgKu2dE6GAECAs4zQIBAswICrtnROhgBAgLOM0CAQLMCAq7Z0ToYAQICzjNAgECzAgKu2dE6GAECAs4zQIBAswICrtnROhgBAgLOM0CAQLMCAq7Z0ToYAQICzjNAgECzAgKu2dE6GAECEwQErhQYjVLavXfpypeyXU8XPZ7Z8BvZeLSy+tXIWRyDAAECawR8RF3D4RsCBFoSEHAtTdNZCBBYIyDg1nD4hgCBlgQEXEvTdBYCBNYI/B8gm7wKpgootAAAAABJRU5ErkJggg==",
                    scope: ["Activity data", "Runs", "Workouts", "Daily steps"],
                    platforms: ["ios", "android", "web"],
                    data_types: ["activity"],
                    connected: !1,
                    order: 4,
                    connectedAt: "2016-07-20T13:57:27.000Z",
                    last_sync: "2016-07-16",
                    is_valid: !0
                }, {
                    id: "nest",
                    name: "Nest",
                    description: "Nest",
                    image: "",
                    scope: ["Temperature", "Thermostat settings"],
                    platforms: ["ios", "android", "web"],
                    data_types: ["smart-house"],
                    connected: !1,
                    order: 6,
                    connectedAt: "2016-07-21T13:00:45.000Z",
                    last_sync: "2016-07-18",
                    is_valid: !0
                }, {
                    id: "underarmour",
                    name: "MapMyRun",
                    description: "MapMyRun",
                    image: "",
                    scope: ["Activity data", "Steps", "Distance", "Calories burned", "Active minutes"],
                    platforms: ["ios", "android", "web"],
                    data_types: ["activity"],
                    connected: !1,
                    order: 2,
                    connectedAt: "2016-07-20T11:15:05.000Z",
                    last_sync: "2016-07-19",
                    is_valid: !0
                }, {
                    id: "withings",
                    name: "Withings",
                    description: "Withings",
                    image: "",
                    scope: ["Activity data"],
                    platforms: ["ios", "android", "web"],
                    data_types: ["activity"],
                    connected: !1,
                    order: 5,
                    connectedAt: "2016-07-21T07:48:22.000Z",
                    last_sync: "2016-07-17",
                    is_valid: !0
                }, {
                    id: "apple",
                    name: "Health",
                    description: "Health",
                    image: "iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAYAAAA8AXHiAAAABGdBTUEAALGPC/xhBQAAF8FJREFUeAHtnQtwXcV5x78ry5YtWZZsORK2cSQZFz/AOAHTQNI62CEJhcGT8BgnQ4NDIKE0LVMat2Yw03am2OAJyaS0nTwISQ2lExpMiDN4koHBMw4ZSsdJihODSaaWXT9lkGxZlmz5odv/f+9+R6ujq6sr3Xt0H2d3fLzPb8853/707Z49u+cmpIAumUxW7t+//wpcwkIeiC+A34qjLpFI1MLnUYP0BHzvrAagmySCPTi6oZtu+F042nDsQd479Jubm3chfB7hgrhxb7ADBw5cceHChetxtyuhlOXwCU/gqDQcUlFRIfAT9L0bqoH+/n6B/pLWZzjclt1Q3w5IvjphwoRX5s6du2toLdGlhC8mkjMBpjlQwB24+TtxXKYnqaysTE6ePDkxadIkmThxoiBufM33fvYaOHfunJw/f17onz17Vs6cOZNEPGhfQLYbx9P4Q30WkB3KvuaxlQxOPDbxzFL79u27FiUewnEjgKrAjSWnTJmSwCE8CJJ30WmAoJ0+fVoPNAE7g0Q/zrgNx8aWlpbXozp7JGABqJW44IdxIyt44bRIU6dOlZqaGoFZjupefL0ZNIDhh/T09MipU6eMRWNRQLYd3iMA7NUMomPKyitYhw8fbu7r63sCV7KKV4NuTurq6ox1GtPVeaFINEAr1tXVxe5S699aVVV1/+zZs/drQq5+XsCCZZqEp7u1uJj1CFfjImX69OkGrFwv0MtHpwGCdfz4cYExoPXqxZk24GnycYTP5nrWnMECUPMA03M4lqGbS9bX1ydqawc96OV6jV4+Yg10d3fLiRMnkuguwVRiJ47VAGxvLqfNCSyMpW4FUE/hAuo4fmpoaDDTBLlckJctjAY4bdHR0WHGYbiCLsB1N8ZeW8Z6NWMGq62t7TGcdB0uIDljxgxvpcbaAkUmR+vV2dkJe2HmxTa1trY+OJZLHDVYOGElLNV3cbI1nIdqbGw081BjObmXKU4NcB7s2LFjOg+2GZbrHhiQUc3ijwosTHROQT/8Q8B1E6YQkk1NTQk/fVCccOR6VZyeaG9vTwIyMJV4Ce18OyZWT2dbb9bvS2ipFCpOI1x00UUeqmy1XILlaDDYxmxrGhLb9lnPaGcNFrs/noAngqXyg/QShGW0l8z3tGxrhcsOgbKqJiuw7EB9Dbs/jKk455FV5b5Q6WuAbc02Z9vjbtZYFka8sREJsVMKz3OgPmvWLN/9jajS8izAMdeRI0fMgB6w3TbSVERGsDj5ifmNX6GiaYSK7/y8i68G+LRIuOBOopu8MtMk6rBdIYQn4XgOaqzjPJWHKr5A6Z2TAbJAJsgGGdG8sD8sWHz3B8FlnFH3r2jCaotvnCyQCbJh3w+nVUbarpCrFGD23oK5mzJnzhy/ijOt6uKbyNc/hw4d4urV07Bii9Otikhrsbj0BURW84UyHzm98xpwNUAmyAYZscuk3GwTHkINngJXImcVl774LnCIvnyC1QDZICNwqywzg3QzBCzkPswSXE/lnddAJg04jBhm3LKDwAJ518K8reBMKw/vvAYyaUA5ITNkxy0bfvfDjQ9mObFbKPbh97C48jgPvIPl0XdBpB5/ePVTYNpxNFSLVE/Mr5rOYDHBoZMinfa89HneOp7Xnrtpqsiswi6q5NJzu8SZ7NysSgieCrlFC7Or/4dtWBUY5Wt+PP0LeHuxp11k50GRX+I4oS/1VV18u2EdgxOQPv99IssuTh0zazR3dH7vOZFfY2fWfx8Q+e0RkXMAaZBLc/73Aa6rcN4r54gswDUU4HUbZhG47awfL67fr1vL9EoFcxLr8Pj4GCbAZNq0aYNuJzYRNuRP94i89Db2GfcNc9skKVBb+jLzZ4qs/iD2djemzw+nnsSmhh++KfIaVgOf5+6sTC7D+ZtgvW5fKvKh5kwV5D3v5MmTXBzIhQkPYjZ+E08QaAh95G8RX3zxxRfH730g2+rn/yvy/K/R9dA6ZWg85Kby6VN9WpY+nZN29ftFPnOlCBs8nSNEPwXEP/6NyGndv+DIp5MxaWnOZa6DmZCf1yDy2atEFjUNW0M+M/ge8eDBg7yot/AO8XLWzbsQbnvH5sY3q6urzZtspsXGnYJl+sb2VNeXpG60YUfQALscU96WC+Ih+Urso2Qj37B4cIXt3SJffUXkCD+7ADecfCp36P9BeZsVxO35Gb8F1uuWDwyVjSAFK06lt7eXm5CXcju/GbyDuOt5Lu5OjpU7dELkcTRuOwbJgeWhBgCYaSirDdNWFjqXG4Kl5QIoQ/LnYJWe+a/UOe68JsXt74+JfA3nPQnrOJI8qxvL+Sn0/K9gNY6L3Lccu4aj3ShMdgiWZSkFFi6dk6LxAmv3YZGvo3F7OZZCI5jGAwSmoQGM2UtgwUFykE++GFGQkjZzJPmfYaTxLgC+Zp7Ik6+JnMVA3dSTpbzWP9rzv4Euvh1W8e9uwg7iPD+5UhXWOUaJLH2d0/LcHNEJEzaV4ystWNb+USh6/Y8GBuim0UJ3rICFkk00XD4cZ6Fik7+qWWTtDak/kHT3lIc0jrMwpDrV0tIyowJPg/w+VS0mu+IBFQfJm7YBKg7SYS2SeBLES9VUmHEb7j8/kMZyejC/HzJBvETkf9km8gN0yRE6y1AtmeIYaxHPFZv1Vk+8LHK4M9WVqaWhdek3fUzK0mg46PKgIJttLBEVRhhLTf5HOzHfhifFq1t5B3l3DkOLCBa/oheP71Lt3ItJT4w5CAQdDZHCQXDCYear03yVYbqGmaf5brgY5TfvwGRqMyZ1K/TO8ubzG2fWLajAGMuAhTGWJpanTyv0LAbNpIFdmXZnbtdGK6Tp2j1q+bCv5UpNvh1PiT/bFUkbK0NkijS1Yk17ErTp33EkJy14pdt349H7XVyGmiX4hIIWxjh7+8HTHjO0LIK0PiaqafBLVX7L65gHwIcV8/yUSItFluBaCRY/JAuvzN2LbzggABrz1IZ71lsnR8pSABHTbFmqR8swUMryxzE5+wu8uvrYEt5VXh1ZAlh1lQjUlv0q0UMdIgdhrQxEliRjmaBTwhIQhYh+I9akM4sByBjAWLZM5N/4XSRgkSWAVUuLVQu4rLaouDJ0VKIZI8Ezt2qpscykwIGZCrTAADI13xZPdYc2j2rSfANeicm/iYeYPkzSVgUDbt5Rzs6yZMCqKXuL9cY7qUG5dl+u+hQapmk43P2ZPGSWk3wf5vP+Zy9WQphnN1cjOYUtSzWVMFvB32lONRarMJ8Gf4/1TTQ3wa0qQUhm0GjAsURqgcw9OenlJt92NO9gUWVkil1hebsu/IADPkud0TmcmXLGMoUTM9QQLloq8p18+R6NK3+wqDxOCwxxaqrUZwEb1gH7EBk3QeXUL0H5Dg+W26KjC3fi0ZrvA41zujVjVRzgAivjlBlyJievHOQ7sGwoIlf+FqsXy37N+Mpq0GFDDZTxaXhc55YbLqzGin4pymPlZ1Su/MGqww6a4IUxWt8AAFIUBO32FB71TT7+o2WiYTPpiJt0RIxPoBhA3ORrOabj4H/FLD8tuoWdMQALu1jYFSoIbO+g22MEzjS+LaDltIzG1dfyBigjXbry0/BHF5GLAVg1UJ0zliIgPGhh6AgIpxHU4jCN4cBK2TjT6cpJntY8Ilf+YNXDYk3CbZ6x27loieg4v6VWybVYQdiW065OLVQ5yc/BPsSIXPmDhXdXsmAuZpnxWse1RIwEYy9o11gxpOmKhQAwap7pBBFBtWTlIL9kHm8uElf+YFFtSy4BWHibr1aKPsEgKAwaaBAxPSYBQpjp6ly5ALgSl6/FEKFltt5h3v2YgDUf0GAAb0Dif3QgR6EycZvudn3a7bGgWir3tU4py18enbWiOuMB1mIosRqfy+ScFmGgM5BZn5GgC0RaABHCLO+wWDbyHzIblnFz0bh4gDUJS0OuW4ZvMuwY0KICpr7maDzwGSB48AMLhqQgXwWtH05PawELLD+5SmTFH4YuPL/ReIBFnd24XOQn2y0ctvXpGWuk4KhymYhMzTfFkWYG+zaPRTU/AK9E5JdfCQs+WS82Ej8+YC1sxccy8KmfvVxC4zgDjY1rOAAG6eE0jWsVblzD9MkfXThN46ncgfx0ZdOl5UOef2QRu4qI6y+u6j99PRoSAygzE8/ZeIQ5qDdxpts8DrI0rH6QZsuoTKnJL8Af2JJLI2+XeIH1Jx8V4aSggcXCQ5Oi8Gj6EIhYRgG0QAZlS0z+ntsih4oniBdY3KR5FxSrUASwqIXCgkDmqRUKAAvBVKrySxfii4P535mTjtR4gUUNfOzDIpfMRUBhstCYuGt9kG4AYzmWseXUL0X5L34mHQORpMUPLE4Z3H+XBQuwmK5QIXIAcrvIIWEtV0LyHAYsye/GiUxExg8sauOD2AV888cRYLdnuz+1QOq73SHDg9Iph6NU5Ovxqcq/5B/T+Ln4TDeEdfrlNdgNjN3Rx95LzW3p+0MzoYnCtGwM459x6jMSzmO8mOUf+CJ2j2KVxzi6eFosKrgaqycf/AuAQ+ujFoldnFoiTbNxWifXaqWLu+OvoM4Cy193Lb7T8JFxRCp1qviCxfu/Bh+dveMWBND44a5v0JOfzVdYgvJIJ0xB3A0zz+YrvOMtP+cifLnwr3in4+7iDRbVfR/GHh/AmMtYKnZ9IaulgKmFCgBEWQOKK+OGLYyFkq/CKGfjQyI10a0SzUSrB4tzW4+sF5k5PQWKWhW1RIE1sqCYuBNmOZWhr+FCy3/lyyJ/gHVoBXIeLCq+AVA99vep70WphSEgGhYFhhYJUKn1YnhQOcRVZlD6OMuv/hR+7O2GAiGVOq0HS9W/ZLHIPz6c+l0cY3Vst6aAECYFyaQpLATNKasWzk1TGMdDfuUfizwAa1Vg58FyG+CjeHpaez9SCBHAUeujQLjdmwuLllX4CiW/FGNF/nFw+qPALr7zWMMp/jZ0Ix34UNt3njKGyCx/gUFCa6VAG0gYyDd5KGQalIXZsLRiA8HI5efPw2f7H+Pnr3HSwjsPVro2uPfu1Njpye8BjhAkg8oTNtJjnQYVKCaPh/x8DNK//c/46Oc0vZKC+x6s4Zrgvi+loHkSlkudgmPilh6CNajr0XQVcvwo5C+Bpfr2v+DHMeudExU+6MHK1AZ/fm9qMP/N76CUS4W1YqbLYxYH8HQ2naCZ4iqj5VOlgnK5yi/AS+Vv/St/wFsrLhrfgzVSU9wLy9XQgMnGRwU/bTVS6VT+cDxlJz3AcJhHV/5qbA75p29gArTGTS2asAcrm6a47dYUXOvWYas+f4MHLR5u9HDcDN6ZSEfSQuFw+XA8k/wnPiHyKEAf+CUIc5Zi+s9PN2TbGiuuw8/BoUucCeul0ws6/UBf57ZMHi0bYDLTFRqGb8oznWE7paFTE9nKf34NfkDzq0UNFVXqwaIWsnVL8YulP3hO5HLMFxEEQmGA4BiLoDi+gqJlNF/Lj1aen83euFHkr78C46fWL9sLH/9yHqzR6rwRPyC++Rm8MrkZLBGmEGAuUARN41o2gA9ymqbwueVdEBtninz/aSxOXDXaqy1YeQ/WWFTPSciNm/DyegPeL1al4DFdn+3iFBSFg74eBFGtleabuNNFMl3LLF8u8sKPsax4fDZBjEUd6WQ8WOm0km3apzGof/5FfCbp0hQIYetlxlIWNoKisBhwAI/mK0iuPH+kfO3finzzScxRFd90wkgq8mCNpKGR8lvnifwnfgb4S3+GT6wABnZn2t0RpCCOMK2aSWNYrZJaKpvP8pdifop13nXPSGcv2nwPVj6aZiK6xgf+BgP7FwAFrBehUeujABEYtVgcW2nYpCPOcpVojvuwXHrLT0QWLsrHlRWsDg9WPlV/GcZBL+D3ptf/g8hUbF4IrBVBsvAwjRAZ+JjOXUKwVh/+I5GtL2NrGp76yuBHST1Y+QSLdU1Ad/i5L4i8/JrInfA50DcwAR5jneBrd0h/IXYnf+v7It/7DxF2q2XiEm1tbcmqqiqZNWtWmdxSkd3Ge+9iegITq1sw//Vue+riOA91DSzUHXeJfPKmIrvg3C7nyJEj0tfXJx6s3PSYvTS7wrd+g7VeAG0RusxG/Jp8GToFy78rHK/G5debL8fMfUwc7tY7r4H8a8CDlX+d+hqhAQ+WxyASDXiwIlGrr9SD5RmIRAMerEjU6iv1YHkGItGABysStfpKPViegUg04MGKRK2+Ug+WZyASDXiwIlGrr9SD5RmIRAMerEjU6iv1YHkGItGABysStfpKPViegUg04MGKRK2+Ug+WZyASDXiwIlGrr7QikUhgj7d3XgP50wCZosXq6Te7dPNXsa8pvhqwLPUQrO4kXHxV4e88nxqwLHVXINDtLVY+VRvvusgSmaLF6vIGK94w5PPuLUtdBKsNkcS5c+fyWb+vK4YaIENkiUzxqfAd6uD8eXxOxzuvgRw04DC0hxbLgOUtVg4a9aJGA8oQjRXBepupZ8+eNZn+P6+BsWrAYWhPRXNz8y5U1H3mzBk/5TBWjXo5owHLUDeZ4hjrPI4d6B8TTh/pVeU1MCoNkB0yRJbIFLtCulf53+nT/J0Y77wGRq8Bhx3DkgFrwoQJr7AqJ3P0NXuJWGugt7fX3L+yZMCaO3fuLpiv3QAreSHbn06LtRr9zbsaIDMcX5EhssQ87Qrxuz+JZzi51dPT48r4sNfAiBogM2QH7mktHIBVUVHx78joP3XqlOZ532sgKw2QGbIDhp5VgQAsmLBDSNzGuQg/1lL1eH8kDZAVO3+1zTJkRAKwbAUb6Xd1ddmo97wGMmvAYcWwo6UHgdXS0vI6TNp2DMQ4GNMy3vcaSKsB5YTMkB230CCwbMYj9I8fP+6W82GvgSEacBgxzLgFhoAF8jjBtZU/W9Hd3e2W9WGvgUADZIOMwG21zAR5DAwBi4n4bZ37Yd56T5w4kfSrS6kR71wNkAmyQUbIipun4bRgzZ49ez8KbMDEV6Kjo0PLet9rwGiATJANRDZYVoZohplpHSa8Ju3fv/8X8Jc1NDRIbW1t2nI+MV4aYBdIsGCtdmIVw0fgp11vldZiUVUUwLEawa7Ozs6ks9YmXpr0dxtogAyQBTJBNoaDigLDgsVMELkXwndzuv7YsWP+PSKVElPH94FkgCyQCbKRSRUZwaIgRvxb4G3iWpv29nY/mM+kzTLN42CdbU8GyIJlIuPdDjvGCkvhl1j/DWlrJk+eLE1NTewqw0V8vAw1AAtFqHTCfHNra+vns7nNrOnACSoxmH8R/k2Eq7GxUfDSMZtz+DIlqgFaKnR/BioYkpfQ/X0KflbbubImgxViEdftPAGn8o8ePerHXCUKTDaXzTEV25htzTa3bZ8VVKw/a4ulF0PLtW/fvu8ivqaysjIJy5WYxF9q965sNMCnPw7U7ZhqM8ZU92RrqVQJowaLgoArAbgeRXAdTpicMWNGws9zqUpL2+c8FacU2Ma4k00YUz04ljsaE1h6IsB1Ky7gKcTrampqhBOpftyl2iktn+MpTnzaFcScp7o7m6e/4e4yJ7BYKQb08wDXcziWoR9O1tfXe+s1nLaLNJ1Wiu/++JoGbieO1SPNU410KzmDxRMAKr7+WYvgeoSr8WJSpk+fLnx69K54NcCBOZe+cJUCYOI2mw0A6nGE076mGc2d5AUsPeHhw4ebcZFPIL6KaQSrrq5OpkyZokW8XwQa4HJirvwkWNZt5SqF4V4oa6HR+HkFS0+MsddKhB+G9VrBND41Tp06VTgOQ3epxbw/jhrg9AHHT9z4oO99YZm24xIewVjKbDLN5+VEApZeIAC7FuGHcNwIyMyHdGG9ErRgPDBdoUW9H4EGMF1gNsbQQuFAE5j3fP041TYcGwHUoOXE+byESMHSCz1w4MAcPHX8KW7sczgu03TOg6G7NPNgEydONKDR9270GuAnhAgSfVokdHM6D2Uqg3XajeMZbvNzd9OM/kzZSYwLWO6lALIrYJavR9pKQLYc/qCFXrh5/lmZaQv4CT994WpvIMzpAejPLAqAZ+YWB3JNqBvq24HQqxh+vKI7lENlIouOO1junUAhfP94BdIW4ViA+AL4rTjqoBQCx6MG6QW9TlxDUTnohmuiuGWdX7zmxgTu12tDOj+ix+NtPN3xswlZv4KBTF7d/wNEgy7u12xnMQAAAABJRU5ErkJggg==",
                    scope: ["Activity data"],
                    platforms: ["ios"],
                    data_types: ["activity"],
                    connected: !0,
                    order: 3,
                    connectedAt: "2016-07-20T11:15:01.000Z",
                    last_sync: "2016-07-15",
                    is_valid: !0
                }]
            }
        }), define("app/service/demodata/activitiesdata", ["require"], function() {
            return {
                activities: [{
                    tag: "Running",
                    provider: "FitBit",
                    count: 61,
                    avg: 79,
                    providerData: {
                        name: "FitBit"
                    }
                }, {
                    tag: "Weights",
                    provider: "Apple Health",
                    count: 24,
                    avg: 77,
                    providerData: {
                        name: "Apple Health"
                    }
                }],
                demo: !0
            }
        }), define("app/service/demodata/weekdata", ["require"], function() {
            var a = moment().startOf("week");
            moment();
            for (var b = [77, 65, 84, 75, 72, 78, 80], c = [], d = moment(a); d.isBefore(moment().endOf("week")); d.add("days", 1)) c.push({
                date: d.format("YYYY-MM-DD"),
                initial: d.format("ddd")[0],
                sessions: [{
                    startDate: d.clone().subtract(1, "days").format("YYYY-MM-DD") + "T21:23:34",
                    longest: !0,
                    sleepIQCalculating: !1,
                    originalStartDate: d.clone().subtract(1, "days").format("YYYY-MM-DD") + "T21:23:34",
                    restful: 26152,
                    originalEndDate: d.clone().format("YYYY-MM-DD") + "T04:15:58",
                    sleepNumber: 45,
                    totalSleepSessionTime: 29058,
                    avgHeartRate: 59,
                    restless: 2906,
                    avgRespirationRate: 16,
                    isFinalized: !0,
                    sleepQuotient: b[c.length],
                    endDate: d.clone().format("YYYY-MM-DD") + "T04:15:58",
                    outOfBed: 0,
                    inBed: 29058
                }],
                startDate: d.clone().subtract(1, "days").format("YYYY-MM-DD") + "T21:23:34",
                originalStartDate: d.clone().subtract(1, "days").format("YYYY-MM-DD") + "T21:23:34",
                originalEndDate: d.clone().format("YYYY-MM-DD") + "T04:15:58",
                endDate: d.clone().format("YYYY-MM-DD") + "T04:15:58",
                longest: !0,
                inBed: 27287,
                outOfBed: 116,
                restful: 25922,
                restless: 1365
            });
            return {
                avgSleepIQ: 76,
                avgSleepIQ: 76,
                avgHeartRate: 58,
                avgRespirationRate: 16,
                inBed: 27300,
                outOfBed: 300,
                restful: 23580,
                restless: 3420,
                firstDay: a.format("YYYY-MM-DD"),
                days: c
            }
        }), define("app/service/demodata/monthdata", ["require"], function() {
            var a = moment().startOf("month");
            moment();
            for (var b = [84, 75, 72, 78, 80, 77, 65], c = [], d = moment(a); d.isBefore(moment().endOf("month")); d.add("days", 1)) c.push({
                date: d.format("YYYY-MM-DD"),
                initial: d.format("ddd")[0],
                sessions: [{
                    startDate: d.clone().subtract(1, "days").format("YYYY-MM-DD") + "T21:23:34",
                    longest: !0,
                    sleepIQCalculating: !1,
                    originalStartDate: d.clone().subtract(1, "days").format("YYYY-MM-DD") + "T21:23:34",
                    restful: 26152,
                    originalEndDate: d.clone().format("YYYY-MM-DD") + "T04:15:58",
                    sleepNumber: 45,
                    totalSleepSessionTime: 29058,
                    avgHeartRate: 59,
                    restless: 2906,
                    avgRespirationRate: 16,
                    isFinalized: !0,
                    sleepQuotient: b[d.clone().weekday()],
                    endDate: d.clone().format("YYYY-MM-DD") + "T04:15:58",
                    outOfBed: 0,
                    inBed: 29058
                }],
                startDate: d.clone().subtract(1, "days").format("YYYY-MM-DD") + "T21:23:34",
                originalStartDate: d.clone().subtract(1, "days").format("YYYY-MM-DD") + "T21:23:34",
                originalEndDate: d.clone().format("YYYY-MM-DD") + "T04:15:58",
                endDate: d.clone().format("YYYY-MM-DD") + "T04:15:58",
                longest: !0,
                inBed: 27287,
                outOfBed: 116,
                restful: 25922,
                restless: 1365
            });
            return {
                avgSleepIQ: 76,
                avgSleepIQ: 76,
                avgHeartRate: 58,
                avgRespirationRate: 16,
                inBed: 27300,
                outOfBed: 300,
                restful: 23580,
                restless: 3420,
                firstDay: a.format("YYYY-MM-DD"),
                sleepData: c
            }
        }), define("app/service/DemoData", ["require", "app/service/demodata/getsleepers", "app/service/demodata/sleepdata", "app/service/demodata/sleepslices", "app/service/demodata/databymonth", "app/service/demodata/providersdata", "app/service/demodata/activitiesdata", "app/service/demodata/weekdata", "app/service/demodata/monthdata"], function(a) {
            var b = a("app/service/demodata/getsleepers"),
                c = a("app/service/demodata/sleepdata"),
                d = a("app/service/demodata/sleepslices"),
                e = a("app/service/demodata/databymonth");
            return providers = a("app/service/demodata/providersdata"), activities = a("app/service/demodata/activitiesdata"), weekData = a("app/service/demodata/weekdata"), monthData = a("app/service/demodata/monthdata"), {
                getSleepers: b,
                getBeds: {
                    beds: [{
                        sleeperRightId: "-",
                        base: null,
                        returnRequestStatus: 0,
                        size: null,
                        name: "Parents Bed",
                        serial: null,
                        isKidsBed: !1,
                        dualSleep: !1,
                        bedId: "-9223372036841039805",
                        sleeperLeftId: "0",
                        version: null,
                        accountId: "-9223372036841191305",
                        timezone: "US/Central",
                        model: null,
                        purchaseDate: null,
                        macAddress: "CC04B401F7B7",
                        sku: null,
                        zipcode: null
                    }, {
                        sleeperRightId: "-9223372036829727789",
                        base: null,
                        returnRequestStatus: 0,
                        size: "KING",
                        name: "Evelyns Bed",
                        serial: null,
                        isKidsBed: !1,
                        dualSleep: !0,
                        bedId: "-9223372036827455184",
                        sleeperLeftId: "-9223372036829727788",
                        version: "1",
                        accountId: "-9223372036841191305",
                        timezone: "US/Central",
                        model: "X12",
                        purchaseDate: "2015-04-09T23:36:04Z",
                        macAddress: "CC04B4010416",
                        sku: "12345",
                        zipcode: "12345"
                    }]
                },
                sleepData: c,
                weekSleepData: weekData,
                monthSleepData: monthData,
                getFamilyStatus: {
                    beds: [{
                        status: 1,
                        bedId: "-9223372036841039804",
                        leftSide: null,
                        rightSide: {
                            isInBed: !1,
                            alertDetailedMessage: "No Alert",
                            sleepNumber: 45,
                            alertId: 0,
                            lastLink: "00:00:00",
                            pressure: 1813
                        }
                    }, {
                        status: 1,
                        bedId: "-9223372036841039805",
                        leftSide: null,
                        rightSide: {
                            isInBed: !1,
                            alertDetailedMessage: "No Alert",
                            sleepNumber: 45,
                            alertId: 0,
                            lastLink: "00:00:00",
                            pressure: 1813
                        }
                    }, {
                        status: 1,
                        bedId: "-9223372036827455184",
                        leftSide: {
                            isInBed: !1,
                            alertDetailedMessage: "No Alert",
                            sleepNumber: 65,
                            alertId: 0,
                            lastLink: "00:00:00",
                            pressure: 2826
                        },
                        rightSide: {
                            isInBed: !1,
                            alertDetailedMessage: "No Alert",
                            sleepNumber: 85,
                            alertId: 0,
                            lastLink: "00:00:00",
                            pressure: 3223
                        }
                    }]
                },
                getSleepSlices: d,
                getFamilyBedsStatus: {
                    beds: [{
                        status: 1,
                        bedId: "-9223372036841039804",
                        leftSide: null,
                        rightSide: {
                            isInBed: !0,
                            alertDetailedMessage: "No Alert",
                            sleepNumber: 45,
                            alertId: 0,
                            lastLink: "00:00:00",
                            pressure: 1857
                        }
                    }, {
                        status: 1,
                        bedId: "-9223372037664102665",
                        leftSide: null,
                        rightSide: {
                            isInBed: !0,
                            alertDetailedMessage: "No Alert",
                            sleepNumber: 45,
                            alertId: 0,
                            lastLink: "00:00:00",
                            pressure: 1857
                        }
                    }, {
                        status: 1,
                        bedId: "-9223372037664102667",
                        leftSide: {
                            isInBed: !1,
                            alertDetailedMessage: "No Alert",
                            sleepNumber: 65,
                            alertId: 0,
                            lastLink: "00:00:00",
                            pressure: 2865
                        },
                        rightSide: {
                            isInBed: !1,
                            alertDetailedMessage: "No Alert",
                            sleepNumber: 85,
                            alertId: 0,
                            lastLink: "00:00:00",
                            pressure: 3268
                        }
                    }]
                },
                getDataByMonth: e,
                getCustomTags: function(a) {
                    switch (a) {
                        case "-9223372036829727789":
                        case "-9223372036829727788":
                            return {
                                sleeperId: a,
                                customTagList: [{
                                    name: "Caffeine",
                                    position: "1"
                                }, {
                                    name: "TV",
                                    position: "2"
                                }, {
                                    name: "Exercise",
                                    position: "3"
                                }, {
                                    name: "TV/Media",
                                    position: "4"
                                }]
                            };
                        case "-9223372036840837804":
                        case "-9223372036840837805":
                            return {
                                sleeperId: a,
                                customTagList: [{
                                    name: "Homework",
                                    position: "1"
                                }, {
                                    name: "Test/Exam",
                                    position: "2"
                                }, {
                                    name: "Soccer",
                                    position: "3"
                                }]
                            };
                        default:
                            return {
                                sleeperId: a,
                                customTagList: [{
                                    name: "Caffeine",
                                    position: "1"
                                }, {
                                    name: "TV",
                                    position: "2"
                                }, {
                                    name: "Running",
                                    position: "3"
                                }, {
                                    name: "Alcohol",
                                    position: "4"
                                }]
                            }
                    }
                },
                getTags: function(a) {
                    var b = [{
                            tag: "Caffeine",
                            count: 90
                        }, {
                            tag: "Wine",
                            count: 39
                        }],
                        c = {
                            Caffeine: [],
                            Wine: []
                        };
                    switch (b.forEach(function(a) {
                        for (var b = 0; b < a.count; b++) c[a.tag].push({
                            date: moment().subtract(b, "days").format("YYYY-MM-DD"),
                            session: {
                                startDate: "2015-05-24T00:52:56",
                                longest: !0,
                                sleepIQCalculating: !1,
                                originalStartDate: "2015-05-24T00:52:56",
                                restful: 22538,
                                originalEndDate: "2015-05-24T09:28:01",
                                sleepNumber: 0,
                                totalSleepSessionTime: 30905,
                                avgHeartRate: 58,
                                restless: 8336,
                                avgRespirationRate: 17,
                                isFinalized: !0,
                                sleepQuotient: 80,
                                endDate: "2015-05-24T09:28:01",
                                outOfBed: 31,
                                inBed: 30874
                            }
                        })
                    }), a) {
                        case "-9223372036829727789":
                        case "-9223372036829727788":
                            return {
                                sleeperId: "-9223372036829727807",
                                tagTrends: [{
                                    name: "Caffeine",
                                    sleepIQWith: 76,
                                    sleepIQWithout: 64
                                }, {
                                    name: "Wine",
                                    sleepIQWith: 72,
                                    sleepIQWithout: 64
                                }],
                                tags: c
                            };
                        case "-9223372036840837804":
                        case "-9223372036840837805":
                        default:
                            return {
                                sleeperId: "-9223372036840837804",
                                tagTrends: [{
                                    name: "Soccer",
                                    sleepIQWith: 83,
                                    sleepIQWithout: 64
                                }, {
                                    name: "Homework",
                                    sleepIQWith: 74,
                                    sleepIQWithout: 64
                                }, {
                                    name: "Test/Exam",
                                    sleepIQWith: 69,
                                    sleepIQWithout: 64
                                }],
                                tags: {
                                    Soccer: [{
                                        date: moment().subtract(7, "days").format("YYYY-MM-DD"),
                                        session: {
                                            startDate: "2015-05-24T00:52:56",
                                            longest: !0,
                                            sleepIQCalculating: !1,
                                            originalStartDate: "2015-05-24T00:52:56",
                                            restful: 22538,
                                            originalEndDate: "2015-05-24T09:28:01",
                                            sleepNumber: 0,
                                            totalSleepSessionTime: 30905,
                                            avgHeartRate: 58,
                                            restless: 8336,
                                            avgRespirationRate: 17,
                                            isFinalized: !0,
                                            sleepQuotient: 80,
                                            endDate: "2015-05-24T09:28:01",
                                            outOfBed: 31,
                                            inBed: 30874
                                        }
                                    }, {
                                        date: moment().subtract(6, "days").format("YYYY-MM-DD"),
                                        session: {
                                            startDate: "2015-05-24T23:38:34",
                                            longest: !0,
                                            sleepIQCalculating: !1,
                                            originalStartDate: "2015-05-24T23:38:34",
                                            restful: 27217,
                                            originalEndDate: "2015-05-25T09:05:36",
                                            sleepNumber: 0,
                                            totalSleepSessionTime: 34022,
                                            avgHeartRate: 56,
                                            restless: 6805,
                                            avgRespirationRate: 17,
                                            isFinalized: !0,
                                            sleepQuotient: 78,
                                            endDate: "2015-05-25T09:05:36",
                                            outOfBed: 0,
                                            inBed: 34022
                                        }
                                    }, {
                                        date: moment().subtract(5, "days").format("YYYY-MM-DD"),
                                        session: {
                                            startDate: "2015-05-25T23:38:34",
                                            longest: !0,
                                            sleepIQCalculating: !1,
                                            originalStartDate: "2015-05-25T23:38:34",
                                            restful: 27217,
                                            originalEndDate: "2015-05-26T09:05:36",
                                            sleepNumber: 0,
                                            totalSleepSessionTime: 34022,
                                            avgHeartRate: 49,
                                            restless: 6805,
                                            avgRespirationRate: 17,
                                            isFinalized: !0,
                                            sleepQuotient: 90,
                                            endDate: "2015-05-26T09:05:36",
                                            outOfBed: 0,
                                            inBed: 34022
                                        }
                                    }],
                                    Homework: [{
                                        date: moment().subtract(4, "days").format("YYYY-MM-DD"),
                                        session: {
                                            startDate: "2015-05-24T00:52:56",
                                            longest: !0,
                                            sleepIQCalculating: !1,
                                            originalStartDate: "2015-05-24T00:52:56",
                                            restful: 22538,
                                            originalEndDate: "2015-05-24T09:28:01",
                                            sleepNumber: 0,
                                            totalSleepSessionTime: 30905,
                                            avgHeartRate: 58,
                                            restless: 8336,
                                            avgRespirationRate: 17,
                                            isFinalized: !0,
                                            sleepQuotient: 70,
                                            endDate: "2015-05-24T09:28:01",
                                            outOfBed: 31,
                                            inBed: 30874
                                        }
                                    }, {
                                        date: moment().subtract(3, "days").format("YYYY-MM-DD"),
                                        session: {
                                            startDate: "2015-05-24T23:38:34",
                                            longest: !0,
                                            sleepIQCalculating: !1,
                                            originalStartDate: "2015-05-24T23:38:34",
                                            restful: 27217,
                                            originalEndDate: "2015-05-25T09:05:36",
                                            sleepNumber: 0,
                                            totalSleepSessionTime: 34022,
                                            avgHeartRate: 56,
                                            restless: 6805,
                                            avgRespirationRate: 17,
                                            isFinalized: !0,
                                            sleepQuotient: 78,
                                            endDate: "2015-05-25T09:05:36",
                                            outOfBed: 0,
                                            inBed: 34022
                                        }
                                    }],
                                    "Test/Exam": [{
                                        date: moment().subtract(2, "days").format("YYYY-MM-DD"),
                                        session: {
                                            startDate: "2015-05-24T00:52:56",
                                            longest: !0,
                                            sleepIQCalculating: !1,
                                            originalStartDate: "2015-05-24T00:52:56",
                                            restful: 22538,
                                            originalEndDate: "2015-05-24T09:28:01",
                                            sleepNumber: 0,
                                            totalSleepSessionTime: 30905,
                                            avgHeartRate: 58,
                                            restless: 8336,
                                            avgRespirationRate: 17,
                                            isFinalized: !0,
                                            sleepQuotient: 67,
                                            endDate: "2015-05-24T09:28:01",
                                            outOfBed: 31,
                                            inBed: 30874
                                        }
                                    }, {
                                        date: moment().subtract(1, "days").format("YYYY-MM-DD"),
                                        session: {
                                            startDate: "2015-05-24T23:38:34",
                                            longest: !0,
                                            sleepIQCalculating: !1,
                                            originalStartDate: "2015-05-24T23:38:34",
                                            restful: 27217,
                                            originalEndDate: "2015-05-25T09:05:36",
                                            sleepNumber: 0,
                                            totalSleepSessionTime: 34022,
                                            avgHeartRate: 56,
                                            restless: 6805,
                                            avgRespirationRate: 17,
                                            isFinalized: !0,
                                            sleepQuotient: 70,
                                            endDate: "2015-05-25T09:05:36",
                                            outOfBed: 0,
                                            inBed: 34022
                                        }
                                    }]
                                }
                            }
                    }
                },
                getCustomerFaqs: {
                    status: "ok",
                    pages: 1,
                    tag: {
                        id: 1,
                        slug: "cu",
                        title: "Customer",
                        description: "Content that is presented to the Customer",
                        post_count: 9
                    },
                    posts: [{
                        id: 0,
                        title: "Is my data kept private?",
                        content: "Yes, your SleepIQ® data is confidential to you and your sleep partner. See End User Agreement for detailed information at SleepNumber.com.\n"
                    }, {
                        id: 1,
                        title: "Can I turn off SleepIQ® technology?",
                        content: "Yes, you can turn off SleepIQ® through your SLEEP NUMBER® remote, SleepIQ® app or SleepIQ® website at any time. Press the Home button on your remote and hold for 2 seconds. You’ll be<br />\nasked if you’d like to turn off SleepIQ®. It will stay off until you turn it back on.\n"
                    }, {
                        id: 2,
                        title: "What happens if the power goes out? Will I lose my data?",
                        content: "After your power is restored, your SleepIQ® system will automatically power on and reconnect to the Internet. Based on the length of the power outage, you may have a gap in your data.\n"
                    }, {
                        id: 3,
                        title: "If I read, watch TV or relax in bed before I go to sleep, will this affect my score?",
                        content: "Your SleepIQ® score is specific to you and your habits. SleepIQ® will track your time in bed and it will<br />\nbe part of your overall habits. Over time, SleepIQ® will know and understand your patterns to give you<br />\nthe best possible information.\n"
                    }, {
                        id: 4,
                        title: "What is a good heart rate? What is a good breathing rate?",
                        content: "With SleepIQ® you can view your average heart rate and average breathing rate over the night. This is a<br />\nquestion best addressed by your physician since every person is different. Keep in mind, the data from<br />\nSleepIQ®  technology is averaged and not provided in real time for diagnostic purposes.\n"
                    }, {
                        id: 5,
                        title: "What does my sleep goal mean?",
                        content: "Your sleep goal is the number of hours you’d like to sleep every night to feel your best. You can enter and<br />\nupdate it in your profile settings. Your sleep goal, entered in hours, should be realistic and based on what a<br />\ntypical good night’s sleep is for you. If you overestimate the hours, it could result in a lower SleepIQ® score.\n"
                    }, {
                        id: 6,
                        title: "How does SleepIQ® monitor my sleep?",
                        content: "SleepIQ®  couldn’t be easier to use. Sensors work directly with the DualAir™ technology inside your<br />\nSLEEP NUMBER® bed so there’s nothing to wear, nothing to turn on. All you have to do is sleep.\n"
                    }, {
                        id: 7,
                        title: "Troubleshooting Network Setup of Your Bed",
                        content: "If you have issues setting up the network on your bed, here are some of the common issues.\n<ul>\n<li>Make sure your network password is correct.  Remember passwords are case sensitive.</li>\n<li>The process can take up to four minutes.</li>\n<li>Make sure the security setting on your Wifi network is WPA2 (recommended), WPA, or WEP (not recommended).</li>\n</ul>\nIf you are still having issues, call customer support at 1-888-484-9263 during the hours Mon. – Fri. 8:00 am – 8:00 pm, Sat. 8.30 am – 5:00 pm.\n"
                    }, {
                        id: 8,
                        title: "What makes up my SleepIQ® score?",
                        content: "Your individual quality and length of sleep, consisting of restful time in bed, average heart and breathing<br />\nrates, motion and bed exits. Your SleepIQ® score is information that will empower you to sleep better —<br />\nthere’s no such thing as a bad score.\n"
                    }],
                    count: 9
                },
                getTerms: 'TERMS AND CONDITIONS OF USE(version 14.02.05)Welcome to the Sleep Number® SleepIQ™ System! In order to fully understand these terms and conditions ("TermsandConditions" or "Agreement") that apply to your use of your new SleepIQ™ System, it will be helpful to have an understanding of all the components and technology that make up the system. These are the definitions we will be using in this Agreement:DEFINITIONS• You: This one is pretty straight forward. When we use the word "you" we mean you. We also sometimes refer to you as "RegisteredUser". We also mean you when we use words like "your".• Us: You guessed it. When we use the word "us", we mean Select Comfort Corporation. We also sometimes refer to ourselves as "we" or "SleepNumber®" or the "Company". We also mean us when we use words like "our".• The Bed: Your new Sleep Number® bed consists of several components. First, there\'s the mattress ("Mattress"). This is the part you sleep on. Your Mattress sits on a foundation ("Foundation"). You may or may not have purchased the Foundation through us and it may or may not be adjustable. For the purposes of this Agreement, that doesn\'t really matter. Your Mattress is connected with hoses to a pump ("Pump") that is controlled by a wireless remote control ("Remote"). Together, the Pump and the Remote are referred to as the Firmness Control® System ("FirmnessControl™System" or "FCS"). We refer to the Mattress, the Foundation, and the Firmness Control™ System collectively as the bed ("Bed").• The SleepIQ™ Module: The SleepIQ™ Module (the "SleepIQ™Module") is the hardware and software that allows your Pump to transmit the data that it generates or entered by you in your User Profile ("Data") across your wi-fi network to the internet. From there, the Data arrives at our servers where it is transformed into the information that is provided to you through the SleepIQ™ Services. The SleepIQ™ Module lives in the Pump. Pumps that have the SleepIQ™ Module factory installed are called SleepIQ™ Firmness Control™ Systems. You may have purchased a Bed that comes with a SleepIQ™ Firmness Control™ System or you may have purchased a SleepIQ™ Firmness Control™ System to replace an existing non-SleepIQ™ Firmness Control™ System.• The SleepIQ™ System (the "SleepIQ™System"): This is the phrase we use to refer to the whole combination of the Mattress, Foundation and the SleepIQ™ Firmness Control™ System including the SleepIQ™ Module. The SleepIQ™ System requires all these "sub-systems" in order to function as intended.• The SleepIQ™ Services (the "Services"): This is the phrase we use for the applications we allow you to access, and the information, content, and services provided by the Company through the SleepIQ™ System regardless of how you access it.AGREEMENTPlease read this Agreement carefully before using the SleepIQ™ System or the SleepIQ™ Services. By indicating your consent to this Agreement by clicking on "IAgree", and by using the SleepIQ™ System or SleepIQ™ Services in any manner, you agree that you have read and agree to be bound by and a party to the terms and conditions of this Agreement to the exclusion of all other terms and conditions save for those which specifically relate to the purchase of the Bed (e.g. financing terms, warranty terms, etc.). If the terms of this Agreement are considered an offer, acceptance is expressly limited to such terms. If you do not unconditionally agree to all of the terms and conditions of this Agreement, you have no right to access and/or use the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services. Use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services is expressly conditioned on your assent to all the terms and conditions of this Agreement. To reject these terms, you must click "IDon\'tAgree", and cease your use of the SleepIQ™ System and the SleepIQ™ Services. You must delete the Sleep Number IQ app from any device on which it is installed, delete any User Profiles (as hereafter defined) and cease any further use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services. You may continue to use your Bed without the use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services without agreeing to this Agreement. You are thereafter permitted to continue your use of the Bed without the need to agree to any specific on-going terms and conditions save for those that relate to the purchase of the bed generally (e.g. returns, in-home trial period, etc.) and which are contained in your Sales Order or Receipt which you received or acknowledged at the time of sale. However, you may not use the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services or otherwise access or attempt to access any Data generated by the SleepIQ™ Module without agreeing to this Agreement or, as set forth in the Section entitled "ChangestoThisAgreement", in any future update or change to this Agreement.The SleepIQ™ Services and any other linked pages, features, content or applications and services offered from time to time by the Company are owned and operated by Sleep Number and/or BAM. Except with respect to Open Source Software (as defined below), all intellectual property rights relating to the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services are owned by Sleep Number, BAM and/or either of its suppliers. You have no intellectual property rights to the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services except as may be expressly set forth in this Agreement. Subject to the terms and conditions of this Agreement, Sleep Number or BAM may offer to provide certain services as may have been selected or configured by you solely for your own use, and not for the use or benefit of any third party.Right to Access: Subject to the terms of this Agreement, Sleep Number grants you a limited, non-exclusive, personal, nontransferable, nonassignable sublicense to access the software contained in the SleepIQ™ Module, and to access the online documentation, and the SleepIQ™ Services, and any programming fixes, updates, and upgrades provided to you concerning the SleepIQ™ Module, SleepIQ™ Services or online documentation which may be delivered to you.Effect of Violation of this Agreement: If you fail to comply with or otherwise violate this Agreement, your authorization to use the SleepIQ™ Module, the SleepIQ™ System and the SleepIQ™ Services automatically terminates and you must immediately cease using the SleepIQ™ Module, the SleepIQ™ System, or the SleepIQ™ Services.Consent to Electronic Communication: By using the SleepIQ™ Module, the SleepIQ™ System, or the SleepIQ™ Services you agree to allow us to communicate with you electronically regarding your Bed, the SleepIQ™ Module, the SleepIQ™ System, or the SleepIQ™ Services. We may also, from time to time, provide information or other offers to you that may be of interest to you as a user of the SleepIQ™ Module, the SleepIQ™ System, or the SleepIQ™ Services.Necessary Hardware: Your Firmness Control™ System must have an authorized SleepIQ™ Module installed in order for you to use the SleepIQ™ System or the SleepIQ™ Services. Your SleepIQ™ Module may be installed in a SleepIQ™ Firmness Control™ System which came with your Bed at the time of purchase or you may have purchased a SleepIQ™ Firmness Control™ System as an upgrade to your existing bed. In either case, it must have been purchased directly from us or from an authorized third party provider. Use of a second-hand SleepIQ™ Firmness Control™ System or any other hardware, except for a SleepIQ™ Firmness Control™ System directly purchased by you from an authorized Sleep Number dealer, to access the Data generated by the SleepIQ™ Module, or to access the SleepIQ™ System or the SleepIQ™ Services is prohibited.User Profile: You must create and maintain a user profile ("UserProfile") in connection with your use of the SleepIQ™ Services which will contain login information and a password. Sleep Number shall have the right to charge for use of the SleepIQ™ Services with prior notice. You may use the Bed without creating a User Profile or after discontinuing/deleting a current User Profile but doing so will also discontinue the availability of the SleepIQ™ Services to you. The SleepIQ™ Services are available only to individuals aged 18 years or older. You are responsible for maintaining the confidentiality of your login information and password, and are responsible for all activities that occur under your login information or password with or without your knowledge. If you provide your login information or password to another person, your account privileges may be suspended temporarily or terminated. You agree to immediately notify Sleep Number of any unauthorized use of your login information or password or any other breach of security.Duration of Services: The SleepIQ™ Services start once you indicate your consent to this Agreement, create and activate your User Profile, and use the Bed with the SleepIQ™ Module installed within the SleepIQ™ Firmness Control™ System and will continue until you or we cancel the SleepIQ™ Services as provided in this Agreement.Upgrades and Updates: We, in our sole discretion, reserve the right at any time to add additional features or functions, or to provide programming fixes, updates and upgrades, to the SleepIQ™ Services or the SleepIQ™ System. You acknowledge and agree that we have no obligation to make available to you any subsequent versions of the SleepIQ™ Services or the SleepIQ™ System. Furthermore, you acknowledge and agree that we, in our sole discretion, may modify, discontinue, or suspend your ability to use the SleepIQ™ Services or the SleepIQ™ System, or disable any SleepIQ™ Services or the SleepIQ™ System you may already have accessed without any notice to you, for the repair, improvement, or upgrade of the SleepIQ™ Services or the SleepIQ™ System.Ending the Services: You may cancel your use of the SleepIQ™ Services at any time by deleting your User Profile, deleting any applications which you use to access the SleepIQ™ Services and contacting us. If you change your mind, we may not be able to reactivate your User Profile. You will not be entitled to any refunds or adjustments related to the price you paid for the Bed or SleepIQ™ System as a consequence of not being able to use or access the SleepIQ™ Services 1) because you did not agree to or comply with these terms or conditions; or 2) as a consequence of deleting your User Profile; or 3) as a result of connectivity issues specific to the location where your SleepIQ™ System is installed; or 4) because you terminated your use of the SleepIQ™ Services.Transferring the Services: In the event you sell, give or donate your Bed to another person or entity, it is your responsibility to delete your User Profile and discontinue your use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services. Use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services is non-transferrable to the new owner of the Bed. The Bed can still be used as a premium-quality, adjustable firmness, air-supported mattress but use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services is not available to the new owner of your Bed. You must notify us that you are transferring ownership of your bed or otherwise disposing of it. Your failure to delete your User Profile, discontinue your use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services, and notify us that you are transferring ownership of your bed or otherwise disposing of it could result in Data generated by the SleepIQ™ Module, both past, present or future, being available to and accessible by any new user and vice versa. You will be responsible for any liability to any third party for your access to any Data after you no longer have possession of the Bed. Neither Sleep Number nor any of its suppliers including, without limitation, BAM, will be liable to you for any access by the new owner of the Bed to your Data if you fail to timely inform us that you are transferring possession or otherwise disposing of the Bed. You agree to indemnify Sleep Number, BAM and any of its suppliers against any claims by a third party to whom you transfer or sell your Bed or your SleepIQ™ System. The terms of this paragraph will survive the termination of this Agreement.Termination of the Services: If we determine that you are not using the Data, the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services in accordance with the terms and conditions of this Agreement, your right to access the Data, the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services terminates automatically, and we have the right (but not the obligation) to remove, edit, block or delete the transmission of Data from your SleepIQ™ Module or your access to the Data, the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services entirely. Our failure to perform any of the foregoing remedies will not constitute any waiver by us or any of our suppliers including, without limitation, BAM, from any claims against you. The terms of this paragraph will survive the termination of this Agreement.Changes to the Services: We may change or discontinue, temporarily or permanently, any feature or component of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services including any applications used to access the SleepIQ™ System or SleepIQ™ Services at any time without further notice. We may also charge a fee for use of the SleepIQ™ Services. In such case, you will be provided with notice of such fee in advance.Changes to this Agreement: We reserve the right to change the terms of this Agreement at any time. You will be notified about these changes electronically and will be requested to agree to the changes to continue your use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services. If you do not agree to the change, you must discontinue your use of the SleepIQ™ Module, the SleepIQ™ System and the SleepIQ™ Services and deactivate your User Profile. If you do not discontinue your use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services and any applications that you use to access them, and contact us to end the Services, within fourteen (14) days of any notice of a change to the terms of this Agreement, you are then deemed to have agreed with the change and it becomes part of this Agreement between us. No modification of this Agreement, however, shall affect either party\'s rights or duties existing prior to the effective date of the change.How the SleepIQ™ Services Work and System Limitations: The SleepIQ™ Services are only available in the United States. The SleepIQ™ Services work using wireless communications networks some of which are our responsibility (e.g. between the Remote Control and the Pump), some of which are your responsibility (e.g. between your wireless router and your Internet Service Provider (ISP)) and some of which are the responsibility of others (e.g. internet access through community-wide wireless services provided by local government or free wireless access provided by a landlord in an apartment building). The status of each of these networks can be impacted by many things and may affect your ability to use the SleepIQ™ Services. We will be responsible, under the terms of the warranty which came with your Bed, for issues which arise with the wireless communication network between the Remote control and the Pump and the SleepIQ™ Module. Neither Sleep Number nor its suppliers including, without limitation, BAM, is responsible for, and you accept all liability relating to or arising out of (a) electronic communication issues which arise with your wireless communication network or that are otherwise beyond the control of us or BAM, (b) your failure to place the SleepIQ™ Module in a location having continuous wireless access to the internet with sufficient reception and network capacity when the Bed is being used or the SleepIQ™ Services are being accessed, (c) any interception, corruption, damage, or misuse of any Data, (d) any security risks and any damage resulting therefrom, and (e) any failure to install anti-virus software, firewalls, and related security protections against any viruses, or other software or techniques that may have the effect of damaging, destroying, disrupting or otherwise impairing a wireless router, network, or computer\'s functionality or operation. We make no guarantee that the SleepIQ™ Services will be available uninterrupted or that your Bed will be able to be connected to the SleepIQ™ Services.Third Party Websites and Software: In order to use the Services, you may be required to access, install, purchase or run other equipment or ancillary services which are outside of our control. For example, accessing the SleepIQ™ Services over the internet will require you to utilize a web browser on a computer which may be running a particular operating system. You are responsible for obtaining and maintaining any equipment or ancillary services needed to connect to, access or otherwise use the SleepIQ™ Services including, without limitation, modems, hardware, software, broadband internet access or long-distance or local telephone service. You are responsible for ensuring that such equipment or ancillary services are compatible with the SleepIQ™ Module, the SleepIQ™ System, the SleepIQ™ Services and/or the Bed. To the extent such third party equipment or ancillary services require you to agree to other terms and conditions of access or use, you are responsible for complying with such agreements separate and apart from your agreement with us.Personal, Non-Commercial Use: You may only access or use the SleepIQ™ Module, the Data, the SleepIQ™ System or the SleepIQ™ Services for your own personal, non-commercial use and not for the use or benefit of any third party. You may only access or use the Data in connection with the SleepIQ™ System or the SleepIQ™ Services. You may not reverse engineer, decompile, or otherwise attempt to gain access to any of the SleepIQ™ Module, the SleepIQ™ System, the SleepIQ™ Services, or the Data except through the use of the SleepIQ™ System and SleepIQ™ Services. You may not defeat or circumvent any encryption, digital rights management, or security technology implemented by Sleep Number or BAM with respect to the SleepIQ™ System or the SleepIQ™ Services.Ownership of Data: Sleep Number and BAM jointly own the Deidentified Data (as hereafter defined) which may be generated by the SleepIQ™ Module and the SleepIQ™ System or entered by you in your User Profile and, to the extent legally necessary, you assign to each of Sleep Number and BAM ownership in your Deidentified Data. To the extent not inconsistent with both this Agreement and your privacy settings, each of Sleep Number and BAM shall have the right to exploit the Data for commercial or other purposes provided that the Data is de-identified ("DeidentifiedData"). For the purposes of this paragraph only, any user-entered information shall be considered Data. For example, while it may not be particularly interesting to anyone other than yourself how you slept last night, it could be highly interesting to some (e.g. researchers, insurance companies, etc.) how people in a particular group (e.g. age, gender, location, etc.) sleep during a particular period of time (e.g. last month, after an earthquake, before or after a change in daylight savings time, etc.). To the extent we are able to generate income related to the collection and/or sale of Deidentified Data, each of Sleep Number and BAM shall have the right to and will retain that income and hold no obligation to share it with you. In addition to, and without limiting the foregoing, Sleep Number also owns information which it has come to know about you, which we may deidentify and exploit for commercial purposes. The terms of this paragraph will survive the termination of this Agreement.Website Content: All materials displayed or performed through the SleepIQ™ Services (including but not limited to any text, graphics, articles, photographs, images or illustrations (the "Content")) are protected by applicable intellectual property laws including, without limitation, copyright. You shall abide by all proprietary rights notices including, without limitation, copyright notices, trademark notice, and any information and restrictions contained in any Content accessed through the any of the SleepIQ™ System or SleepIQ™ Services and shall not use, copy, reproduce, modify, translate, publish, broadcast, transmit, distribute, perform, upload, display, license, sell or otherwise exploit or dispose of for any purposes whatsoever any Content or other proprietary rights in the Content not otherwise owned by you.Precautions: Content found on sleepiq.sleepnumber.com or provided through the SleepIQ™ Services is for informational purposes only and under no circumstance will such information be construed as medical advice, diagnosis or treatment. It is not intended to replace medical care, medical diagnosis, or the relationship between you and your physician or other medical provider. We are not a licensed medical care provider and have no expertise in diagnosing, examining or treating medical conditions of any kind. In no way should the Data be used to diagnose or treat any medical condition. You should always consult with a physician regarding any concerns you have relating to your health, especially before your start or stop any particular health-related regimen. Never disregard professional medical advice or delay in seeking it because of something you have read or interpreted while using the SleepIQ™ System or SleepIQ™ Services or based on any Data generated by the SleepIQ™ Module.Not a Substitute for Active Monitoring: Through your use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services, you will have access to certain biometric Data regarding you or anyone else you allow to use your Bed. The Data is not provided to you in real time. In some cases, the Data is generated by averaging or otherwise manipulating raw data being captured and transmitted to the SleepIQ™ Module. The Data is intended to be informational only and should, in no way, be used as a substitute for medical diagnosis or medical care including, without limitation, the proper supervision of either a person or of a medical condition. For example, using the SleepIQ™ Services to monitor a person of limited mobility or who is at risk of a fall to ensure that they remain in bed or using the SleepIQ™ Services to monitor someone with sleep apnea to ensure they are breathing are examples of improper use of the Bed, the SleepIQ™ Module, the Data, the SleepIQ™ System and the SleepIQ™ Services for something for which it wasn\'t intended. We undertake no responsibility or liability with respect to actively monitoring the Data to ensure your or anyone else\'s health or safety. You understand that the SleepIQ™ System and the SleepIQ™ Services do not protect your health or safety. You agree to use other safety and medical devices and techniques available to you as advised by your doctor or other health care professional and to otherwise adhere to any limitations, precautions or warnings which may accompany any medications, prescribed or otherwise..Accuracy of Information and Data: We endeavor to provide helpful and accurate information through the SleepIQ™ Module, the SleepIQ™ System and the SleepIQ™ Services but we make no endorsement, representation or warranty of any kind about the Data, its quality or accuracy, or other information accessed or made available through your use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services and cannot be held responsible for the accuracy, reliability, effectiveness or correct use of the same. If you rely on such Data or other information, you do so solely at your own risk and peril.Sharing: Through the SleepIQ™ System and the SleepIQ™ Services, we enable you to share information with others with whom you may share a sleeping environment. Choose wisely. Once you agree to share certain information or Data with another person, we have no control over what that person can do with your Data. You are responsible for maintaining the confidentiality of your login information and password related to your use of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services. You agree to notify us immediately if you become aware of any unauthorized access to or use of your login information or password.Privacy: Use of the Data by us is subject to our privacy policy which can be found at http://www.sleepnumber.com/eng/customerService/privacyPolicy.cfm. In the event of any conflict between the terms of this Agreement and Sleep Number\'s privacy policy, the terms of this Agreement shall control. BAM does not collect any Data other than Deidentified Data.Allowing Others to Use Your Bed: You understand that once you set up your Bed to collect Data through the SleepIQ™ Module which can then be accessed via the SleepIQ™ System, such Data will be collected on any person you allow to use your Bed. On dual-chamber Beds, you can grant access through the SleepIQ™ Services to allow another person ("SecondaryUser") to create a separate User Profile and to collect Data to be accessed via the SleepIQ™ Services relating to their use of the Bed. If you do that, the Secondary User will have to agree to this Agreement when they create their own User Profile. In any event, on both single and multi-chamber Beds, you are responsible for whether Data is collected from anyone you allow to use your Bed and for either a) notifying such person that Data is being collected and that you will have access to that Data; or b) disabling the Pump, the SleepIQ™ Module or the SleepIQ™ System such that no Data is collected or transmitted. You will indemnify us, BAM, and suppliers of us or BAM, as provided in the Section entitled "Indemnification", for any matter arising out of or relating to any claims made by anyone who uses your Bed including, without limitation, disclosure of any information or Data concerning any Secondary User.Disabling the Transmission of Data: The SleepIQ™ Module or the SleepIQ™ Firmness Control™ System will allow you to disable the transmission of Data to us from the SleepIQ™ System. Data may still be gathered "locally" on the SleepIQ™ module but it will not be transmitted to us by the SleepIQ™ System. Even with transmission disabled, the SleepIQ™ System will still transmit an occasional electronic/inaudible "ping" to allow us to know that the SleepIQ™ Module is still there and that the SleepIQ™ Services are generally operational. At a minimum, through the SleepIQ™ Services, you or a Secondary User will still be able to see that transmission has been disabled. The transmission of Data can be restarted remotely by you or a Secondary User without warning. The only way to ensure that neither the Data nor the "ping" is being transmitted from the SleepIQ™ Module or the SleepIQ™ Firmness Control™ System to us is to unplug the Pump. Don\'t worry, your Bed will not deflate. The absence of Data during the time the Pump is unplugged will be obvious to you or a Secondary User accessing the SleepIQ™ Services. If you plan on unplugging your Bed for more than a few nights, please refer to your owner\'s manual for instructions on capping your bed.Indemnification: Upon request by us, you agree to defend, indemnify and hold us and our suppliers including, without limitation BAM, harmless from and against any and all losses, liabilities, damages and costs, including but not limited to legal fees, expert witness fees, and court costs, arising from any claims, actions or demands related to or alleged to relate to a) your use or misuse of the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services as well as the use or misuse of the same by anyone you allow to use your Bed or the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services; b) your violation of this Agreement; c) your violation of the rights of any third party; or d) your violation of any applicable law, rule or regulation in connection with your use of the Bed, the SleepIQ™ Module, the SleepIQ™ System or the SleepIQ™ Services. Each of us and BAM reserve the right to assume control of the defense of any third party claims that are subject to indemnification hereunder in which event you will cooperate with each of us and BAM in connection with our defense of any third party claim. Each of us and BAM reserve the sole right to settle or otherwise compromise any claim, action or demand subject to indemnification under this Agreement with or without your consent. The terms and conditions of this paragraph will survive the termination of this Agreement.Content and Warranty Disclaimer: THE SleepIQ™ SERVICES ARE PROVIDED BY US AND BAM ON AN "ASIS" BASIS ONLY. NEITHER OF BAM NOR SLEEP NUMBER MAKE ANY REPRESENTATIONS OR WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED, AS TO THE OPERATION OR FUNCTIONALITY OF THE SleepIQ™ SERVICES OR ANY INFORMATION OR DATA MADE AVAILABLE BY OR THROUGH THE SleepIQ™ SYSTEM OR THE SleepIQ™ SERVICES. IN ADDITION, EACH OF BAM AND US DISCLAIM ALL WARRANTIES WITH RESPECT TO THE SleepIQ™ SYSTEM AND THE SleepIQ™ SERVICES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, TITLE, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, AND ANY WARRANTIES ARISING OUT OF CONDUCT OR TRADE PRACTICE. FURTHERMORE, NEITHER OF BAM NOR US WARRANT THAT THE USE OF THE SERVICES WILL BE UNINTERRUPTED, AVAILABLE AT ANY TIME OR FROM ANY PARTICULAR LOCATION, SECURE OR ERROR-FREE. The terms and conditions of this paragraph will survive the termination of this Agreement.Limitation of Liability: IN NO EVENT WILL EITHER OF BAM OR US BE LIABLE FOR DIRECT, INDIRECT, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES (INCLUDING, WITHOUT LIMITATION, THOSE RESULTING FROM LOST PROFITS, LOST DATA OR BUSINESS INTERRUPTION) ARISING OUT OF THE USE, INABILITY TO USE OR THE RESULTS OF THE USE OF THE BED, THE SleepIQ™ MODULE, THE SleepIQ™ SYSTEM OR THE SleepIQ™ SERVICES, WHETHER SUCH DAMAGES ARE BASED ON WARRANTY, CONTRACT, TORT OR ANY OTHER LEGAL THEORY AND WHETHER OR NOT WE HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. OUR AGGREGATE LIABILITY ARISING FROM OR RELATING TO THE SleepIQ™ SERVICES, REGARDLESS OF THE FORM OF ACTION OR CLAIM, IS LIMITED TO $100. IN SOME JURISDICTIONS, APPLICABLE LAW MAY NOT ALLOW CERTAIN OF THE LIMITATIONS DESCRIBED ABOVE, IN WHICH CASE SUCH LIMITATIONS MAY NOT APPLY TO YOU. The terms and conditions of this paragraph will survive the termination of this Agreement.Governing Law: These Terms and Conditions are governed by and will be construed in accordance with the laws of the State of Minnesota, regardless or the laws that might otherwise govern under its principles of conflicts of laws.Alternative Dispute Resolution:Note: You understand and agree that by entering into this Agreement, you and Sleep Number are each waiving the right to trial by jury or to participate in a Class Action.    Fundamental Fairness: Sleep Number supports the proposition that all parties to a dispute that is subject to these alternative dispute resolution ("ADR") provisions are entitled to a fundamentally fair process. Toward that end, Sleep Number intends these ADR provisions to fully support the Consumer Due Process Protocol as published by the American Arbitration Association ("AAA").    ADR Administrator and Rules: Unless we both otherwise agree in writing, any mediation or arbitration under this Agreement shall be administered by and pursuant to the non-binding mediation or binding arbitration rules of the AAA concerning consumer-related disputes in effect at the time a case is filed.    ADR Process: Except in the case of a Small Claim, as defined below, you agree that any and all disputes, claims or controversies arising out of or related to the SleepIQ™ Module, the SleepIQ™ System, the SleepIQ™ Services or your use thereof or these Terms and Conditions of Use, including any claims under any statue or regulation ("Claim"), shall be submitted first to non-binding mediation. If the Claim is not resolved through mediation, you may then submit your Claim for binding arbitration. Further information on the ADR process may be obtained by contacting Sleep Number or the AAA.    Restrictions on Arbitration: Disputes shall be arbitrated on an individual basis. There shall be no right to or authority for any dispute to be arbitrated on a class action basis or in a purported representative capacity on behalf of the general public or other persons or entities similarly situated. The arbitrator\'s authority to resolve disputes and to make awards is limited to disputes between you and us alone and is subject to the Limitations of Liability set forth in these Terms of Use. Furthermore, disputes brought by either you or us against the other may not be joined or consolidated in arbitration with disputes brought by or against any third party unless agreed to in writing by all parties. No arbitration award or decision on any disputes shall be given preclusive effect as to issues or claims in any dispute with anyone who is not a party to the arbitration. Should any portion of this paragraph be stricken from these Terms of Use or deemed otherwise unenforceable, then this entire Alternative Dispute Resolution section shall be stricken from these Terms of Use.    Small Claims: If your Claim is for damages of less than the jurisdictional limit for claims made in small claims court where you live (a "SmallClaim"), you may elect to file your Small Claim on a non-class/non-consolidated/non-representative basis in such small claims court instead of submitting your Small Claim to the AAA for mediation or arbitration as required by this Agreement. If your Small Claim is unsuccessful in small claims court and you wish to further pursue your Small Claim, you agree to submit your Small Claim to the AAA for binding arbitration but not mediation under this Agreement.    Costs and Fees Imposed by AAA: You may be required to pay a filing fee when you file your Claim with the AAA. Generally speaking, there is no fee to file a request to mediate with the AAA. There is generally a filing fee required to file an arbitration request. You should contact the AAA to determine what the filing fee is. The AAA also charges certain administrative costs and expenses related to a mediation or arbitration. For example, the mediators or arbitrators selected by the parties will need to be paid for their time and related travel expenses (if any). Except in cases where the mediator or arbitrator determines that your Claim is frivolous or was filed with the sole purpose of being vexatious or to annoy, we will be responsible for paying all other fees or expenses related to the mediation or arbitration as imposed by the AAA above and beyond the filing fees imposed on you by the AAA. You are responsible for paying your own attorney\'s fees if you choose to be represented by an attorney.    Right to Representation: During the ADR process (either mediation or arbitration) you have the right, at your own expense, to be represented by an attorney. The choice of whether to retain an attorney and the costs and expenses of such attorney are entirely yours.    Initiating a Claim: Please contact your local small claims court clerk for instructions on submitting your Small Claim to the small claims court. To submit your Small Claim to mediation (initial claims) or arbitration (appeals), please contact the AAA.    Selection of Neutrals: Any mediation or arbitration filed with the AAA will be heard by an independent and neutral third party (a "Neutral"). As part of the ADR process, all parties are entitled to a Neutral who is independent and impartial. Toward that end and pursuant to the AAA rules for the selection of a Neutral, each party will be provided with a list of available Neutrals by the AAA. Each party will be entitled to strike those Neutrals the party deems unacceptable. The parties shall then rank the Neutrals remaining on their list. The AAA will select the Neutral from the names remaining on the list starting with the highest mutually ranked Neutral.    Location of Mediation or Arbitration: In the case of face-to-face proceedings, such proceedings will be conducted at a locale that is reasonably convenient to each party with due consideration of each party\'s ability to travel and other pertinent circumstances. If the parties are unable to agree on a location, the determination will be made by the Neutral.    Fundamental Fairness: All parties shall be entitled to a fundamentally fair ADR process and hearing. Each party shall be given adequate notice of hearings and an opportunity to be heard and to present relevant evidence to the Neutral. The Neutral is empowered to facilitate the exchange of information between the parties during any arbitration and prior to any hearing.    Nature of Hearing: In some cases, the Neutral may find it more expeditious and/or less costly to render an opinion based on written submissions only (no hearing) or based on a hearing conducted telephonically. The Neutral shall always have discretionary authority as to whether to require a face-to-face hearing at the request of either party.    Remedies and Awards: The Neutral shall be empowered to grant whatever relief would be available in court or in equity. In the case of arbitration, the decision of the Neutral and any award granted to either party shall be final and binding but subject to review in accordance with applicable statutes governing arbitration awards. In making the award, the Neutral should apply any identified, pertinent contract terms, statutes and legal precedents. The Neutral shall also provide a brief written explanation of the basis for any award at the time it is made.Entire Agreement: These Terms and Conditions represent the entire agreement between you and us related to your use of the SleepIQ™ Module, the SleepIQ™ System and the SleepIQ™ Service and supersede any and all prior or contemporaneous oral or written agreements. If any provision of the Terms and Conditions is found to be contrary to law then such provision will be construed as nearly as possible to reflect the intentions of the parties with the other provisions remaining in full force and effect. Our failure to exercise or enforce any right or provision of the Terms and Conditions will not constitute a waiver of such right or provision unless acknowledged and agreed to by us in writing.Third Party Beneficiary: BAM is an express third party beneficiary of this Agreement. The terms of this paragraph will survive the termination of this Agreement.Assignment: You are not permitted to assign this Agreement without our prior written consent. Any such assignment without such prior consent shall be deemed a breach of this Agreement. We may assign this Agreement to either any other company which we own or control or to another company so long as such other company undertakes all of our obligations, rights and duties hereunder.Reservation of Rights. All rights not expressly granted herein are reserved to Sleep Number, BAM, and their respective suppliers, and no other licenses are granted herein by implication, estoppel or otherwise. You shall not take any action to interfere with the ownership of the SleepIQ™ System, the SleepIQ™ Service, and the online documentation by us, or by our suppliers including, without limitation, BAM. You acknowledge that any unauthorized copying or unauthorized use of the SleepIQ™ System and the SleepIQ™ Service, or the online documentation, is a violation of this Agreement and is strictly prohibited. All proprietary notices incorporated in, marked on, or fixed to any portion of the Service provided to you shall not be altered, removed or obliterated.Open Source Software.Certain software contained in the SleepIQ™ System provided to you contains software provided by suppliers other than us or BAM ("OpenSourceSoftware"). Disclosures required under licenses for Open Source Software can be found by clicking https://fireflytest.siq.sleepnumber.com/eula.',
                getPauseMode: {
                    accountId: "-9223372036841191305",
                    bedId: "-9223372036841039805",
                    pauseMode: "off"
                },
                getAccount: {
                    account: {
                        name: "27849346",
                        type: 3,
                        status: 2,
                        activationDate: "2015-02-13 04:49:26 CST",
                        accountId: "-9223372036841191305",
                        externalId: "27849346"
                    }
                },
                getSleeper: {
                    sleeper: {
                        firstName: "Megan",
                        active: !0,
                        emailValidated: !1,
                        isChild: !0,
                        bedId: "-9223372036841039805",
                        birthYear: "2010",
                        zipCode: "55449",
                        timezone: "US/Central",
                        isMale: !0,
                        weight: 65,
                        duration: 35,
                        sleeperId: "-9223372036840837805",
                        height: 36,
                        licenseVersion: 0,
                        username: "stacy.stusynski@yahoo.com",
                        birthMonth: null,
                        sleepGoal: 540,
                        isAccountOwner: !1,
                        accountId: "-9223372036841191305",
                        email: "stacy.stusynski@yahoo.com",
                        avatar: "",
                        lastLogin: "2015-02-25 09:05:16 CST",
                        side: 1
                    }
                },
                getSleeperGoals: {
                    goals: [{
                        isPrimary: !0,
                        goalId: "-9223372036820435769",
                        goalTime: 1260,
                        goalType: 0,
                        goalTitle: "Be in bed on time",
                        goalDesc: "have gone to bed on time",
                        formattedTime: "8:00 pm"
                    }]
                },
                getSleeperGoalsList: function(a) {
                    return {
                        goalEntries: [{
                            sleeperId: a,
                            status: 1,
                            date: moment().format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(1, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(2, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(3, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(4, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(5, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(6, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(7, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(8, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(9, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(10, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(11, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(12, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(13, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }, {
                            sleeperId: a,
                            status: 1,
                            date: moment().subtract(14, "days").format("YYYY-MM-DD"),
                            goalId: "-9223372036820435769"
                        }]
                    }
                },
                getRoutine: {
                    duration: 30,
                    routines: [{
                        name: "Pajamas",
                        sequence: 1
                    }, {
                        name: "Brush Teeth",
                        sequence: 2
                    }, {
                        name: "Read Stories",
                        sequence: 3
                    }, {
                        name: "Lights Out",
                        sequence: 4
                    }]
                },
                getProviders: providers,
                getActivities: activities
            }
        }), define("app/service/AccountService", ["require", "lavaca/util/Disposable", "app/service/Service", "app/models/AuthModel", "app/models/StateModel", "app/service/DemoData"], function(a) {
            var b = a("lavaca/util/Disposable"),
                c = a("app/service/Service"),
                d = a("app/models/AuthModel"),
                e = a("app/models/StateModel"),
                f = a("app/service/DemoData"),
                g = b.extend(function() {
                    b.apply(this, arguments), e.on("updateState", this.setRegistrationState)
                }, {
                    validateOrder: function(a, b) {
                        return b = encodeURIComponent(b), e.get("demoMode") ? Promise.resolve() : c.makeRequest("order/" + a + "/email/" + b, null, "GET", !0)
                    },
                    setPasswordAndActivate: function(a, b) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("login/setPasswordAndActivate", {
                            password: a,
                            token: b
                        }, "POST", !0)
                    },
                    getTerms: function() {
                        return e.get("demoMode") ? Promise.resolve(f.getTerms) : c.makeRequest("license", {
                            dataType: "text"
                        }, "GET", !0)
                    },
                    setTerms: function(a, b, d) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("license/" + (d || 5), {
                            login: a,
                            password: b
                        }, "PUT", !0)
                    },
                    getPauseMode: function(a) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("bed/" + a + "/pauseMode", null, "GET")
                    },
                    setPauseMode: function(a, b) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("bed/" + a + "/pauseMode?mode=" + b, null, "PUT")
                    },
                    getBedModels: function() {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("bed/models", null, "GET")
                    },
                    getBeds: function() {
                        return e.get("demoMode") ? Promise.resolve(f.getBeds) : c.makeRequest("bed", null, "GET")
                    },
                    getFamilyBedsStatus: function() {
                        return e.get("demoMode") ? Promise.resolve(f.getFamilyBedsStatus) : c.makeRequest("bed/familyStatus", null, "GET")
                    },
                    updateBed: function(a, b) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("bed/" + a, b, "PUT")
                    },
                    updateCache: function(a, b) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("cache/" + a, b, "PUT")
                    },
                    getCache: function(a) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("cache/" + a, null, "GET")
                    },
                    getFamilyStatus: function() {
                        return e.get("demoMode") ? Promise.resolve(f.getFamilyStatus) : c.makeRequest("bed/familyStatus")
                    },
                    login: function(a) {
                        if ("demo" === a.login && "demo" === a.password) {
                            var b = {
                                key: "",
                                userId: ""
                            };
                            return e.set("demoMode", !0), Promise.resolve(b)
                        }
                        return new Promise(function(b, e) {
                            c.makeLoginRequest(a).then(function(f) {
                                return c.loginPromise = $.Deferred(), f && f.result && "ERROR" === f.result ? e(f) : (d.onUserLogin(f, a.login, a.password), b(f))
                            }.bind(this), function(a) {
                                return c.loginPromise = $.Deferred(), e(a)
                            }.bind(this))
                        })
                    },
                    logout: function() {
                        return d.clearAll(), Modernizr.localstorage && (sessionStorage.hasSeenToast = !1, sessionStorage.isAuthenticated = !1), e.set("demoMode", !1), Promise.resolve()
                    },
                    resetPassword: function(a) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("login/forgotPassword", a, "POST", !0)
                    },
                    getAccount: function() {
                        return e.get("demoMode") ? Promise.resolve(f.getAccount) : c.makeRequest("account")
                    },
                    getSleepers: function() {
                        return e.get("demoMode") ? Promise.resolve(f.getSleepers) : c.makeRequest("sleeper?_k=" + d.get("accountKey"))
                    },
                    getSleeper: function(a) {
                        return e.get("demoMode") ? Promise.resolve(f.getSleeper) : c.makeRequest("sleeper/" + a)
                    },
                    validateToken: function(a) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("token/" + a, null, "GET", !0)
                    },
                    updateSleeper: function(a, b) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("sleeper/" + a, b, "PUT")
                    },
                    addSleeper: function(a, b) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("sleeper?_k=" + b, a, "POST")
                    },
                    setRegistrationState: function(a) {
                        if ("undefined" == typeof a || void 0 === a || null === a) return Promise.reject();
                        if ("object" == typeof a && a.state && (a = a.state), Modernizr.localstorage) {
                            if (a + "" == localStorage.getItem("registrationState") + "") return Promise.resolve();
                            localStorage.setItem("registrationState", a), console.log("Current registrationState is " + a)
                        }
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("registration/" + a, null, "POST")
                    },
                    setOverrideURL: function(a) {
                        c.overrideURL = a
                    },
                    cancelEmailChange: function(a) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("sleeper/" + a + "/cancelEmailChange", null, "PUT")
                    }
                });
            return new g
        }), define("app/models/UserModel", ["require", "lavaca/mvc/Model", "app/service/AccountService"], function(a) {
            var b = a("lavaca/mvc/Model"),
                c = a("app/service/AccountService"),
                d = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    setUserOnBed: function(a, b) {
                        a = a || this.get("bedId"), b = "undefined" != typeof b && null !== b ? b : this.get("side");
                        try {
                            b = parseInt(b, 10)
                        } catch (d) {
                            return Promise.reject()
                        }
                        return this.set("side", b), c.updateSleeper(this.get("sleeperId"), {
                            side: b,
                            bedId: a
                        })
                    }
                });
            return d
        }), define("app/service/SleepDataService", ["require", "app/service/Service", "lavaca/util/Disposable", "app/models/StateModel", "app/service/DemoData"], function(a) {
            var b = a("app/service/Service"),
                c = a("lavaca/util/Disposable"),
                d = a("app/models/StateModel"),
                e = a("app/service/DemoData"),
                f = c.extend(function() {
                    c.apply(this, arguments)
                }, {
                    getSingleDay: function(a, c, d) {
                        return d ? b.makeRequest("sleepData/" + a + "/day") : b.makeRequest("sleepData/?date=" + c + "&interval=D1&sleeper=" + a)
                    },
                    getMonth: function(a, c) {
                        var f = c && c.substr(0, 7),
                            g = moment(c).subtract(1, "month").endOf("month").format("YYYY-MM-DD");
                        return a ? d.get("demoMode") ? Promise.resolve(e.sleepData(f, g, a)) : b.makeRequest("sleepData/?date=" + c + "&interval=M1&sleeper=" + a) : d.get("demoMode") ? Promise.resolve(e.sleepData(f, g)) : b.makeRequest("sleepData/?date=" + c + "&interval=M1")
                    },
                    getDataByMonth: function(a) {
                        return d.get("demoMode") ? Promise.resolve(e.getDataByMonth(a)) : b.makeRequest("sleepData/byMonth?startDate=" + a)
                    },
                    setSleeper: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a, c, "PUT")
                    },
                    getTags: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + c + "/tags", {
                            day: a
                        })
                    },
                    setTags: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + c + "/tags", a, "POST")
                    },
                    getCustomTags: function(a) {
                        return d.get("demoMode") ? Promise.resolve(e.getCustomTags(a)) : b.makeRequest("sleeper/" + a + "/customtags")
                    },
                    setCustomTags: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + c + "/customtags", a, "POST")
                    },
                    getEntry: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + c + "/note", {
                            day: a
                        })
                    },
                    setEntry: function(a, c) {
                        return b.makeRequest("sleeper/" + c + "/note", a, "POST")
                    },
                    getSleepSlices: function(a, c, f) {
                        var g = {
                            date: a
                        };
                        return c && (g.sleeper = c), f && (g.interval = f), d.get("demoMode") ? Promise.resolve(e.getSleepSlices(a, c)) : b.makeRequest("sleepSliceData", g)
                    },
                    getGoals: function(a, c) {
                        return c ? b.makeRequest("goals/" + a) : b.makeRequest("sleeper/" + a + "/goals")
                    },
                    editSleepData: function(a, c, e, f, g) {
                        var h = {
                            oldSessionStart: c,
                            oldSessionEnd: e,
                            newSessionStart: f,
                            newSessionEnd: g
                        };
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/editSleepSession", h, "PUT")
                    }
                });
            return new f
        }), define("app/utils/MixPanelManager", ["require", "lavaca/util/Disposable", "moment", "$"], function(a) {
            function b(a) {
                if (this.debug = !1, this.isInRemoteStandAlone = !1, this.loggedInUser = {}, this.currentFamilyDailyTab = null, this.currentFamilyDailyDate = null, this.routineModels = [], this.lastActivity = null, this.registrationPath = null, this.bedPairingAccessMethod = null, this.bedPairingId = null, this.savedWiFiNetwork = {}, this.isInitialized = !1, g.call(this), mixpanel.init(a, {
                        verbose: !0
                    }), window.cordova) try {
                    mixpanel.register({
                        "Device Model": window.device.model || "Not available",
                        "Device Platform": window.device.platform || "Not available",
                        "Device Manufacturer": window.device.manufacturer || "Not available",
                        "Device Version": window.device.version || "Not available"
                    })
                } catch (b) {}
                this.debug ? console.log("Mixpanel: Open App") : mixpanel.track("Open App", {
                    "App Version": window.appVersion
                }), this.isInitialized = !0
            }

            function c(a) {
                for (var b in a) this.loggedInUser[b] = a[b];
                mixpanel && "function" == typeof mixpanel.identify && "email" in this.loggedInUser && mixpanel.identify(this.loggedInUser.email.toLowerCase()), mixpanel && mixpanel.people && "function" == typeof mixpanel.people.set && "email" in this.loggedInUser && "firstName" in this.loggedInUser && mixpanel.people.set({
                    $first_name: this.loggedInUser.firstName,
                    $email: this.loggedInUser.email.toLowerCase()
                });
                try {
                    if (navigator && "userAgent" in navigator && Modernizr["mobile-app"]) {
                        var c = navigator.userAgent.split(/\(|\)/g);
                        if (c && "number" == typeof c.length && c.length >= 2 && c[1]) {
                            var d = c[1].split(";");
                            if (d && "number" == typeof d.length && d.length >= 2 && "string" == typeof d[0] && "string" == typeof d[1]) {
                                var e = d[1].trim().split(" ");
                                e && "number" == typeof e.length && e.length >= 2 && "string" == typeof e[0] && "string" == typeof e[1] && (this.loggedInUser.deviceOSVersion = e[1], this.loggedInUser.deviceOS = e[0])
                            }
                        }
                    }
                } catch (f) {
                    console.warn(f)
                }
            }

            function d(a) {
                if (!a) return null;
                for (var b = 0; b < a.length; b++)
                    if (a[b].isAccountOwner) return a[b].email
            }

            function e(a) {
                if (!a) return null;
                for (var b = 0; b < a.length; b++)
                    if (a[b].isAccountOwner) return a[b].firstName
            }

            function f() {
                if (Modernizr.localstorage) {
                    var a = {};
                    a.latest = this.routineModels, localStorage.setItem("mixPanelRoutines", JSON.stringify(a))
                }
            }

            function g() {
                if (Modernizr.localstorage) try {
                    var a = localStorage.getItem("mixPanelRoutines");
                    if ("undefined" != typeof a) {
                        a = JSON.parse(a), this.routineModels = a && a.latest ? a.latest : [];
                        for (var b = [], c = 0; c < this.routineModels.length; c++) {
                            var d = i(this.routineModels[c].endTime).diff(i(), "milliseconds"),
                                e = this.routineModels[c];
                            d > 0 ? this.routineModels[c].timerCheck = setTimeout(function() {
                                this.trackKidEndRoutine(e.stepsCompleted || 0, e.numberSteps, null, e.sleeperId)
                            }.bind(this), d) : b.push(e)
                        }
                        for (var g = 0; g < b.length; g++) this.trackKidEndRoutine(b[g].stepsCompleted || 0, b[g].numberSteps, null, b[g].sleeperId)
                    } else this.routineModels = []
                } catch (h) {
                    console.error(h), this.routineModels = []
                } else this.routineModels = [];
                f.call(this)
            }
            var h = a("lavaca/util/Disposable"),
                i = a("moment"),
                j = a("$"),
                k = h.extend(function() {
                    h.apply(this, arguments)
                }, {
                    setKey: function(a) {
                        a && b.call(this, a)
                    },
                    setUser: function(a) {
                        for (var b = 0; b < a.length; b++) a[b].isLoggedIn && c.call(this, a[b])
                    },
                    setUserBed: function(a) {
                        for (var b = 0; b < a.length; b++)
                            if (this.loggedInUser && a[b].bedId == this.loggedInUser.bedId && "undefined" != typeof this.loggedInUser.bedId) {
                                this.loggedInUser.bedModel = {};
                                for (var c in a[b]) this.loggedInUser.bedModel[c] = a[b][c]
                            }
                        mixpanel && mixpanel.people && "function" == typeof mixpanel.people.set && this.loggedInUser && "email" in this.loggedInUser && "firstName" in this.loggedInUser && mixpanel.people.set({
                            $first_name: this.loggedInUser.firstName,
                            $email: this.loggedInUser.email
                        })
                    },
                    setApplicationURL: function(a) {
                        this.applicationURL = a.toLowerCase().replace("{0}", "")
                    },
                    trackLoggedInUser: function(a, b, c, d) {
                        var e = {};
                        a && mixpanel && "function" == typeof mixpanel.identify && (mixpanel.identify(a.toLowerCase()), e["LI_Email Address"] = a.toLowerCase()), e.Successful = c ? "Yes" : "No", e.Password = d ? "Yes" : "No", this.sendPayload("Login", e)
                    },
                    setRemoteStandAlone: function() {
                        this.isInRemoteStandAlone = !0
                    },
                    clearRemoteStandAlone: function() {
                        this.isInRemoteStandAlone && (this.isInRemoteStandAlone = !1)
                    },
                    trackLoggedOutUser: function() {
                        return new Promise(function(a) {
                            this.sendPayload("Logout", {
                                Successful: "Yes"
                            }), this.loggedInUser = {};
                            for (var b = document.cookie.split(";"), c = 0; c < b.length; c++) "string" == typeof b[c] && b[c].indexOf("mp") > -1 && (document.cookie = b[c] + ";expires=Thu, 01-Jan-1970 00:00:01 GMT");
                            a()
                        }.bind(this))
                    },
                    setFamilySleepDailyType: function(a, b) {
                        this.currentFamilyDailyTab = a, this.currentFamilyDailyDate = b
                    },
                    trackFamilySleepDailyType: function(a, b) {
                        a != this.currentFamilyDailyTab && (this.currentFamilyDailyTab = a, this.currentFamilyDailyDate = b, this.trackFamilySleep(null, "Day", {
                            date: this.currentFamilyDailyDate,
                            formattedDate: ""
                        }, this.currentFamilyDailyTab))
                    },
                    trackFamilySleep: function(a, b, c) {
                        var d = {};
                        try {
                            if (d.V_Family = "Yes", d.V_SleeperNumber = null, d.V_SleeperType = null, d.V_SleeperID = null, d.V_SleeperName = null, d.V_SleepForm = "string" == typeof c ? c.charAt(0).toUpperCase() + c.slice(1) : null, d.V_TimePeriod = a, b) {
                                var e = "";
                                "Day" == a && (e = i(b.date).format("YYYY-MM-DD")), "Week" == a && (e = b.firstDay + " to " + b.lastDay), "Month" == a && (e = i(b.firstOfMonth).format("MMM")), d.V_TimeFrame = e || null
                            }
                            d.V_SleepIQ = null, d.V_SleepNumber = null, d.V_ActivitiesListString = null, d.V_GoalName = null, d.V_GoalResultList = null
                        } catch (f) {
                            console.error(f)
                        } finally {
                            this.sendPayload("Sleep", d)
                        }
                    },
                    trackSleep: function(a, b, c, d) {
                        var e = !1,
                            f = Array.isArray(d);
                        c && (e = "tags" in c ? Array.isArray(c.tags) : !1), "Day" == b && c && c.formattedDate == i().format("dddd, MMMM DD") && (this.loggedInUser.sleepIQLastNight = c.sleepQuotient || null);
                        var g = {};
                        try {
                            if (g.V_Family = "No", g.V_SleeperNumber = null, g.V_SleeperType = (a.isChild ? "Child" : "Adult") || null, g.V_SleeperID = a.sleeperId || null, g.V_SleeperName = "string" == typeof a.firstName ? a.firstName.trim() : null, g.V_SleepForm = null, g.V_TimePeriod = b, c) {
                                var h = "";
                                "Day" == b && (h = i(c.date).format("YYYY-MM-DD")), "Week" == b && (h = c.firstDay + " to " + c.lastDay), "Month" == b && (h = i(c.firstOfMonth).format("MMM")), g.V_TimeFrame = h || null, g.V_SleepIQ = c.sleepQuotient || c.avgSleepIQ || null, g.V_SleepNumber = c.sleepNumber || null
                            }
                            g.V_ActivitiesListString = e ? c.tags.join(", ") : null, a.isChild && (g.V_GoalName = "goal" in c ? c.goal.goalTitle || null : null, g.V_GoalResultList = f ? d.reverse().join("") : null)
                        } catch (j) {
                            console.error(j)
                        } finally {
                            this.sendPayload("Sleep", g)
                        }
                    },
                    trackKidStartRoutine: function(a, b, c) {
                        var d = {};
                        try {
                            var e = {};
                            e.duration = a.duration || null, e.numberSteps = a.routines.length || null, e.firstName = b.firstName || null, e.sleeperId = b.sleeperId || null, e.endTime = c || null, e.stepsCompleted = 0, this.routineModels.push(e), d.V_SleeperID = e.sleeperId, d.V_SleeperName = e.firstName, d.RoutineType = "Bedtime", d.RoutineDuration = e.duration, d["Start Routine"] = "Yes", d["Finish Routine"] = null, d["# of Steps"] = e.numberSteps, f.call(this)
                        } catch (g) {
                            console.error(g)
                        } finally {
                            this.sendPayload("Routine", d)
                        }
                    },
                    trackKidRoutineEnterView: function(a) {
                        for (var b = 0; b < this.routineModels.length; b++) this.routineModels[b].sleeperId == a && "undefined" != typeof this.routineModels[b].timerCheck && (clearTimeout(this.routineModels[b].timerCheck), this.routineModels[b].timerCheck = void 0, f.call(this))
                    },
                    trackKidRoutineLeaveView: function(a, b, c) {
                        for (var d = 0; d < this.routineModels.length; d++)
                            if (this.routineModels[d].sleeperId == a) {
                                var e = i(this.routineModels[d].endTime).diff(i(b), "milliseconds");
                                if ("undefined" == typeof this.routineModels[d].timerCheck) {
                                    this.routineModels[d].stepsCompleted = c;
                                    var g = this.routineModels[d];
                                    this.routineModels[d].timerCheck = setTimeout(function() {
                                        this.trackKidEndRoutine(g.stepsCompleted, g.numberSteps, null, a)
                                    }.bind(this), e), f.call(this)
                                }
                            }
                    },
                    trackKidEndRoutine: function(a, b, c, d) {
                        for (var e = -1, g = -1, h = {}, j = 0; j < this.routineModels.length; j++) this.routineModels[j].sleeperId == d && (h = this.routineModels[j], e = j, null != c ? (g = i(c).diff(i(this.routineModels[j].endTime), "seconds") / 60, g += this.routineModels[j].duration, g = g.toFixed(2)) : g = this.routineModels[j].duration);
                        var k = {};
                        try {
                            k.V_SleeperID = d, k.V_SleeperName = h.firstName || null, k.RoutineType = "Bedtime", k.RoutineDuration = h.duration, k["Start Routine"] = null, k["Finish Routine"] = a == b ? "Yes" : "No", k["# of Steps"] = h.numberSteps, k["# of Steps completed"] = a, k["Routine Success"] = a == b ? "Yes" : "No", k["Routine Final Duration"] = -1 != g ? g : null
                        } catch (l) {
                            console.error(l)
                        } finally {
                            this.sendPayload("Routine", k), e > -1 && (this.routineModels.splice(e, 1), f.call(this))
                        }
                    },
                    trackRemoteAction: function(a, b, c, d, e) {
                        var f = {};
                        a.isAdult ? "Left" == d ? a.bedSideName = "Left Side" : "Right" == d && (a.bedSideName = "Right Side") : a.childSleeperName ? a.bedSideName = a.childSleeperName + "'s Bed" : (a.bedSideName = a.capabilities.isK1 ? "K1 Bed" : null, a.bedSideName = a.capabilities.isK2 ? "K2 Bed" : null);
                        try {
                            f.V_RemoteType = a.isAdult && a.capabilities && a.capabilities.isAdult ? "Adult" : "Child", f.V_BedModel = a.model || null, f.V_BedName = a.name || null, f.V_BedSide = d || null, f.V_BedSideName = ("Left" == d ? a.leftSleeperName : a.rightSleeperName) || a.bedSideName || null, f.V_RemoteFunction = b, f.V_RemoteAction = c, f.V_CommunicationProtocol = e || null
                        } catch (g) {
                            console.error(g)
                        } finally {
                            this.sendPayload("Remote", f)
                        }
                    },
                    trackKidGoals: function(a) {
                        var b = {},
                            c = a.selectedUser,
                            d = "goals" in a ? Array.isArray(a.goals) : !1;
                        try {
                            b.V_SleeperID = c.sleeperId || null, b.V_SleeperName = c.firstName || null, b.V_GoalNameList = d ? a.goals.map(function(a) {
                                return a.goalTitle
                            }).join(", ") : "", b.V_PrimaryGoalName = d ? a.goals.map(function(a) {
                                return a.isPrimary ? a.goalTitle : ""
                            }).join("") : "", b.V_GoalsQuantity = d ? a.goals.length : 0
                        } catch (e) {
                            console.error(e)
                        } finally {
                            this.sendPayload("Goals", b)
                        }
                    },
                    trackMonsterDetectorOpened: function() {
                        this.sendPayload("Monster Detector Opened", {})
                    },
                    trackActivityEntry: function(a) {
                        var b = {},
                            c = "checkedTags" in a ? Array.isArray(a.checkedTags) : !1;
                        try {
                            b.V_SleeperID = a.sleeperId || null, b.V_SleeperName = a.name || null, b.TimeFrame = a.date || null, b.ActivityNamesSetList = c ? a.checkedTags.join(", ") : ""
                        } catch (d) {
                            console.error(d)
                        } finally {
                            this.sendPayload("Activity Entry", b)
                        }
                    },
                    trackKidTrends: function(a) {
                        var b = {},
                            c = a["0"] || null,
                            d = "trends" in a ? Array.isArray(a.trends) : !1;
                        try {
                            b.V_SleeperID = c.sleeperId || null, b.V_SleeperName = a.firstName || null, b.V_TrendList = d ? a.trends.map(function(a) {
                                return a.tag
                            }).join(", ") : "", b.V_TrendListSIQ = d ? a.trends.map(function(a) {
                                return parseInt(a.average, 10)
                            }).join(", ") : ""
                        } catch (e) {
                            console.error(e)
                        } finally {
                            this.sendPayload("Trends", b)
                        }
                    },
                    trackSleepIQ: function(a, b) {
                        var c = {},
                            d = a.macAddress.replaceAll(":", "");
                        d = d.toUpperCase();
                        try {
                            c.V_PumpID = d || null, c.V_BedName = a.name || null, c.SleepIQOn = b ? "Yes" : "No"
                        } catch (e) {
                            console.error(e)
                        } finally {
                            this.sendPayload("SleepIQ On/Off", c)
                        }
                    },
                    trackUserProfileChange: function(a) {
                        var b = {};
                        try {
                            b.V_SleeperID = a.sleeperId, b.V_SleeperType = a.isChild ? "Child" : "Adult", b.V_SleeperName = a.firstName, b.V_SleepGoal = a.sleepGoal, b.V_BirthYear = a.birthYear, b.V_BirthMonth = a.birthMonth || null, b.V_Gender = a.isMale ? "Male" : "Female", b.V_Height = a.height, b.V_Weight = a.weight, b.V_BedSide = a.side, b.V_EmailAddress = "null" != a.email ? a.email : null
                        } catch (c) {
                            console.error(c)
                        } finally {
                            this.sendPayload("ProfileChange", b)
                        }
                    },
                    trackNotificationsChange: function(a) {
                        var b = {};
                        try {
                            b.V_SleeperID = a.user.sleeperId || null, b.V_SleeperName = a.user.firstName || null, b.V_SleeperType = "Adult", b.NotificationType = "Push", b.NotificationCategory = "OutOfBed", b.NotificationValue = a.userNotifications.enabled ? "On" : "Off", b["24HRFlag"] = a.userNotifications.is24Hours ? "Yes" : "No", b.From = a.userNotifications.notifyWindow.start || null, b.Until = a.userNotifications.notifyWindow.end || null
                        } catch (c) {
                            console.error(c)
                        } finally {
                            this.sendPayload("NotificationChange", b)
                        }
                    },
                    trackBedTroubleShooting: function(a, b) {
                        var c = {};
                        try {
                            var d = j(a.currentTarget).find("span.name").text();
                            c.V_PumpID = b.macAddress || null, c.V_BedName = b.name || null, c.TroubleshootingType = d.replaceAll(" ", "")
                        } catch (e) {
                            console.error(e)
                        } finally {
                            this.sendPayload("BedTroubleshooting", c)
                        }
                    },
                    trackSupportActivity: function(a) {
                        if (this.lastActivity != a) {
                            this.lastActivity = a;
                            var b = {};
                            try {
                                b["SupportActivity Accessed"] = a
                            } catch (c) {
                                console.error(c)
                            } finally {
                                this.sendPayload("Support", b)
                            }
                        }
                    },
                    trackBedDetailsUpdate: function(a) {
                        var b = {};
                        try {
                            var c = a.macAddress.replaceAll(":", "");
                            c = c.toUpperCase(), b.V_PumpID = c || null, b.V_BedName = a.name || null, b["V_Bed Model"] = a.model || null, b["V_Bed Size"] = a.size ? a.size.charAt(0).toUpperCase() + a.size.slice(1) : null, b["V_Foundation Type"] = null, b.V_Network = a.networks.length > 0 ? a.networkName : null, b.V_ZipCode = a.zipCode || null, b.V_TimeZone = a.timeZone || null, b.V_Status = a.statusNamed || null
                        } catch (d) {
                            console.error(d)
                        } finally {
                            this.sendPayload("Bed Details Update", b)
                        }
                    },
                    hasRegistrationPath: function() {
                        return "string" == typeof this.registrationPath
                    },
                    setRegistrationPath: function(a) {
                        this.registrationPath || (this.registrationPath = a)
                    },
                    hasRegistrationPath: function() {
                        return "string" == typeof this.registrationPath
                    },
                    clearRegistrationPath: function() {
                        this.registrationPath = null
                    },
                    trackAccountRegistrationInitiation: function(a, b, c) {
                        var f = b ? d.call(this, b) : null,
                            g = b ? e.call(this, b) : null,
                            h = a && Array.isArray(a.beds),
                            i = null;
                        h && (i = a.beds.map(function(a) {
                            var b = a.status.leftSide,
                                c = a.status.rightSide;
                            return 0 != b && "0" != b && null != b || 0 != c && "0" != c && null != c ? 0 : 1
                        }).reduce(function(a, b) {
                            return a + b
                        }));
                        var j = {};
                        try {
                            j.AO_EmailAddress = f || c.email || null, j["AO_First Name"] = g, j["Order Number"] = c.orderId || null, j.UnregisteredBedCount = i || (Array.isArray(c.bedsToSetup) ? c.bedsToSetup.length : null) || null, j.BedListNames = (h ? a.beds.map(function(a) {
                                return a.name
                            }).join(", ") : null) || (Array.isArray(c.beds) ? c.beds.map(function(a) {
                                return a.name
                            }).join(", ") : null), j.RegistrationPath = this.registrationPath || null, j.RegistrationDevice = Modernizr.ios || Modernizr.android ? "App" : "Web"
                        } catch (k) {
                            console.error(k)
                        } finally {
                            this.sendPayload("AR - Initialization", j), this.clearRegistrationPath()
                        }
                    },
                    trackTerms: function(a, b) {
                        var c = b ? d.call(this, b) : null,
                            f = b ? e.call(this, b) : null,
                            g = {};
                        try {
                            g.AO_EmailAddress = c || null, g["AO_First Name"] = f, g.TermsAction = a
                        } catch (h) {
                            console.error(h)
                        } finally {
                            this.sendPayload("AR - Terms", g)
                        }
                    },
                    trackOrder: function(a, b, c) {
                        var f = {},
                            g = c ? d.call(this, c) : null,
                            h = c ? e.call(this, c) : null;
                        try {
                            f.OrderNumber = a, f.AO_EmailAddress = g || null, f["AO_First Name"] = h, b ? (f["success?"] = "No", f.ErrorCode = b.status, f.ErrorMessage = b.responseJSON.Error.Message) : f["success?"] = "Yes"
                        } catch (i) {
                            console.error(i)
                        } finally {
                            this.sendPayload("AR - Order", f)
                        }
                    },
                    trackPassword: function(a, b, c) {
                        var f = {},
                            g = c ? d.call(this, c) : null,
                            h = c ? e.call(this, c) : null;
                        try {
                            f.OrderNumber = a, f.AO_EmailAddress = g || null, f["AO_First Name"] = h, b ? (f["success?"] = "No", f.ErrorCode = b.status, f.ErrorMessage = b.responseJSON.Error.Message) : f["success?"] = "Yes"
                        } catch (i) {
                            console.error(i)
                        } finally {
                            this.sendPayload("AR - Password", f)
                        }
                    },
                    trackThankYou: function(a, b, c) {
                        var f = b ? d.call(this, b) : null,
                            g = b ? e.call(this, b) : null,
                            h = {};
                        try {
                            h.AO_EmailAddress = f || null, h["AO_First Name"] = g, h["Order Number"] = a.bed.reference || null, h.V_BedModel = a.bed.model || null, h.V_BedName = a.bed.name || null, h.V_Network = a.networkModel ? a.networkModel.wifiName : null, h.V_TimeZone = a.timeZone || null, h.V_ZipCode = a.zipCode || null, h.ThankYouAction = c
                        } catch (i) {
                            console.error(i)
                        } finally {
                            this.sendPayload("AR - Thank you", h)
                        }
                    },
                    trackBedDetailsAdd: function(a) {
                        var b = {},
                            c = a.sleepers ? d.call(this, a.sleepers) : null,
                            f = a.sleepers ? e.call(this, a.sleepers) : null;
                        null == c && this.loggedInUser && this.loggedInUser.email && this.loggedInUser.isAccountOwner && (c = this.loggedInUser.email), null == f && this.loggedInUser && this.loggedInUser.firstName && this.loggedInUser.isAccountOwner && (f = this.loggedInUser.firstName);
                        try {
                            b.AO_EmailAddress = c, b["AO_First Name"] = f, b["Order Number"] = a.bed.reference || null, b.V_BedModel = a.bed.model || null, b.V_BedName = a.bed.name || null, b.V_Network = a.networkModel ? a.networkModel.wifiName : null, b.V_TimeZone = a.timeZone || null, b.V_ZipCode = a.zipCode || null, b.Timezone = a.timeZone || null, b.Zipcode = a.zipCode || null
                        } catch (g) {
                            console.error(g)
                        } finally {
                            this.sendPayload("AR - Timezone", b)
                        }
                    },
                    trackBedSideSetup: function(a, b) {
                        var c = {},
                            f = a.sleepers ? d.call(this, a.sleepers) : null,
                            g = a.sleepers ? e.call(this, a.sleepers) : null,
                            b = b ? "Left" : "Right";
                        null == f && this.loggedInUser && this.loggedInUser.email && this.loggedInUser.isAccountOwner && (f = this.loggedInUser.email), null == g && this.loggedInUser && this.loggedInUser.firstName && this.loggedInUser.isAccountOwner && (g = this.loggedInUser.firstName);
                        try {
                            c.AO_EmailAddress = f, c["AO_First Name"] = g, c["Order Number"] = a.bed.reference || null, c.V_BedModel = a.bed.model || null, c.V_BedName = a.bed.name || null, c.V_Network = a.networkModel ? a.networkModel.wifiName : null, c.V_TimeZone = a.timeZone || null, c.V_ZipCode = a.zipCode || null, c.V_Side = b, c.V_SideName = a.bed.sideName || null, c.Side = b, c.SideName = a.bed.sideName || null
                        } catch (h) {
                            console.error(h)
                        } finally {
                            this.sendPayload("AR - BedSide", c)
                        }
                    },
                    trackBedList: function(a) {
                        var b = {},
                            c = a.sleepers ? d.call(this, a.sleepers) : null,
                            f = a.sleepers ? e.call(this, a.sleepers) : null,
                            g = g ? "Left" : "Right";
                        null == c && this.loggedInUser && this.loggedInUser.email && this.loggedInUser.isAccountOwner && (c = this.loggedInUser.email), null == f && this.loggedInUser && this.loggedInUser.firstName && this.loggedInUser.isAccountOwner && (f = this.loggedInUser.firstName);
                        try {
                            b.AO_EmailAddress = c, b["AO_First Name"] = f, b["Order Number"] = a.bed.reference || null, b.V_BedModel = a.bed.model || null, b.V_BedName = a.bed.name || null, b.V_Network = a.networkModel ? a.networkModel.wifiName : null, b.V_TimeZone = a.timeZone || null, b.V_ZipCode = a.zipCode || null, b.V_Side = g, b.V_SideName = a.bed.name || null, b.SelectedBed = a.bed.bedId || null
                        } catch (h) {
                            console.error(h)
                        } finally {
                            this.sendPayload("AR - BedList", b)
                        }
                    },
                    trackBedInfo: function(a) {
                        var b = {},
                            c = a.sleepers ? d.call(this, a.sleepers) : null,
                            f = a.sleepers ? e.call(this, a.sleepers) : null,
                            g = g ? "Left" : "Right";
                        null == c && this.loggedInUser && this.loggedInUser.email && this.loggedInUser.isAccountOwner && (c = this.loggedInUser.email), null == f && this.loggedInUser && this.loggedInUser.firstName && this.loggedInUser.isAccountOwner && (f = this.loggedInUser.firstName);
                        try {
                            b.AO_EmailAddress = c, b["AO_First Name"] = f, b["Order Number"] = a.bed.reference || null, b.V_BedModel = a.bed.model || null, b.V_BedName = a.bed.name || null, b.V_Network = a.networkModel ? a.networkModel.wifiName : null, b.V_TimeZone = a.timeZone || null, b.V_ZipCode = a.zipCode || null, b.V_Side = g, b.V_SideName = a.bed.name || null, b.BedModel = a.bedModel || null, b.BedSize = a.bedSize || null, b.BedType = a.bedBase || null
                        } catch (h) {
                            console.error(h)
                        } finally {
                            this.sendPayload("AR - BedInfo", b)
                        }
                    },
                    trackBedDetailsWifiNetwork: function(a, b, c) {
                        var f = a.networkModel,
                            g = {};
                        try {
                            g.AO_EmailAddress = b ? d.call(this, b) : null, g["AO_First Name"] = b ? e.call(this, b) : null, g["Order Number"] = a.bed.reference || null, g["AR-WiFiActionTaken"] = c, "Save" == c && (g.V_NetworkName = a.networkModel.wifiName, g.V_Password = f && "" != f.wifiPassword ? "Yes" : "No", g.V_AdvancedOptions = f && f.type ? "Yes" : "No", g.V_NetworkSecurityType = f && f.typeString ? f.typeString.toUpperCase() : null)
                        } catch (h) {
                            console.error(h)
                        } finally {
                            this.sendPayload("AR - WiFi", g)
                        }
                    },
                    trackAccountRegistrationAddSleeperIncomplete: function(a, b, c, f) {
                        var g = {};
                        try {
                            var h = b ? d.call(this, b) : null;
                            if (g.AO_EmailAddress = h, g["AO_First Name"] = b ? e.call(this, b) : null, g["Order Number"] = a.bed ? a.bed.reference : null, g.V_BedModel = a.bed ? a.bed.model : null, g.V_BedName = a.bed ? a.bed.name : null, (null == g.V_BedModel || null == g.V_BedName) && a.bedName && a.beds && a.beds.length > 0)
                                for (var i = 0; i < a.beds.length; i++) a.beds[i].name.toLowerCase() == a.bedName.toLowerCase() && (g["Order Number"] = a.beds[i].name || null, g.V_BedModel = a.beds[i].reference || null, g.V_BedName = a.beds[i].name || null);
                            if (2 == c.length)
                                for (var i = 0; i < c.length; i++) g["V_BedSide_" + c[i].side] = c[i].side, g["V_SleepGoal_" + c[i].side] = c[i].sleepGoal || null, g["V_FirstName_" + c[i].side] = c[i].firstName || null, g["V_BirthYear_" + c[i].side] = c[i].birthYear || null, g["V_Sex_" + c[i].side] = c[i].isMale || null, g["V_Height_" + c[i].side] = c[i].height || null, g["V_Weight_" + c[i].side] = c[i].weight || null, g["V_UseAOInfoLogin_" + c[i].side] = c[i].hasLoginUseChecked ? "Yes" : "No", g["V_EmailAddress_" + c[i].side] = (c[i].hasLoginUseChecked ? h : null) || c[i].email || null;
                            1 == c.length && (g.V_BedSide = c[0].side || null, g.V_SleepGoal = c[0].sleepGoal || null, g.V_FirstName = c[0].firstName || null, g.V_BirthYear = c[0].birthYear || null, g.V_Sex = c[0].isMale || null, g.V_Height = c[0].height || null, g.V_Weight = c[0].weight || null, g.V_UseAOInfoLogin = c[0].hasLoginUseChecked ? "Yes" : "No", g.V_EmailAddress = (c[0].hasLoginUseChecked ? h : null) || c[0].email || null), g.ActionTaken = f
                        } catch (j) {
                            console.error(j)
                        } finally {
                            this.sendPayload("AR - RegistrationSleeperIncomplete", g)
                        }
                    },
                    trackAccountRegistrationDone: function(a, b, c) {
                        var f = d.call(this, b) || null,
                            g = e.call(this, b) || null,
                            h = {};
                        try {
                            if (h.AO_EmailAddress = f, h["AO_First Name"] = g, h["Order Number"] = (a ? a.orderId : null) || (a.bed ? a.bed.reference : null) || null, h.V_BedModel = (a ? a.model : null) || (a.bed ? a.bed.model : null) || null, h.V_BedName = (a ? a.name : null) || (a.bed ? a.bed.name : null) || null, null == h.V_BedModel || null == h.V_BedName && a.bedName && a.beds && a.beds.length > 0)
                                for (var i = 0; i < a.beds.length; i++) a.beds[i].name.toLowerCase() == a.bedName.toLowerCase() && (h["Order Number"] = a.beds[i].name || null, h.V_BedModel = a.beds[i].reference || null, h.V_BedName = a.beds[i].name || null);
                            if (2 == c.length)
                                for (var i = 0; i < c.length; i++) h["V_BedSide_" + c[i].side] = c[i].side, h["V_SleepGoal_" + c[i].side] = c[i].sleepGoal || null, h["V_FirstName_" + c[i].side] = c[i].firstName || null, h["V_BirthYear_" + c[i].side] = c[i].birthYear || null, h["V_Sex_" + c[i].side] = c[i].isMale || null, h["V_Height_" + c[i].side] = c[i].height || null, h["V_Weight_" + c[i].side] = c[i].weight || null, h["V_UseAOInfoLogin_" + c[i].side] = c[i].hasLoginUseChecked ? "Yes" : "No", h["V_EmailAddress_" + c[i].side] = (c[i].hasLoginUseChecked ? f : null) || c[i].email || null;
                            1 == c.length && (h.V_BedSide = c[0].side || null, h.V_SleepGoal = c[0].sleepGoal || null, h.V_FirstName = c[0].firstName || null, h.V_BirthYear = c[0].birthYear || null, h.V_Sex = c[0].isMale || null, h.V_Height = c[0].height || null, h.V_Weight = c[0].weight || null, h.V_UseAOInfoLogin = c[0].hasLoginUseChecked ? "Yes" : "No", h.V_EmailAddress = (c[0].hasLoginUseChecked ? f : null) || c[0].email || null), h.ActionTaken = "Done"
                        } catch (j) {
                            console.error(j)
                        } finally {
                            this.sendPayload("AR - RegistrationSleeperDone", h)
                        }
                    },
                    trackSaveSleeper: function(a, b, c) {
                        var f = d.call(this, b) || null,
                            g = e.call(this, b) || null,
                            h = {};
                        try {
                            if (h.AO_EmailAddress = f, h["AO_First Name"] = g, h["Order Number"] = (a ? a.orderId : null) || (a.bed ? a.bed.reference : null) || null, h.V_BedModel = (a ? a.model : null) || (a.bed ? a.bed.model : null) || null, h.V_BedName = (a ? a.name : null) || (a.bed ? a.bed.name : null) || null, null == h.V_BedModel || null == h.V_BedName && a.bedName && a.beds && a.beds.length > 0)
                                for (var i = 0; i < a.beds.length; i++) a.beds[i].name.toLowerCase() == a.bedName.toLowerCase() && (h["Order Number"] = a.beds[i].name || null, h.V_BedModel = a.beds[i].reference || null, h.V_BedName = a.beds[i].name || null);
                            h.V_BedSide = c.side || null, h.V_SleepGoal = c.sleepGoal || null, h.V_FirstName = c.firstName || null, h.V_BirthYear = c.birthYear || null, h.V_Sex = c.isMale || null, h.V_Height = c.height || null, h.V_Weight = c.weight || null, h.V_UseAOInfoLogin = c.hasLoginUseChecked ? "Yes" : "No", h.V_EmailAddress = (c.hasLoginUseChecked ? f : null) || c.email || null, h.SleepGoal = c.sleepGoal || null, h.FirstName = c.firstName || null, h.BirthYear = c.birthYear || null, h.BirthMonth = c.birthMonth || null, h.Gender = c.isMale || null, h.Height = c.height || null, h.Weight = c.weight || null
                        } catch (j) {
                            console.error(j)
                        } finally {
                            this.sendPayload("AR - SleeperInfo", h)
                        }
                    },
                    trackReuseLoginAction: function(a, b, c, f) {
                        var g = d.call(this, b) || null,
                            h = e.call(this, b) || null,
                            i = {};
                        try {
                            if (i.AO_EmailAddress = g, i["AO_First Name"] = h, i["Order Number"] = (a ? a.orderId : null) || (a.bed ? a.bed.reference : null) || null, i.V_BedModel = (a ? a.model : null) || (a.bed ? a.bed.model : null) || null, i.V_BedName = (a ? a.name : null) || (a.bed ? a.bed.name : null) || null, i.ReuseLoginAction = f, null == i.V_BedModel || null == i.V_BedName && a.bedName && a.beds && a.beds.length > 0)
                                for (var j = 0; j < a.beds.length; j++) a.beds[j].name.toLowerCase() == a.bedName.toLowerCase() && (i["Order Number"] = a.beds[j].name || null, i.V_BedModel = a.beds[j].reference || null, i.V_BedName = a.beds[j].name || null);
                            i.V_BedSide = c.side || null, i.V_SleepGoal = c.sleepGoal || null, i.V_FirstName = c.firstName || null, i.V_BirthYear = c.birthYear || null, i.V_Sex = c.isMale || null, i.V_Height = c.height || null, i.V_Weight = c.weight || null, i.V_UseAOInfoLogin = c.hasLoginUseChecked ? "Yes" : "No", i.V_EmailAddress = (c.hasLoginUseChecked ? g : null) || c.email || null, i.ActionTaken = "Done"
                        } catch (k) {
                            console.error(k)
                        } finally {
                            this.sendPayload("AR - ReuseLogin", i)
                        }
                    },
                    trackCreateAccount: function(a, b, c) {
                        var f = d.call(this, b) || null,
                            g = e.call(this, b) || null,
                            h = {};
                        try {
                            if (h.AO_EmailAddress = f, h["AO_First Name"] = g, h["Order Number"] = (a ? a.orderId : null) || (a.bed ? a.bed.reference : null) || null, h.V_BedModel = (a ? a.model : null) || (a.bed ? a.bed.model : null) || null, h.V_BedName = (a ? a.name : null) || (a.bed ? a.bed.name : null) || null, null == h.V_BedModel || null == h.V_BedName && a.bedName && a.beds && a.beds.length > 0)
                                for (var i = 0; i < a.beds.length; i++) a.beds[i].name.toLowerCase() == a.bedName.toLowerCase() && (h["Order Number"] = a.beds[i].name || null, h.V_BedModel = a.beds[i].reference || null, h.V_BedName = a.beds[i].name || null);
                            h.V_BedSide = c.side || null, h.V_SleepGoal = c.sleepGoal || null, h.V_FirstName = c.firstName || null, h.V_BirthYear = c.birthYear || null, h.V_Sex = c.isMale || null, h.V_Height = c.height || null, h.V_Weight = c.weight || null, h.V_UseAOInfoLogin = c.hasLoginUseChecked ? "Yes" : "No", h.V_EmailAddress = (c.hasLoginUseChecked ? f : null) || c.email || null, h.ActionTaken = "Done", h.Email = c.email || null
                        } catch (j) {
                            console.error(j)
                        } finally {
                            this.sendPayload("AR - CreateAccount", h)
                        }
                    },
                    setCurrentBedPairingId: function(a) {
                        this.bedPairingId = a.replaceAll(":", ""), this.bedPairingId = this.bedPairingId.toUpperCase()
                    },
                    clearBedPairingId: function() {
                        this.bedPairingId = null
                    },
                    setBedPairingAccessMethod: function(a) {
                        this.bedPairingAccessMethod = a
                    },
                    trackBedPairing: function(a, b, c) {
                        if (!this.isInRemoteStandAlone) {
                            var d = (a.isK1 ? "K1" : null) || (a.isK2 ? "K2" : null) || (a.isAdult ? "Adult" : null),
                                e = {};
                            try {
                                e.BedPairingAccessMethod = this.bedPairingAccessMethod || null, e.V_PumpID = this.bedPairingId || null, e.V_BedName = a.name || null, e.BedPairingAction = b, e.PumpType = d, e.LightBlinkingAction = c ? "Yes" : "No"
                            } catch (f) {
                                console.error(f)
                            } finally {
                                this.sendPayload("BedPairing", e)
                            }
                        }
                    },
                    trackPairingTrouble: function(a, b, c) {
                        var d = {};
                        try {
                            d.TroubleIssue = b, d.V_PumpID = this.bedPairingId || null, d.V_BedName = a.name || null, d["V_Bed Model"] = a.model || null, d["V_Bed Size"] = a.size || null, d["V_Foundation Type"] = a.foundationType || null, d.ManualMacAddressEntered = c ? c : null
                        } catch (e) {
                            console.error(e)
                        } finally {
                            this.sendPayload("PairingTrouble", d)
                        }
                    },
                    trackBedPairingScanning: function(a) {
                        if (!this.isInRemoteStandAlone) {
                            var b = {};
                            try {
                                b.TimeEvent = a + ("1" == a ? " second" : " seconds")
                            } catch (c) {
                                console.error(c)
                            } finally {
                                this.sendPayload("BedPairingScanning", b)
                            }
                        }
                    },
                    trackDualAirEngagement: function(a, b) {
                        var c = {};
                        try {
                            c.TimeEvent = b + ("1" == b ? " second" : " seconds"), c.V_PumpID = this.bedPairingId || null, c.V_BedName = a.name || null, c["V_Bed Model"] = a.model || null, c["V_Bed Size"] = a.size || null, c["V_Foundation Type"] = a.foundationType || null
                        } catch (d) {
                            console.error(d)
                        } finally {
                            this.sendPayload("BedPairing DualAir Engagement", c)
                        }
                    },
                    trackOutletSetup: function(a, b, c, d, e) {
                        var f = {};
                        try {
                            f.TimeEvent = e + ("1" == e ? " second" : " seconds"), f.V_PumpID = this.bedPairingId || null, f.V_BedName = a.name || null, f["V_Bed Model"] = a.model || null, f["V_Bed Size"] = a.size || null, f["V_Foundation Type"] = a.foundationType || null, f.OutletSetupSuccess = b ? "Yes" : "No", f.OutletName = d, f.BoundOutlet = c ? "Yes" : "No"
                        } catch (g) {
                            console.error(g)
                        } finally {
                            this.sendPayload("OutletSetup", f)
                        }
                    },
                    trackOutletScan: function(a, b) {
                        var c = {};
                        try {
                            c.TimeEvent = b + ("1" == b ? " second" : " seconds"), c.V_PumpID = this.bedPairingId || null, c.V_BedName = a.name || null, c["V_Bed Model"] = a.model || null, c["V_Bed Size"] = a.size || null, c["V_Foundation Type"] = a.foundationType || null
                        } catch (d) {
                            console.error(d)
                        } finally {
                            this.sendPayload("OutletScan", c)
                        }
                    },
                    trackHeadTiltSetup: function(a, b, c) {
                        var d = {};
                        try {
                            d.TimeEvent = c + ("1" == c ? " second" : " seconds"), d.V_PumpID = this.bedPairingId || null, d.V_BedName = a.name || null, d["V_Bed Model"] = a.model || null, d["V_Bed Size"] = a.size || null, d["V_Foundation Type"] = a.foundationType || null, d.HeadTiltSetupSuccess = b ? "Yes" : "No"
                        } catch (e) {
                            console.error(e)
                        } finally {
                            this.sendPayload("HeadTiltSetup", d)
                        }
                    },
                    trackBedBaseline: function(a, b, c) {
                        var d = {};
                        try {
                            d.TimeEvent = c + ("1" == c ? " second" : " seconds"), d.V_PumpID = this.bedPairingId || null, d.V_BedName = a.name || null, d["V_Bed Model"] = a.model || null, d["V_Bed Size"] = a.size || null, d["V_Foundation Type"] = a.foundationType || null, d.BaselineSuccess = b ? "Yes" : "No"
                        } catch (e) {
                            console.error(e)
                        } finally {
                            this.sendPayload("BedBaseline", d)
                        }
                    },
                    setPreviousWiFiNetwork: function(a) {
                        this.savedWiFiNetwork = {}, this.savedWiFiNetwork.name = a.ssid, this.savedWiFiNetwork.password = a.password ? !0 : !1, this.savedWiFiNetwork.protocol = -1 != a.protocol ? a.protocol : null
                    },
                    trackWiFiSetup: function(a, b, c, d, e) {
                        var f = {};
                        try {
                            f.TimeEvent = e + ("1" == e ? " second" : " seconds"), f.V_NetworkName = a || this.savedWiFiNetwork.name || null, f.V_Password = b || this.savedWiFiNetwork.password ? "Yes" : "No", f.V_AdvancedOptions = c || this.savedWiFiNetwork.protocol ? "Yes" : "No", f.V_NetworkSecurityType = c || this.savedWiFiNetwork.protocol || null, f.NetworkSetupSuccess = d ? "Yes" : "No"
                        } catch (g) {
                            console.error(g)
                        } finally {
                            this.sendPayload("WiFi Network Setup", f)
                        }
                    },
                    trackEditSleep: function(a, b, c, d, e, f, g) {
                        var h = {};
                        try {
                            h.V_SleeperID = a || null, h.V_SleeperName = b || null, h.Successful = c || null, h.OriginalStartTime = d || null, h.OriginalEndTime = e || null, h.EditedStartTime = f || null, h.EditedEndTime = g || null
                        } catch (i) {
                            console.error(i)
                        } finally {
                            this.sendPayload("Edit Sleep", h)
                        }
                    },
                    sendPayload: function(a, b) {
                        this.isInitialized ? (this.loggedInUser && !j.isEmptyObject(this.loggedInUser) && (b.LI_SleeperID = this.loggedInUser.sleeperId || null, b.LI_CustomerNumber = this.loggedInUser.accountId || null, b["LI_Email Address"] = this.loggedInUser.email || null, b["LI_First Name"] = this.loggedInUser.firstName || null, b["LI_Last Name"] = null, b.LI_Birthyear = this.loggedInUser.birthYear || null, b.LI_Birthmonth = this.loggedInUser.birthMonth || null, b.LI_Gender = "isMale" in this.loggedInUser ? this.loggedInUser.isMale ? "Male" : "Female" : null, b.LI_Zipcode = this.loggedInUser.zipCode || null, b.LI_Height = this.loggedInUser.height || null, b.LI_Weight = this.loggedInUser.weight || null, b.LI_TimeZone = this.loggedInUser.timezone || null, b["LI_Sleeper Type"] = this.loggedInUser.isChild ? "Child" : "Adult", b["LI_Account Owner"] = this.loggedInUser.isAccountOwner ? "Yes" : "No", b.LI_Sleeper = null, b["LI_SleepIQ Last Night"] = this.loggedInUser.sleepIQLastNight || null, b.LI_BedModel = "bedModel" in this.loggedInUser ? this.loggedInUser.bedModel.model : null), "production" !== window.env && (b.LI_ApplicationURL = this.applicationURL), b["App Version"] = window.appVersion, this.debug ? console.log(a, b) : !this.debug && mixpanel && "function" == typeof mixpanel.track && mixpanel.track(a, b)) : setTimeout(function() {
                            this.sendPayload(a, b)
                        }.bind(this), 5e3)
                    }
                });
            return k
        }), define("app/models/FamilyModel", ["require", "lavaca/mvc/Collection", "./UserModel", "app/models/StateModel", "app/models/AuthModel", "app/service/AccountService", "app/service/SleepDataService", "$", "app/utils/MixPanelManager"], function(a) {
            function b(a) {
                return a.sort(function(a, b) {
                    return a.isChild || b.isChild ? a.isChild ? b.isChild ? 0 : 1 : -1 : 0
                }), a && a[0] && (a[0].selected = !0), a[this.getLoggedInUserIndex(a)].isLoggedIn = !0, a
            }

            function c(a) {
                try {
                    for (var b in a.sleepers) this.each(function(c, d) {
                        a.sleepers[b].sleeperId === d.get("sleeperId") && (a.sleepers[b].name = d.get("firstName"), a.sleepers[b].isChild = d.get("isChild"), a.sleepers[b].bedId = d.get("bedId"))
                    });
                    a.sleepers.sort(function(a, b) {
                        return a.isChild || b.isChild ? a.isChild ? b.isChild ? 0 : 1 : -1 : 0
                    });
                    for (var c in a.days) {
                        for (var d in a.days[c].sleepers) this.each(function(b, e) {
                            a.days[c].sleepers[d].sleeperId === e.get("sleeperId") && (a.days[c].sleepers[d].name = e.get("firstName"), a.days[c].sleepers[d].isChild = e.get("isChild"), a.days[c].sleepers[d].bedId = e.get("bedId"))
                        });
                        a.days[c].sleepers.sort(function(a, b) {
                            return a.isChild || b.isChild ? a.isChild ? b.isChild ? 0 : 1 : -1 : 0
                        })
                    }
                } catch (e) {
                    return
                }
                return a
            }

            function d() {
                if (this.models) {
                    var a = [];
                    return this.each(function(b, c) {
                        c && "0" !== c.get("bedId") && "undefined" != typeof c.get("bedId") && a.push(c)
                    }), a
                }
                return []
            }
            var e = a("lavaca/mvc/Collection"),
                f = a("./UserModel"),
                g = a("app/models/StateModel"),
                h = a("app/models/AuthModel"),
                i = a("app/service/AccountService"),
                j = a("app/service/SleepDataService"),
                k = a("$"),
                l = a("app/utils/MixPanelManager"),
                m = e.extend(function() {
                    e.apply(this, arguments), this.get("selectedIndex") || this.set("selectedIndex", 0), g.on("logout", this.clearAll.bind(this))
                }, {
                    recordId: "users",
                    TModel: f,
                    isFetching: !1,
                    fetchPromise: k.Deferred(),
                    getFamily: function() {
                        return this.models.slice(0)
                    },
                    fetch: function(a) {
                        return this.isFetching || (this.fetchPromise = k.Deferred(), this.isFetching = !0, i.getSleepers().then(function(c) {
                            c && c.sleepers && (a ? this.clearModels() : this.clearAll(), this.add(b.call(this, c.sleepers)), a || this.setSelectedUser(0, !1, !0), k("#view-root").toggleClass("hide-bed-alert", !this.hasPermission()), this.trigger("reset"), l.prototype.setUser(c.sleepers)), this.isFetching = !1, this.fetchPromise.resolve()
                        }.bind(this), function(a) {
                            this.isFetching = !1, this.fetchPromise.reject(a)
                        }.bind(this))), this.fetchPromise
                    },
                    updateAccountOwnersBedId: function(a) {
                        a && this.each(function(b, c) {
                            c.get("isAccountOwner") && c.set("bedId", a)
                        })
                    },
                    hasPermission: function() {
                        if (g.get("demoMode")) return !0;
                        if (this.count()) {
                            var a = this.getFamily()[this.getLoggedInUserIndex()];
                            return a && !a.get("isChild")
                        }
                        return !1
                    },
                    eachSleeperOnBed: function(a, b) {
                        var c, e = d.call(this),
                            f = e && e.length - 1;
                        for (f; f >= 0 && (c = a.call(b || this, f, e[f]), c !== !1); f--);
                    },
                    getAccountOwnerIfNotOnBed: function() {
                        try {
                            var a = !1;
                            return this.models && this.models.length && this.each(function(b, c) {
                                (c.get("isAccountOwner") && "0" === c.get("bedId") || c.get("isAccountOwner") && !c.get("bedId")) && (a = c)
                            }), a ? a.toObject() : !1
                        } catch (b) {
                            return !1
                        }
                    },
                    getSleepers: function() {
                        return new Promise(function(a, b) {
                            return this.models.length ? a(this.models) : (this.fetch().then(function() {
                                return a(this.models)
                            }.bind(this), function() {
                                return b()
                            }), void 0)
                        }.bind(this))
                    },
                    getSleepersOnBedsWithoutFetch: function() {
                        return this.models.length ? d.call(this) : []
                    },
                    getSleepersOnBeds: function() {
                        return new Promise(function(a, b) {
                            return this.models.length ? a(d.call(this)) : (this.fetch().then(function() {
                                return a(d.call(this))
                            }.bind(this), function() {
                                return b()
                            }), void 0)
                        }.bind(this))
                    },
                    fetchSlices: function(a) {
                        return new Promise(function(b, c) {
                            return j.getSleepSlices(a).then(function(a) {
                                return b(a)
                            }.bind(this), function(a) {
                                return c(a)
                            }.bind(this))
                        }.bind(this))
                    },
                    fetchMonth: function(a, b) {
                        return b || (b = a, a = null), a ? j.getMonth(a, b) : this.fetchFamilySleepData(b)
                    },
                    fetchFamilySleepData: function(a, b) {
                        return new Promise(function(d, e) {
                            return j.getDataByMonth(a, b).then(function(a) {
                                return a && a.monthSleepData && this.set("tempMonthdata", c.call(this, a.monthSleepData)), d(this.get("tempMonthdata"))
                            }.bind(this), function(a) {
                                return e(a)
                            }.bind(this))
                        }.bind(this))
                    },
                    fetchGoals: function(a) {
                        return new Promise(function(b, c) {
                            return j.getGoals(a, !0).then(function(a) {
                                return b(a)
                            }.bind(this), function(a) {
                                return c(a)
                            }.bind(this))
                        }.bind(this))
                    },
                    checkBedPresence: function(a) {
                        return new Promise(function(b, c) {
                            return this.models && this.models.length ? i.getFamilyStatus().then(function(a) {
                                return a && a.beds ? b(a.beds) : c()
                            }, function(a) {
                                return console.log("Bed Tracking error", a), c(a)
                            }) : a ? c() : this.fetch().then(function() {
                                return this.checkBedPresence(!0).then(function(a) {
                                    return a ? b(a) : c()
                                }.bind(this), function(a) {
                                    return c(a)
                                })
                            }.bind(this), function() {
                                return this.checkBedPresence(!0).then(function(a) {
                                    return a ? b(a) : c()
                                }.bind(this), function(a) {
                                    return c(a)
                                })
                            }.bind(this))
                        }.bind(this))
                    },
                    getAccountOwnerSleeperId: function() {
                        var a = !1;
                        return this.each(function(b, c) {
                            c.get("isAccountOwner") && (a = c.get("sleeperId"))
                        }), a
                    },
                    updateBedId: function(a, b) {
                        this.each(function(c, d) {
                            d.get("sleeperId") === a && d.set("bedId", b)
                        })
                    },
                    checkIfOtherUsersAreOnBedSide: function(a, b, c) {
                        var d;
                        if (this.each(function(e, f) {
                                f.get("sleeperId") !== c && f.get("bedId") === b && f.get("side") === a && (d = f)
                            }), d) {
                            var e = 1 == a ? 0 : 1;
                            return console.warn("Putting " + d.get("firstName") + " on side " + e), new Promise(function(a, c) {
                                d.setUserOnBed(b, e).then(function() {
                                    a(!0)
                                }.bind(this), function(a) {
                                    c(a)
                                }.bind(this))
                            }.bind(this))
                        }
                        return Promise.resolve()
                    },
                    getLoggedInUserIndex: function(a) {
                        var b, c = 0;
                        if (h && h.get("userId"))
                            if (a)
                                for (b in a) a[b] && a[b].sleeperId === h.get("userId") && (c = parseInt(b, 10), a[b].isLoggedIn = !0);
                            else
                                for (b in this.models) this.itemAt(b) && this.itemAt(b).get("sleeperId") && this.itemAt(b).get("sleeperId") === h.get("userId") && (c = parseInt(b, 10), this.itemAt(b).set("isLoggedIn", !0));
                        return c
                    },
                    setSelectedUser: function(a, b, c) {
                        if (this.models && this.models.length) {
                            if ("number" == typeof a) return this.each(function(b, c) {
                                c.set("selected", b == a)
                            }.bind(this)), this.set("selectedIndex", a), c || g.trigger("selectedUserChange"), this.models[this.get("selectedIndex")];
                            if ("string" != typeof a) return;
                            try {
                                var d = this.getUserIndexFromId(a);
                                return this.set("selectedIndex", d), this.each(function(a, b) {
                                    b.set("selected", a == d)
                                }.bind(this)), c || g.trigger("selectedUserChange"), this.models[this.get("selectedIndex")]
                            } catch (e) {
                                return c || g.trigger("selectedUserChange"), this.set("selectedIndex", 0), this.models[this.get("selectedIndex")]
                            }
                        } else {
                            if (b) return;
                            this.fetch().then(function() {
                                this.setSelectedUser(a, !0)
                            }.bind(this), function(a) {
                                console.warn(a), window.customAlert.alert(a), g.trigger("offlineNotified")
                            }.bind(this))
                        }
                    },
                    getSelectedUser: function() {
                        return "undefined" != typeof this.get("selectedIndex") && this.models[this.get("selectedIndex")] && this.models[this.get("selectedIndex")].attributes ? JSON.parse(this.models[this.get("selectedIndex")].attributes.toJSON()) : this.models[this.get("selectedIndex")]
                    },
                    getUserIndexFromId: function(a) {
                        var b = 0;
                        if (a)
                            for (var c in this.models) this.itemAt(c) && this.itemAt(c).get("sleeperId") && this.itemAt(c).get("sleeperId") === a && (b = parseInt(c, 10));
                        return b
                    },
                    clearAll: function() {
                        this.clear()
                    }
                });
            return new m
        }), define("rdust", [], function() {
            var a, b, c = ["Msxml2.XMLHTTP", "Microsoft.XMLHTTP", "Msxml2.XMLHTTP.4.0"],
                d = function() {
                    throw new Error("Environment unsupported.")
                },
                e = {},
                f = "undefined" != typeof window && window.navigator && window.document || "undefined" != typeof importScripts,
                g = "undefined" != typeof process && process.versions && !!process.versions.node;
            return "undefined" != typeof process && process.versions && process.versions.node ? (a = require.nodeRequire("fs"), d = function(b, c) {
                c(a.readFileSync(b, "utf8"))
            }) : "undefined" != typeof window && window.navigator && window.document || "undefined" != typeof importScripts ? (b = function() {
                var a, b, d;
                if ("undefined" != typeof XMLHttpRequest) return new XMLHttpRequest;
                for (b = 0; 3 > b; b++) {
                    d = c[b];
                    try {
                        a = new ActiveXObject(d)
                    } catch (e) {}
                    if (a) {
                        c = [d];
                        break
                    }
                }
                if (!a) throw new Error("getXhr(): XMLHttpRequest not available");
                return a
            }, d = function(a, c) {
                var d = b();
                d.open("GET", a, !0), d.onreadystatechange = function() {
                    4 === d.readyState && c(d.responseText)
                }, d.send(null)
            }) : "undefined" != typeof Packages && (d = function(a, b) {
                var c, d, e = "utf-8",
                    f = new java.io.File(a),
                    g = java.lang.System.getProperty("line.separator"),
                    h = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(f), e)),
                    i = "";
                try {
                    for (c = new java.lang.StringBuffer, d = h.readLine(), d && d.length() && 65279 === d.charAt(0) && (d = d.substring(1)), c.append(d); null !== (d = h.readLine());) c.append(g), c.append(d);
                    i = String(c.toString())
                } finally {
                    h.close()
                }
                b(i)
            }), {
                write: function(a, b, c) {
                    if (e.hasOwnProperty(b)) {
                        var d = e[b];
                        c.asModule(a + "!" + b, d)
                    }
                },
                load: function(a, b, c, d) {
                    var e = this;
                    f ? require(["dust"], function(f) {
                        e.process(f, a, b, c, d)
                    }) : g && e.process(require.nodeRequire("dustjs-linkedin"), a, b, c, d)
                },
                process: function(a, b, c, f, g) {
                    var h = c.toUrl(b + ".html");
                    d(h, function(c) {
                        try {
                            c = "define(['dust'],function(dust){" + a.compile(c, b) + " return {render: function(context, callback) {return dust.render('" + b + "', context, callback)}}})"
                        } catch (d) {
                            throw d.message = "In " + h + ", " + d.message, d
                        }
                        g.isBuild && (e[b] = c), g.isBuild || (c += "\r\n//@ sourceURL=" + h), f.fromText("rdust!" + b, c)
                    })
                }
            }
        }), define("rdust!templates/controlviews/user-switch", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="desktop-cover"><div class="popover users-panel"><div class="grouped"><div class="ios-status-bar"></div><div class="dashboard-wrap"><div class="close siqfont">&#xd7;</div></div><div class="overflow-scroll menu-outer"><ul class="overflow-scroll-inner section menu-inner"><div class="account-owner">').exists(b.get("canViewOthers"), b, {
                        block: c
                    }, null).write('</div><div class="users">').exists(b.get("canViewOthers"), b, {
                        block: i
                    }, null).exists(b.get("items"), b, {
                        block: j
                    }, null).write('</div><div class="action"><li class="item support" data-href="support"><h1 class="name"><i class="siqfont icon support">&#x20dd;</i>Support</h1></li><li class="item logout" data-href="logout"><h1 class="name"><i class="siqfont icon">&#x2794;</i>Log Out</h1></li></div></ul></div></div></div><div class="blocker"></div></div>')
                }

                function c(a, b) {
                    return a.section(b.get("accountOwner"), b, {
                        block: d
                    }, null)
                }

                function d(a, b) {
                    return a.write('<li class="item ').exists(b.get("isLoggedIn"), b, {
                        block: e
                    }, null).write('" data-sections="2" data-user="').reference(b.get("firstName"), b, "h").write('" data-index="').reference(b.get("$idx"), b, "h").write('" data-type="').exists(b.get("isChild"), b, {
                        "else": f,
                        block: g
                    }, null).write('" data-id="').reference(b.get("sleeperId"), b, "h").write('" data-href="user/').reference(b.get("sleeperId"), b, "h").write('/settings"><h1 class="name">Account owner: ').reference(b.get("firstName"), b, "h").write("</h1>").exists(b.get("isLoggedIn"), b, {
                        block: h
                    }, null).write('<div class="sm-section settings siqfont" data-href="user/').reference(b.get("sleeperId"), b, "h").write('/settings">&#x2699;</div></li>')
                }

                function e(a) {
                    return a.write("logged-in")
                }

                function f(a) {
                    return a.write("parent")
                }

                function g(a) {
                    return a.write("child")
                }

                function h(a) {
                    return a.write('<h2 class="status">Logged In</h2>')
                }

                function i(a) {
                    return a.write('<li class="item link dashboard" data-href="dashboard"><h1 class="name">Family Sleep</h1></li>')
                }

                function j(a, b) {
                    return a.section(b.get("items"), b, {
                        block: k
                    }, null)
                }

                function k(a, b) {
                    return a.exists(b.get("canViewOthers"), b, {
                        "else": l,
                        block: q
                    }, null)
                }

                function l(a, b) {
                    return a.exists(b.get("isLoggedIn"), b, {
                        block: m
                    }, null)
                }

                function m(a, b) {
                    return a.write('<li class="item user ').exists(b.get("selected"), b, {
                        block: n
                    }, null).write(' logged-in" data-sections="2" data-user="').reference(b.get("firstName"), b, "h").write('" data-index="').reference(b.get("$idx"), b, "h").write('" data-type="').exists(b.get("isChild"), b, {
                        "else": o,
                        block: p
                    }, null).write('" data-id="').reference(b.get("sleeperId"), b, "h").write('"><h1 class="name">').reference(b.get("firstName"), b, "h").write('</h1><h2 class="status">Logged In</h2><div class="sm-section settings siqfont" data-href="user/').reference(b.get("sleeperId"), b, "h").write('/settings">&#x2699;</div></li>')
                }

                function n(a) {
                    return a.write("selected")
                }

                function o(a) {
                    return a.write("parent")
                }

                function p(a) {
                    return a.write("child")
                }

                function q(a, b) {
                    return a.write('<li class="item user ').exists(b.get("selected"), b, {
                        block: r
                    }, null).write(" ").exists(b.get("isLoggedIn"), b, {
                        block: s
                    }, null).write('" data-sections="2" data-user="').reference(b.get("firstName"), b, "h").write('" data-index="').reference(b.get("$idx"), b, "h").write('" data-type="').exists(b.get("isChild"), b, {
                        "else": t,
                        block: u
                    }, null).write('" data-id="').reference(b.get("sleeperId"), b, "h").write('"><h1 class="name">').reference(b.get("firstName"), b, "h").write("</h1>").exists(b.get("isLoggedIn"), b, {
                        block: v
                    }, null).write('<div class="sm-section settings siqfont" data-href="user/').reference(b.get("sleeperId"), b, "h").write('/settings">&#x2699;</div></li>')
                }

                function r(a) {
                    return a.write("selected")
                }

                function s(a) {
                    return a.write("logged-in")
                }

                function t(a) {
                    return a.write("parent")
                }

                function u(a) {
                    return a.write("child")
                }

                function v(a) {
                    return a.write('<h2 class="status">Logged In</h2>')
                }
                return a.register("templates/controlviews/user-switch", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/controlviews/user-switch", b, c)
                }
            }
        }), define("app/models/viewmodels/UserSwitchViewModel", ["require", "lavaca/mvc/Collection", "app/models/FamilyModel"], function(a) {
            var b = a("lavaca/mvc/Collection"),
                c = a("app/models/FamilyModel"),
                d = b.extend(function() {
                    b.call(this, arguments)
                }, {
                    refetch: function() {
                        return new Promise(function(a) {
                            var b = c.getFamily();
                            b ? c.getSleepersOnBeds().then(function(b) {
                                return this.addUsers(b), a()
                            }.bind(this), function() {
                                return a()
                            }.bind(this)) : c.fetch().then(function() {
                                c.getSleepersOnBeds().then(function(b) {
                                    return this.addUsers(b), a()
                                }.bind(this), function() {
                                    return a()
                                }.bind(this))
                            }.bind(this))
                        }.bind(this))
                    },
                    setSelectedUser: function(a) {
                        "undefined" != typeof a && c.setSelectedUser(a)
                    },
                    addUsers: function(a) {
                        this.clear();
                        for (var b in a) {
                            var c = a[b];
                            c.get("isAccountOwner") ? "0" !== c.get("bedId") && this.add(c) : this.add(c)
                        }
                    }
                });
            return d
        }), define("app/ui/views/controlviews/UserSwitchView", ["require", "lavaca/mvc/View", "lavaca/mvc/Model", "app/models/StateModel", "lavaca/mvc/Router", "app/models/FamilyModel", "rdust!templates/controlviews/user-switch", "app/models/viewmodels/UserSwitchViewModel", "$"], function(a) {
            function b(a) {
                this.el.hasClass("show") && (a && "function" == typeof a.preventDefault && a.preventDefault(), d.call(this))
            }

            function c() {
                this.el.hasClass("hidden") && this.render()
            }

            function d() {
                this.el.hasClass("show") && (this.el.removeClass("show"), setTimeout(function() {
                    this.el.addClass("hidden"), setTimeout(function() {
                        this.el.find(".popover").scrollTop(0), this.el.addClass("hide")
                    }.bind(this), 300)
                }.bind(this), 10))
            }

            function e() {
                this.el.removeClass("hide"), setTimeout(function() {
                    this.el.addClass("show"), setTimeout(function() {
                        this.el.removeClass("hidden")
                    }.bind(this), 10)
                }.bind(this), 10)
            }

            function f(a) {
                a && a.gesture && "function" == typeof a.preventDefault && "function" == a.gesture.preventDefault && (a && a.preventDefault(), a.gesture && a.gesture.preventDefault());
                var b = a && a.currentTarget && a.currentTarget.dataset ? a.currentTarget.dataset.href : !1;
                if ((!b || !p(a.currentTarget).hasClass("selected")) && b) switch (b) {
                    case "logout":
                        g.call(this);
                        break;
                    case "dashboard":
                        l.exec("/" + b);
                        break;
                    default:
                        b.indexOf("settings") > 0 ? setTimeout(function() {
                            l.exec("/" + b)
                        }, 370) : l.exec("/" + b)
                }
            }

            function g() {
                k.trigger("clearShortPolling"), Modernizr.localstorage && localStorage.removeItem("registrationState"), h.call(this), k.trigger("logout"), i.call(this)
            }

            function h() {
                this.el.removeClass("show").addClass("hidden hide")
            }

            function i() {
                this.model.refetch().then(function() {
                    this.render()
                }.bind(this))
            }
            var j = a("lavaca/mvc/View"),
                k = (a("lavaca/mvc/Model"), a("app/models/StateModel")),
                l = a("lavaca/mvc/Router"),
                m = a("app/models/FamilyModel"),
                n = a("rdust!templates/controlviews/user-switch"),
                o = a("app/models/viewmodels/UserSwitchViewModel"),
                p = a("$"),
                q = j.extend(function() {
                    j.apply(this, arguments), this.mapEvent({
                        ".users-panel .users .user .name": {
                            tap: this.updateActiveUser
                        },
                        "[data-href]": {
                            tap: f
                        },
                        ".close": {
                            tap: d
                        },
                        self: {
                            tap: d
                        },
                        ext: {
                            stateModel: {
                                object: k,
                                events: {
                                    selectedUserChange: c.bind(this),
                                    backButton: b.bind(this)
                                }
                            },
                            family: {
                                object: m,
                                events: {
                                    reset: i.bind(this)
                                }
                            }
                        }
                    })
                }, {
                    className: "user-switch popover-view left hidden",
                    autoRender: !0,
                    refetch: function() {
                        this.model.refetch().then(function() {
                            this.render()
                        }.bind(this))
                    },
                    generateHtml: function(a) {
                        return a && a.items && m.count() && (a.canViewOthers = m.hasPermission() && a.items.length >= 1, a.accountOwner = m.getAccountOwnerIfNotOnBed()), new Promise(function(b) {
                            n.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        this.refetch(), j.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    toggleUsersPanel: function(a) {
                        a && a.stopPropagation(), this.el.hasClass("show") ? d.call(this) : e.call(this)
                    },
                    updateActiveUser: function(a) {
                        var b = p(document).find(".user-account-settings").hasClass("current");
                        if (!p(a.currentTarget).hasClass("selected") || b) {
                            this.el.find(".selected").removeClass("selected");
                            var c = a.currentTarget;
                            if (c) {
                                var d = p(c),
                                    e = d.parent()[0].dataset.id;
                                d.parent().addClass("selected"), this.toggleUsersPanel(a), this.model.setSelectedUser(e), l.exec("/user/" + e)
                            } else this.model.setSelectedUser()
                        }
                    },
                    update: function(a) {
                        return "string" == typeof a ? a.indexOf("/settings") >= 0 ? (this.el.find(".link.dashboard").removeClass("selected"), this.el.removeClass("indent"), void 0) : a.indexOf("/user") >= 0 ? (this.el.find(".link.dashboard").removeClass("selected"), this.model.set("user", !0), this.el.addClass("indent"), void 0) : (a.indexOf("/dashboard") >= 0 ? (this.el.removeClass("indent"), this.el.find(".selected").removeClass("selected"), this.el.find(".link.dashboard").addClass("selected"), this.model.set("user", !1)) : (this.model.set("user", !1), this.el.removeClass("indent"), this.el.find(".selected").removeClass("selected")), void 0) : void 0
                    }
                });
            return new q("#user-switch", new o)
        }), define("sccomm/CapabilitiesModel", ["require", "lavaca/mvc/Model"], function(a) {
            function b() {
                this.apply({
                    hasPump: !1,
                    hasFoundation: !1,
                    hasSleepExpert: !1,
                    hasTemperatureEngine: !1,
                    hasProxy: !1,
                    hasBridge: !1,
                    hasSplit: !1,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 0,
                    isK1: !1,
                    isK2: !1,
                    isAdult: !0,
                    hasOutletConfigured: !1,
                    isChamberTypeValid: !0
                }), this.set("isFF1", c.bind(this)), this.set("isFF2", d.bind(this)), this.set("isFF3", e.bind(this)), this.set("foundationType", f.bind(this))
            }

            function c() {
                return this.get("hasFoundation") && !this.get("hasFootControl") && !this.get("hasMassageAndLighting")
            }

            function d() {
                return this.get("hasFoundation") && this.get("hasFootControl") && !this.get("hasMassageAndLighting")
            }

            function e() {
                return this.get("hasFoundation") && this.get("hasFootControl") && this.get("hasMassageAndLighting")
            }

            function f() {
                return c.call(this) ? "FlexFit 1" : d.call(this) ? "FlexFit 2" : e.call(this) ? "FlexFit 3" : "Modular"
            }
            var g = a("lavaca/mvc/Model"),
                h = g.extend(function() {
                    g.apply(this, arguments), b.call(this)
                }, {
                    setAsOutlet: function() {
                        this.apply({
                            isOutlet: !0,
                            isRightChamber: !1,
                            isLeftChamber: !1,
                            isK1: !1,
                            isK2: !1,
                            isAdult: !1
                        })
                    },
                    apply: function(a) {
                        if ("object" == typeof a) {
                            var b = arguments;
                            for (var c in a)("isFF1" === c || "isFF2" === c || "isFF3" === c || "foundationType" === c) && delete a[c];
                            b[0] = a, g.prototype.apply.apply(this, b)
                        } else g.prototype.apply.apply(this, arguments)
                    },
                    updateModernizr: function() {
                        var a = this.toObject();
                        for (var b in a) Modernizr.setTest(b, a[b]);
                        $(window).trigger("capabilitiesUpdateModernizr")
                    },
                    setFoundationType: function(a) {
                        "FlexFit 1" == a ? (this.set("hasFoundation", !0), this.set("hasFootControl", !1), this.set("hasMassageAndLighting", !1)) : "FlexFit 2" == a ? (this.set("hasFoundation", !0), this.set("hasFootControl", !0), this.set("hasMassageAndLighting", !1)) : "FlexFit 3" == a ? (this.set("hasFoundation", !0), this.set("hasFootControl", !0), this.set("hasMassageAndLighting", !0)) : (this.set("hasFoundation", !1), this.set("hasFootControl", !1), this.set("hasMassageAndLighting", !1))
                    }
                });
            return h
        }), define("sccomm/ConnectedDeviceStateModel", ["require", "lavaca/mvc/Model", "./CapabilitiesModel"], function(a) {
            function b() {
                var a = {
                    lightStatus: {
                        1: !1,
                        2: !1,
                        3: !1,
                        4: !1
                    },
                    leftSide: {
                        foundationPreset: -1,
                        sleepNumber: 0,
                        sleepNumberMemory: 0
                    },
                    rightSide: {
                        foundationPreset: -1,
                        sleepNumber: 0,
                        sleepNumberMemory: 0
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 0,
                        sleepNumberMemory: 0
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                };
                this.set("capabilities", new f), this.set("address", ""), this.set("macAddress", ""), this.set("outletAddress", ""), this.set("outletMacAddress", ""), this.set("connectionType", "bluetooth"), this.set("remote", a), this.set("scanResults", []), this.set("shouldReconnectOnAppResume", !1), this.set("isDemo", !1 || "local" == window.env)
            }

            function c(a) {
                Modernizr && Modernizr.setTest && Modernizr.setTest("hasble", a), this.set("hasBle", a)
            }

            function d(a) {
                Modernizr && Modernizr.setTest && Modernizr.setTest("isbleon", a), this.set("isBleOn", a), 0 == a && this.trigger("connectionLost", {
                    BLEstatus: !1
                })
            }
            var e = a("lavaca/mvc/Model"),
                f = a("./CapabilitiesModel"),
                g = e.extend(function() {
                    e.apply(this, arguments), b.call(this), window.bluetoothle && (c.call(this, !0), d.call(this, !0))
                }, {
                    checkHasBLE: function() {
                        var a = $.Deferred();
                        return window.bluetoothle ? window.bluetoothle.isSupported().then(function(b) {
                            c.call(this, b), a.resolve(b)
                        }.bind(this), function() {
                            a.resolve(!1)
                        }.bind(this)) : (c.call(this, !1), a.resolve(!1)), a
                    },
                    checkStatusBLE: function() {
                        var a = $.Deferred();
                        return window.bluetoothle ? window.bluetoothle.getAdapterState().then(function(b) {
                            var c = b ? b.enabled : !1;
                            d.call(this, c), a.resolve(c)
                        }.bind(this), function() {
                            a.resolve(!1)
                        }.bind(this)) : (d.call(this, !1), a.resolve(!1)), a
                    },
                    updateStatusBLE: function(a) {
                        d.call(this, a)
                    },
                    reset: function() {
                        b.call(this)
                    }
                });
            return new g
        }), define("app/service/EdpService", ["require", "lavaca/util/Disposable", "app/env/Config", "app/utils/hash", "app/models/AuthModel", "$", "mout/string/interpolate", "lavaca/net/Connectivity", "mout/object/get", "app/models/StateModel", "mout/object/merge"], function(a) {
            function b(a) {
                return new Promise(function(b, c) {
                    return a ? (b(), void 0) : j.isAuthenticated === !0 || "true" === j.isAuthenticated ? (this.isAttemptingLogin = !1, b(), void 0) : (this.makeLoginRequest().then(function() {
                        this.loginPromise = k.Deferred(), b()
                    }.bind(this), function(a) {
                        this.loginPromise = k.Deferred(), c(a)
                    }.bind(this)), void 0)
                }.bind(this))
            }

            function c() {
                this.isAttemptingLogin || (j.isAuthenticated = !1, Modernizr.localstorage && (sessionStorage.isAuthenticated = !1))
            }

            function d(a) {
                return 0 === a.indexOf("login") || a.indexOf("&access_token") >= 0 || a.indexOf("?access_token") >= 0 || 0 === a.indexOf("order") || 0 === a.indexOf("token") || 0 === a.indexOf("license")
            }

            function e(a, b) {
                return b ? a.slice(0, a.indexOf("access_token") + 3) + j.get("tokenEDP") : a.indexOf("?") >= 0 ? a + "&access_token=" + j.get("tokenEDP") : a + "?access_token=" + j.get("tokenEDP")
            }

            function f(a, b, c, d, e) {
                var f, g = this.subscriptionKey;
                return a = a || {}, o({}, this.defaultAjaxOptions, {
                    url: c,
                    dataType: a.dataType || "json",
                    type: b,
                    data: d,
                    contentType: a.contentType || "application/json",
                    processData: "GET" === b,
                    dataFilter: function(a, b) {
                        return "" === a && "json" === b ? "null" : (f = i(a), a)
                    },
                    beforeSend: function(a) {
                        a.setRequestHeader("Ocp-Apim-Subscription-Key", g), a.setRequestHeader("X-App-Version", window.appVersion)
                    },
                    success: function(a, b) {
                        return "success" !== b ? Promise.reject(a) : e ? (setTimeout(function() {
                            return Promise.resolve(a, f)
                        }, e), void 0) : Promise.resolve(a, f)
                    },
                    error: function(a, b) {
                        var c = Array.prototype.slice.call(arguments, 0);
                        if ("timeout" === b) {
                            var d = "Pardon us. We are experiencing technical difficulties; please check back later.";
                            window.customAlert.alert(d, null, "Error")
                        }
                        return e ? (setTimeout(function() {
                            return Promise.reject(c)
                        }, e), void 0) : Promise.reject(c)
                    }.bind(this),
                    timeout: 3e4
                })
            }
            var g = a("lavaca/util/Disposable"),
                h = a("app/env/Config"),
                i = a("app/utils/hash"),
                j = a("app/models/AuthModel"),
                k = a("$"),
                l = a("mout/string/interpolate"),
                m = a("lavaca/net/Connectivity"),
                n = a("mout/object/get"),
                o = (a("app/models/StateModel"), a("mout/object/merge")),
                p = g.extend(function() {
                    g.apply(this), this._USEMOCK = !1, this.loginPromise = k.Deferred()
                }, {
                    isAttemptingLogin: !1,
                    apiURLKey: "api_url",
                    edpURLKey: "edp_url",
                    artificialDelayKey: "artificial_network_delay",
                    subscriptionKey: h.edp_subscription_key,
                    defaultAjaxOptions: {},
                    makeRequest: function(a, g, i, o) {
                        return new Promise(function(p, q) {
                            return b.call(this, o).then(function() {
                                d(a) ? (a.indexOf("&access_token") > -1 || a.indexOf("?access_token") > -1) && (a = e(a, !0)) : g && "POST" !== i && "PUT" !== i && "DELETE" !== i ? g.access_token = j.get("tokenEDP") : "POST" !== i && "PUT" !== i && "DELETE" !== i ? g = {
                                    access_token: j.get("tokenEDP")
                                } : a = e(a);
                                var b, r = h[this.artificialDelayKey],
                                    s = l(h[this.edpURLKey], [a], /\{([^}])\}/g);
                                if (this.overrideURL && (s = l(this.overrideURL, [a], /\{([^}])\}/g)), g = g || {}, i = i || "GET", b = "GET" === i ? g : JSON.stringify(g), m.isOffline()) {
                                    console.log("rejecting call - offline notified");
                                    var t = "You currently do not have internet connectivity. Please check your ";
                                    return t += Modernizr.desktop ? "internet settings." : "cellular network or internet settings.", q(t)
                                }
                                this.offlineNotified = !1;
                                var u = f.call(this, g, i, s, b, r),
                                    v = k.ajax(u);
                                v.error(function() {
                                    v.abort()
                                }), v.then(function(a) {
                                    return a && a.result && "ERROR" === a.result ? q(new Error("Pardon us. We are experiencing technical difficulties; please check back later.")) : p(a)
                                }.bind(this), function(b) {
                                    return b = b || new Error("Pardon us. We are experiencing technical difficulties; please check back later."), 401 !== n(b, "status") ? 500 === n(b, "status") || 503 === n(b, "status") ? (console.warn("Connection Error: ", b), q("Pardon us. We are experiencing technical difficulties; please check back later.")) : (console.warn("Connection Error: ", b), q(b)) : (c.call(this), j.get("accountKey") ? (this.makeLoginRequest().then(function() {
                                        console.warn("Had to relogin due to 401."), this.makeRequest(a, g, i, o, !0).then(function(a) {
                                            return this.loginPromise = k.Deferred(), a && a.result && "ERROR" === a.result ? q(new Error("Error in API Call")) : p(a)
                                        }.bind(this), function(a) {
                                            return q(a)
                                        }.bind(this))
                                    }.bind(this), function(a) {
                                        console.warn(a)
                                    }), void 0) : q(b))
                                }.bind(this))
                            }.bind(this), function(a) {
                                return q(a)
                            }.bind(this))
                        }.bind(this))
                    },
                    getURL: function(a) {
                        var b = l(h[this.edpURLKey], [a], /\{([^}])\}/g);
                        return b + "?subscription-key=" + this.subscriptionKey + "&access_token=" + j.get("tokenEDP")
                    },
                    makeLoginRequest: function(a) {
                        if (!a) {
                            if (!j.get("username")) return Promise.reject();
                            a = {
                                login: j.get("username"),
                                password: j.get("password")
                            }
                        }
                        if (!this.isAttemptingLogin) {
                            this.loginPromise = k.Deferred(), this.isAttemptingLogin = !0;
                            var b = l(h[this.edpURLKey], ["accesstoken"], /\{([^}])\}/g);
                            if (this.overrideURL && (b = l(this.overrideURL, ["accesstoken"], /\{([^}])\}/g)), m.isOffline()) {
                                this.isAttemptingLogin = !1, console.log("login fail - offline notified");
                                var c = "You currently do not have internet connectivity. Please check your ";
                                c += Modernizr.desktop ? "internet settings." : "cellular network or internet settings.", this.loginPromise.reject(c)
                            } else {
                                this.offlineNotified = !1;
                                var d = f.call(this, a, "POST", b, JSON.stringify(a)),
                                    e = k.ajax(d);
                                e.error(function() {
                                    e.abort()
                                }), e.then(function(b) {
                                    this.isAttemptingLogin = !1, b && b.result && "ERROR" === b.result ? this.loginPromise.reject(new Error("Error in API Call")) : (j.onUserEDPLogin(b, a.login, a.password), this.loginPromise.resolve(b))
                                }.bind(this), function(a) {
                                    this.isAttemptingLogin = !1, this.loginPromise.reject(a)
                                }.bind(this))
                            }
                        }
                        return this.loginPromise
                    },
                    getAPIKey: function() {
                        return this.overrideURL ? this.overrideURL : h[this.edpURLKey]
                    }
                });
            return new p
        }), define("app/service/EdpAccountService", ["require", "lavaca/util/Disposable", "app/service/EdpService", "app/models/AuthModel", "app/models/StateModel", "app/service/DemoData"], function(a) {
            var b = a("lavaca/util/Disposable"),
                c = a("app/service/EdpService"),
                d = a("app/models/AuthModel"),
                e = a("app/models/StateModel"),
                f = a("app/service/DemoData"),
                g = b.extend(function() {
                    b.apply(this, arguments), e.on("updateState", this.setRegistrationState)
                }, {
                    login: function(a) {
                        if ("demo" === a.login && "demo" === a.password) {
                            var b = {
                                key: "",
                                userId: ""
                            };
                            return e.set("demoMode", !0), Promise.resolve(b)
                        }
                        return new Promise(function(b, e) {
                            c.makeLoginRequest(a).then(function(f) {
                                return c.loginPromise = $.Deferred(), f && f.result && "ERROR" === f.result ? e(f) : (d.onUserEDPLogin(f, a.login, a.password), b(f))
                            }.bind(this), function(a) {
                                return c.loginPromise = $.Deferred(), e(a)
                            }.bind(this))
                        })
                    },
                    logout: function() {
                        return d.clearAll(), Modernizr.localstorage && (sessionStorage.hasSeenToast = !1, sessionStorage.isAuthenticated = !1), e.set("demoMode", !1), Promise.resolve()
                    },
                    getProviders: function() {
                        return e.get("demoMode") ? Promise.resolve(f.getProviders) : c.makeRequest("providers/", null, "GET")
                    },
                    getDevices: function() {
                        return e.get("demoMode") ? Promise.resolve(f.getProviders) : c.makeRequest("devices/", null, "GET")
                    },
                    getDeviceAssociations: function() {
                        return e.get("demoMode") ? Promise.resolve(f.getProviders) : c.makeRequest("devices/associations/", null, "GET")
                    },
                    createDeviceAssociation: function(a) {
                        return e.get("demoMode") ? Promise.resolve(f.getProviders) : c.makeRequest("devices/associations/", {
                            associations: [a]
                        }, "POST")
                    },
                    connect: function(a) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("providers/" + a + "/new", null, "GET")
                    },
                    disconnect: function(a) {
                        return e.get("demoMode") ? Promise.resolve() : c.makeRequest("providers/" + a, {
                            removeData: !0
                        }, "DELETE")
                    },
                    getConnectURL: function(a) {
                        return c.getURL("providers/" + a + "/new")
                    },
                    getSmartTips: function(a, b) {
                        var d = {};
                        d.gender = a.isMale ? "male" : "female";
                        var f = (new Date).getFullYear() - parseInt(a.birthYear);
                        switch (!0) {
                            case 10 >= f:
                                d.age = "0_10";
                                break;
                            case 20 >= f:
                                d.age = "11_20";
                                break;
                            case 30 >= f:
                                d.age = "21_30";
                                break;
                            case 40 >= f:
                                d.age = "31_40";
                                break;
                            case 50 >= f:
                                d.age = "41_50";
                                break;
                            case 60 >= f:
                                d.age = "51_60";
                                break;
                            case 70 >= f:
                                d.age = "61_70";
                                break;
                            case 80 >= f:
                                d.age = "71_80";
                                break;
                            case 90 >= f:
                                d.age = "81_90";
                                break;
                            case f > 90:
                                d.age = "91>"
                        }
                        return d.tracker = !1, d.count = b, e.get("demoMode") ? Promise.resolve() : c.makeRequest("tips/random", d, "GET")
                    },
                    getActivities: function(a, b, d) {
                        return e.get("demoMode") ? Promise.resolve(f.getActivities) : c.makeRequest("activities", {
                            sleeperId: a,
                            startDate: b,
                            endDate: d
                        }, "GET")
                    },
                    setOverrideURL: function(a, b) {
                        c.overrideURL = a, c.subscriptionKey = b
                    }
                });
            return new g
        }), define("app/models/AccountModel", ["require", "lavaca/mvc/Model", "app/models/StateModel", "app/models/AuthModel", "app/env/Config", "app/service/AccountService", "app/service/EdpAccountService", "app/utils/MixPanelManager", "lavaca/mvc/Router"], function(a) {
            function b(a) {
                return a && a.beds && a.beds.length > 0 && a.beds.forEach(function(b) {
                    try {
                        b.size = c(b.size), b.model = b.model.toLowerCase(), 0 === b.model.indexOf("i") && (b.vowel = !0)
                    } catch (d) {
                        return a
                    }
                }), a
            }

            function c(a) {
                return a = a.toLowerCase(), a.charAt(0).toUpperCase() + a.slice(1)
            }

            function d(a, b) {
                return a && a.beds && a.beds.length > 0 && b && b.beds && b.beds.length > 0 && a.beds.forEach(function(a) {
                    b.beds.forEach(function(b) {
                        a.bedId == b.bedId && (a.status = b)
                    })
                }), a
            }
            var e = a("lavaca/mvc/Model"),
                f = a("app/models/StateModel"),
                g = a("app/models/AuthModel"),
                h = a("app/env/Config"),
                i = a("app/service/AccountService"),
                j = a("app/service/EdpAccountService"),
                k = a("app/utils/MixPanelManager"),
                l = a("lavaca/mvc/Router"),
                m = e.extend(function(a) {
                    a ? this.clearStore() : a = this.getStore() || {}, e.call(this, a), this.get("overrideURL") ? (i.overrideURL = this.get("overrideURL"), i.setOverrideURL(this.get("overrideURL")), k.prototype.setApplicationURL(this.get("overrideURL"))) : k.prototype.setApplicationURL(h.api_url), f.on("logout", this.logout.bind(this)), this.on("change", this.setStore.bind(this)), this.init(), this.set("defaultURL", h.api_url)
                }, {
                    recordId: "SIQ:account",
                    defaultURL: "https://api.sleepiq.sleepnumber.com/rest/",
                    init: function() {
                        var a = this.getStore();
                        a || (this.set("loggedIn", !1), this.set("activeServer", this.defaultURL))
                    },
                    fetch: function() {
                        var a = Promise;
                        return i.getAccount().then(function(b) {
                            b.account && b.account.accountId ? (this.add(b.account), a.resolve()) : a.reject()
                        }.bind(this)).error(function() {
                            a.reject()
                        }), a
                    },
                    getBeds: function() {
                        return new Promise(function(a, c) {
                            var e = {};
                            i.getBeds().then(function(f) {
                                e = b(f), i.getFamilyBedsStatus().then(function(b) {
                                    return a(d(e, b))
                                }.bind(this), function(a) {
                                    return c(a)
                                }.bind(this))
                            }.bind(this), function(a) {
                                return c(a)
                            }.bind(this))
                        }.bind(this))
                    },
                    updateBed: function(a, b) {
                        return i.updateBed(a, b, g.get("accountKey"))
                    },
                    getPauseMode: function(a) {
                        return i.getPauseMode(a)
                    },
                    setPauseMode: function(a, b) {
                        return i.setPauseMode(a, b)
                    },
                    getBedModels: function() {
                        return i.getBedModels()
                    },
                    updateServiceLayer: function(a, b, c) {
                        this.set("overrideURL", a), i.setOverrideURL(a), j.setOverrideURL(b, c)
                    },
                    login: function(a, b) {
                        return new Promise(function(c, d) {
                            return i.login({
                                login: a,
                                password: b
                            }).then(function(d) {
                                return this.set("loggedIn", !0), f.trigger("loggedIn"), k.prototype.trackLoggedInUser(a, b, !0, !0), d && "undefined" != typeof d.registrationState && Modernizr.localstorage && localStorage.setItem("registrationState", d.registrationState), j.login({
                                    login: a,
                                    password: b
                                }).then(function() {
                                    f.trigger("loggedInEDP")
                                }, function(a) {
                                    console.warn("edp login fail", a)
                                }), c()
                            }.bind(this), function(c) {
                                if (k.prototype.trackLoggedInUser(a, b, !1, !0), "string" == typeof c) return d(c, !1);
                                if (409 === c.status) return d(c.status);
                                var e = 401 === c.status ? "The username and/or password are incorrect. Please check your credentials and try again." : "Pardon us. We are experiencing technical difficulties; please check back later.";
                                return 0 === c.status ? d() : (c && c.responseJSON && c.responseJSON.Error && "Email has not been validated for the user." === c.responseJSON.Error.Message && (e = "Your email has not been verified. Please check your email to activate your account."), d(e))
                            }.bind(this))
                        }.bind(this))
                    },
                    logout: function() {
                        var a = this.get("overrideURL");
                        return f.set("toggleView", "Chart View"), localStorage.removeItem("registrationState"), i.logout().then(function() {
                            k.prototype.trackLoggedOutUser().then(function() {
                                this.clearAll(), this.set("loggedIn", !1), f.trigger("clearShortPolling"), a ? (this.set("activeServer", a), this.set("overrideURL", a)) : this.set("activeServer", this.defaultURL), l.exec("/")
                            }.bind(this))
                        }.bind(this))
                    },
                    validateToken: function(a) {
                        return i.validateToken(a)
                    },
                    isLoggedIn: function() {
                        return !!this.get("loggedIn")
                    },
                    resetPassword: function(a) {
                        return new Promise(function(b, c) {
                            return a ? i.resetPassword({
                                login: a
                            }).then(function() {
                                return b()
                            }.bind(this), function(a) {
                                if (0 === a.status) return c();
                                if ("string" == typeof a) return c(a);
                                var b = 404 === a.status || 400 === a.status ? "The requested email address does not exist in our system. Please check your address and try again." : "Pardon us. We are experiencing technical difficulties; please check back later.";
                                return c(b)
                            }) : c("Please enter a valid email address.")
                        }.bind(this))
                    },
                    setStore: function() {
                        var a = this.toObject();
                        Modernizr.localstorage && localStorage.setItem(this.recordId, JSON.stringify(a))
                    },
                    clearStore: function() {
                        Modernizr.localstorage && localStorage.removeItem(this.recordId)
                    },
                    getStore: function() {
                        var a = null;
                        return Modernizr.localstorage && (a = localStorage.getItem(this.recordId)), a ? JSON.parse(a) : null
                    },
                    clearAll: function() {
                        this.clear(), this.clearStore()
                    }
                });
            return new m
        }), define("app/service/BedService", ["require", "app/service/Service", "app/models/StateModel", "lavaca/util/Disposable"], function(a) {
            var b = a("app/service/Service"),
                c = a("app/models/StateModel"),
                d = a("lavaca/util/Disposable"),
                e = d.extend(function() {
                    d.apply(this, arguments)
                }, {
                    getSuperStatus: function(a) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/superStatus")
                    },
                    getBeds: function() {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed")
                    },
                    updateBed: function(a, d) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a, {
                            name: d
                        }, "PUT")
                    },
                    baselineBed: function(a) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/calibrate", null, "PUT")
                    },
                    getBedStatus: function(a) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/status")
                    },
                    getChamberType: function(a) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/chamberTypes")
                    },
                    pumpSetForceIdle: function(a) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/pump/forceIdle", null, "PUT")
                    },
                    getFavoriteSleepNumber: function(a) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/sleepNumberFavorite")
                    },
                    setFavoriteSleepNumber: function(a, d, e) {
                        return e = parseInt(e), c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/sleepNumberFavorite", {
                            side: d,
                            sleepNumberFavorite: e
                        }, "PUT")
                    },
                    getNodeList: function(a) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/nodes")
                    },
                    getFoundationOutlets: function(a) {
                        var c = {};
                        return b.makeRequest("bed/" + a + "/foundation/outlet?outletId=1").then(function(d) {
                            return console.log(d), c["1"] = 0 == d.setting ? !1 : !0, b.makeRequest("bed/" + a + "/foundation/outlet?outletId=2")
                        }).then(function(d) {
                            return console.log(d), c["2"] = 0 == d.setting ? !1 : !0, b.makeRequest("bed/" + a + "/foundation/outlet?outletId=3")
                        }).then(function(d) {
                            return console.log(d), c["3"] = 0 == d.setting ? !1 : !0, b.makeRequest("bed/" + a + "/foundation/outlet?outletId=4")
                        }).then(function(a) {
                            return console.log(a), c["4"] = 0 == a.setting ? !1 : !0, c
                        })
                    },
                    setFoundationOutlet: function(a, d, e) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/foundation/outlet", {
                            outletId: parseInt(d),
                            setting: parseInt(e)
                        }, "PUT")
                    },
                    setFoundationPreset: function(a, d, e) {
                        return console.log(d + " " + a + " " + e), c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/foundation/preset", {
                            side: d,
                            preset: parseInt(e),
                            speed: 1
                        }, "PUT")
                    },
                    setFoundationMotionHalt: function(a, d, e, f, g) {
                        return c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/foundation/motion", {
                            side: d,
                            headMotion: e,
                            footMotion: f,
                            massageMotion: g
                        }, "PUT")
                    },
                    outletSetOutlet120: function(a, c, d) {
                        return console.log("OUTLET 120v" + c + "  " + d), b.makeRequest("bed/" + a + "/outlet/status", {
                            outletId: parseInt(c),
                            "12v": 2,
                            "120v": parseInt(d)
                        }, "PUT")
                    },
                    outletSetOutlet12: function(a, c, d) {
                        return console.log("OUTLET 12v" + c + "  " + d), b.makeRequest("bed/" + a + "/outlet/status", {
                            outletId: parseInt(c),
                            "12v": parseInt(d),
                            "120v": 2
                        }, "PUT")
                    },
                    getSmartOutletStatus: function(a) {
                        return console.log(a + " getSmartOutletStatus"), c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/outlet/status", null, "GET")
                    },
                    getSmartOutletName: function(a) {
                        return console.log(a + " getSmartOutletName"), c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/outlet/name?outletId=0", null, "GET")
                    },
                    getPumpStatus: function(a) {
                        return console.log(a + " getPumpStatus"), c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + a + "/pump/status", null, "GET")
                    },
                    setSleepNumber: function(a, d, e) {
                        return console.log(a + " " + d + " " + e), d = parseInt(d), c.get("demoMode") ? Promise.resolve() : b.makeRequest("bed/" + e + "/sleepNumber", {
                            side: a,
                            sleepNumber: d
                        }, "PUT")
                    },
                    getLiveDataUrl: function() {}
                });
            return new e
        }), define("sccomm/CommunicationHelpers", ["require"], function() {
            function a(a, b) {
                var c = "000000000" + a;
                return c.substr(c.length - b)
            }
            var b = {
                arrayBufferToRaw: function(a) {
                    for (var b = new DataView(a), c = b.byteLength, d = new Uint8Array(c), e = 0; c > e; e++) d[e] = b.getUint8(e);
                    return d
                },
                hexToBase64: function(a) {
                    return btoa(String.fromCharCode.apply(null, a.replace(/\r|\n/g, "").replace(/([\da-fA-F]{2}) ?/g, "0x$1 ").replace(/ +$/, "").split(" ")))
                },
                base64ToHex: function(a) {
                    for (var b = 0, c = atob(a.replace(/[ \r\n]+$/, "")), d = []; b < c.length; ++b) {
                        var e = c.charCodeAt(b).toString(16);
                        1 === e.length && (e = "0" + e), d[d.length] = e
                    }
                    return d.join("")
                },
                rawToHex: function(b) {
                    for (var c = "", d = 0; d < b.length; d++) c += a(b[d].toString(16), 2);
                    return c
                },
                hexToRaw: function(a) {
                    if ("string" == typeof a) {
                        a.length % 2 && (a = "0" + a);
                        var b = new Uint8Array(Math.floor(a.length / 2)),
                            c = 0;
                        return a.replace(/(..)/g, function(a) {
                            b[c++] = parseInt(a, 16)
                        }), b
                    }
                },
                stringToBytes: function(a) {
                    for (var b = new ArrayBuffer(2 * a.length), c = new Uint16Array(b), d = 0; d < a.length; d++) c[d] = a.charCodeAt(d);
                    return new Uint8Array(c)
                },
                bytesToString: function(a) {
                    return String.fromCharCode.apply(null, new Uint16Array(a))
                },
                fletcherChecksum: function(a) {
                    for (var b = 0, c = 0, d = 0; d < a.length; d++) b += a[d], c += b;
                    return c
                },
                fletcherChecksumHexToHex: function(a) {
                    var b = parseInt(this.fletcherChecksum(this.hexToRaw(a)), 10),
                        c = new Uint8Array(2);
                    return c[0] = b >> 8, c[1] = 255 & b, this.rawToHex(c)
                },
                makeCRCTable: function() {
                    for (var a, b = [], c = 0; 256 > c; c++) {
                        a = c;
                        for (var d = 0; 8 > d; d++) a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;
                        b[c] = a
                    }
                    return b
                },
                crc32: function(a) {
                    for (var b = this.crcTable || (this.crcTable = this.makeCRCTable()), c = -1, d = 0; d < a.length; d++) c = c >>> 8 ^ b[255 & (c ^ a.charCodeAt(d))];
                    return (-1 ^ c) >>> 0
                },
                reverseRaw: function(a) {
                    for (var b = new Uint8Array(a.length), c = 0, d = a.length - 1; d > -1; d--) b[c] = a[d], c++;
                    return b
                },
                advertisementBase64ContainsService: function(a, b) {
                    var c = this.base64ToHex(a),
                        d = this.hexToRaw(c),
                        e = this.reverseRaw(d),
                        f = this.rawToHex(e),
                        g = new RegExp("-", "g");
                    return b = b.replace(g, ""), f.indexOf(b) > -1
                },
                intToRaw: function(a) {
                    var b = new Uint8Array(2);
                    return b[0] = 0, b[1] = a, b
                },
                isHex: function(a) {
                    return /^[a-fA-F0-9]+$/.test(a)
                },
                isBinary: function(a) {
                    return /^[01]{1,64}$/.test(a)
                },
                isHexContainedInRaw: function(a, b) {
                    for (var c = 0; c < b.length; c++)
                        if (b[c] === a) return !0;
                    return !1
                },
                digitToBinary: function(b) {
                    var c = "0000";
                    return 0 > b || b > 9 ? c : (c = b.toString(2), a.call(this, c, 4))
                },
                isMacAddress: function(a) {
                    if ("string" == typeof a) {
                        var b = this.normalizeMacAddress(a);
                        return 12 === b.length && this.isHex(b) ? !0 : !1
                    }
                    return !1
                },
                isBetween: function(a, b, c) {
                    a = Number(a), b = Number(b), c = Number(c);
                    var d = Math.min.apply(Math, [b, c]),
                        e = Math.max.apply(Math, [b, c]);
                    return a > d && e > a
                },
                hexToBinary: function(b, c) {
                    var d = 0;
                    return this.isHex(b) && (d = parseInt(b, 16).toString(2)), c && (d = a.call(this, d, c)), d
                },
                binaryToHex: function(b, c) {
                    var d = 0;
                    return this.isBinary(b) && (d = parseInt(b, 2).toString(16)), c && (d = a.call(this, d, c)), d
                },
                isMacAddressMatch: function(a, b) {
                    return a && b ? (a = this.normalizeMacAddress(a), b = this.normalizeMacAddress(b), a === b ? !0 : !1) : !1
                },
                nameExtractMacAddress: function(a) {
                    return a = a || "", a = a.toLowerCase(), a = a.replaceAll("so", "")
                },
                nameContainsMacAddress: function(a) {
                    return this.isMacAddress(this.nameExtractMacAddress(a))
                },
                containsMacAddress: function(a, b) {
                    return a && b ? (a = this.normalizeMacAddress(a), b = this.normalizeMacAddress(b), b.indexOf(a) >= 0) : !1
                },
                normalizeMacAddress: function(a) {
                    return a = a || "", a = a.replaceAll(":", ""), a = a.replaceAll(" ", ""), a = a.toLowerCase()
                },
                formatMacAddress: function(a) {
                    if (a = a || "", a = a.replaceAll(" ", ""), a = a.toUpperCase(), a.indexOf(":") < 0) {
                        var b = "";
                        b += a.substr(0, 2) + ":", b += a.substr(2, 2) + ":", b += a.substr(4, 2) + ":", b += a.substr(6, 2) + ":", b += a.substr(8, 2) + ":", b += a.substr(10, 2), a = b
                    }
                    return a
                },
                reverseHex: function(a) {
                    var b = "";
                    a = a || "", a = a.replaceAll(":", ""), a = a.replaceAll(" ", ""), a = a.toLowerCase();
                    var c = a.length;
                    if (this.isHex(a)) {
                        1 == Math.abs(c) % 2 && (a = "0" + a, c += 1);
                        for (var d = 1; c / 2 >= d; d++) b += a.substr(c - 2 * d, 2)
                    }
                    return b
                },
                intToHexByte: function(b) {
                    return b && Number(b) ? a.call(this, Number(b).toString(16), 2) : "00"
                },
                outletDataDecode: function(a) {
                    var b = {};
                    return b.hex = a, b.outletVersion = a.substr(0, 2), b.pumpAddress = this.reverseHex(a.substr(2, 12)), b.outletNumber = a.substr(14, 2), b.peripheralTiming = parseInt(a.substr(16, 2), 16), b
                },
                manufacturerDataDecode: function(a) {
                    var c = {},
                        d = this.hexToBinary(a);
                    c.isRightChamber = 0 !== Number(d.substr(6, 1)), c.rightChamberType = parseInt(d.substr(4, 2), 2), c.isLeftChamber = 0 !== Number(d.substr(3, 1)), c.leftChamberType = parseInt(d.substr(1, 2), 2), c.isChamberTypeValid = 1 === parseInt(d.substr(0, 1), 2), c.outletArray = [], c.hasOutletConfigured = !1;
                    for (var e, f, g = 1; 6 > g; g++) f = a.substr(2 * g, 2), d = b.hexToBinary(f, 8), e = {
                        isOn120: "1" === d.substring(d.length - 1, d.length - 0),
                        isOn12: "1" === d.substring(d.length - 2, d.length - 1),
                        isUpdateRequested: "1" === d.substring(d.length - 3, d.length - 2),
                        isUnused: "1" === d.substring(d.length - 4, d.length - 3),
                        isNotInUse: "1" === d.substring(d.length - 5, d.length - 4)
                    }, e.isNotInUse || (c.hasOutletConfigured = !0), c.outletArray[g - 1] = e;
                    return c
                },
                objectHasUniqueAddress: function(a, b) {
                    for (var c = 0; c < a.length; c++)
                        if (a[c].address === b.address) return !1;
                    return !0
                }
            };
            return String.prototype.replaceAll = function(a, b, c) {
                return this.replace(new RegExp(a.replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|\<\>\-\&])/g, "\\$&"), c ? "gi" : "g"), "string" == typeof b ? b.replace(/\$/g, "$$$$") : b)
            }, b
        }), define("app/models/BedModel", ["require", "lavaca/mvc/Model", "app/models/FamilyModel", "app/models/AccountModel", "app/service/BedService", "$", "sccomm/CommunicationHelpers"], function(a) {
            function b() {
                this.set("needsSetup", l.bind(this)), this.set("statusNamed", o.bind(this)), this.set("needsBinding", m.bind(this)), this.set("isOnline", n.bind(this)), this.set("isK1", i.bind(this)), this.set("isK2", j.bind(this)), this.set("isAdult", k.bind(this)), this.set("leftSleeperName", f.bind(this)), this.set("rightSleeperName", g.bind(this)), this.set("childSleeperName", h.bind(this)), this.set("isPauseMode", d.bind(this)), this.set("pauseModeNamed", e.bind(this))
            }

            function c() {
                var a = s.Deferred();
                return this.getPauseMode().then(function(b) {
                    b && b.pauseMode ? this.set("pauseMode", b.pauseMode.toLowerCase()) : this.set("pauseMode", "off"), a.resolve()
                }.bind(this), function() {
                    this.set("pauseMode", "off"), a.resolve()
                }.bind(this)), a
            }

            function d() {
                return "on" == this.get("pauseMode")
            }

            function e() {
                return this.get("pauseMode")
            }

            function f() {
                var a = null,
                    b = q.first({
                        sleeperId: this.get("sleeperLeftId")
                    });
                return b && (a = b.get("firstName")), a
            }

            function g() {
                var a = null,
                    b = q.first({
                        sleeperId: this.get("sleeperRightId")
                    });
                return b && (a = b.get("firstName")), a
            }

            function h() {
                var a = null;
                return this.get("isAdult") || (a = this.get("leftSleeperName") || this.get("rightSleeperName")), a
            }

            function i() {
                var a = this.get("model") || "";
                return "k1" == a.toLowerCase()
            }

            function j() {
                var a = this.get("model") || "";
                return "k2" == a.toLowerCase()
            }

            function k() {
                return !this.get("isK1") && !this.get("isK2")
            }

            function l() {
                return "0" === this.get("sleeperLeftId") && "0" === this.get("sleeperRightId")
            }

            function m() {
                return !t.isMacAddress(this.get("macAddress"))
            }

            function n() {
                return this.get("status") && this.get("status").status ? 1 == this.get("status").status : !1
            }

            function o() {
                if (this.get("needsSetup")) return this.get("status") || this.set("status", {}), this.get("status").status = 4, "Tap To Set Up";
                if (this.get("needsBinding")) return "Not Yet Paired";
                var a = "Unconfigured";
                if (this.get("status") && this.get("status").status) switch (this.get("status").status) {
                    case 1:
                        a = "Online";
                        break;
                    case 2:
                        a = "Unconfigured";
                        break;
                    case 3:
                        a = "Offline"
                } else this.set("status", 2);
                return a
            }
            var p = a("lavaca/mvc/Model"),
                q = a("app/models/FamilyModel"),
                r = a("app/models/AccountModel"),
                s = (a("app/service/BedService"), a("$")),
                t = a("sccomm/CommunicationHelpers"),
                u = p.extend(function() {
                    p.apply(this, arguments), b.call(this)
                }, {
                    cachedIsPauseMode: !1,
                    updatePauseMode: function() {
                        return c.call(this)
                    },
                    getPauseMode: function() {
                        return r.getPauseMode(this.get("bedId"))
                    },
                    setPauseMode: function(a) {
                        return this.set("pauseMode", a), r.setPauseMode(this.get("bedId"), a)
                    },
                    hasBaseType: function() {
                        return console.log(this.get("macAddress") + "-base"), console.log(localStorage.getItem(this.get("macAddress") + "-base")), localStorage && this.get("macAddress") && localStorage.getItem(this.get("macAddress") + "-base") ? (console.log("hasBaseType == true"), !0) : !1
                    },
                    updateBaseType: function(a) {
                        var b = s.Deferred();
                        return console.log(this.get("macAddress") + "-base"), console.log("updateBaseType"), console.log(this.get("bedId")), localStorage ? (this.set("base", a), localStorage.getItem(this.get("macAddress") + "-base") && 1 == localStorage.getItem(this.get("macAddress") + "-base") ? b.resolve() : r.updateBed(this.get("bedId"), {
                            base: a
                        }).then(function() {
                            console.log("update succes"), localStorage.setItem(this.get("macAddress") + "-base", !0), b.resolve()
                        }.bind(this), function() {
                            console.log("update succes"), localStorage.setItem(this.get("macAddress") + "-base", !1), b.resolve()
                        }.bind(this))) : b.reject(), b
                    }
                });
            return u
        }), define("app/utils/DebugBeds", ["require"], function() {
            return [{
                debug: !0,
                sleeperRightId: 0,
                name: "Bed Pump",
                dualSleep: !0,
                bedId: "-9223372037664102667",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "P5",
                size: "queen",
                zipcode: "12345",
                timezone: "US/Pacific",
                status: {
                    status: 1,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:07:19",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !0,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !0,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !0,
                    hasFootControl: !0,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 0,
                    isK1: !1,
                    isK2: !1,
                    isAdult: !0,
                    hasOutletConfigured: !1
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 60,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                debug: !0,
                sleeperRightId: 0,
                name: "David Pump",
                dualSleep: !0,
                bedId: "-9223372036464102677",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "P5",
                size: "queen",
                zipcode: "12345",
                timezone: "US/Pacific",
                status: {
                    status: 3,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:00:3E",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !0,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 0,
                    isK1: !1,
                    isK2: !1,
                    isAdult: !0,
                    hasOutletConfigured: !1
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 40,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 10,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                debug: !0,
                sleeperRightId: 0,
                name: "Alex Pump",
                dualSleep: !0,
                bedId: "-9223372032664102687",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "P5",
                size: "queen",
                zipcode: "12345",
                timezone: "US/Pacific",
                status: {
                    status: 3,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:00:4E",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !0,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 0,
                    isK1: !1,
                    isK2: !1,
                    isAdult: !0,
                    hasOutletConfigured: !1
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 65,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 35,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                debug: !0,
                sleeperRightId: 0,
                name: "Khai Pump",
                dualSleep: !0,
                bedId: "-9223372036665122667",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "P5",
                size: "queen",
                zipcode: "12345",
                timezone: "US/Pacific",
                status: {
                    status: 1,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:01:2B",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !0,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 0,
                    isK1: !1,
                    isK2: !1,
                    isAdult: !0,
                    hasOutletConfigured: !1
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 70,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 40,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                debug: !0,
                sleeperRightId: 0,
                name: "K1 Pump",
                dualSleep: !0,
                bedId: "-9223472146964122667",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "P5",
                size: "queen",
                zipcode: "12345",
                timezone: "US/Pacific",
                status: {
                    status: 1,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:32:F4",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !1,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 1,
                    isLeftChamber: !1,
                    leftChamberType: 0,
                    isK1: !0,
                    isK2: !1,
                    isAdult: !1,
                    hasOutletConfigured: !1
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 70,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 40,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                debug: !0,
                sleeperRightId: 0,
                name: "K2 Pump 58",
                dualSleep: !0,
                bedId: "-9123472036874122667",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "K2",
                size: "queen",
                zipcode: "12345",
                timezone: "US/Pacific",
                status: {
                    status: 1,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:F8:58",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !1,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 1,
                    isLeftChamber: !0,
                    leftChamberType: 2,
                    isK1: !1,
                    isK2: !0,
                    isAdult: !1,
                    hasOutletConfigured: !0
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 70,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 40,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                debug: !0,
                sleeperRightId: 0,
                name: "K2 Pump",
                dualSleep: !0,
                bedId: "-9123472036953122667",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "K2",
                size: "queen",
                zipcode: "12345",
                timezone: "US/Pacific",
                status: {
                    status: 1,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:F8:9E",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !1,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 1,
                    isLeftChamber: !0,
                    leftChamberType: 2,
                    isK1: !1,
                    isK2: !0,
                    isAdult: !1,
                    hasOutletConfigured: !0
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 70,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 40,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                debug: !0,
                sleeperRightId: 0,
                name: "i8 Pump",
                dualSleep: !0,
                bedId: "-9223372054964122667",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "P5",
                size: "queen",
                zipcode: "12345",
                timezone: "US/Pacific",
                status: {
                    status: 1,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:32:F4",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !0,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 0,
                    isK1: !1,
                    isK2: !1,
                    isAdult: !0,
                    hasOutletConfigured: !1
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 70,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 40,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                debug: !0,
                sleeperRightId: 0,
                name: "Unknown Pump",
                dualSleep: !0,
                bedId: "XXXXXXXXXXXXXXXXXXXX",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "K2",
                size: "queen",
                zipcode: "12345",
                timezone: "US/Pacific",
                status: {
                    status: 2,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !0,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 0,
                    isK1: !1,
                    isK2: !1,
                    isAdult: !0,
                    hasOutletConfigured: !1
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 60,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }]
        }), define("app/utils/DemoBeds", ["require"], function() {
            return [{
                demo: !0,
                sleeperRightId: 0,
                name: "Master Bed",
                dualSleep: !0,
                bedId: "-9223372037664102667",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "x12",
                size: "queen",
                zipcode: "55401",
                timezone: "US/Central",
                status: {
                    status: 1,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:07:19",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !0,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !0,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !0,
                    hasFootControl: !0,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 0,
                    isK1: !1,
                    isK2: !1,
                    isAdult: !0,
                    hasOutletConfigured: !1
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 60,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 1,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Outlet_Name"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                demo: !0,
                sleeperRightId: 0,
                name: "Charlie's Bed",
                dualSleep: !1,
                bedId: "-9223372036464102677",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "k2",
                size: "queen",
                zipcode: "55401",
                timezone: "US/Central",
                status: {
                    status: 1,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:00:3E",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !0,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 1,
                    isK1: !1,
                    isK2: !0,
                    isAdult: !1,
                    hasOutletConfigured: !0
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 40,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 10,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Charlie's Outlet"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }, {
                demo: !0,
                sleeperRightId: 0,
                name: "Megan's Bed",
                dualSleep: !1,
                bedId: "-9223372036464102677",
                sleeperLeftId: "-9223372036664102624",
                accountId: "-9223372036664102669",
                model: "k2",
                size: "queen",
                zipcode: "55401",
                timezone: "US/Central",
                status: {
                    status: 1,
                    leftSide: {
                        sleepNumber: 50,
                        isInBed: !1,
                        pressure: 1850,
                        lastLink: "01:24:11",
                        alertId: 0,
                        alertDetailedMessage: ""
                    },
                    rightSide: {
                        sleepNumber: 35,
                        isInBed: !1,
                        pressure: 1550,
                        lastLink: "00:30:02",
                        alertId: 0,
                        alertDetailedMessage: ""
                    }
                },
                macAddress: "CC:04:B4:01:00:3E",
                capabilities: {
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !0,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isOutlet: !1,
                    isRightChamber: !0,
                    rightChamberType: 0,
                    isLeftChamber: !0,
                    leftChamberType: 1,
                    isK1: !1,
                    isK2: !0,
                    isAdult: !1,
                    hasOutletConfigured: !0
                },
                remote: {
                    lightStatus: {
                        1: !0,
                        2: !0,
                        3: !1,
                        4: !0
                    },
                    leftSide: {
                        foundationPreset: 1,
                        sleepNumber: 40,
                        sleepNumberMemory: 60
                    },
                    rightSide: {
                        foundationPreset: 4,
                        sleepNumber: 10,
                        sleepNumberMemory: 35
                    },
                    outletArray: [{
                        isOn120: !1,
                        isOn12: !1,
                        name: "Megan's Outlet"
                    }],
                    kidBedChamber: {
                        sideId: 0,
                        sleepNumber: 30,
                        sleepNumberMemory: 35
                    },
                    kidHeadTilt: {
                        sideId: 1,
                        sleepNumber: 0
                    },
                    isOnSenseAndDo: !0
                }
            }]
        }), define("app/models/BedCollection", ["require", "lavaca/mvc/Collection", "app/models/BedModel", "app/models/StateModel", "sccomm/ConnectedDeviceStateModel", "sccomm/CommunicationHelpers", "app/models/AccountModel", "app/service/AccountService", "app/utils/DebugBeds", "app/utils/DemoBeds", "mout/object/get", "$", "app/utils/MixPanelManager"], function(a) {
            function b() {
                m.get("remoteMenuExtras") ? this.add(q) : this.remove(this.filter({
                    debug: !0
                }))
            }

            function c() {
                m.get("demoMode") ? this.add(r) : this.remove(this.filter({
                    demo: !0
                }))
            }

            function d() {
                this.clear(), this.trigger("reset"), f.call(this)
            }

            function e(a) {
                ("remoteMenuExtras" === a.attribute || "demoMode" === a.attribute) && (b.call(this), c.call(this), setTimeout(function() {
                    this.trigger("reset")
                }.bind(this), 50))
            }

            function f() {
                b.call(this), c.call(this)
            }

            function g(a) {
                return a ? (a.sort(function(a, b) {
                    return h(a) || h(b) ? h(a) ? h(b) ? 0 : 1 : -1 : 0
                }), a) : []
            }

            function h(a) {
                return !("0" === a.sleeperLeftId && "0" === a.sleeperRightId)
            }

            function i() {
                var a = 0,
                    b = this;
                clearInterval(b.int), this.int = setInterval(function() {
                    a++, b.fetchBedStatus(), b.trigger("render"), a >= 30 && b.checkIfAllBedsSetUpOrOnline() && clearInterval(b.int), document.hidden && clearInterval(b.int)
                }, 2e3)
            }

            function j() {
                var a = this;
                clearInterval(a.int)
            }
            var k = a("lavaca/mvc/Collection"),
                l = a("app/models/BedModel"),
                m = a("app/models/StateModel"),
                n = a("sccomm/ConnectedDeviceStateModel"),
                o = a("sccomm/CommunicationHelpers"),
                p = a("app/models/AccountModel"),
                q = (a("app/service/AccountService"), a("app/utils/DebugBeds")),
                r = a("app/utils/DemoBeds"),
                s = a("mout/object/get"),
                t = "",
                u = a("$"),
                v = a("app/utils/MixPanelManager"),
                w = k.extend(function() {
                    k.call(this, arguments), m.on("logout", d.bind(this)), m.on("change", e.bind(this)), m.on("beginShortPolling", i.bind(this)), m.on("clearShortPolling", j.bind(this)), f.call(this)
                }, {
                    TModel: l,
                    itemsProperty: "beds",
                    isFetching: !1,
                    controller: this,
                    "int": null,
                    load: !1,
                    fetchingPromise: u.Deferred(),
                    getPauseModeForCurrentBed: function() {
                        return p.getPauseMode(t)
                    },
                    setPauseModeForCurrentBed: function(a) {
                        return p.setPauseMode(t, a)
                    },
                    setCurrentBedWithSleeperId: function(a) {
                        this.each(function(b, c) {
                            (c.get("sleeperLeftId") === a || c.get("sleeperRightId") === a) && (t = c.get("bedId"), this.prepConnectionDetailsForCurrentBed())
                        })
                    },
                    fetch: function() {
                        return this.isFetching || (this.isFetching = !0, this.fetchingPromise = u.Deferred(), p.getBeds().then(function(a) {
                            this.clear(), f.call(this), this.add(g(a.beds)), b.call(this), u("#view-root").toggleClass("new-bed", !this.checkIfAllBedsSetUp()), this.isFetching = !1, this.fetchAllPauseMode().fail(function(a) {
                                this.isFetching = !1, this.trigger("reset"), this.fetchingPromise.reject(a)
                            }.bind(this)).done(function() {
                                v.prototype.setUserBed(a.beds), this.isFetching = !1, this.trigger("reset"), this.fetchingPromise.resolve(), m.trigger("beginShortPolling")
                            }.bind(this))
                        }.bind(this), function(a) {
                            this.isFetching = !1, this.fetchingPromise.reject(a)
                        })), this.fetchingPromise
                    },
                    fetchBedStatus: function() {
                        var a = this;
                        return this.fetchingPromise = u.Deferred(), p.getBeds().then(function(a) {
                            this.clear(), f.call(this), this.add(g(a.beds)), b.call(this), u("#view-root").toggleClass("new-bed", !this.checkIfAllBedsSetUp()), this.fetchAllPauseMode().fail(function(a) {
                                this.trigger("render"), this.fetchingPromise.reject(a)
                            }.bind(this)).done(function() {
                                v.prototype.setUserBed(a.beds), this.trigger("render"), this.fetchingPromise.resolve()
                            }.bind(this))
                        }.bind(this), function(b) {
                            clearInterval(a.int), this.fetchingPromise.reject(b)
                        }), this.fetchingPromise
                    },
                    fetchAllPauseMode: function() {
                        var a = [];
                        return this.each(function(b, c) {
                            a[b] = c.updatePauseMode().always(function() {
                                u("#view-root").toggleClass("bad-status", this.checkIfAllBedsAreConnected())
                            }.bind(this))
                        }.bind(this)), 0 == a.length && (a[0] = u.Deferred(), a[0].resolve()), u.when.apply(this, a)
                    },
                    getBedModel: function(a) {
                        var b = this.models[0];
                        return this.each(function(c, d) {
                            d.get("bedId") == a && (b = d)
                        }), b
                    },
                    checkIfAllBedsSetUp: function() {
                        var a = !0;
                        return this.each(function(b, c) {
                            "0" === c.get("sleeperLeftId") && "0" === c.get("sleeperRightId") && (a = !1)
                        }.bind(this)), a
                    },
                    checkIfAllBedsAreConnected: function() {
                        var a = !1;
                        return this.each(function(b, c) {
                            var d = s(c.get("status"), "status"),
                                e = c.get("isPauseMode");
                            (1 != d || e) && (a = !0)
                        }.bind(this)), a
                    },
                    checkIfAllBedsSetUpOrOnline: function() {
                        var a = !0;
                        return this.each(function(b, c) {
                            1 != c.get("status").status && 2 != c.get("status").status && (a = !1)
                        }.bind(this)), a
                    },
                    checkIfAllBedsBound: function() {
                        var a = !1;
                        return this.each(function(b, c) {
                            c.get("needsBinding") || (a = !0)
                        }.bind(this)), a
                    },
                    hasAtLeastOneBedSetup: function() {
                        var a = !1;
                        return this.each(function(b, c) {
                            ("0" !== c.get("sleeperLeftId") || "0" !== c.get("sleeperRightId")) && (a = !0)
                        }.bind(this)), a
                    },
                    setCurrentBedWithBedId: function(a) {
                        t = a, this.prepConnectionDetailsForCurrentBed()
                    },
                    getCurrentBedModel: function() {
                        return this.first({
                            bedId: t
                        }) ? this.first({
                            bedId: t
                        }) : new l
                    },
                    isMacAddressOnAccount: function(a) {
                        return this.each(function(b, c) {
                            var d = c.get("macAddress") || "";
                            return o.isMacAddressMatch(a, d) ? !0 : void 0
                        }), !1
                    },
                    getNameForMacAddress: function(a) {
                        var b = a;
                        return this.each(function(c, d) {
                            var e = d.get("macAddress") || "",
                                f = d.get("name") || "";
                            f = String(f).replaceAll(" ", ""), o.isMacAddressMatch(a, e) && "" != f && (b = d.get("name") || "")
                        }), b
                    },
                    prepConnectionDetailsForCurrentBed: function() {
                        var a = this.getCurrentBedModel(),
                            b = a.get("macAddress") || "";
                        o.isMacAddress(b) || (b = ""), n.reset(), n.set("macAddress", b);
                        var c = this.first({
                            bedId: t
                        }).get("capabilities");
                        c && "" !== c && n.get("capabilities").apply(c)
                    },
                    canAddSecondSleeper: function(a) {
                        var b = !1;
                        return this.each(function(c, d) {
                            d.get("sleeperLeftId") == a && 0 == Number(d.get("sleeperRightId")) && d.get("dualSleep") && (b = !0), d.get("sleeperRightId") == a && 0 == Number(d.get("sleeperLeftId")) && d.get("dualSleep") && (b = !0)
                        }), b
                    },
                    canSwapSleeper: function(a) {
                        var b = !1;
                        return this.each(function(c, d) {
                            d.get("sleeperLeftId") == a && d.get("dualSleep") && (b = !0), d.get("sleeperRightId") == a && d.get("dualSleep") && (b = !0)
                        }), b
                    },
                    bindMacAddressForCurrentBed: function(a) {
                        var b = u.Deferred(),
                            c = this.getCurrentBedModel();
                        return c.get("debug") || !c.get("bedId") || o.isMacAddressMatch(a, c.get("macAddress")) ? b.resolve() : p.updateBed(c.get("bedId"), {
                            macAddress: o.normalizeMacAddress(a)
                        }).then(function() {
                            c.set("macAddress", a), this.trigger("reset"), b.resolve()
                        }.bind(this), function(a) {
                            b.reject(a)
                        }.bind(this)), b
                    }
                });
            return new w
        }), define("rdust!templates/controlviews/remote-popover", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="desktop-cover"><div class="popover"><div class="grouped"><div class="ios-status-bar"></div><div class="dashboard-wrap"><div class="close siqfont">&#xd7;</div></div><div class="section beds overflow-scroll"><ul class="overflow-scroll-inner beds-remote">').exists(b.get("beds"), b, {
                        block: c
                    }, null).write('</ul></div></div></div><div class="blocker"></div></div>')
                }

                function c(a, b) {
                    return a.section(b.get("beds"), b, {
                        block: d
                    }, null)
                }

                function d(a, b) {
                    return a.exists(b.get("canViewOthers"), b, {
                        "else": e,
                        block: k
                    }, null)
                }

                function e(a, b) {
                    return a.helper("eq", b, {
                        block: f
                    }, {
                        key: i,
                        value: j
                    })
                }

                function f(a, b) {
                    return a.write('<li class="item bed" data-status="').reference(b.getPath(!1, ["status", "status"]), b, "h").write('"data-pause-mode="').reference(b.get("pauseModeNamed"), b, "h").write('"data-sections="2" data-index="').reference(b.get("$idx"), b, "h").write('"><div class="highlight"data-mac-address="').reference(b.get("macAddress"), b, "h").write('"').exists(b.get("needsSetup"), b, {
                        block: g
                    }, null).exists(b.get("needsBinding"), b, {
                        block: h
                    }, null).write('data-requires-ble="true"data-id="').reference(b.get("bedId"), b, "h").write('"data-href="remote/').reference(b.get("bedId"), b, "h").write('"><h1 class="name">').reference(b.get("name"), b, "h").write('</h1><div class="status ').reference(b.get("statusNamed"), b, "h").write('"><i></i><span>').reference(b.get("statusNamed"), b, "h").write("</span></div></div></li>")
                }

                function g(a) {
                    return a.write('data-needs-setup="true"')
                }

                function h(a) {
                    return a.write('data-needs-binding="true"')
                }

                function i(a, b) {
                    return a.reference(b.get("bedId"), b, "h")
                }

                function j(a, b) {
                    return a.reference(b.get("userBedId"), b, "h")
                }

                function k(a, b) {
                    return a.write('<li class="item bed" data-status="').reference(b.getPath(!1, ["status", "status"]), b, "h").write('"data-pause-mode="').reference(b.get("pauseModeNamed"), b, "h").write('"data-sections="2" data-index="').reference(b.get("$idx"), b, "h").write('"><div class="highlight"data-mac-address="').reference(b.get("macAddress"), b, "h").write('"').exists(b.get("needsSetup"), b, {
                        block: l
                    }, null).exists(b.get("needsBinding"), b, {
                        block: m
                    }, null).write('data-requires-ble="true"data-id="').reference(b.get("bedId"), b, "h").write('"data-href="remote/').reference(b.get("bedId"), b, "h").write('"><h1 class="name">').reference(b.get("name"), b, "h").write('</h1><div class="status ').reference(b.get("statusNamed"), b, "h").write('"><i></i><span>').reference(b.get("statusNamed"), b, "h").write('</span></div></div><div class="sm-section settings siqfont ').exists(b.get("needsSetup"), b, {
                        block: n
                    }, null).write('"data-mac-address="').reference(b.get("macAddress"), b, "h").write('"data-id="').reference(b.get("bedId"), b, "h").write('"data-href="bedsettings/').reference(b.get("bedId"), b, "h").write('">&#x2699;</div></li>')
                }

                function l(a) {
                    return a.write('data-needs-setup="true"')
                }

                function m(a) {
                    return a.write('data-needs-binding="true"')
                }

                function n(a) {
                    return a.write("needs-setup")
                }
                return a.register("templates/controlviews/remote-popover", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/controlviews/remote-popover", b, c)
                }
            }
        }), define("app/ui/views/controlviews/RemotePopoverView", ["require", "lavaca/mvc/View", "app/models/StateModel", "app/models/FamilyModel", "lavaca/mvc/Router", "sccomm/ConnectedDeviceStateModel", "mout/object/get", "app/utils/MixPanelManager", "app/models/BedCollection", "rdust!templates/controlviews/remote-popover"], function(a) {
            function b(a) {
                this.el.hasClass("show") && (a && "function" == typeof a.preventDefault && a.preventDefault(), c.call(this))
            }

            function c() {
                g.trigger("clearShortPolling"), this.el.hasClass("show") && (this.el.removeClass("show"), setTimeout(function() {
                    this.el.addClass("hidden"), setTimeout(function() {
                        this.el.find(".popover").scrollTop(0), this.el.addClass("hide")
                    }.bind(this), 300)
                }.bind(this), 10))
            }

            function d(a) {
                var b = k(a, "currentTarget.dataset.id");
                b && (l.prototype.setRegistrationPath("Bed Menu"), i.exec("/registration/bedId=" + b))
            }

            function e(a) {
                var b = k(a, "currentTarget.dataset.href"),
                    c = k(a, "currentTarget.dataset.needsSetup"),
                    e = k(a, "currentTarget.dataset.needsBinding"),
                    f = k(a, "currentTarget.dataset.id"),
                    g = k(a, "currentTarget.dataset.requiresBle");
                if (c) return d(a), void 0;
                if (!b || !$(a.currentTarget).hasClass("selected")) return !g || Modernizr.hasble || j.get("isDemo") ? (f && m.setCurrentBedWithBedId(f), e && Modernizr.hasble ? (l.prototype.setBedPairingAccessMethod("Remote"), i.exec("/binding/welcome"), void 0) : (b && i.exec("/" + b), void 0)) : (window.customAlert.alert("This functionality requires Bluetooth Low Energy and is not available on this device.", null, "SleepIQ®", "OK"), void 0)
            }
            var f = a("lavaca/mvc/View"),
                g = a("app/models/StateModel"),
                h = a("app/models/FamilyModel"),
                i = a("lavaca/mvc/Router"),
                j = a("sccomm/ConnectedDeviceStateModel"),
                k = a("mout/object/get"),
                l = a("app/utils/MixPanelManager"),
                m = a("app/models/BedCollection"),
                n = a("rdust!templates/controlviews/remote-popover"),
                o = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        "[data-href]": {
                            tap: e
                        },
                        ".close": {
                            tap: c
                        },
                        self: {
                            tap: c
                        },
                        model: {
                            reset: this.onModelReset,
                            render: this.onModelRender
                        },
                        ext: {
                            stateModel: {
                                object: g,
                                events: {
                                    backButton: b.bind(this)
                                }
                            }
                        }
                    })
                }, {
                    className: "remotepopover popover-view right hidden hide",
                    generateHtml: function(a) {
                        if (a && h.count()) {
                            var b = h.getFamily()[h.getLoggedInUserIndex()];
                            a.canViewOthers = h.hasPermission(), a.userBedId = b.get("bedId")
                        }
                        return new Promise(function(b) {
                            n.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onModelReset: function() {
                        this.render()
                    },
                    onModelRender: function() {
                        this.render(".beds-remote").then(function() {
                            (window.location.hash.indexOf("/remote") > 0 || window.location.hash.indexOf("/bedsettings") > 0) && this.el.find("[data-id='" + m.getCurrentBedModel().get("bedId") + "']").parent().addClass("selected")
                        })
                    },
                    toggleRemotePanel: function(a, b) {
                        g.trigger("beginShortPolling"), 0 != m.models.length || b ? (a && a.stopPropagation(), this.el.removeClass("hide"), setTimeout(function() {
                            this.el.addClass("show"), setTimeout(function() {
                                this.el.removeClass("hidden")
                            }.bind(this), 10)
                        }.bind(this), 10)) : m.fetch().then(function() {
                            this.onModelReset(), this.toggleRemotePanel(a, !0)
                        }.bind(this)), this.el.find("li.selected").removeClass("selected"), (window.location.hash.indexOf("/remote") > 0 || window.location.hash.indexOf("/bedsettings") > 0) && this.el.find("[data-id='" + m.getCurrentBedModel().get("bedId") + "']").parent().addClass("selected")
                    }
                });
            return new o("#remote-popover", m)
        }), define("lavaca/fx/Transform", ["require", "$"], function(a) {
            function b(a) {
                return a === j
            }

            function c(a) {
                return "number" == typeof a ? 100 * a + "%" : a
            }

            function d(a) {
                return "number" == typeof a ? a + "deg" : a
            }

            function e(a) {
                return "number" == typeof a ? a + "px" : a
            }

            function f(a) {
                return "number" == typeof a ? a + "," + a : a
            }

            function g(a, b) {
                var c, g = 0 === a.indexOf("rotate"),
                    h = "scale" === a,
                    i = 0 === a.indexOf("translate"),
                    j = [];
                if ("object" == typeof b)
                    for (c in b) j.push(a + c.toUpperCase() + "(" + (i ? e(b[c]) : g ? d(b[c]) : h ? f(b[c]) : b[c]) + ")");
                else h ? b = f(b) : g ? b = d(b) : i && (b = e(b)), j.push(a + "(" + b + ")");
                return j.join(" ")
            }
            var h, i, j, k = a("$"),
                l = {
                    transform: "transform",
                    webkitTransform: "-webkit-transform",
                    MozTransform: "-moz-transform",
                    OTransform: "-o-transform",
                    MSTransform: "-ms-transform"
                },
                m = !1,
                n = {};
            return function() {
                var a, b = document.createElement("div").style;
                for (a in l)
                    if (a in b) {
                        h = a, i = l[a], b[a] = "translate3d(0,0,0)", m = b[a].indexOf("translate3d") > -1 && -1 === navigator.userAgent.indexOf("Android");
                        break
                    }
            }(), n.isSupported = function() {
                return !!h
            }, n.is3dSupported = function() {
                return m
            }, n.toCSS = function(a) {
                var b, c = [];
                if ("object" == typeof a)
                    for (b in a) c.push(g(b, a[b]));
                else c.push(a);
                return c.join(" ")
            }, n.cssProperty = function() {
                return i
            }, k.fn.transform = function(a, d) {
                return n.isSupported() && (a = n.toCSS(a), d && "object" == typeof d && (d = c(d.x) + (b(d.y) ? "" : " " + c(d.y))), this.each(function() {
                    this.style[h] = a, d && (this.style[h + "Origin"] = d)
                })), this
            }, n
        }), define("lavaca/fx/Animation", ["require", "$", "./Transform"], function(a) {
            var b, c, d, e, f = a("$"),
                g = a("./Transform"),
                h = {},
                i = {
                    animation: ["animation", "animationend", "keyframes"],
                    webkitAnimation: ["-webkit-animation", "webkitAnimationEnd", "-webkit-keyframes"],
                    MozAnimation: ["-moz-animation", "animationend", "-moz-keyframes"]
                };
            return function() {
                var a, f, g = document.createElement("div").style;
                for (a in i)
                    if (a in g) {
                        f = i[a], b = a, c = f[0], e = f[1], d = f[2];
                        break
                    }
            }(), h.isSupported = function() {
                return !!b
            }, h.animationEndEvent = function() {
                return e
            }, h.keyframesToCSS = function(a, b) {
                var c, e, f, h, i = ["@", d, " ", a, "{"];
                for (c in b) {
                    if (i.push(c, "{"), e = b[c], "string" == typeof e) i.push(e);
                    else
                        for (f in e) h = e[f], "transform" === f && g && (f = g.cssProperty(), h = g.toCSS(h)), i.push(f, ":", h, ";");
                    i.push("}")
                }
                return i.push("}"), i.join("")
            }, h.generateKeyframes = function(a, b) {
                "object" == typeof a && (b = a, a = "a" + (new Date).getTime());
                var c = h.keyframesToCSS(a, b);
                return f("<style>" + c + "</style>").appendTo("head"), a
            }, h.cssProperty = function() {
                return c
            }, f.fn.keyframe = function(a, b, c, d, e, f, g) {
                if (h.isSupported()) {
                    var i;
                    "object" == typeof a && (a = "object" == typeof b && "string" == typeof b.name ? h.generateKeyframes(b.name, a) : h.generateKeyframes(a)), "object" == typeof b && (g = b.complete, f = b.direction, e = b.iterations, d = b.delay, c = b.easing, i = b.fillMode, b = b.duration), f = f || "normal", e = e || 1, d = d || 0, c = c || "linear", b = b || 1, i = i || "", "number" == typeof b && (b += "ms"), "number" == typeof d && (d += "ms"), g && this.nextAnimationEnd(g), this.css(h.cssProperty(), [a, b, c, d, e, f, i].join(" "))
                }
                return this
            }, f.fn.animationEnd = function(a, b) {
                return e ? this.on(e, a, b) : this
            }, f.fn.nextAnimationEnd = function(a, b) {
                return e ? this.one(e, a, b) : this
            }, h
        }), define("app/ui/views/pageviews/BaseView", ["require", "lavaca/mvc/View", "lavaca/mvc/ViewManager", "lavaca/mvc/Router", "lavaca/net/History", "app/ui/views/controlviews/UserSwitchView", "app/ui/views/controlviews/RemotePopoverView", "lavaca/fx/Animation"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("lavaca/mvc/ViewManager"),
                d = (a("lavaca/mvc/Router"), a("lavaca/net/History")),
                e = a("app/ui/views/controlviews/UserSwitchView"),
                f = a("app/ui/views/controlviews/RemotePopoverView");
            a("lavaca/fx/Animation");
            var g = b.extend(function() {
                b.apply(this, arguments), this.mapEvent({
                    ".cancel": {
                        tap: this.onTapCancel
                    },
                    ".user-menu": {
                        tap: this.onTapMenu
                    },
                    'header .back, [rel="back"]': {
                        tap: this.onTapBack
                    },
                    "header .remote": {
                        tap: this.showRemotePopover
                    }
                })
            }, {
                template: "default",
                pageTransition: {
                    "in": "",
                    out: "",
                    inReverse: "",
                    outReverse: ""
                },
                onRenderSuccess: function() {
                    b.prototype.onRenderSuccess.apply(this, arguments)
                },
                onTapCancel: function(a) {
                    a.preventDefault(), c.dismiss(a.currentTarget)
                },
                onEnterComplete: function() {
                    this.trigger("entercomplete"), window.navigator && window.navigator.splashscreen && setTimeout(function() {
                        window.navigator.splashscreen.hide()
                    }.bind(this), 500)
                },
                onTapBack: function(a) {
                    a.preventDefault(), d.back()
                },
                showRemotePopover: function(a) {
                    f.toggleRemotePanel(a)
                },
                enter: function(a, e) {
                    var f = d.isRoutingBack;
                    return b.prototype.enter.apply(this, arguments).then(function() {
                        f ? d.animationBreadcrumb.length > 0 && (this.pageTransition = d.animationBreadcrumb.pop()) : d.animationBreadcrumb.push(this.pageTransition);
                        var a, b = f ? this.pageTransition.inReverse : this.pageTransition["in"],
                            g = f ? this.pageTransition.outReverse : this.pageTransition.out,
                            h = -1,
                            i = function() {
                                this.onEnterComplete(), this.el.removeClass(b);
                                var a = c.pageViews.get(this.cacheKey);
                                a && a.el.removeClass(b)
                            };
                        if ("" !== b) {
                            if (e.length)
                                for (h = -1; a = e[++h];) {
                                    var j = c.pageViews.get(a.cacheKey);
                                    a.el.addClass(g), a.el.nextAnimationEnd(function() {
                                        j && j.el.removeClass(g + " current")
                                    }), "" === g && a.exitPromise.resolve()
                                }
                            this.layer > 0 || e.length > 0 ? this.el.nextAnimationEnd(i.bind(this)).addClass(b + " current") : (this.el.addClass("current"), this.onEnterComplete())
                        } else {
                            if (this.el.addClass("current"), e.length > 0)
                                for (h = -1; a = e[++h];) a.el.removeClass("current"), a.exitPromise && a.exitPromise.resolve();
                            this.onEnterComplete()
                        }
                    }.bind(this))
                },
                exit: function(a, e) {
                    var f = d.isRoutingBack ? this.pageTransition.outReverse : e.length ? e[0].pageTransition.out : "";
                    return d.isRoutingBack && !e.length && (this.pageTransition = d.animationBreadcrumb.pop(), f = this.pageTransition.outReverse), f ? (this.exitPromise = new Promise(this), this.el.nextAnimationEnd(function() {
                        b.prototype.exit.apply(this, arguments).then(function() {
                            this.exitPromise.resolve()
                        }), this.el.removeClass(f + " current");
                        var a = c.pageViews.get(this.cacheKey);
                        a && a.el.removeClass(f + " current")
                    }.bind(this)), e.length || this.el.addClass(f), this.exitPromise) : (this.el.removeClass("current"), b.prototype.exit.apply(this, arguments))
                },
                onTapMenu: function(a) {
                    e.toggleUsersPanel(a)
                }
            });
            return g
        }), define("rdust!templates/childviews/server-list", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<h2>Select a server to access</h2><button tabindex="-1" class="btn server" data-server="https://api.sleepiq.sleepnumber.com/rest/{0}" data-api-key="92c6dea791409ad3fdd2c1fdea1119d3" data-edp-api="https://sleepiqapi.azure-api.net/prod/{0}" data-edp-subscription="a6b6cfd7079b4cfd9edf9fee927de59b">https://api.sleepiq.sleepnumber.com</button><button tabindex="-1" class="btn server" data-server="https://api.firefly.siq.sleepnumber.com/rest/{0}" data-api-key="45f2c5328d5e07437617d2d69f4d07fe" data-edp-api="https://sleepiqapi.azure-api.net/stage/{0}" data-edp-subscription="a6b6cfd7079b4cfd9edf9fee927de59b">https://api.firefly.siq.sleepnumber.com</button><button tabindex="-1" class="btn server" data-server="https://api.fireflytest.siq.sleepnumber.com/rest/{0}" data-api-key="91af9c5b81d46dc4ef73f9b7853f0ae2" data-edp-api="https://sleepiq.azure-api.net/test/{0}" data-edp-subscription="b26ec87efcd44ebf98802d9565dcf723111">https://api.fireflytest.siq.sleepnumber.com</button><button tabindex="-1" class="btn server" data-server="https://dev24-fe-api.dev.siq.sleepnumber.com/rest/{0}" data-api-key="9991d0ac6803140fc22eaf422142eca2" data-edp-api="https://sleepiq.azure-api.net/dev24/{0}" data-edp-subscription="b26ec87efcd44ebf98802d9565dcf723">https://dev24-fe-api.dev.siq.sleepnumber.com</button><button tabindex="-1" class="btn server" data-server="https://qa22-fe-api.dev.siq.sleepnumber.com/rest/{0}" data-api-key="91af9c5b81d46dc4ef73f9b7853f0ae2" data-edp-api="https://sleepiq.azure-api.net/qa22/{0}" data-edp-subscription="b26ec87efcd44ebf98802d9565dcf723">https://qa22-fe-api.dev.siq.sleepnumber.com/</button><button tabindex="-1" class="btn server" data-server="https://genie1-fe-api.siq.sleepnumber.com/rest/{0}" data-api-key="91af9c5b81d46dc4ef73f9b7853f0ae2" data-edp-api="https://sleepiq.azure-api.net/genie1/{0}" data-edp-subscription="b26ec87efcd44ebf98802d9565dcf723">https://genie1-fe-api.siq.sleepnumber.com</button><button tabindex="-1" class="btn server" data-server="https://alpha-fe-api.bamlabs.com/rest/{0}" data-api-key="91af9c5b81d46dc4ef73f9b7853f0ae2" data-edp-api="https://sleepiq.azure-api.net/alpha/{0}" data-edp-subscription="b26ec87efcd44ebf98802d9565dcf723">https://alpha-fe-api.bamlabs.com</button><br/><br/><h2>Use specified server (https://xxxx/rest/{0})</h2><input type="text" class="customServer" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" disabled tabindex="-1"/><button tabindex="-1" class="btn custom">Set User-Specified Server</button><div class="activeServer">').exists(b.get("activeServer"), b, {
                        block: c
                    }, null).write("</div>")
                }

                function c(a, b) {
                    return a.write('<h2>Current server:</h2><span class="current">').reference(b.get("activeServer"), b, "h").write("</span>")
                }
                return a.register("templates/childviews/server-list", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/server-list", b, c)
                }
            }
        }), define("rdust!templates/headers/header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header with-remote"><div class="user-menu">☰</div><div class="title">').exists(b.get("pageTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><button class="remote right"><div class="center"><div class="icon siqfont">↕</div><div class="remote-alert"></div><span>Remote</span></div></button><div class="divider"></div></header>')
                }

                function c(a) {
                    return a.write("SleepIQ<sup>&reg;</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("pageTitle"), b, "h", ["s"])
                }
                return a.register("templates/headers/header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/header", b, c)
                }
            }
        }), define("app/ui/views/childviews/ServerListView", ["require", "lavaca/mvc/View", "app/env/Config", "mout/string/interpolate", "app/utils/MixPanelManager", "rdust!templates/childviews/server-list", "rdust!templates/headers/header"], function(a) {
            function b(a) {
                a.currentTarget.dataset && a.currentTarget.dataset.apiKey && this.model && (this.model.set("overrideMixPanelApiKey", a.currentTarget.dataset.apiKey), mixpanel.config && (mixpanel.config.token = a.currentTarget.dataset.apiKey)), a.currentTarget.dataset && a.currentTarget.dataset.server && d.call(this, a.currentTarget.dataset.server, a.currentTarget.dataset.edpApi, a.currentTarget.dataset.edpSubscription)
            }

            function c() {
                var a = this.el.find(".customServer") ? this.el.find(".customServer").val() : !1;
                if (a && a.length > 1) {
                    a = a.toLowerCase(), a = 0 === a.indexOf("http") ? a + "/rest/{0}" : "https://" + a + "/rest/{0}", a = -1 != a.indexOf("//rest") ? a.replace("//rest", "/rest") : a;
                    var b = this.el.find('[data-server="' + a + '"]').attr("data-api-key") || "9991d0ac6803140fc22eaf422142eca2";
                    mixpanel.config && (mixpanel.config.token = b), this.model && this.model.set("overrideMixPanelApiKey", b), d.call(this, a)
                } else {
                    var c = "Please use a valid server";
                    navigator && navigator.notification ? navigator.notification.alert(c, null, "Server", "OK") : alert(c)
                }
            }

            function d(a, b, c) {
                this.model && (this.model.set("activeServer", g(a, [""], /\{([^}])\}/g)), h.prototype.setApplicationURL(this.model.get("activeServer")), a === f.api_url ? this.model.updateServiceLayer(!1, f.edp_url, f.edp_subscription_key) : this.model.updateServiceLayer(a, b, c), this.render(".activeServer"), this.resetView())
            }
            var e = a("lavaca/mvc/View"),
                f = a("app/env/Config"),
                g = a("mout/string/interpolate"),
                h = a("app/utils/MixPanelManager"),
                i = a("rdust!templates/childviews/server-list");
            a("rdust!templates/headers/header");
            var j = e.extend(function() {
                e.apply(this, arguments), this.mapEvent({
                    ".server": {
                        tap: b.bind(this)
                    },
                    ".custom": {
                        tap: c.bind(this)
                    }
                })
            }, {
                className: "server-list",
                autoRender: !0,
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        i.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                resetView: function() {
                    this.parentView && this.parentView.resetViews()
                }
            });
            return j
        }), define("lavaca/fx/Transition", ["require", "$"], function(a) {
            var b, c, d, e = a("$"),
                f = {},
                g = {
                    transition: ["transition", "transitionend"],
                    webkitTransition: ["-webkit-transition", "webkitTransitionEnd"],
                    MozTransition: ["-moz-transition", "MozTransitionEnd"],
                    OTransition: ["-o-transition", "OTransitionEnd"],
                    MSTransition: ["-ms-transition", "MSTransitionEnd"]
                };
            return function() {
                var a, e = document.createElement("div").style;
                for (a in g)
                    if (a in e) {
                        b = a, c = g[a][0], d = g[a][1];
                        break
                    }
            }(), f.isSupported = function() {
                return !!b
            }, f.toCSS = function(a, b, c) {
                c = c || "linear";
                var d, e = [],
                    f = a instanceof Array;
                for (d in a) f && (d = a[d]), e.push(d + " " + b + "ms " + c);
                return e.join(",")
            }, f.cssProperty = function() {
                return c
            }, f.transitionEndEvent = function() {
                return d
            }, e.fn.transition = function(a, c, d, e) {
                if (d instanceof Function && (e = d, d = null), f.isSupported()) {
                    var g = f.toCSS(a, c, d);
                    e && this.nextTransitionEnd(e), this.each(function() {
                        this.style[b] = g
                    }), this.css(a)
                } else this.css(a), e && e.call(this[0], {});
                return this
            }, e.fn.transitionEnd = function(a, b) {
                return d ? this.on(d, a, b) : this
            }, e.fn.nextTransitionEnd = function(a, b) {
                return d ? this.one(d, a, b) : this
            }, f
        }), define("lavaca/ui/Widget", ["require", "$", "lavaca/events/EventDispatcher", "lavaca/util/uuid"], function(a) {
            var b = a("$"),
                c = a("lavaca/events/EventDispatcher"),
                d = a("lavaca/util/uuid"),
                e = c.extend(function(a) {
                    c.call(this), this.el = a = b(a);
                    var e = a.attr("id");
                    e || (e = "widget-" + d()), this.id = e
                });
            return e
        }), define("app/utils/debounce", ["require"], function() {
            var a = function(a, b, c) {
                function d() {
                    function d() {
                        c || (f = a.apply(h, g)), e = null
                    }
                    var g = arguments,
                        h = this;
                    return e ? clearTimeout(e) : c && (f = a.apply(h, g)), e = setTimeout(d, b), f
                }
                var e, f;
                return d
            };
            return a
        }), define("app/ui/widgets/FormValidator", ["require", "lavaca/ui/Widget", "app/utils/debounce", "mout/object/get", "app/models/StateModel", "$"], function(a) {
            function b() {
                this.formValidated = !1, this.animateLabels = this.el.data("animate-labels") || !1, this.emailRegex = /^([\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+\.)*[\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+@((((([a-z0-9]{1}[a-z0-9\-]{0,62}[a-z0-9]{1})|[a-z])\.)+[a-z]{2,6})|(\d{1,3}\.){3}\d{1,3}(\:\d{1,5})?)$/i, this.numberMin = 1, this.uppercaseCharMin = 1, this.lowercaseCharMin = 1, this.lengthMin = 0, this.lengthMax = 0, this.errorMsgClass = ".error-message", this.defaultErrorMessages = {
                    required: "This is a required field.",
                    email: "Please enter a valid email format",
                    length: "This field does not meet the necessary length requirements.",
                    uppercase: "This field does not contain enough uppercase letters.",
                    number: "This field does not contain enough numbers.",
                    exclude: "Certain characters are not allowed",
                    allow: "Certain characters are not allowed.",
                    match: "The value does not equal its matching field."
                }, c.call(this)
            }

            function c() {
                this.el.find('[data-validate-onload="true"]').each(function(a, b) {
                    h.call(this, null, o(b))
                }.bind(this))
            }

            function d(a) {
                a.preventDefault(), a.stopPropagation(), e.call(this, a)
            }

            function e(a) {
                a && a.currentTarget && "number" == typeof a.currentTarget.maxLength && a.currentTarget.value.length > a.currentTarget.maxLength - 1 && (a.currentTarget.value = a.currentTarget.value.slice(0, a.currentTarget.maxLength));
                var b = o(a.currentTarget);
                g.call(this, b, "keyup"), this.animateLabels && f.call(this, b), !a || 13 !== a.which && "submit" !== a.type || k.call(this)
            }

            function f(a) {
                var b = this.el.find('label[for="' + a.attr("name") + '"]');
                b.toggleClass("reveal", a.val() ? !0 : !1)
            }

            function g(a, b) {
                var c = a.data("validation"),
                    d = c ? c.rules : null,
                    e = !1;
                if (d && d.length) {
                    for (var f = 0; f < d.length; f++) "object" == typeof d[f] ? (d[f].validated = j.call(this, a, d[f]), d[f].validated || (e = !0)) : (e = !1, console.warn("Validation rule is not an object."));
                    try {
                        "demo" === a.val() && (e = !1)
                    } catch (g) {}
                    var h = this.el.find('label[for="' + a.attr("name") + '"]');
                    return e ? a.removeClass("valid") : (h.removeClass("invalid").addClass("reveal"), a.parent().removeClass("multiple-errors"), a.addClass("valid").removeClass("invalid").nextAll(this.errorMsgClass).first().removeClass("reveal")), a.trigger("validation", {
                        isInvalid: e,
                        eventType: b
                    }), e
                }
            }

            function h(a, b, c) {
                var d, e = a ? o(a.currentTarget) : b,
                    h = e.data("validation"),
                    i = h ? h.rules : null,
                    j = e.nextAll(this.errorMsgClass).first(),
                    k = void 0 !== c ? c : g.call(this, e, "blur"),
                    l = 0;
                if (i && i.optional) return this.animateLabels && f.call(this, e), !0;
                if (i && i.length) {
                    var m = this.el.find('label[for="' + e.attr("name") + '"]');
                    if (m.toggleClass("invalid", k), this.el.find("h4." + e.attr("name")).toggleClass("invalid", k), e.toggleClass("invalid", k), k) {
                        h.validated = !1;
                        for (var n = 0; n < i.length; n++) i[n].validated || (l++, d = n);
                        o(".save-sleeper").removeClass("disabled"), l > 1 ? (j.text(h.message || i[d].message || this.defaultErrorMessages[i[d].type]).addClass("reveal"), e.parent().addClass("multiple-errors")) : l && (j.text(i[d].message || this.defaultErrorMessages[i[d].type]).addClass("reveal"), e.parent().removeClass("multiple-errors"))
                    } else h.validated = !0, "string" == typeof e.val() && e.val(e.val().trim()), e.parent().removeClass("multiple-errors"), j.text("").removeClass("reveal");
                    return l > 0 ? !1 : !0
                }
            }

            function i(a) {
                if (a) {
                    var b = n(a, "currentTarget.type");
                    if ("number" === b) {
                        var c = a.which ? a.which : a.keyCode;
                        return c > 31 && (48 > c || c > 57) ? !1 : !0
                    }
                    return !0
                }
                return !0
            }

            function j(a, b) {
                var c, d = "string" == typeof a.val() ? a.val().trim() : a.val();
                if (a.toggleClass("empty", "" === d).siblings().toggleClass("empty", "" === d), d || a.toggleClass("empty", !0).siblings().toggleClass("empty", !0), a.hasClass("skip")) return a.removeClass("valid"), !0;
                if (b.optional) return !0;
                switch (b.type) {
                    case "required":
                        return "radio" === a.attr("type") && (d = this.el.find('input[name="' + a.attr("name") + '"]:checked').length), d ? !0 : !1;
                    case "email":
                        var e = b.expression ? b.expression : this.emailRegex;
                        return e.test(d);
                    case "length":
                        var f = b.min || this.lengthMin,
                            g = b.max || this.lengthMax;
                        return (!f || d.length >= f) && (!g || d.length <= g);
                    case "number":
                        var h = 0,
                            i = b.min || this.numberMin;
                        for (c = 0; c < d.length; c++) isNaN(d[c]) || h++;
                        return h >= i;
                    case "uppercase":
                        var j = 0,
                            k = b.min || this.uppercaseCharMin;
                        for (c = 0; c < d.length; c++) d[c] === d[c].toUpperCase() && d[c] !== d[c].toLowerCase() && j++;
                        return j >= k;
                    case "lowercase":
                        var l = 0,
                            m = b.min || this.lowercaseCharMin;
                        for (c = 0; c < d.length; c++) d[c] !== d[c].toUpperCase() && d[c] === d[c].toLowerCase() && l++;
                        return l >= m;
                    case "exclude":
                        for (c = 0; c < b.exclusions.length; c++)
                            if (d.indexOf(b.exclusions[c]) > -1) return !1;
                        return !0;
                    case "allow":
                        var n = 0,
                            o = "";
                        if (b.numbers && (n += (d.match(/[0-9]/g) || []).length), b.letters && (n += (d.match(/[a-zA-Z]/g) || []).length), b.special && b.special.length > 0) {
                            for (c = 0; c < b.special.length; c++) o += b.special[c];
                            n += (d.match(new RegExp("[" + o + "]", "g")) || []).length
                        }
                        return b.numbers && n !== d.length && d.match(/[a-zA-Z]/g), n === d.length;
                    case "match":
                        var p = this.el.find('[name="' + b.match + '"]');
                        return !p.hasClass("invalid") && p.val() === d;
                    default:
                        return !1
                }
            }

            function k(a, b) {
                var c = this.el.find("[data-validation]:not(.skip)"),
                    d = 0;
                c.each(function(a, b) {
                    h.call(this, null, o(b)) && d++
                }.bind(this)), this.formValidated = c.length === d, this.el.toggleClass("validated", this.formValidated), b && "function" == typeof b && b(this.formValidated)
            }
            var l = a("lavaca/ui/Widget"),
                m = a("app/utils/debounce"),
                n = a("mout/object/get"),
                o = (a("app/models/StateModel"), a("$")),
                p = l.extend(function() {
                    l.apply(this, arguments), setTimeout(b.bind(this), 0), this.el.find("input").hammer({
                        stop_browser_behavior: {
                            userSelect: !0
                        }
                    }).on("keyup paste", m(e.bind(this), 10)), this.el.find("input").on("keypress", i.bind(this)), this.el.find('input[type="radio"], select').hammer({
                        stop_browser_behavior: {
                            userSelect: !0
                        }
                    }).on("change", h.bind(this)), this.el.find("input, select").hammer({
                        stop_browser_behavior: {
                            userSelect: !0
                        }
                    }).on("blur", h.bind(this)), this.el.on("validateOnload", c.bind(this)), this.el.on("validateForm", k.bind(this)), this.el.on("submit", d.bind(this))
                }, {
                    dispose: function() {
                        return this.el.find("input").hammer({
                            stop_browser_behavior: {
                                userSelect: !0
                            }
                        }).on("keyup paste", e.bind(this)), this.el.find("input").off("keypress", i.bind(this)), this.el.find("select").hammer({
                            stop_browser_behavior: {
                                userSelect: !0
                            }
                        }).on("change", e.bind(this)), this.el.find("input, select").hammer({
                            stop_browser_behavior: {
                                userSelect: !0
                            }
                        }).on("blur", h.bind(this)), this.el.off("validateOnload", c.bind(this)), this.el.off("validateForm", k.bind(this)), this.el.off("submit", d.bind(this)), l.prototype.dispose.apply(this, arguments)
                    }
                });
            return p
        }), define("app/models/validations/login-validation", ["require"], function() {
            return {
                email: JSON.stringify({
                    validated: !1,
                    message: "Please enter a valid email format",
                    rules: [{
                        type: "required",
                        message: "Please enter a valid email format"
                    }, {
                        type: "email"
                    }, {
                        type: "exclude",
                        exclusions: [" "]
                    }, {
                        type: "length",
                        min: 6,
                        max: 256,
                        message: "Your password must be between 6 and 256 characters in length."
                    }]
                }),
                password: {
                    criteria: JSON.stringify({
                        validated: !1,
                        message: "The password is invalid.",
                        rules: [{
                            type: "required",
                            message: "Your password cannot be empty."
                        }]
                    })
                }
            }
        }), define("rdust!templates/pageviews/login", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div id="snap-drag-x"><section class="login-area" data-section="0"><div class="logo-container"><div class="logo"></div></div><div class="container"><div class="welcome-page"><h2>SleepIQ<sup>&reg;</sup> Technology</h2><p class="welcome-sub">Effortlessly tracks your sleep <br>and provides insights to sleep better.</p><span class="input-tip">Need to register your account?</span><button class="big" data-href="registration/order">Start Sleeping Better</button><div class="buttons-bottom"><span class="input-tip">Already have a SleepIQ account?</span> <button class="big white log-in">Log in</button><a href="http://www.sleepnumber.com/sn/en/sleepiq-sleep-tracker" target="_blank" class="big white">What is SleepIQ?</a><!-- <button class="big white what-is-sleepiq">What is SleepIQ?</button> --></div></div><div class="login-form form" data-form="login" data-animate-labels="true"><h2>Welcome to SleepIQ<sup>&reg;</sup></h2><div class="inputs"><div class="section"><div class="input-wrapper"><div class="input-blocker" data-id="0"></div><input data-id="0" name="email" placeholder="Email" maxlength="256" type="email" ').exists(b.get("email"), b, {
                        block: c
                    }, null).write(' data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" needsclick  tabindex="1" /><span class="clear"></span><div class="forgot-instructions"><span class="input-tip">Enter the email address associated with your account.</span></div><p class="error-message"></p></div><div class="input-wrapper password-wrapper"><div class="input-blocker" data-id="1"></div><input name="password" type="password" placeholder="Password" autocorrect="off" autocomplete="off" maxlength="30" data-id="1" ').exists(b.get("password"), b, {
                        block: d
                    }, null).write(' data-validation="').reference(b.getPath(!1, ["validations", "password", "criteria"]), b, "h").write('" needsclick tabindex="2"/><span class="clear"></span></div></div><div class="section remember"><div class="input-wrapper"><span class="remember"><input id="rememberme" type="checkbox" ').exists(b.get("email"), b, {
                        block: e
                    }, null).write(' tabindex="3"/><label for="rememberme">Remember Me</label></span><span class="link forgot" data-href="forgot-password">Forgot password</span></div></div></div><div class="submit-wrapper"><button class="submit" tabindex="4">Log in</button></div><div class="reset-password-wrapper"><button class="reset-password-submit">Reset Password</button></div></div><div class="links"><div class="link change-server">Change Server</div><div class="link go-back-previous">< Back</div></div></section><section id="server-list" data-section="1" ><div class="servers"></div></section></div></div>')
                }

                function c(a, b) {
                    return a.write(' data-validate-onload="true"  value="').reference(b.get("email"), b, "h").write('" ')
                }

                function d(a, b) {
                    return a.write(' data-validate-onload="true" value="').reference(b.get("password"), b, "h").write('" ')
                }

                function e(a) {
                    return a.write('checked="checked"')
                }
                return a.register("templates/pageviews/login", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/login", b, c)
                }
            }
        }), define("app/ui/views/pageviews/LoginView", ["require", "./BaseView", "app/models/AccountModel", "app/ui/views/childviews/ServerListView", "app/models/FamilyModel", "app/models/AuthModel", "app/models/StateModel", "lavaca/mvc/Router", "lavaca/fx/Transform", "lavaca/fx/Transition", "lavaca/net/Connectivity", "mout/object/get", "app/ui/widgets/FormValidator", "app/models/validations/login-validation", "rdust!templates/pageviews/login", "$", "app/utils/MixPanelManager"], function(a) {
            function b(a) {
                var b = a && a.currentTarget ? E(a.currentTarget).data("href") : !1;
                b && t.exec("/" + b)
            }

            function c(a) {
                try {
                    var b = E(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var c = b.prev();
                    c.val(""), c.removeClass("invalid valid"), c.focus()
                } catch (d) {
                    console.log(d)
                }
            }

            function d(a) {
                setTimeout(function() {
                    if (Modernizr.localstorage) {
                        var b = localStorage.getItem("siq.rememberme");
                        b && "" !== b && this.el.find("#rememberme").prop("checked", !0)
                    }
                    a || d.call(this, !0)
                }.bind(this), 600)
            }

            function e(a, b, c) {
                Modernizr.localstorage && (localStorage.setItem("siq.rememberme", a.prop("checked") ? b : ""), localStorage.setItem("siq.rememberpwd", a.prop("checked") ? c : ""))
            }

            function f() {
                this.isForgottenPassword = !0, this.el.addClass("reset-password-animate"), this.el.find('input[type="password"]').attr("disabled", !0)
            }

            function g() {
                this.el.addClass("log-in-animate")
            }

            function h() {
                this.isForgottenPassword = !1, this.el.removeClass("reset-password-animate scaled"), this.el.find('input[type="password"]').attr("disabled", !1)
            }

            function i(a) {
                var b, c = E(a.currentTarget);
                c && (c.hasClass("disabled") || (c.addClass("disabled"), setTimeout(function() {
                    this.el.find(".login-form").trigger("validateForm", function() {
                        var a = this.el.find('input[name="email"]'),
                            d = A(a.data().validation, "validated");
                        return d ? (d = this.el.find('input[name="email"]').val(), p.resetPassword(d).then(function() {
                            window.customAlert.alert("Check your email for your password reset link.", null, "Password Reset"), c.removeClass("disabled"), h.call(this)
                        }.bind(this), function(a) {
                            c.removeClass("disabled"), a && window.customAlert.alert(a)
                        }.bind(this)), void 0) : (this.el.find('input[name="email"]').addClass("invalid"), b = "Please enter a valid email address", window.customAlert.alert(b), c.removeClass("disabled"), void 0)
                    }.bind(this))
                }.bind(this), 100)))
            }

            function j() {
                Modernizr.hasble && Modernizr.isbleon ? (F.prototype.setRemoteStandAlone(), t.exec("/remote-stand-alone")) : Modernizr.hasble && !Modernizr.isbleon ? window.customAlert.alert("This functionality requires the Bluetooth on your device to be turned on.", null, "SleepIQ®", "OK") : Modernizr.hasble || window.customAlert.alert("This functionality requires Bluetooth Low Energy and is not available on this device.", null, "SleepIQ®", "OK")
            }

            function k() {
                this.isForgottenPassword && h.call(this)
            }

            function l() {
                setTimeout(function() {
                    E("button.submit").removeClass("disabled")
                }.bind(this), 2e3)
            }

            function m() {
                this.snapDrag.css(w, "translate3d(-" + this.snapDrag.width() + "px,0,0)"), this.isLeft = !this.isLeft, this.el.find("input.customServer").removeAttr("disabled")
            }

            function n() {
                this.isForgottenPassword && h.call(this), this.el.removeClass("log-in-animate")
            }
            var o = a("./BaseView"),
                p = a("app/models/AccountModel"),
                q = a("app/ui/views/childviews/ServerListView"),
                r = a("app/models/FamilyModel"),
                s = (a("app/models/AuthModel"), a("app/models/StateModel")),
                t = a("lavaca/mvc/Router"),
                u = a("lavaca/fx/Transform"),
                v = a("lavaca/fx/Transition"),
                w = u.cssProperty(),
                x = v.cssProperty(),
                y = x,
                z = a("lavaca/net/Connectivity"),
                A = a("mout/object/get"),
                B = a("app/ui/widgets/FormValidator"),
                C = a("app/models/validations/login-validation"),
                D = a("rdust!templates/pageviews/login"),
                E = a("$"),
                F = a("app/utils/MixPanelManager"),
                G = o.extend(function() {
                    o.apply(this, arguments), this.mapChildView({
                        ".servers": {
                            TView: q,
                            model: p
                        }
                    }), this.mapEvent({
                        self: {
                            keypress: this.onKeyPress
                        },
                        ".submit": {
                            tap: this.onTapSubmit
                        },
                        ".order-lookup": {
                            tap: this.onTapOrderLookup
                        },
                        ".input-blocker": {
                            tap: this.onInputTap
                        },
                        "[data-href]": {
                            tap: b
                        },
                        ".clear": {
                            tap: c
                        },
                        ".link.forgot": {
                            tap: f
                        },
                        ".log-in": {
                            tap: g
                        },
                        ".header .back-arrow": {
                            tap: h
                        },
                        ".reset-password-submit": {
                            tap: i
                        },
                        ".remote-stand-alone": {
                            tap: j
                        },
                        ".change-server": {
                            tap: m
                        },
                        ".go-back-previous": {
                            tap: n
                        },
                        ext: {
                            stateModel: {
                                object: s,
                                events: {
                                    backButton: k.bind(this),
                                    closeTermsModal: l.bind(this)
                                }
                            }
                        }
                    }), this.mapWidget({
                        ".login-form": {
                            TWidget: B
                        }
                    })
                }, {
                    className: "login",
                    isLeft: !0,
                    gestureLimit: 3,
                    isForgottenPassword: !1,
                    hasSetRememberMe: !1,
                    generateHtml: function(a) {
                        if (a.validations = C, Modernizr.localstorage) {
                            var b = localStorage.getItem("siq.rememberme"),
                                c = localStorage.getItem("siq.rememberpwd");
                            b && "" !== b && (a.email = b), c && "" != c && (a.password = c)
                        }
                        return new Promise(function(b) {
                            D.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        this.snapDrag = this.el.find("#snap-drag-x"), this.snapDrag.css(y, "0.5s"), Modernizr.android && (this.gestureLimit = 2), "undefined" != typeof cordova && cordova.plugins && cordova.plugins.Keyboard && cordova.plugins.Keyboard.disableScroll(!0), setTimeout(function() {
                            !Modernizr.desktop || "local" !== window.env && "test" !== window.env && "dev" !== window.env || E(".links .change-server").show()
                        }, 300), this.el.hammer({
                            pointers: 3,
                            drag_max_touches: 3
                        }).on("dragleft.login", this.onDragLeft.bind(this)), this.el.hammer({
                            pointers: 3,
                            drag_max_touches: 3
                        }).on("dragright.login", this.onDragRight.bind(this)), window.addEventListener("native.keyboardhide", this.onHideKeyboard.bind(this)), Modernizr.localstorage && (sessionStorage.hasSeenToast = !1), d.call(this), o.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    onKeyPress: function(a) {
                        13 == a.keyCode && ("checkbox" == E(":focus").attr("type") ? E(":focus").prop("checked", !E(":focus").prop("checked")) : this.onTapSubmit(a))
                    },
                    onTapSubmit: function(a) {
                        var b = E(a.currentTarget);
                        this.isForgottenPassword || b.hasClass("disabled") || b.hasClass("disabled") || (b.addClass("disabled"), this.el.find("input#rememberme").attr("disabled", !0), setTimeout(function() {
                            this.el.find(".login-form").trigger("validateForm", function() {
                                var a, c = this.el.find('input[name="email"]'),
                                    d = this.el.find('input[name="password"]'),
                                    f = A(c.data().validation, "validated"),
                                    g = this.el.find('input[name="password"]').val();
                                if ("demo" !== c.val() && "demo" !== d.val()) {
                                    if (!f) return this.el.find('input[name="email"]').addClass("invalid"), a = "Please enter your valid email address", window.customAlert.alert(a), b.removeClass("disabled"), this.el.find("input#rememberme").removeAttr("disabled"), F.prototype.trackLoggedInUser("", "", !1, g && "" === g.trim() || !g ? !1 : !0), void 0;
                                    if (g && "" === g.trim() || !g) return this.el.find('input[name="password"]').addClass("invalid"), window.customAlert.alert("Please enter your password."), b.removeClass("disabled"), this.el.find("input#rememberme").removeAttr("disabled"), F.prototype.trackLoggedInUser(c.val(), "", !1, !1), void 0
                                }
                                f = this.el.find('input[name="email"]').val();
                                var h = this.el.find("#rememberme");
                                e.call(this, h, f, g), p.login(f, g.trim()).then(function() {
                                    return r.fetch().then(function() {
                                        r.getSleepersOnBeds().then(function() {
                                            var a = r.getFamily()[r.getLoggedInUserIndex()];
                                            t.unlock(), a.get("isAccountOwner") && "0" === a.get("bedId") ? t.exec("/dashboard") : "0" === a.get("bedId") ? t.exec("/dashboard") : t.exec("/user/" + a.get("sleeperId")), setTimeout(function() {
                                                b.removeClass("disabled")
                                            }, 3500)
                                        }.bind(this), function() {
                                            b.removeClass("disabled"), t.unlock(), t.exec("/dashboard")
                                        })
                                    }, function() {
                                        b.removeClass("disabled"), t.unlock(), t.exec("/dashboard")
                                    })
                                }.bind(this), function(a) {
                                    if (console.log("Connection Error: ", a, z.isOffline()), this.el.find("input#rememberme").removeAttr("disabled"), b.removeClass("disabled"), a && 409 === a) return b.addClass("disabled"), t.exec("/modals/accept-terms", null, {
                                        login: !0,
                                        username: f,
                                        password: g
                                    }), void 0;
                                    if (!a || 404 !== a && 500 !== a && 503 !== a || window.customAlert("Pardon us. We are experiencing technical difficulties; please check back later."), z.isOffline()) {
                                        var c = "You currently do not have internet connectivity. Please check your ";
                                        c += Modernizr.desktop ? "internet settings." : "cellular network or internet settings.", window.customAlert.alert(c, null, "Connectivity Error")
                                    } else window.customAlert.alert(a)
                                }.bind(this))
                            }.bind(this))
                        }.bind(this), 100))
                    },
                    onInputTap: function(a) {
                        this.el.addClass("scaled");
                        var b = a.currentTarget.dataset.id,
                            c = this.el.find('input[data-id="' + b + '"]');
                        this.isForgottenPassword && "password" === c.attr("name") || c.focus()
                    },
                    onHideKeyboard: function() {
                        setTimeout(function() {
                            var a = A(cordova, "plugins.Keyboard");
                            a && !a.isVisible ? this.el.removeClass("scaled") : a || this.el.removeClass("scaled")
                        }.bind(this), 300)
                    },
                    onTapOrderLookup: function() {
                        t.exec("/order-lookup")
                    },
                    onDragLeft: function(a) {
                        this.preventDefault(a), this.isForgottenPassword || this.isLeft && a.gesture.touches.length >= this.gestureLimit && (this.snapDrag.css(w, "translate3d(-" + this.snapDrag.width() + "px,0,0)"), this.isLeft = !this.isLeft, this.el.find("input.customServer").removeAttr("disabled"))
                    },
                    onDragRight: function(a) {
                        this.preventDefault(a), this.isForgottenPassword || this.isLeft || (this.resetViews(), this.el.find("input.customServer").attr("disabled", "true"))
                    },
                    preventDefault: function(a) {
                        a.preventDefault(), a.stopPropagation(), a.gesture && a.gesture.preventDefault()
                    },
                    resetViews: function() {
                        this.snapDrag.css(w, "translate3d(0,0,0)"), this.isLeft = !this.isLeft
                    },
                    dispose: function() {
                        "undefined" != typeof cordova && cordova.plugins && cordova.plugins.Keyboard && cordova.plugins.Keyboard.disableScroll(!1), this.el.hammer().off("dragleft.login", this.onDragLeft.bind(this)), this.el.hammer().off("dragright.login", this.onDragRight.bind(this)), o.prototype.dispose.apply(this, arguments)
                    }
                });
            return G
        }), define("rdust!templates/controlviews/tab-bar", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="tab').helper("eq", b, {
                        block: c
                    }, {
                        key: b.get("activeView"),
                        value: "sleep"
                    }).write('" data-url="sleep"><div class="tab-label-icon"><i>☾</i><span>Sleep</span></div></div><div class="tab').helper("eq", b, {
                        block: d
                    }, {
                        key: b.get("activeView"),
                        value: "trends"
                    }).write('" data-url="trends"><div class="tab-label-icon"><i>↗</i><span>Trends</span></div></div><div class="tab').helper("eq", b, {
                        block: e
                    }, {
                        key: b.get("activeView"),
                        value: "goals"
                    }).write('" data-url="goals"><div class="tab-label-icon"><i>⚑</i><span>Goals</span></div></div><div class="tab').helper("eq", b, {
                        block: f
                    }, {
                        key: b.get("activeView"),
                        value: "routine"
                    }).write('" data-url="routine"><div class="tab-label-icon"><i>♥</i><span>Routine</span></div></div><div class="tab').helper("eq", b, {
                        block: g
                    }, {
                        key: b.get("activeView"),
                        value: "monster"
                    }).write('" data-url="monster"><div class="tab-label-icon"><i>👾</i><span>Monster</span></div></div>')
                }

                function c(a) {
                    return a.write(" selected")
                }

                function d(a) {
                    return a.write(" selected")
                }

                function e(a) {
                    return a.write(" selected")
                }

                function f(a) {
                    return a.write(" selected")
                }

                function g(a) {
                    return a.write(" selected")
                }
                return a.register("templates/controlviews/tab-bar", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/controlviews/tab-bar", b, c)
                }
            }
        }), define("app/ui/views/controlviews/TabBarView", ["require", "lavaca/mvc/View", "app/models/FamilyModel", "app/models/StateModel", "app/utils/MixPanelManager", "$", "rdust!templates/controlviews/tab-bar"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("app/models/FamilyModel"),
                d = a("app/models/StateModel"),
                e = a("app/utils/MixPanelManager");
            a("$");
            var f = a("rdust!templates/controlviews/tab-bar"),
                g = b.extend(function() {
                    b.apply(this, arguments), this.mapEvent({
                        ".tab": {
                            tap: this.onTapTab
                        },
                        ext: {
                            stateModel: {
                                object: d,
                                events: {
                                    resume: this.onResume.bind(this),
                                    selectedUserChange: this.onUserChange.bind(this)
                                }
                            }
                        }
                    })
                }, {
                    className: "tab-bar",
                    autoRender: !0,
                    onTapTab: function(a) {
                        var b = a.currentTarget.dataset.url;
                        "monster" == b ? (e.prototype.trackMonsterDetectorOpened(), navigator && navigator.cameraWebview && navigator.cameraWebview.start()) : (this.el.find(a.currentTarget).addClass("selected").siblings().removeClass("selected"), this.model.set("selectedView", b), this.model.trigger("tab-tapped"))
                    },
                    onResume: function() {
                        d.isNewFetchDate(new Date) && this.model && this.model.refetchOnResume()
                    },
                    generateHtml: function(a) {
                        return this.onUserChange(), new Promise(function(b) {
                            f.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onUserChange: function() {
                        var a = this.model.get("activeView"),
                            b = c.getSelectedUser();
                        this.el.find("[data-url=" + a + "]").addClass("selected").siblings().removeClass("selected"), this.el.attr("data-type", b && b.isChild ? "child" : "parent")
                    }
                });
            return g
        }), define("rdust!templates/childviews/LoadingAnimationView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="label">').reference(b.get("label"), b, "h", ["s"]).write("</div>").exists(b.get("ptr"), b, {
                        block: c
                    }, null).write('<div class="svg-wrapper" style="margin: -').reference(b.get("maginTop"), b, "h").write("px 0 0 -").reference(b.get("maginLeft"), b, "h").write('px;"><svg width="').reference(b.get("width"), b, "h").write('" height="').reference(b.get("height"), b, "h").write('">').section(b.get("items"), b, {
                        block: d
                    }, null).write("</svg></div>")
                }

                function c(a, b) {
                    return a.write('<div class="loader-dots" style="margin: -').reference(b.get("maginTop"), b, "h").write("px 0 0 -").reference(b.get("maginLeft"), b, "h").write('px;"><div class="dot-wrap"><div class="dot"></div></div><div class="dot-wrap"><div class="dot"></div></div><div class="dot-wrap"><div class="dot"></div></div></div> </div>')
                }

                function d(a, b) {
                    return a.write('<circle cx="').reference(b.get("xPos"), b, "h").write('" cy="').reference(b.get("yPos"), b, "h").write('" r="').reference(b.get("radius"), b, "h").write('"><animate attributeName="r" values="0;').reference(b.get("radius"), b, "h").write(";").reference(b.get("radius"), b, "h").write(";").reference(b.get("radius"), b, "h").write(';0" begin="').reference(b.get("animationBegin"), b, "h").write('ms" dur="').reference(b.get("animationDuration"), b, "h").write('ms" repeatCount="indefinite"/></circle>')
                }
                return a.register("templates/childviews/LoadingAnimationView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/LoadingAnimationView", b, c)
                }
            }
        }), define("app/ui/views/childviews/LoadingAnimationView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/LoadingAnimationView"], function(a) {
            function b() {
                var a = {};
                if (this.el) {
                    a.label = this.el.data("label") || "", a.dotCount = Number(this.el.data("dotcount") || 3), a.dotSize = Number(this.el.data("dotsize") || 8), a.dotSpacing = Number(this.el.data("dotspacing") || 6), a.animationDuration = Number(this.el.data("animationduration") || 1e3), a.animationGap = Number(this.el.data("animationgap") || 200), a.width = a.dotSize * a.dotCount + a.dotSpacing * a.dotCount + 3, a.height = a.dotSize + 3, a.maginLeft = a.width / 2, a.maginTop = a.height / 2 + 1, a.radius = a.dotSize / 2, a.xPos = a.radius, a.yPos = a.radius, a.animationBegin = 0, a.items = [], a.ptr = this.el.data("ptr") || !1;
                    for (var b = 0; b < a.dotCount; b++) {
                        var c = {};
                        c.xPos = a.dotSize * b + a.dotSpacing * b + a.radius, c.yPos = a.yPos, c.radius = a.radius, c.animationBegin = a.animationGap * b, c.animationDuration = a.animationDuration, a.items.push(c)
                    }
                    return a
                }
            }
            var c = a("lavaca/mvc/View"),
                d = a("rdust!templates/childviews/LoadingAnimationView"),
                e = c.extend(function() {
                    c.apply(this, arguments)
                }, {
                    autoRender: !0,
                    template: "templates/childviews/LoadingAnimationView",
                    className: "loading-animation-view",
                    generateHtml: function(a) {
                        return a = b.call(this), new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return e
        }), define("rdust!templates/pageviews/root-tab-bar", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="tab-wrapper"><div class="selected-tab"></div></div><div class="tab-bar"></div><div class="cover"><div class="loading-animation-view"></div><div class="loading-text">Loading</div></div>')
                }
                return a.register("templates/pageviews/root-tab-bar", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/root-tab-bar", b, c)
                }
            }
        }), define("app/ui/views/pageviews/RootTabBarView", ["require", "./BaseView", "app/ui/views/controlviews/TabBarView", "app/models/StateModel", "app/ui/views/childviews/LoadingAnimationView", "rdust!templates/pageviews/root-tab-bar"], function(a) {
            var b = a("./BaseView"),
                c = a("app/ui/views/controlviews/TabBarView"),
                d = a("app/models/StateModel"),
                e = (a("app/ui/views/childviews/LoadingAnimationView"), a("rdust!templates/pageviews/root-tab-bar")),
                f = b.extend(function() {
                    b.apply(this, arguments);
                    var a = this.model.getChildView(),
                        e = this.model.getChildViewModel();
                    this.mapChildView({
                        ".selected-tab": {
                            TView: a,
                            model: e
                        },
                        ".tab-bar": {
                            TView: c,
                            model: this.model
                        }
                    }), this.mapEvent({
                        model: {
                            "tab-tapped": this.selectTab
                        },
                        ext: {
                            stateModel: {
                                object: d,
                                events: {
                                    selectedUserChange: this.onUserChange.bind(this)
                                }
                            }
                        }
                    })
                }, {
                    className: "root",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            e.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onUserChange: function() {
                        this.model.apply({
                            selectedView: "sleep",
                            activeView: ""
                        }), this.model.disposeOfUser(), this.selectTab()
                    },
                    selectTab: function() {
                        var a = this.model.getChildView(),
                            b = this.model.getChildViewModel();
                        if (a && b) {
                            var c = this.getChildViews(".selected-tab");
                            c && c.forEach(function(a) {
                                a.dispose()
                            }), this.mapChildView({
                                ".selected-tab": {
                                    TView: a,
                                    model: b
                                }
                            }), this.render(".tab-wrapper")
                        }
                    }
                });
            return f
        }), define("app/ui/widgets/SlidingTabBarWidget", ["require", "lavaca/ui/Widget", "$"], function(a) {
            function b(a) {
                if (0 === this.el.find(".segmented-control-tabs").length && this.reinitCount < 3) return setTimeout(function() {
                    b.call(this)
                }.bind(this), 500), this.reinitCount++, void 0;
                var e = this.el.find(".segmented-control-tab-item.on");
                e = e && e.data("segmentIndex") ? e.data("segmentIndex") : 0, this._currentIndex = e, f.call(this), a || (this.el.find(".segmented-control-tab-item").on("tap." + this.id, d.bind(this)), k(window).on("resize." + this.id, c.bind(this)), k(window).on("capabilitiesUpdateModernizr." + this.id, c.bind(this)))
            }

            function c() {
                e.call(this)
            }

            function d(a) {
                this.el.attr("data-tab", a.currentTarget.dataset.tab), this.el.data("tab", a.currentTarget.dataset.tab), i.call(this, this.el.find(a.currentTarget).attr("data-segment-index")), this.el.trigger("tab-tapped", a)
            }

            function e() {
                var a = g.call(this, this._currentIndex);
                if (a.length > 0) {
                    var b = a.width(),
                        c = a.position().left + parseInt(a.css("marginLeft"), 10) + parseInt(a.css("paddingLeft"), 10);
                    this._bar.css({
                        width: b + "px",
                        left: c + "px"
                    })
                }
            }

            function f() {
                this.el.find(".segmented-control-tabs").append(k("<div>").addClass("bar")), this._bar = this.el.find(".segmented-control-tabs .bar"), e.call(this), this._bar.addClass("show")
            }

            function g(a) {
                return this.el.find('.segmented-control-tab-item[data-segment-index="' + a + '"]')
            }

            function h(a) {
                return this.el.find('.segmented-control-content-item[data-segment-index="' + a + '"]')
            }

            function i(a) {
                this._currentIndex !== a && (g.call(this, this._currentIndex).removeClass("on"), h.call(this, this._currentIndex).removeClass("on"), this._currentIndex = a, g.call(this, this._currentIndex).addClass("on"), h.call(this, this._currentIndex).addClass("on"), e.call(this), this.el.trigger("tab-changed-index"))
            }
            var j = a("lavaca/ui/Widget"),
                k = a("$"),
                l = j.extend(function() {
                    j.apply(this, arguments), setTimeout(b.bind(this), 10)
                }, {
                    reinitCount: 0,
                    dispose: function() {
                        return this.el.find(".segmented-control-tab-item").off("tap." + this.id, d.bind(this)), k(window).off("resize." + this.id), k(window).off("slidingTabBar.recalculate" + this.id), j.prototype.dispose.apply(this, arguments)
                    },
                    update: function() {
                        0 === this.el.find(".segmented-control-tabs .bar").length ? b.call(this, !0) : e.call(this)
                    }
                });
            return l
        }), define("rdust!templates/controlviews/toast", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="toast"><div class="toast-message"><p>Set up your new SleepNumber<sup>&reg;</sup> bed<br>in remote settings.</p></div></div>')
                }
                return a.register("templates/controlviews/toast", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/controlviews/toast", b, c)
                }
            }
        }), define("app/ui/views/controlviews/toast", ["require", "lavaca/mvc/View", "app/models/StateModel", "rdust!templates/controlviews/toast"], function(a) {
            function b() {}

            function c(a) {
                var b = a && a.message ? a.message : "<p>Set up your new SleepNumber<sup>&reg;</sup> bed<br>in remote settings.</p>";
                this.toastQueue.push(b), d.call(this)
            }

            function d() {
                if (!this.isToasting && this.toastQueue && this.toastQueue.length >= 1) {
                    this.isToasting = !0;
                    var a = this.toastQueue.shift();
                    e.call(this, a)
                }
            }

            function e(a) {
                var b = this.el.find(".toast"),
                    c = this.el.find(".toast-message");
                c.html(a), b.addClass("lets-toast"), setTimeout(function() {
                    b.removeClass("lets-toast"), setTimeout(function() {
                        this.isToasting = !1, d.call(this)
                    }.bind(this), 300)
                }.bind(this), 5e3)
            }
            var f = a("lavaca/mvc/View"),
                g = a("app/models/StateModel"),
                h = a("rdust!templates/controlviews/toast"),
                i = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        ".toast-message": {
                            tap: b
                        }
                    }), b.call(this), g.on("toggleToast", c.bind(this))
                }, {
                    autoRender: !0,
                    template: "templates/controlviews/toast",
                    className: "toast",
                    toastQueue: [],
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            h.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return i
        }), define("rdust!templates/childviews/sleep", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/header", b, {
                        pageTitle: c
                    }).write('<div id="toast-container"></div><div class="date-bar"><h1 class="date navigation ').exists(b.get("formattedDate"), b, {
                        block: d
                    }, null).write('">').exists(b.get("formattedLabel"), b, {
                        block: e
                    }, null).reference(b.get("formattedDate"), b, "h", ["s"]).write('&emsp;</h1><div class="type-selector"><div class="selection last-night conceal">').helper("select", b, {
                        block: f
                    }, {
                        key: j
                    }).write('<div class="tap-selection-area" data-type="last"></div></div><div class="selection ').helper("eq", b, {
                        block: k
                    }, {
                        key: l,
                        value: "day"
                    }).write('" data-type="day">Daily<div class="tap-selection-area" data-type="day"></div></div><div class="selection ').helper("eq", b, {
                        block: m
                    }, {
                        key: n,
                        value: "week"
                    }).write('" data-type="week">Weekly<div class="tap-selection-area" data-type="week"></div></div><div class="selection ').helper("eq", b, {
                        block: o
                    }, {
                        key: p,
                        value: "month"
                    }).write('" data-type="month">Monthly<div class="tap-selection-area" data-type="month"></div></div></div><section id="desktop-controls" ><button data-direction="left" class="navigate-btn disabled previous"></button><button data-direction="right" class="navigate-btn disabled next"></button></section>').helper("eq", b, {
                        block: q
                    }, {
                        key: J,
                        value: "day"
                    }).write('<div class="divider"></div></div><div class="ptr-wrap"><div class="loader-mask"></div><div class="ptr-loader" data-label="Updating Data" data-ptr="true"></div><div class="wrap"><div class="fader"><div class="slide-container"><div class="slide"></div><div class="slide"></div><div class="slide"></div></div></div>').notexists(b.get("hasFetched"), b, {
                        block: K
                    }, null).write("</div></div>")
                }

                function c(a, b) {
                    return a.reference(b.get("firstName"), b, "h").write("&rsquo;s Sleep")
                }

                function d(a) {
                    return a.write("has-date")
                }

                function e(a, b) {
                    return a.write('<span class="xl-label">').reference(b.get("formattedLabel"), b, "h").write("</span>")
                }

                function f(a, b) {
                    return a.helper("eq", b, {
                        block: g
                    }, {
                        value: "day"
                    }).helper("eq", b, {
                        block: h
                    }, {
                        value: "week"
                    }).helper("eq", b, {
                        block: i
                    }, {
                        value: "month"
                    })
                }

                function g(a) {
                    return a.write("Last Night")
                }

                function h(a) {
                    return a.write("This Week")
                }

                function i(a) {
                    return a.write("This Month")
                }

                function j(a, b) {
                    return a.reference(b.get("dataType"), b, "h")
                }

                function k(a) {
                    return a.write("selected")
                }

                function l(a, b) {
                    return a.reference(b.get("dataType"), b, "h")
                }

                function m(a) {
                    return a.write("selected")
                }

                function n(a, b) {
                    return a.reference(b.get("dataType"), b, "h")
                }

                function o(a) {
                    return a.write("selected")
                }

                function p(a, b) {
                    return a.reference(b.get("dataType"), b, "h")
                }

                function q(a, b) {
                    return a.notexists(b.get("isChildLoggedIn"), b, {
                        block: r
                    }, null)
                }

                function r(a, b) {
                    return a.write('<section id="app-toggle-chart" class="').exists(b.get("isChild"), b, {
                        block: s
                    }, null).write(" ").exists(b.get("noData"), b, {
                        block: t
                    }, null).write('">').exists(b.get("noData"), b, {
                        "else": u,
                        block: I
                    }, null).write("</section>")
                }

                function s(a) {
                    return a.write("is-child")
                }

                function t(a) {
                    return a.write("toggle-no-data")
                }

                function u(a, b) {
                    return a.write('<span class="toggle">').reference(b.get("toggleView"), b, "h").write("</span>").helper("select", b, {
                        block: v
                    }, {
                        key: b.get("toggleView")
                    })
                }

                function v(a, b) {
                    return a.helper("eq", b, {
                        block: w
                    }, {
                        value: "Chart View"
                    }).helper("eq", b, {
                        block: x
                    }, {
                        value: "Summary View"
                    })
                }

                function w(a) {
                    return a.write('<div class="icon chart-view"></div>')
                }

                function x(a, b) {
                    return a.exists(b.get("sleepNumber"), b, {
                        "else": y,
                        block: z
                    }, null)
                }

                function y(a) {
                    return a.write('<div class="icon summary-default">')
                }

                function z(a, b) {
                    return a.helper("select", b, {
                        block: A
                    }, {
                        key: b.get("sleepNumber")
                    })
                }

                function A(a, b) {
                    return a.exists(b.get("isChild"), b, {
                        "else": B,
                        block: E
                    }, null).helper("default", b, {
                        block: H
                    }, null)
                }

                function B(a, b) {
                    return a.helper("gt", b, {
                        block: C
                    }, {
                        value: 69
                    }).helper("gt", b, {
                        block: D
                    }, {
                        value: 49
                    })
                }

                function C(a, b) {
                    return a.write('<div class="icon summary green">').reference(b.get("sleepNumber"), b, "h").write("</div>")
                }

                function D(a, b) {
                    return a.write('<div class="icon summary orange">').reference(b.get("sleepNumber"), b, "h").write("</div>")
                }

                function E(a, b) {
                    return a.helper("gt", b, {
                        block: F
                    }, {
                        value: 55
                    }).helper("gt", b, {
                        block: G
                    }, {
                        value: 35
                    })
                }

                function F(a, b) {
                    return a.write('<div class="icon summary green">').reference(b.get("sleepNumber"), b, "h").write("</div>")
                }

                function G(a, b) {
                    return a.write('<div class="icon summary orange">').reference(b.get("sleepNumber"), b, "h").write("</div>")
                }

                function H(a, b) {
                    return a.write('<div class="icon summary red">').reference(b.get("sleepNumber"), b, "h").write("</div>")
                }

                function I(a) {
                    return a.write("no data")
                }

                function J(a, b) {
                    return a.reference(b.get("dataType"), b, "h")
                }

                function K(a) {
                    return a.write('<div class="loading-animation-view"></div><div class="loading-text">Loading</div>')
                }
                return a.register("templates/childviews/sleep", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/sleep", b, c)
                }
            }
        }), define("app/ui/widgets/PillChart", ["require", "lavaca/ui/Widget", "app/utils/debounce", "lavaca/fx/Transform", "$"], function(a) {
            function b(a) {
                var c = Number(this.el.data("radius"));
                this.pills = this.el.find(".pill"), this.rate = i(), console.log(this.pillHeight * this.rate), this.radius = c || (this.el.height() - 2 * this.pillHeight * this.rate) / 2, this.cx = this.el.height() / 2, this.cy = this.el.height() / 2, f.call(this, 0);
                var d = this.el.height();
                a || setTimeout(function() {
                    this.el && d !== this.el.height && b.call(this, !0)
                }.bind(this), 500)
            }

            function c() {
                if (n(window).on("resize.pillChart" + this.id, k(this.onResize.bind(this), 10)), 0 == this.el.height() && this.retryCount < 10) return setTimeout(c.bind(this), 500), this.retryCount++, void 0;
                this.hasAnimated = !1;
                var a = n('<div class="pill-chart-wrapper"></div>'),
                    b = Number(this.el.data("radius"));
                Number(this.el.data("sleepIq")), this.pillValue = Number(this.el.data("value") || 0), this.numPills = Number(this.el.data("pills") || 24), this.hasOpenSide = Number(this.el.data("open") || !1), this.openPills = Number(this.el.data("openPills") || 0), this.pillWidth = Number(this.el.data("pill-width") || 2), this.pillHeight = Number(this.el.data("pill-height") || 6), this.rotationAngle = Number(this.el.data("rotation") || 0), this.valueRange = Number(this.el.data("valueRange") || 100), this.flag = this.el.data("flag") ? Number(this.el.data("flag")) : null, this.flagName = this.el.data("flag-name") ? this.el.data("flag-name") : null, d.call(this);
                for (var e = 1; e <= this.numPills; e++) a.append('<div class="pill" data-order="' + e + '"></div>');
                a.css(m, "rotate(" + this.rotationAngle + "deg)"), this.el.append(a), this.prevNumLitPills = 0, this.pills = this.el.find(".pill"), this.rate = i(), this.degreeRate = 360 / (this.numPills + this.openPills), this.radius = b || (this.el.height() - 2 * this.pillHeight * this.rate) / 2, this.cx = this.el.height() / 2, this.cy = this.el.height() / 2, f.call(this, 0), setTimeout(function() {
                    this.el.trigger("widgetAdded", this)
                }.bind(this), 50), this.flag && this.setFlaggedPill(this.flag, this.flagName)
            }

            function d() {
                this.numLitPills = e.call(this, this.pillValue)
            }

            function e(a) {
                return Math.ceil(a * this.numPills / this.valueRange)
            }

            function f(a) {
                if ("number" != typeof a && (a = 0), 10 > a)
                    if (this.el && this.el.width() > 0 || this.el && this.el.height > 0) {
                        var b = -90;
                        this.pills.each(function(a, c) {
                            c = n(c);
                            var d = a * this.degreeRate * (Math.PI / 180),
                                e = this.cx + this.radius * Math.cos(d),
                                f = this.cy + this.radius * Math.sin(d);
                            e = 100 * (e / this.el.width()), f = 100 * (f / this.el.height()), c.data("deg", b).attr("style", "left:" + e + "%; top:" + f + "%; " + m + ": scale(1) rotate(" + b + "deg)  translateX(-50%);"), c.css("height", this.pillHeight / 10 + "rem"), c.width(this.pillWidth), b += this.degreeRate
                        }.bind(this)), "auto" == this.el.data("animate") && h.call(this)
                    } else setTimeout(function() {
                        f.call(this, a + 1)
                    }.bind(this), 500)
            }

            function g() {
                clearInterval(this.animatePills), this.prevNumLitPills = this.numLitPills, this.animating = !1, this.el.trigger("pillsComplete")
            }

            function h() {
                var a = 0,
                    b = 1.2,
                    c = 1,
                    d = this.numLitPills > this.prevNumLitPills ? 1 : -1,
                    e = Math.abs(this.numLitPills - this.prevNumLitPills),
                    f = this.prevNumLitPills;
                this.prevNumLitPills === this.numLitPills || this.hasAnimated || (this.animating = !0, this.animatePills = setInterval(function() {
                    "undefined" == typeof f && (f = 0);
                    var h = this.pills ? n(this.pills[f]) : "";
                    e > a && h ? (1 === d ? (h.addClass("lit").css(m, "rotate(" + h.data("deg") + "deg) translateX(-50%) scale(" + b + ")"), setTimeout(function() {
                        h.css(m, "rotate(" + h.data("deg") + "deg) translateX(-50%) scale(" + c + ")")
                    }, 50)) : h.removeClass("lit"), a++, f += d) : (-1 === d && h.removeClass("lit"), g.call(this))
                }.bind(this), 50), this.hasAnimated = !0)
            }

            function i() {
                try {
                    var a = 10,
                        b = 320,
                        c = window.innerWidth;
                    return window.innerHeight, Modernizr.desktop && 800 >= c ? 1.9 : c >= 600 && 800 > c ? (b / c * a + a) / 10 : c >= 800 ? (b / c * a + 1.4 * a) / 10 : c / b * a / 10
                } catch (d) {
                    return 1
                }
            }
            var j = a("lavaca/ui/Widget"),
                k = a("app/utils/debounce"),
                l = a("lavaca/fx/Transform"),
                m = l.cssProperty(),
                n = a("$"),
                o = j.extend(function() {
                    j.apply(this, arguments), setTimeout(c.bind(this), 0)
                }, {
                    retryCount: 0,
                    hasAnimated: !1,
                    dispose: function() {
                        return n(window).off("resize.pillChart" + this.id), j.prototype.dispose.apply(this, arguments)
                    },
                    update: function(a) {
                        this.animating || "undefined" == typeof this.pills || (a ? (this.pillValue = Number(a), this.el.attr("data-value", a)) : this.pillValue = Number(this.el.attr("data-value") || 0), this.hasAnimated = !1, d.call(this), h.call(this))
                    },
                    setFlaggedPill: function(a, b) {
                        var c = e.call(this, a);
                        this.el.find("." + b).removeClass(b), this.el.find('[data-order="' + c + '"]').addClass(b)
                    },
                    onResize: function() {
                        b.call(this)
                    }
                });
            return o
        }), define("app/models/viewmodels/CoachmarkViewModel", ["require", "lavaca/mvc/Model", "app/models/FamilyModel"], function(a) {
            var b = a("lavaca/mvc/Model");
            a("app/models/FamilyModel");
            var c = b.extend(function() {
                b.call(this, arguments), this.apply({
                    "routine-list": {
                        step: 1,
                        message: "Drag items in nightly routine in the order your child will complete them.",
                        images: {
                            phone: "CM-BedtimeRoutine-List-Phone.png",
                            tablet: "CM-BedtimeRoutine-List-Tablet.png",
                            desktop: "CM-BedtimeRoutine-Countdown-Desktop.png"
                        },
                        pages: {
                            message: ["Swipe left on an item to access edit and delete functions."],
                            next: ["routine-list-swipe"],
                            desktopMessage: ["Hover over an item to access edit and delete functions."],
                            nextDesktop: ["routine-list-desktop"]
                        }
                    },
                    "routine-time": {
                        step: 0,
                        message: "Check off each nightly sleep item once they are complete.",
                        images: {
                            phone: "CM-BedtimeRoutine-Countdown-Phone.png",
                            tablet: "CM-BedtimeRoutine-Countdown-Tablet.png",
                            desktop: "CM-BedtimeRoutine-Countdown-Tablet.png"
                        }
                    },
                    "family-sleep": {
                        step: 0,
                        message: "Tap to see additional sleep details.",
                        images: {
                            phone: "CM-FamilySleep-Phone.png",
                            tablet: "CM-FamilySleep-Tablet.png",
                            desktop: "CM-FamilySleep-Tablet.png"
                        }
                    },
                    "kid-monthly": {
                        step: 0,
                        message: "Your child accomplished his/her goal this day!",
                        images: {
                            phone: "CM-KidMonthly-Phone.png",
                            tablet: "CM-KidMonthly-Tablet.png",
                            desktop: "CM-KidMonthly-Tablet.png"
                        }
                    },
                    "adult-daily": {
                        step: 1,
                        message: "Swipe right to view sleep data from previous nights.",
                        images: {
                            phone: "CM-AdultDaily-Phone.png",
                            tablet: "CM-AdultDaily-Tablet.png",
                            desktop: "CM-AdultDaily-Tablet.png"
                        },
                        desktopMessage: "Click the arrows to navigate through nights.",
                        pages: {
                            message: ["Swipe left to see more details about your sleep.", 'Tap the word "Day" to view weekly and monthly sleep data.'],
                            next: ["adult-daily-left", "adult-daily-day"],
                            desktopMessage: ['Click the word "Day" to navigate to weekly and monthly sleep data.'],
                            nextDesktop: ["adult-daily-day"]
                        }
                    },
                    "adult-weekly": {
                        step: 0,
                        images: {
                            phone: "CM-AdultWeekly-Phone.png",
                            tablet: "CM-AdultWeekly-Tablet.png",
                            desktop: "CM-AdultWeekly-Tablet.png"
                        },
                        message: "Indicates you tracked activity for this day."
                    }
                })
            }, {
                pages: {},
                step: 0,
                updateModel: function(a) {
                    var b = this.get(a),
                        c = b.message || "";
                    b && (this.step = b.step || 0, Modernizr.desktop && (c = b.desktopMessage || b.message), this.pages = b.pages || {}, this.step = 0, this.set("currentPage", a), this.set("message", c), this.set("images", b.images))
                },
                reset: function() {
                    this.pages = {}, this.step = 0
                }
            });
            return c
        }), define("rdust!templates/childviews/CoachmarkView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="coachmark"><div class="coach-toast"><div class="cm-message">').reference(b.get("message"), b, "h").write('</div><span class="cm-done"></span></div><div class="coachmark-bkg" data-current-page="').reference(b.get("currentPage"), b, "h").write('" style="height:').reference(b.get("scrHeight"), b, "h").write('px;"><div class="foreground"><div class="cm-circle"></div></div><div class="coachmark-wrap">').section(b.get("images"), b, {
                        block: c
                    }, null).write("</div></div></div>")
                }

                function c(a, b) {
                    return a.write('<img class="phone" src="./assets/img/').reference(b.get("phone"), b, "h").write('"><img class="tablet" src="./assets/img/').reference(b.get("tablet"), b, "h").write('" /><img class="desktop" src="./assets/img/').reference(b.get("desktop"), b, "h").write('" />')
                }
                return a.register("templates/childviews/CoachmarkView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/CoachmarkView", b, c)
                }
            }
        }), define("app/ui/views/childviews/CoachmarkView", ["require", "lavaca/mvc/View", "app/models/viewmodels/CoachmarkViewModel", "app/utils/debounce", "app/models/StateModel", "rdust!templates/childviews/CoachmarkView"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("app/models/viewmodels/CoachmarkViewModel"),
                d = a("app/utils/debounce"),
                e = (a("app/models/StateModel"), a("rdust!templates/childviews/CoachmarkView")),
                f = b.extend(function() {
                    b.apply(this, arguments), this.mapEvent({
                        ".coachmark": {
                            tap: this.handleTouch
                        }
                    })
                }, {
                    className: "coachmark",
                    autoRender: !0,
                    currentView: void 0,
                    offset: 68,
                    retryCount: 0,
                    generateHtml: function(a) {
                        return a = a || {}, a.scrHeight = window.innerHeight - this.offset, new Promise(function(b) {
                            e.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        $(window).on("resize.coachmarks" + this.id, d(this.onResize.bind(this), 100)), this.onResize()
                    },
                    onResize: function() {
                        var a = this.el.find(".coachmark-bkg"),
                            b = this.el.find(".foreground"),
                            c = window.innerHeight - this.offset;
                        a.height(c);
                        var d = this.el.find("img.desktop");
                        return window.innerWidth <= 800 && (d = this.el.find("img.tablet")), window.innerWidth <= 650 && (d = this.el.find("img.phone")), (!d || d && !d.width()) && this.retryCount < 5 ? (setTimeout(function() {
                            this.onResize(), this.retryCount++
                        }.bind(this), 500), void 0) : (this.retryCount = 0, b.width(d.width()), b.height(d.height()), void 0)
                    },
                    goToNext: function(a, b) {
                        this.model.step++, this.el.find(".coachmark-bkg").attr("data-current-page", a), this.el.find(".cm-message").text(b)
                    },
                    handleTouch: function() {
                        try {
                            if (Modernizr.desktop) {
                                if (this.model.step < this.model.pages.nextDesktop.length) return this.goToNext(this.model.pages.nextDesktop[this.model.step], this.model.pages.desktopMessage[this.model.step]), void 0;
                                throw new Error
                            }
                            if (this.model.step < this.model.pages.next.length) return this.goToNext(this.model.pages.next[this.model.step], this.model.pages.message[this.model.step]), void 0;
                            throw new Error
                        } catch (a) {
                            this.model.reset(), this.el.removeClass("show")
                        }
                    },
                    displayCoachmark: function() {}
                });
            return new f("#coachmark-container", new c)
        }), define("app/env/ModernizrTests", ["require", "app/env/Config"], function(a) {
            var b = {},
                c = a("app/env/Config");
            return b.agent = navigator.userAgent.toLowerCase(), b.standalone = navigator.standalone, b.scrWidth = screen.width, b.scrHeight = screen.height, b.viewportWidth = window.innerWidth, b.viewportHeight = window.innerHeight, b.aspectRatio = b.viewportWidth > b.viewportHeight ? screen.height / screen.width || 1 : screen.width / screen.height || 1, b.elemWidth = document.documentElement.clientWidth, b.elemHeight = document.documentElement.clientHeight, b.otherBrowser = b.agent.search(/series60/i) > -1 || b.agent.search(/symbian/i) > -1 || b.agent.search(/windows\sce/i) > -1 || b.agent.search(/blackberry/i) > -1, b.mobileOS = "undefined" != typeof orientation, b.blackberry = b.agent.search(/blackberry/i) > -1, b.ipad = b.agent.search(/ipad/i) > -1, b.ipod = b.agent.search(/ipod/i) > -1, b.iphone = b.agent.search(/iphone/i) > -1, b.palm = b.agent.search(/palm/i) > -1, b.symbian = b.agent.search(/symbian/i) > -1, b.nexus7 = b.agent.search(/Nexus 7/i) > -1, b.msie = b.agent.search(/MSIE/i) > -1 || b.agent.search(/rv:11./i) > -1, b.msie9 = b.msie && b.agent.search(/rv:9|MSIE 9/i) > -1, b.msie10 = b.msie && b.agent.search(/rv:10|MSIE 10/i) > -1, b.msie11 = b.msie && b.agent.search(/rv:11|MSIE 11/i) > -1, b.iOS = b.iphone || b.ipod || b.ipad, b.iOS5 = b.iOS && b.agent.search(/os 5_/i) > 0, b.iOSChrome = b.iOS && b.agent.search(/CriOS/i) > 0, b.android = b.agent.search(/android/i) > -1 || !b.iOS && !b.otherBrowser && b.mobileOS, b.android2 = b.android && b.agent.search(/android\s2/i) > -1, b.isMobile = b.android || b.iOS || b.mobileOS, b.desktop = !(b.isMobile || (window.cordova ? 1 : 0) || b.iOS), b.webview = b.isMobile && b.agent.search(/sleepiq/i) > -1, b.android23AndBelow = function() {
                var a, c, d = b.agent.match(/android\s(\d)\.(\d)/i);
                return Array.isArray(d) && 3 === d.length ? (a = parseInt(d[1], 10), c = parseInt(d[2], 10), 2 === a && 3 > c || 2 > a) : !1
            }(), b.iOS4AndBelow = function() {
                var a, c = b.agent.match(/os\s(\d)_/i);
                return Array.isArray(c) && 2 === c.length ? (a = parseInt(c[1], 10), 4 >= a) : !1
            }(), Modernizr.setTest = function(a, b) {
                return a = a.toLowerCase(), b = "function" == typeof b ? b() : b, Modernizr.hasOwnProperty(a) ? (Modernizr[a] && !b ? $("html").removeClass(a).addClass("no-" + a) : !Modernizr[a] && b && $("html").removeClass("no-" + a).addClass(a), Modernizr[a] = b) : Modernizr.addTest(a, b), Modernizr
            }, Modernizr.setTest("android", b.android), Modernizr.setTest("ios", b.iOS), Modernizr.setTest("ipad", b.ipad), Modernizr.setTest("nexus7", b.nexus7), Modernizr.setTest("msie", b.msie), Modernizr.setTest("msie9", b.msie9), Modernizr.setTest("msie10", b.msie10), Modernizr.setTest("msie11", b.msie11), Modernizr.setTest("desktop", b.desktop), Modernizr.setTest("webview", b.webview), Modernizr.setTest("mobile-browser", b.isMobile && (window.cordova ? !1 : !0)), Modernizr.setTest("mobile-app", b.isMobile && (window.cordova ? !0 : !1)), Modernizr.setTest("ios-installed", b.iOS && (window.cordova ? !0 : !1)), Modernizr.setTest("android-installed", b.android && (window.cordova ? !0 : !1)), Modernizr.setTest("cordova", window.cordova ? !0 : !1), Modernizr.setTest("debugging", c.debugging), Modernizr.setTest("landscape", b.viewportWidth > b.viewportHeight), Modernizr.setTest("tablet", b.viewportWidth > b.viewportHeight && b.viewportWidth > 800 || b.viewportWidth < b.viewportHeight && b.viewportHeight > 800), Modernizr.setTest("tabletportrait650", Modernizr.tablet && b.viewportWidth < 650 || Modernizr.tablet && b.viewportHeight < 650), Modernizr.setTest("squattyPhone", !b.desktop && b.viewportWidth >= 320 && b.viewportHeight < 600 && b.aspectRatio > .57), b
        }), define("app/ui/widgets/DragAndSnapXWidget", ["require", "$", "lavaca/ui/Widget", "lavaca/fx/Transform", "lavaca/fx/Transition", "app/utils/debounce", "app/env/ModernizrTests", "lavaca/fx/Transition"], function(a) {
            function b() {
                this.hasTabletPortraitFix && this.resize(), this.sections = this.el.children("[data-section]"), this.sectionCount = this.sections.length - 1 >= 0 ? this.sections.length - 1 : 0, this.currentPosition = 0, this.tempTranslateAmount = 0, this.el.hasClass("pause") && this.pause()
            }

            function c(a) {
                this.isPaused || (a.preventDefault(), this.width = h(this.sections[0]).width(), "right" === a.gesture.direction || "left" === a.gesture.direction ? (this.isMovingInXAxis = !0, this.el.css(p, "0s"), this.tempTranslateAmount = a.gesture.deltaX + this.currentPosition) : this.isMovingInXAxis = !1)
            }

            function d(a) {
                if (a.preventDefault(), !this.isPaused) {
                    if (this.tempTranslateAmount = a.gesture.deltaX + this.currentPosition, "right" == a.gesture.direction && this.tempTranslateAmount >= 1) return this.canceledMovement = !0, void 0;
                    if ("left" == a.gesture.direction && this.tempTranslateAmount + this.width <= 0) return this.canceledMovement = !0, void 0;
                    a.stopPropagation(), this.isMovingInXAxis && (this.tempTranslateAmount = a.gesture.deltaX + this.currentPosition, this.el.css(n, "translate3d(" + this.tempTranslateAmount + "px,0,0)"))
                }
            }

            function e(a) {
                if (!this.isPaused)
                    if (a.preventDefault(), this.canceledMovement || (a.stopPropagation(), this.canceledMovement = !1), this.isMovingInXAxis) {
                        this.initialDirection = null;
                        var b = f.call(this, a.gesture.direction);
                        this.el.css(p, "0.5s"), this.el.css(n, "translate3d(" + b + "px,0,0)"), this.currentPosition = b
                    } else this.initialDirection = null
            }

            function f(a) {
                var b, c = -(this.width * this.sectionCount);
                return b = "left" === a ? Math.ceil(this.tempTranslateAmount / c) : Math.floor(this.tempTranslateAmount / c), g.call(this, b, c)
            }

            function g(a) {
                return this.sections = this.el.children("[data-section]"), a <= this.sectionCount && a >= 0 ? (h(this.sections[a]).trigger("sectionInView"), this.currentIndex = a, -(this.width * a)) : a > 0 ? (h(this.sections[a]).trigger("sectionInView"), this.currentIndex = a, -(this.width * this.sectionCount)) : (h(this.sections[0]).trigger("sectionInView"), this.currentIndex = 0, 0)
            }
            var h = a("$"),
                i = a("lavaca/ui/Widget"),
                j = a("lavaca/fx/Transform"),
                k = a("lavaca/fx/Transition"),
                l = a("app/utils/debounce"),
                m = a("app/env/ModernizrTests"),
                n = j.cssProperty(),
                o = k.cssProperty(),
                p = o;
            a("lavaca/fx/Transition");
            var q = i.extend(function() {
                i.apply(this, arguments), this.hasTabletPortraitFix = this.el.data("tablet-portrait-fix") || !1, this.isPaused = !1, m.desktop || (this.el.hammer().on("dragstart.dragwidget", c.bind(this)), this.el.hammer().on("drag.dragwidget", d.bind(this)), this.el.hammer().on("dragend.dragwidget", e.bind(this))), h(window).on("resize.dragSnap" + this.id, l(this.onResize.bind(this), 100)), b.call(this)
            }, {
                currentIndex: 0,
                isPaused: !1,
                canceledMovement: !1,
                dispose: function() {
                    m.desktop || (this.el.hammer().off("dragstart.dragwidget", c.bind(this)), this.el.hammer().off("drag.dragwidget", d.bind(this)), this.el.hammer().off("dragend.dragwidget", e.bind(this))), h(window).off("resize.dragSnap" + this.id), i.prototype.dispose.apply(this, arguments)
                },
                pause: function() {
                    this.isPaused = !0
                },
                resume: function() {
                    this.isPaused = !1
                },
                reset: function() {
                    this.currentPosition = 0, this.currentIndex = 0, this.tempTranslateAmount = 0, this.el.css(p, "0s"), this.el.css(n, "translate3d(0,0,0)"), this.sections = this.el.children("[data-section]");
                    try {
                        h(this.sections[0]).trigger("sectionInView")
                    } catch (a) {}
                },
                onResize: function() {
                    setTimeout(function() {
                        this.resize()
                    }.bind(this), 500)
                },
                resize: function() {
                    m.viewportWidth = window.innerWidth, m.viewportHeight = window.innerHeight, Modernizr.setTest("landscape", m.viewportWidth > m.viewportHeight), this.snapToView(this.currentIndex, !0), this.hasTabletPortraitFix && window.innerWidth <= 650 ? this.el.hasClass("pause") ? (this.pause(), this.reset()) : Modernizr.tablet || Modernizr.desktop ? this.resume() : (this.resume(), this.reset()) : this.hasTabletPortraitFix && (this.pause(), this.reset())
                },
                snapToView: function(a, b) {
                    try {
                        a = parseInt(a, 10), this.currentIndex = a, this.width = h(this.sections[0]).width();
                        var c = -this.width * a;
                        b ? this.el.css(p, "0s") : this.el.css(p, "0.5s"), this.el.css(n, "translate3d(" + c + "px,0,0)"), this.currentPosition = c
                    } catch (d) {
                        return
                    }
                }
            });
            return q
        }), define("rdust!templates/childviews/tags", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="divider"></div><h1>Activity Tracking</h1>').notexists(b.get("noData"), b, {
                        "else": c,
                        block: d
                    }, null).exists(b.get("canEdit"), b, {
                        "else": p,
                        block: q
                    }, null)
                }

                function c(a) {
                    return a.write('<p class="no-tags">There are no tags for this day.</p>')
                }

                function d(a, b) {
                    return a.exists(b.get("canEdit"), b, {
                        "else": e,
                        block: g
                    }, null).exists(b.get("tags"), b, {
                        "else": h,
                        block: m
                    }, null)
                }

                function e(a, b) {
                    return a.exists(b.get("tags"), b, {
                        block: f
                    }, null)
                }

                function f(a) {
                    return a.write('<div class="track">Show All</div>')
                }

                function g(a) {
                    return a.write('<div class="track">Edit</div>')
                }

                function h(a, b) {
                    return a.exists(b.get("canEdit"), b, {
                        "else": i,
                        block: j
                    }, null)
                }

                function i(a) {
                    return a.write('<p class="no-tags">There are no tags for this day.</p>')
                }

                function j(a, b) {
                    return a.exists(b.get("firstName"), b, {
                        "else": k,
                        block: l
                    }, null)
                }

                function k(a) {
                    return a.write('<p class="no-tags">Add an activity about your day.</p>')
                }

                function l(a, b) {
                    return a.write('<p class="no-tags">Add an activity about ').reference(b.get("firstName"), b, "h").write("&rsquo;s day.</p>")
                }

                function m(a, b) {
                    return a.write('<ul class="tags">').section(b.get("tags"), b, {
                        block: n
                    }, null).write("</ul>")
                }

                function n(a, b) {
                    return a.exists(b.getPath(!1, ["tags", b.get("$idx")]), b, {
                        block: o
                    }, null)
                }

                function o(a, b) {
                    return a.write('<li class="tag"><div class="label">').reference(b.getPath(!0, []), b, "h").write("</div></li>")
                }

                function p(a) {
                    return a.write('<div class="sleep-message">You can see your activity tags in the morning.</div>')
                }

                function q(a) {
                    return a.write('<div class="sleep-message">You can add activity tags in the morning.</div>')
                }
                return a.register("templates/childviews/tags", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/tags", b, c)
                }
            }
        }), define("app/ui/views/childviews/TagsView", ["require", "lavaca/mvc/View", "app/models/StateModel", "app/models/FamilyModel", "app/utils/debounce", "rdust!templates/childviews/tags", "$"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("app/models/StateModel"),
                d = a("app/models/FamilyModel"),
                e = a("app/utils/debounce"),
                f = a("rdust!templates/childviews/tags"),
                g = a("$"),
                h = b.extend(function() {
                    b.apply(this, arguments), this.mapEvent({
                        ext: {
                            stateModel: {
                                object: c,
                                events: {
                                    tagsSaved: this.onTagsSaved.bind(this)
                                }
                            }
                        }
                    }), g(window).on("resize.tags" + this.id, e(this.onResize.bind(this), 100))
                }, {
                    retryCount: 0,
                    className: "tags-view",
                    autoRender: !0,
                    generateHtml: function(a) {
                        if (a) {
                            var b = null,
                                c = null;
                            try {
                                b = d.getFamily()[d.getLoggedInUserIndex()], c = d.getSelectedUser()
                            } catch (e) {
                                console.warn(e)
                            } finally {
                                a.canEdit = d.hasPermission(), a.firstName = c && b && c.sleeperId != b.get("sleeperId") ? c.firstName : void 0
                            }
                        }
                        return new Promise(function(b) {
                            f.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        g(window).off("resize.tags" + this.id), b.prototype.dispose.apply(this, arguments)
                    },
                    update: function() {
                        if (!this.el.find(".no-tags").length) {
                            var a = this.el.find(".tags");
                            a.length > 0 && a.offset() ? a.offset().top : 0, a.find(".tag:last-child"), (!a || a && !a.length) && setTimeout(function() {
                                this.retryCount++, this.retryCount < 5 && this.update()
                            }.bind(this), 1e3), this.retryCount = 0, a.length > 0 && a.addClass("show")
                        }
                    },
                    onTagsSaved: function(a) {
                        a && a.day === this.model.get("date") && (this.model.set("tags", a.tagList), this.render().then(function() {
                            this.update()
                        }.bind(this)))
                    },
                    onResize: function() {
                        setTimeout(function() {
                            this.render().then(function() {
                                this.update()
                            }.bind(this))
                        }.bind(this), 500)
                    }
                });
            return h
        }), define("app/ui/widgets/CountUp", ["require", "lavaca/ui/Widget", "$"], function(a) {
            function b(a, b, c, d) {
                return 1024 * c * (-Math.pow(2, -10 * a / d) + 1) / 1023 + b
            }

            function c(a) {
                null === this.startTime && (this.startTime = a), this.timestamp = a;
                var e = a - this.startTime;
                this.remaining = this.duration - e;
                var f = 0;
                this.useEasing ? this.countDown ? (f = b.call(this, e, 0, this.startVal - this.endVal, this.duration), this.frameVal = this.startVal - f) : this.frameVal = b.call(this, e, this.startVal, this.endVal - this.startVal, this.duration) : this.countDown ? (f = (this.startVal - this.endVal) * (e / this.duration), this.frameVal = this.startVal - f) : this.frameVal = this.startVal + (this.endVal - this.startVal) * (e / this.duration), this.frameVal = Math.round(this.frameVal * this.dec) / this.dec, this.frameVal = this.countDown ? this.frameVal < this.endVal ? this.endVal : this.frameVal : this.frameVal > this.endVal ? this.endVal : this.frameVal, this.el.text(d.call(this, this.frameVal.toFixed(this.decimals))), e < this.duration ? this.rAF = requestAnimationFrame(c.bind(this)) : this.callback && "function" == typeof this.callback && this.callback()
            }

            function d(a) {
                a += "";
                var b, c, d, e;
                for (b = a.split("."), c = b[0], d = b.length > 1 ? "." + b[1] : "", e = /(\d+)(\d{3})/; e.test(c);) c = c.replace(e, "$1,$2");
                return c + d
            }
            var e = a("lavaca/ui/Widget");
            a("$");
            var f = e.extend(function() {
                e.apply(this, arguments)
            }, {
                start: function(a) {
                    return this.callback = a, isNaN(this.endVal) || isNaN(this.startVal) || 0 === parseInt(this.endVal) ? (console.warn("countUp error: startVal or endVal is not a number"), this.el.text("00")) : this.endVal.toString().length > 3 || this.endVal < 0 ? this.el.text("NA") : this.el.data("skip-animation") ? this.el.text(this.endVal) : setTimeout(function() {
                        this.rAF = requestAnimationFrame(c.bind(this))
                    }.bind(this), this.startDelay), !1
                },
                stop: function() {
                    cancelAnimationFrame(this.rAF)
                },
                reset: function() {
                    cancelAnimationFrame(this.rAF), this.el.text(d.call(this, this.startVal.toFixed(this.decimals)))
                },
                resume: function() {
                    this.startTime = null, this.duration = this.remaining, this.startVal = this.frameVal, requestAnimationFrame(c.bind(this))
                },
                dispose: function() {
                    return e.prototype.dispose.apply(this, arguments)
                }
            });
            return f
        }), define("rdust!templates/childviews/bar-chart", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="chart"><div class="loading-indicator"></div><div class="content-wrapper"><div class="flags"><div class="flag start"></div><div class="flag end"></div></div><div class="overflow-hidden"><div class="content"></div></div></div></div><div class="overflow-icon left"></div><div class="overflow-icon right"></div>')
                }
                return a.register("templates/childviews/bar-chart", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/bar-chart", b, c)
                }
            }
        }), define("app/ui/views/childviews/BarChartView", ["require", "lavaca/mvc/View", "app/ui/widgets/CountUp", "$", "rdust!templates/childviews/bar-chart"], function(a) {
            function b() {
                if (!this.hasAnimatedSlices) {
                    var a = this.model.get("barData"),
                        b = this.model.get("graphData"),
                        d = a ? a.sliceList : this.model.get("sliceList"),
                        f = document.createDocumentFragment(),
                        g = (a ? a.sessionHours : this.model.get("sessionHours"), "");
                    if (!this.model.get("tenMinuteIntervals") && !b) return;
                    var h, i, j = this.model.get("tenMinuteIntervals") || b.tenMinuteIntervals,
                        k = 0;
                    if (a) {
                        var l = a.startingTenMinutes.clone().dayOfYear(b.startingTime.dayOfYear());
                        a.family || b.startingTime.get("hour") >= 12 && a.startingTenMinutes.get("hour") < 12 && l.add(1, "days"), h = Math.round(l.diff(b.startingTime, "minutes") / 10);
                        var m = moment(this.model.get("date")).startOf("day").subtract(1, "day").add(12, "hours");
                        i = Math.ceil(Math.abs(a.endingTenMinutes.diff(a.startingTenMinutes, "minutes") / 10)), k = Math.floor(a.startingTenMinutes.diff(m, "minutes") / 10)
                    } else {
                        h = this.model.get("essBarChart") ? this.model.get("oIntervalsFromStart") : this.model.get("intervalsFromStart");
                        var n = this.model.get("startingTenMinutes"),
                            o = this.model.get("endingTenMinutes");
                        (this.model.get("resetSlices") || this.model.get("essBarChart")) && (n = this.model.get("oStartingTenMinutes"), o = this.model.get("oEndingTenMinutes"));
                        var p = moment(this.model.get("date")).startOf("day").subtract(1, "day").add(12, "hours");
                        i = Math.ceil(Math.abs(o.diff(n, "minutes") / 10)), k = Math.floor(n.diff(p, "minutes") / 10), 0 > k && (k = 0)
                    }
                    if (d) {
                        d = d.slice(k, k + i);
                        for (var q in d) {
                            var r = document.createElement("div"),
                                s = document.createElement("div"),
                                t = d[q].type;
                            r.className = "bar-wrapper", s.className = "bar", s.dataset.color = t, r.appendChild(s), f.appendChild(r)
                        }
                        this.model.get("essBarChart") && (j = this.model.get("oTenMinuteIntervals"));
                        var u = Math.floor(d.length / (j / 100)),
                            v = Math.round(100 * (h / j)),
                            w = {
                                "margin-left": v + "%",
                                width: u + "%"
                            };
                        e.call(this, v, u), a || (this.el.find(".flags .start").html(this.model.get("startTimeFormatted")), this.el.find(".flags .end").html(this.model.get("endTimeFormatted"))), this.el.find(".content-wrapper").css(w).find(".content").addClass(g).append(f), c.call(this), this.el.removeClass("loading"), this.hasAnimatedSlices = !0, this.el.removeClass("no-slices")
                    }
                    this.updateTimeFlags()
                }
            }

            function c() {
                this.el.find(".bar").each(function(a, b) {
                    setTimeout(function() {
                        h(b).addClass("show")
                    }.bind(this), 25 * a)
                })
            }

            function d() {
                this.hasAnimatedSlices = !1, this.render().then(function() {
                    b.call(this)
                }.bind(this))
            }

            function e(a, b) {
                var c = 0 > a,
                    d = a + b > 100;
                d && this.el.attr("data-overflow-right", !0), c && this.el.attr("data-overflow-left", !0)
            }
            var f = a("lavaca/mvc/View"),
                g = a("app/ui/widgets/CountUp"),
                h = a("$"),
                i = a("rdust!templates/childviews/bar-chart"),
                j = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        model: {
                            slicesFetched: b.bind(this),
                            redrawSlices: d.bind(this)
                        }
                    }), this.mapWidget({
                        ".count-up": {
                            TWidget: g
                        }
                    })
                }, {
                    template: "templates/childviews/bar-chart",
                    className: "loading bar-chart",
                    autoRender: !0,
                    hasAnimatedSlices: !1,
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            i.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        this.model && this.model.get("sliceList") || this.model.get("barData") && this.model.get("barData").sliceList ? b.call(this) : this.el.addClass("no-slices"), f.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    testVisibleInViewAndHasSlices: function() {
                        return this.parentView && this.parentView.el && (this.model && this.model.get("sliceList") || this.model.get("barData") && this.model.get("barData").sliceList) && this.parentView.el.find(".bar-wrapper") && 0 === this.parentView.el.find(".bar-wrapper").length ? !0 : !1
                    },
                    updateTimeFlags: function() {
                        var a = this.el.find(".flag.start"),
                            b = this.el.find(".flag.end");
                        try {
                            var c = b.width(),
                                d = a.width(),
                                e = b.hasClass("flip"),
                                f = a.hasClass("flip"),
                                g = this.el.find(".content-wrapper .content").width(),
                                h = Math.abs(b.data("x") || 0),
                                i = Math.abs(a.data("x") || 0),
                                j = !1,
                                k = !1,
                                l = c + d > g - h - i;
                            l || (c = e ? 0 : c, d = f ? 0 : d, l = c + d > g - h - i), l || (c = e ? 0 : c, d = f ? 0 : d, l = c + d > g - h - i), l && (h - b.width() < 0 ? k = !0 : i > a.width() ? j = !0 : k = !0, i > a.width() / 2 ? j = !0 : k = !0), (c > g || d > g) && (k = !0, j = !0), b.toggleClass("flip", k), a.toggleClass("flip", j)
                        } catch (m) {
                            console.error(m)
                        }
                    }
                });
            return j
        }), define("rdust!templates/childviews/heart-rate-breath-rate-view", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="info beats"><div class="icon"></div><div class="number">').notexists(b.get("noData"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><div class="label">Avg Heart Rate</div></div><div class="info breaths"><div class="icon"></div><div class="number">').notexists(b.get("noData"), b, {
                        "else": e,
                        block: f
                    }, null).write('</div><div class="label">Avg Breathing Rate</div></div><div class="divider-small"></div>')
                }

                function c(a) {
                    return a.write('<div class="count-up" data-start-value="0" data-end-value="0" data-start-delay="0">00&nbsp;</div><span>BPM</span>')
                }

                function d(a, b) {
                    return a.write('<div class="count-up" data-auto-start="false" data-start-value="0" data-end-value="').reference(b.get("avgHeartRate"), b, "h").write('" data-start-delay="0">').reference(b.get("avgHeartRate"), b, "h").write("&nbsp;</div><span>BPM</span>")
                }

                function e(a) {
                    return a.write('<div class="count-up" data-start-value="0" data-end-value="0" data-start-delay="0">00&nbsp;</div><span>BrPM</span>')
                }

                function f(a, b) {
                    return a.write('<div class="count-up" data-auto-start="false" data-start-value="0" data-end-value="').reference(b.get("avgRespirationRate"), b, "h").write('" data-start-delay="0">').reference(b.get("avgRespirationRate"), b, "h").write("&nbsp;</div><span>BrPM</span>")
                }
                return a.register("templates/childviews/heart-rate-breath-rate-view", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/heart-rate-breath-rate-view", b, c)
                }
            }
        }), define("app/ui/views/childviews/HeartRateBreathRateView", ["require", "lavaca/mvc/View", "app/ui/widgets/CountUp", "rdust!templates/childviews/heart-rate-breath-rate-view"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("app/ui/widgets/CountUp"),
                d = a("rdust!templates/childviews/heart-rate-breath-rate-view"),
                e = b.extend(function() {
                    b.apply(this, arguments), this.mapWidget({
                        ".count-up": {
                            TWidget: c
                        }
                    })
                }, {
                    template: "templates/childviews/heart-rate-breath-rate-view",
                    className: "heart-rate-breath-rate-view",
                    autoRender: !0,
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return e
        }), define("rdust!templates/childviews/adult-daily", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="overflow-scroll"><div class="overflow-scroll-inner"><div class="desktop-wrapper left"><div class="top-container"><div class="sleep-carousel ').exists(b.get("noData"), b, {
                        block: c
                    }, null).write('" data-tablet-portrait-fix="true"><div class="sleepiq ').exists(b.get("sleepIQCalculating"), b, {
                        block: d
                    }, null).write(" ").exists(b.get("chartView"), b, {
                        block: e
                    }, null).write('" data-section="1">').partial("templates/childviews/bed-presence", b, {
                        postfix: f,
                        pronoun: g,
                        animationDelay: "0",
                        animationDuration: "2s"
                    }).write('<div class="lockup-container"><div class="pill-chart ').exists(b.get("noData"), b, {
                        block: h
                    }, null).write('" data-value="').reference(b.get("sleepQuotient"), b, "h").write('" data-sleep-iq="true" data-pills="20" data-open="true" data-rotation="90" data-pill-width="').reference(b.get("pillWidth"), b, "h").write('" data-pill-height="').reference(b.get("pillHeight"), b, "h").write('"><div class="circle"><div class="summary">').exists(b.get("noData"), b, {
                        "else": i,
                        block: j
                    }, null).write("</div></div></div></div>").notexists(b.get("noData"), b, {
                        block: k
                    }, null).write('</div><div class="sleep-details-container" data-section="2">').notexists(b.get("noData"), b, {
                        block: l
                    }, null).exists(b.get("canEditSlices"), b, {
                        block: o
                    }, null).write('<div class="chart-block"><div class="bar-chart-wrapper ').exists(b.get("noData"), b, {
                        block: p
                    }, null).write('" data-flags="true"></div><div class="timeline" data-hours="').reference(b.get("timelineHours"), b, "h").write('">').section(b.get("timeIncrements"), b, {
                        block: q
                    }, null).write("</div>").exists(b.get("noData"), b, {
                        "else": r,
                        block: s
                    }, null).write('</div></div></div></div><div class="sleep-number">Sleep Number<sup>&reg;</sup> Setting&nbsp;<span class="number ').helper("eq", b, {
                        block: t
                    }, {
                        key: u,
                        value: "100"
                    }).write('"><div class="circle">').reference(b.get("sleepNumber"), b, "h").write('</div></span><div class="lines"><span class="placeholder">Sleep Number<sup>&reg;</sup> Setting <span class="number">').exists(b.get("sleepNumber"), b, {
                        "else": v,
                        block: w
                    }, null).write('</span></span></div></div></div><div class="desktop-wrapper right"><div class="sleep-details-container tablet" data-section="2">').exists(b.get("noData"), b, {
                        "else": x,
                        block: D
                    }, null).write('</div><div class="sleep-tip').notexists(b.get("tip"), b, {
                        block: G
                    }, null).write('"><div class="divider"></div><div class="tip-container"><div class="tip-icon"></div><h2>Sleep Tip</h2><p class="tip">').exists(b.get("tip"), b, {
                        "else": H,
                        block: I
                    }, null).write('</p></div></div><div class="lower-row"><div class="separator"></div><div class="tag-cloud show ').exists(b.get("showSvg"), b, {
                        block: J
                    }, null).write('"></div></div></div></div></div>')
                }

                function c(a) {
                    return a.write("pause")
                }

                function d(a) {
                    return a.write("siq-calculating")
                }

                function e(a) {
                    return a.write("hide")
                }

                function f(a, b) {
                    return a.reference(b.get("name"), b, "h")
                }

                function g(a, b) {
                    return a.reference(b.get("pronoun"), b, "h")
                }

                function h(a) {
                    return a.write("no-data-hide")
                }

                function i(a, b) {
                    return a.write('<div class="label">SleepIQ<sup>&reg;</sup></div><div class="number">').reference(b.get("sleepQuotient"), b, "h").write('</div><div class="info-icon"></div>')
                }

                function j(a) {
                    return a.write('<div class="label no-iq"><p>No Data Recorded for this Session.</p></div>')
                }

                function k(a) {
                    return a.write('<div class="rates-container"></div>')
                }

                function l(a, b) {
                    return a.write('<div class="total-time">Total Time in Bed &middot; <span class="').exists(b.get("isEdited"), b, {
                        block: m
                    }, null).write('">').reference(b.get("inBedFormatted"), b, "h").exists(b.get("isEdited"), b, {
                        block: n
                    }, null).write("</span></div>")
                }

                function m(a) {
                    return a.write("is-edited")
                }

                function n(a) {
                    return a.write(' <div class="edited-label">(edited)</div>')
                }

                function o(a) {
                    return a.write('<div class="edit-sleep"><span class="edit-sleep-modal">Edit Sleep </span></div>')
                }

                function p(a) {
                    return a.write("hide")
                }

                function q(a, b) {
                    return a.write('<div class="interval"><div class="time">').reference(b.getPath(!0, []), b, "h", ["s"]).write('</div><div class="dot">&middot;</div></div>')
                }

                function r(a, b) {
                    return a.write('<div class="sleep-times"><ul class="time"><li class="restful"><div class="wrapper"><div class="label"><div class="circle"></div>Restful</div><span class="value">').reference(b.get("restfulFormatted"), b, "h").write('</span></div></li><li class="restless"><div class="wrapper"><div class="label"><div class="circle"></div>Restless</div><span class="value">').reference(b.get("restlessFormatted"), b, "h").write('</span></div></li><li class="out-of-bed"><div class="wrapper"><div class="label"><div class="circle"></div>Out of Bed</div><span class="value">').reference(b.get("outOfBedFormatted"), b, "h").write("</span></div></li></ul></div>")
                }

                function s(a) {
                    return a.write('<p class="no-data">No Data Recorded for this Session</p>')
                }

                function t(a) {
                    return a.write("small")
                }

                function u(a, b) {
                    return a.reference(b.get("sleepNumber"), b, "h")
                }

                function v(a) {
                    return a.write("--")
                }

                function w(a, b) {
                    return a.reference(b.get("sleepNumber"), b, "h")
                }

                function x(a, b) {
                    return a.write('<div class="total-time">Total Time in Bed &middot; <span class="').exists(b.get("isEdited"), b, {
                        block: y
                    }, null).write('">').reference(b.get("inBedFormatted"), b, "h").exists(b.get("isEdited"), b, {
                        block: z
                    }, null).write("</span></div>").exists(b.get("canEditSlices"), b, {
                        block: A
                    }, null).write('<div class="chart-block ').exists(b.get("noData"), b, {
                        block: B
                    }, null).write('"><div class="bar-chart-wrapper" data-flags="true"></div><div class="timeline" data-hours="').reference(b.get("timelineHours"), b, "h").write('">').section(b.get("timeIncrements"), b, {
                        block: C
                    }, null).write('</div><div class="sleep-times"><ul class="time"><li class="restful"><div class="wrapper"><div class="label"><div class="circle"></div>Restful</div><span class="value">').reference(b.get("restfulFormatted"), b, "h").write('</span></div></li><li class="restless"><div class="wrapper"><div class="label"><div class="circle"></div>Restless</div><span class="value">').reference(b.get("restlessFormatted"), b, "h").write('</span></div></li><li class="out-of-bed"><div class="wrapper"><div class="label"><div class="circle"></div>Out of Bed</div><span class="value">').reference(b.get("outOfBedFormatted"), b, "h").write("</span></div></li></ul></div></div>")
                }

                function y(a) {
                    return a.write("is-edited")
                }

                function z(a) {
                    return a.write(' <div class="edited-label">(edited)</div>')
                }

                function A(a) {
                    return a.write('<div class="edit-sleep"><span class="edit-sleep-modal">Edit Sleep </span></div>')
                }

                function B(a) {
                    return a.write("hide")
                }

                function C(a, b) {
                    return a.write('<div class="interval"><div class="time">').reference(b.getPath(!0, []), b, "h", ["s"]).write('</div><div class="dot">&middot;</div></div>')
                }

                function D(a, b) {
                    return a.exists(b.get("showSvg"), b, {
                        "else": E,
                        block: F
                    }, null)
                }

                function E(a) {
                    return a.write('<div class="no-data hide"><h1>No Data Recorded for this Session</h1></div>')
                }

                function F(a) {
                    return a.write('<div class="no-data"><h1>Currently Tracking Sleep</h1></div>')
                }

                function G(a) {
                    return a.write(" no-tip")
                }

                function H(a) {
                    return a.write("There is no sleep tip for this day.")
                }

                function I(a, b) {
                    return a.reference(b.get("tip"), b, "h")
                }

                function J(a) {
                    return a.write("sleeping")
                }
                return a.register("templates/childviews/adult-daily", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/adult-daily", b, c)
                }
            }
        }), define("app/ui/views/childviews/AdultDailyView", ["require", "lavaca/mvc/View", "lavaca/mvc/Router", "app/models/FamilyModel", "app/ui/widgets/PillChart", "app/ui/views/childviews/CoachmarkView", "app/ui/widgets/DragAndSnapXWidget", "app/ui/views/childviews/TagsView", "app/models/StateModel", "app/ui/views/childviews/BarChartView", "app/ui/views/childviews/HeartRateBreathRateView", "rdust!templates/childviews/adult-daily", "moment", "$", "app/utils/MixPanelManager", "app/models/BedCollection", "lavaca/net/Connectivity"], function(a) {
            function b() {
                c.call(this), this.trackingInterval = setInterval(c.bind(this), 6e5)
            }

            function c() {
                this.checkingPresence || (this.checkingPresence = !0, console.log("checking bed presence"), n.checkBedPresence().then(function(a) {
                    var b = n.getSelectedUser(),
                        c = 0;
                    if (v().isSame(this.model.get("date"), "day"))
                        for (var d in a)
                            if (b.bedId === a[d].bedId) {
                                console.log("user has bed");
                                var e = b.side ? "rightSide" : "leftSide",
                                    f = a[d][e] ? a[d][e].isInBed : !1;
                                this.el.find(".sleepiq").toggleClass("in-bed", f), this.el.find(".sleep-details-container").toggleClass("in-bed", f), c = f ? c + 1 : c
                            }
                    c ? (this.model.set("sleepIQCalculating", !1), this.model.set("showSvg", !0), this.render(".bed-presence, .tag-cloud").then(function() {
                        this.parentView.model.fetchSingleDay(this.model.get("date")).then(function(a) {
                            this.model.apply(a), this.parentView.model.fetchSleepSlices(this.model.get("date")).then(function(a) {
                                a && a.sliceList && (this.model.set("sliceList", a.sliceList), this.render(".sleep-details-container").then(function() {
                                    this.hasAnimated = !0, this.el.find(".sleep-details-container").toggleClass("in-bed", !0)
                                }.bind(this)))
                            }.bind(this), function b(b) {
                                console.error(b)
                            })
                        }.bind(this))
                    }.bind(this))) : (this.el.find(".sleep-details-container.tablet .no-data").toggleClass("hide", !1), this.parentView.model.fetchSleepSlices(this.model.get("date")).then(function(a) {
                        a && a.sliceList && (null != this.model.get("sliceList") ? a.sliceList.join("|") !== this.model.get("sliceList").join("|") && (this.model.set("sliceList", a.sliceList), this.render(".sleep-details-container").then(function() {
                            this.hasAnimated = !0, this.el.find(".sleep-details-container.tablet .no-data").toggleClass("hide", !1)
                        }.bind(this))) : (this.model.set("sliceList", a.sliceList), this.render(".sleep-details-container").then(function() {
                            this.hasAnimated = !0, this.el.find(".sleep-details-container.tablet .no-data").toggleClass("hide", !1)
                        }.bind(this))))
                    }.bind(this), function g(g) {
                        console.error(g)
                    })), this.checkingPresence = !1
                }.bind(this), function() {
                    this.checkingPresence = !1, console.log("presence checked failed")
                }.bind(this)))
            }

            function d(a) {
                if (!this.model.get("noData") && !w(a.currentTarget).hasClass("sleeping")) {
                    var b = n.getSelectedUser(),
                        c = {
                            canEdit: !0,
                            date: this.model.get("date"),
                            checkedTags: this.model.get("tags") || [],
                            name: this.parentView && this.parentView.model ? this.parentView.model.get("firstName") : "",
                            sleeperId: b.sleeperId,
                            isChild: b.isChild
                        };
                    m.exec("/modals/activities", null, {
                        model: c
                    })
                }
            }

            function e() {
                var a = this.getChildViews(".bar-chart-wrapper"),
                    b = 1;
                1 == r.get("ESSaving") && (b = 500), setTimeout(function() {
                    a && (console.log("Child: ", a), a.forEach(function(a) {
                        a.testVisibleInViewAndHasSlices && a.testVisibleInViewAndHasSlices() && this.parentView && this.parentView.model && !this.model.get("noData") && this.parentView.model.fetchSleepSlices(this.model.get("date")).then(function(a) {
                            a && a.sliceList && (console.log("forcing refetch"), this.model.set("sliceList", a.sliceList), this.model.set("hasSlices", !0), this.hasAnimated = !0)
                        }.bind(this), function b(b) {
                            console.error(b)
                        }), a.updateTimeFlags && a.updateTimeFlags()
                    }.bind(this)))
                }.bind(this), 1)
            }

            function f(a) {
                var b = w(a.currentTarget);
                this.el.find(".dot").removeClass("active"), this.el.find('.dot[data-control="' + b.data("section") + '"]').addClass("active")
            }

            function g() {}

            function h() {
                window.customAlert("Your individual quality and length of sleep, consisting of restful time in bed, average heart and breathing rates, motion and bed exits. Your SleepIQ<sup>&reg;</sup> score is information that will empower you to sleep better &mdash; there’s no such thing as a bad score.", null, "bottom"), i.call(this)
            }

            function i() {
                var a = this.getWidgets(".sleep-carousel"),
                    b = [this.parentView];
                a && a[0] && b.push(a[0]);
                for (var c = 0; c < b.length; c++) b[c].pause(), setTimeout(function() {
                    b[this].resume()
                }.bind(c), 500)
            }

            function j() {
                var a = !n.getFamily()[n.getLoggedInUserIndex()].get("isChild");
                a && p.displayCoachmark("adult-daily")
            }

            function k() {
                if (y.isOffline()) window.customAlert.alert("There is currently no internet connection available. Please reestablish a connection and try again.");
                else {
                    if (!this.model.get("sliceList")) return;
                    m.exec("/modals/edit-sleep", null, {
                        model: this.model
                    })
                }
            }
            var l = a("lavaca/mvc/View"),
                m = a("lavaca/mvc/Router"),
                n = a("app/models/FamilyModel"),
                o = a("app/ui/widgets/PillChart"),
                p = a("app/ui/views/childviews/CoachmarkView"),
                q = (a("app/ui/widgets/DragAndSnapXWidget"), a("app/ui/views/childviews/TagsView")),
                r = a("app/models/StateModel"),
                s = a("app/ui/views/childviews/BarChartView"),
                t = a("app/ui/views/childviews/HeartRateBreathRateView"),
                u = a("rdust!templates/childviews/adult-daily"),
                v = a("moment"),
                w = a("$"),
                x = a("app/utils/MixPanelManager"),
                y = (a("app/models/BedCollection"), a("lavaca/net/Connectivity")),
                z = l.extend(function() {
                    l.apply(this, arguments), this.mapChildView({
                        ".bar-chart-wrapper": {
                            TView: s,
                            model: this.model
                        },
                        ".rates-container": {
                            TView: t,
                            model: this.model
                        },
                        ".tag-cloud": {
                            TView: q,
                            model: this.model
                        }
                    }), this.mapEvent({
                        "[data-section]": {
                            sectionInView: f
                        },
                        ".sleep-tip": {
                            tap: g
                        },
                        ".pill-chart .circle": {
                            tap: h
                        },
                        ".tag-cloud": {
                            tap: d
                        },
                        ".edit-sleep-modal": {
                            tap: k
                        },
                        ext: {
                            stateModel: {
                                object: r,
                                events: {
                                    providerTagsFetched: this.providerTagsFetched.bind(this)
                                }
                            }
                        }
                    }), this.mapWidget({
                        ".pill-chart": {
                            TWidget: o
                        }
                    }), this.mapWidget({}), j.call(this)
                }, {
                    className: "adult-daily",
                    autoRender: !0,
                    generateHtml: function(a) {
                        this.hasAnimated = !1;
                        var b = n.getSelectedUser();
                        return a.name = b ? b.firstName : "", a.chartView = "Summary View" === r.get("toggleView"), b && (a.pronoun = b.isMale ? "he" : "she"), a.pillWidth = Modernizr.tablet || Modernizr.desktop ? "6" : "3", a.pillHeight = Modernizr.tablet || Modernizr.desktop ? "22" : "20", this.hasAnimated = !1, new Promise(function(b) {
                            u.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        this.clearPresenceInterval(), l.prototype.dispose.apply(this, arguments)
                    },
                    selfInView: function() {
                        if (this.model && 1 != r.get("ESSaving") && (console.log("MixPanel AV"), x.prototype.trackSleep(n.getSelectedUser(), "Day", this.model.toObject())), setTimeout(function() {
                                var a = this.getWidgets(".pill-chart");
                                a && a.length > 0 && a.forEach(function(a) {
                                    a.update()
                                }), r.get("ESSaving") ? setTimeout(function() {
                                    e.call(this)
                                }.bind(this), 1) : e.call(this)
                            }.bind(this), 200), this.model && v().isSame(this.model.get("date"), "day")) this.trackingInterval || b.call(this);
                        else if (this.clearPresenceInterval(), this.el.find(".sleep-details-container.tablet .no-data").toggleClass("hide", !1), this.model && this.model.get("hasSlices")) this.hasAnimated || c.call(this);
                        else if (this.model && this.model.get("date")) {
                            var a = this.model.get("date");
                            setTimeout(function() {
                                this.parentView && this.parentView.model && this.el && this.el.hasClass("inView") && this.model.get("date") === a ? (this.parentView.model.fetchSleepSlices(this.model.get("date")).then(function(b) {
                                    b && b.sliceList && this.model.get("date") === a && (this.model.set("sliceList", b.sliceList), this.model.trigger("slicesFetched"), this.model.set("hasSlices", !0), this.hasAnimated = !0)
                                }.bind(this), function b(b) {
                                    console.error(b)
                                }), this.model.get("smartTip") && this.render(".tip-container")) : console.log("not fetching even thoguh it was inview")
                            }.bind(this), 500)
                        }
                        setTimeout(function() {
                            var a = this.getChildViews(".tag-cloud");
                            a && a[0] && a[0].update()
                        }.bind(this), 200)
                    },
                    clearPresenceInterval: function() {
                        this.trackingInterval && (clearInterval(this.trackingInterval), this.trackingInterval = null, console.log("presence cleared"), this.el.find(".in-bed").length > 0 && (this.model.set("showSvg", !1), this.render(".bed-presence, .tag-cloud")))
                    },
                    updateRenderUpdate: function(a) {
                        var b = this.getWidgets(".pill-chart");
                        this.render().then(function() {
                            console.log("Rendered changed data"), b.update(a.session.sleepQuotient)
                        })
                    },
                    providerTagsFetched: function() {
                        setTimeout(function() {
                            var a = this.getChildViews(".tag-cloud");
                            a && a[0] && a[0].update()
                        }.bind(this), 200)
                    }
                });
            return z
        }), define("app/ui/widgets/DragAccordionWidget", ["require", "$", "lavaca/ui/Widget", "lavaca/fx/Transform", "lavaca/fx/Transition", "app/utils/debounce", "lavaca/fx/Transition"], function(a) {
            function b() {
                var a = this.el.find("[data-hidden]");
                this.duration = (this.el.data("transition-duration") || .3) + "s", this.defaultHeight = this.el.data("min-height") || this.el.outerHeight(), this.expandedHeight = a.length ? this.el.outerHeight() + a.outerHeight() : this.el.parent().outerHeight()
            }

            function c(a) {
                this.el.css(h, this.duration);
                var b = this.el.find("[data-hidden]");
                this.expandedHeight = b.length ? this.el.outerHeight() + b.outerHeight() : this.el.parent().outerHeight(), this.isOpen && "down" !== a ? (this.el.css("height", this.defaultHeight + "px"), this.currHeight = this.defaultHeight, this.isOpen = !1, this.el.removeClass("open"), this.el.parent().trigger("accordionClosed")) : "up" !== a && "down" !== a && (this.defaultHeight = this.el.data("min-height") || this.el.outerHeight(), this.el.css("height", this.expandedHeight + "px"), this.currHeight = this.expandedHeight, this.isOpen = !0, this.el.addClass("open"), this.el.parent().trigger("accordionOpened"))
            }
            a("$");
            var d = a("lavaca/ui/Widget"),
                e = a("lavaca/fx/Transform"),
                f = a("lavaca/fx/Transition"),
                g = (a("app/utils/debounce"), e.cssProperty(), f.cssProperty()),
                h = g;
            a("lavaca/fx/Transition");
            var i = d.extend(function() {
                d.apply(this, arguments), this.el.hammer().on("tap.accordionwidget", c.bind(this)), b.call(this)
            }, {
                currentPosition: 0,
                tempHeight: 0,
                maxDelta: 0,
                canMove: !0,
                dispose: function() {
                    this.el.hammer().off("tap.accordionwidget", c.bind(this)), d.prototype.dispose.apply(this, arguments)
                }
            });
            return i
        }), define("app/ui/widgets/DoughnutWidget", ["require", "lavaca/ui/Widget", "app/utils/debounce", "$", "app/models/StateModel", "app/env/ModernizrTests"], function(a) {
            var b = a("lavaca/ui/Widget"),
                c = a("app/utils/debounce"),
                d = a("$"),
                e = (a("app/models/StateModel"), a("app/env/ModernizrTests")),
                f = b.extend(function() {
                    b.apply(this, arguments), this.el.hammer().on("animateChart.doughnut", this.animateChart.bind(this)), this.el.hammer().on("reset.doughnut", this.reset.bind(this)), d(window).on("resize.doughnut" + this.id, c(this.onResize.bind(this), 100)), this.init()
                }, {
                    colors: [],
                    dispose: function() {
                        this.el.hammer().off("animateChart.doughnut", this.animateChart.bind(this)), this.el.hammer().off("reset.doughnut", this.reset.bind(this)), b.prototype.dispose.apply(this, arguments)
                    },
                    onResize: function() {
                        setTimeout(function() {
                            Modernizr.tablet && window.innerWidth >= 650 && this.animateChart()
                        }.bind(this), 300)
                    },
                    reset: function() {
                        this.el.empty(), this.init()
                    },
                    init: function() {
                        var a = this.el.data("slices") ? this.el.data("slices").split(",") : [],
                            b = this.el.data("colors");
                        if (!this.slices) {
                            this.slices = [];
                            for (var c = 0; c < a.length; c++) this.slices.push(parseInt(a[c], 10))
                        }
                        this.colors = b ? b.split(",") : this.colors, this.settings = {
                            segmentShowStroke: this.el.data("show-stroke") || !0,
                            segmentStrokeColor: this.el.data("stroke-color") || "#448aaa",
                            segmentStrokeWidth: this.el.data("stroke-width") || 0,
                            edgeOffset: this.el.data("offset") || 0,
                            percentageInnerCutout: this.el.data("inner-cutout") || 70,
                            animation: this.el.data("animation") || !0,
                            animationSteps: this.el.data("animation-steps") || 70,
                            animationEasing: this.el.data("animation-easing") || "easeInOutExpo",
                            animateRotate: this.el.data("rotate") || !0
                        };
                        var d = this.el.width() || 100;
                        this.el.append('<svg width="100%" height="100%" viewBox="0 0 ' + d + " " + d + '"  preserveAspectRatio></svg>')
                    },
                    animateChart: function() {
                        this.el.hasClass("no-data") || this.drawChart(this.el, this.slices)
                    },
                    drawChart: function(a, b) {
                        function c(a, c, d) {
                            var e = -Math.PI / 2,
                                f = 1;
                            c && d && (f = a), A[0].setAttribute("opacity", a);
                            for (var g = 0, h = b.length; h > g; g++)
                                if (b[g] > 0) {
                                    var i = f * b[g] / y * 2 * q,
                                        j = e + i,
                                        k = (j - e) % (2 * q) > q ? 1 : 0,
                                        l = m + o(e) * w,
                                        r = n + p(e) * w,
                                        s = m + o(e) * x,
                                        t = n + p(e) * x,
                                        v = m + o(j) * w,
                                        z = n + p(j) * w,
                                        B = m + o(j) * x,
                                        C = n + p(j) * x,
                                        D = ["M", l, r, "A", w, w, 0, k, 1, v, z, "L", B, C, "A", x, x, 0, k, 0, s, t, "Z"];
                                    u[g][0].setAttribute("d", D.join(" ")), e += i
                                }
                        }

                        function f(a) {
                            var b = this.settings.animation,
                                c = this.settings.animateRotate,
                                d = b ? 1 / i(this.settings.animationSteps, Number.MAX_VALUE, 1) : 1,
                                e = this.settings.animation ? 0 : 1;
                            s(function() {
                                e += d;
                                var c = b ? i(v(e), null, 0) : 1;
                                a(c, !0, !0), 1 >= e && s(arguments.callee)
                            }.bind({
                                animation: b,
                                rotate: c
                            }))
                        }

                        function g(a) {
                            return Math.min.apply(null, a)
                        }

                        function h(a) {
                            return !isNaN(parseFloat(a)) && isFinite(a)
                        }

                        function i(a, b, c) {
                            return h(b) && a > b ? b : h(c) && c > a ? c : a
                        }
                        var j = a,
                            k = j.outerWidth(),
                            l = j.outerWidth(),
                            m = k / 2,
                            n = l / 2,
                            o = Math.cos,
                            p = Math.sin,
                            q = Math.PI,
                            r = {
                                linear: function(a) {
                                    return a
                                },
                                easeInOutExpo: function(a) {
                                    var b = .5 > a ? 8 * a * a * a * a : 1 - 8 * --a * a * a * a;
                                    return b > 1 ? 1 : b
                                }
                            },
                            s = function() {
                                var a = e.androidInstalled ? 120 : 60;
                                return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(b) {
                                    window.setTimeout(b, 1e3 / a)
                                }
                            }.bind(this)(),
                            t = j.find("svg").empty(),
                            u = [],
                            v = r[this.settings.animationEasing],
                            w = g([l / 2, k / 2]) - this.settings.edgeOffset,
                            x = w * (this.settings.percentageInnerCutout / 100),
                            y = 0;
                        console.log(this.el.width());
                        var z = document.createElementNS("http://www.w3.org/2000/svg", "g"),
                            A = d(z).appendTo(t);
                        A[0].setAttribute("opacity", 0);
                        var B = this.el.width() || 100;
                        if (this.el.find("svg")) {
                            var C = this.el.find("svg")[0];
                            C.setAttribute("viewBox", "0 0 " + B + " " + B)
                        }
                        for (var D = 0, E = b.length; E > D; D++)
                            if (b[D] && !isNaN(b[D]) && 0 != b[D]) {
                                y += b[D];
                                var F = document.createElementNS("http://www.w3.org/2000/svg", "path");
                                F.setAttribute("stroke-width", this.settings.segmentStrokeWidth), F.setAttribute("stroke", this.settings.segmentStrokeColor), F.setAttribute("fill", this.colors[D]), F.setAttribute("data-order", D), u[D] = d(F).appendTo(A)
                            }
                        return f.call(this, c), j
                    }
                });
            return f
        }), define("rdust!templates/childviews/adult-weekly", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="overflow-scroll"><div class="overflow-scroll-inner">').partial("templates/childviews/averages", b, {
                        title: "Weekly Averages",
                        accordion: "true"
                    }).write('<div class="days">').exists(b.get("graphData"), b, {
                        block: c
                    }, null).exists(b.get("days"), b, {
                        block: g
                    }, null).write("</div></div></div>")
                }

                function c(a, b) {
                    return a.exists(b.getPath(!1, ["graphData", "timeIntervals"]), b, {
                        block: d
                    }, null)
                }

                function d(a, b) {
                    return a.write('<div class="timeline" ').exists(b.get("graphData"), b, {
                        block: e
                    }, null).write(">").section(b.getPath(!1, ["graphData", "timeIntervals"]), b, {
                        block: f
                    }, null).write("</div>")
                }

                function e(a, b) {
                    return a.write('data-hours="').reference(b.getPath(!1, ["graphData", "timelineHours"]), b, "h").write('"')
                }

                function f(a, b) {
                    return a.write('<div class="interval"><div class="time">').reference(b.getPath(!0, []), b, "h").write('</div><div class="dot">&middot;</div></div>')
                }

                function g(a, b) {
                    return a.section(b.get("days"), b, {
                        block: h
                    }, null)
                }

                function h(a, b) {
                    return a.write('<div class="day" data-date="').reference(b.get("date"), b, "h").write('"><div class="info"><div class="column initial">').reference(b.get("initial"), b, "h").write('<div class="tag ').exists(b.get("tags"), b, {
                        block: i
                    }, null).write('"><div class="dot"></div><div class="clock"></div></div></div><div class="column number ').helper("eq", b, {
                        block: j
                    }, {
                        key: k,
                        value: "100"
                    }).write('"><div class="circle">').exists(b.get("sleepNumber"), b, {
                        "else": l,
                        block: m
                    }, null).write('</div></div><div class="column sleepiq ').exists(b.get("isEdited"), b, {
                        block: n
                    }, null).write('">').reference(b.get("sleepQuotient"), b, "h").write('</div></div><div class="slices" data-date="').reference(b.get("date"), b, "h").write('"><div class="bar-chart-wrapper chart-wrapper" data-parent-timeline="true" data-overflow-right="false" data-overflow-left="false" data-overflow-right="false" data-overflow-left="false"></div></div></div>')
                }

                function i(a) {
                    return a.write("reveal")
                }

                function j(a) {
                    return a.write("hundred")
                }

                function k(a, b) {
                    return a.reference(b.get("sleepNumber"), b, "h")
                }

                function l(a) {
                    return a.write("-")
                }

                function m(a, b) {
                    return a.reference(b.get("sleepNumber"), b, "h")
                }

                function n(a) {
                    return a.write("ess")
                }
                return a.register("templates/childviews/adult-weekly", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/adult-weekly", b, c)
                }
            }
        }), define("rdust!templates/childviews/averages", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="averages').exists(b.get("accordion"), b, {
                        block: c
                    }, null).exists(b.get("open"), b, {
                        block: d
                    }, null).write('" data-transition-duration="0.3"><div class="arrow"></div><div class="top">').reference(b.get("title"), b, "h").write('</div><div class="content"><div class="in-bed-wrapper"><div class="in-bed"><span class="label"><span class="excess">Avg Time </span>In Bed</span><span class="value">').reference(b.get("inBedFormatted"), b, "h").write('</span></div><div class="doughnut-chart"data-slices="').reference(b.get("outOfBed"), b, "h").write(", ").reference(b.get("restless"), b, "h").write(", ").reference(b.get("restful"), b, "h").write('"data-inner-cutout="84"data-animation-steps="40"data-colors="#B40617, #F28940, #81BE52"></div></div><div class="default right').exists(b.get("isChild"), b, {
                        block: e
                    }, null).write('"><div class="column sleepiq"><div class="divider"></div><span class="label">SleepIQ<sup>&reg;</sup></span><span class="value">').reference(b.get("avgSleepIQ"), b, "h").write("</span></div>").notexists(b.get("isChild"), b, {
                        block: f
                    }, null).write('</div><div class="details right" data-hidden="true"><div class="divider"></div><ul class="times"><li class="time restful"><div class="wrapper"><div class="label">Restful</div><div class="value">').reference(b.get("restfulFormatted"), b, "h").write('</div></div></li><li class="time restless"><div class="wrapper"><div class="label">Restless</div><div class="value">').reference(b.get("restlessFormatted"), b, "h").write('</div></div></li><li class="time out-of-bed"><div class="wrapper"><div class="label">Out of Bed</div><div class="value">').reference(b.get("outOfBedFormatted"), b, "h").write("</div></div></li></ul></div></div></div>")
                }

                function c(a) {
                    return a.write(" accordion")
                }

                function d(a) {
                    return a.write(" open")
                }

                function e(a) {
                    return a.write(" no-rates")
                }

                function f(a, b) {
                    return a.write('<div class="column rates"><div class="divider"></div><div class="mobile"></div><div class="heart-rate tablet">').notexists(b.get("noData"), b, {
                        "else": g,
                        block: h
                    }, null).write('</div><div class="breath-rate tablet">').notexists(b.get("noData"), b, {
                        "else": i,
                        block: j
                    }, null).write("</div></div>")
                }

                function g(a) {
                    return a.write("00")
                }

                function h(a, b) {
                    return a.reference(b.get("avgHeartRate"), b, "h")
                }

                function i(a) {
                    return a.write("00")
                }

                function j(a, b) {
                    return a.reference(b.get("avgRespirationRate"), b, "h")
                }
                return a.register("templates/childviews/averages", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/averages", b, c)
                }
            }
        }), define("app/ui/views/childviews/AdultWeeklyView", ["require", "lavaca/mvc/View", "lavaca/mvc/Model", "app/models/FamilyModel", "app/models/StateModel", "app/ui/views/childviews/BarChartView", "app/ui/views/childviews/HeartRateBreathRateView", "app/ui/widgets/DragAccordionWidget", "app/ui/widgets/DoughnutWidget", "rdust!templates/childviews/adult-weekly", "app/ui/views/childviews/CoachmarkView", "moment", "$", "app/utils/MixPanelManager", "rdust!templates/childviews/averages"], function(a) {
            function b(a) {
                this.parentView.updateType("day", a.currentTarget.dataset.date)
            }

            function c(a) {
                for (var b = this.model.get("days"), c = 0; c < b.length; c++)
                    for (var d = 0; d < a.length; d++)
                        if (!b[c].noData && b[c].date === a[d].date) {
                            var e = {};
                            b[c].sliceList = a[d].sliceList, e['.slices[data-date="' + b[c].date + '"] .bar-chart-wrapper'] = {
                                TView: k,
                                model: new i({
                                    graphData: this.model.get("graphData") || 0,
                                    barData: b[c],
                                    date: b[c].date
                                })
                            }, this.mapChildView(e)
                        }
            }

            function d() {
                for (var a, b, c, d, e, f, g, h = this.model.get("days"), i = [], j = 0; j < h.length; j++) h[j].noData || (h[j].startingTenMinutes && h[j].startingTenMinutes.get("hour") > 17 && (this.hasPMTime = !0, a ? h[j].startingTenMinutes.get("hour") < a.get("hour") && (a = h[j].startingTenMinutes.clone()) : a = g = h[j].startingTenMinutes.clone()), h[j].endingTenMinutes && (b ? g = h[j].endingTenMinutes.clone().dayOfYear(b.dayOfYear()) : b = g = h[j].endingTenMinutes.clone(), g && g.isAfter(b) && (b = h[j].endingTenMinutes.clone()), h[j].sessionHours >= 15 && !Modernizr.tablet && !Modernizr.desktop && (this.useThinSlices = !0)));
                for (a || (a = q(this.model.get("firstDay") + "T18:00:00")), b || (b = q(this.model.get("firstDay") + "T18:00:00").add(12, "hours")), c = a.clone().subtract(1, "hour").startOf("hour"), d = b.clone().add(2, "hour").startOf("hour"), f = d.diff(c, "hours") - 24 * d.diff(c, "days"), e = c.clone(), c.format("YY-MM-DD") === d.format("YY-MM-DD") && 0 > f && (f += 24), f > 16 ? f = 16 : 12 > f && (d.add(12 - f, "hours"), f = 12), j = 0; f + 1 > j; j++) i.push(e.format("ha")), e.add(1, "hour");
                this.model.set("graphData", {
                    timelineHours: f,
                    tenMinuteIntervals: 6 * f,
                    timeIntervals: i,
                    startingTime: c,
                    endingTime: d
                })
            }

            function e() {
                setTimeout(function() {
                    this.el.find(".doughnut-chart").trigger("animateChart"), this.hasAnimated = !0
                }.bind(this), 150)
            }

            function f() {
                setTimeout(function() {
                    this.el.find(".doughnut-chart").trigger("reset")
                }.bind(this), 150)
            }

            function g() {
                var a = !j.getFamily()[j.getLoggedInUserIndex()].get("isChild");
                a && p.displayCoachmark("adult-weekly")
            }
            var h = a("lavaca/mvc/View"),
                i = a("lavaca/mvc/Model"),
                j = a("app/models/FamilyModel"),
                k = (a("app/models/StateModel"), a("app/ui/views/childviews/BarChartView")),
                l = a("app/ui/views/childviews/HeartRateBreathRateView"),
                m = a("app/ui/widgets/DragAccordionWidget"),
                n = a("app/ui/widgets/DoughnutWidget"),
                o = a("rdust!templates/childviews/adult-weekly"),
                p = a("app/ui/views/childviews/CoachmarkView"),
                q = a("moment"),
                r = (a("$"), a("app/utils/MixPanelManager"));
            a("rdust!templates/childviews/averages");
            var s = h.extend(function() {
                h.apply(this, arguments), this.mapChildView({
                    ".rates .mobile": {
                        TView: l,
                        model: this.model
                    }
                }), this.mapEvent({
                    self: {
                        accordionOpened: e,
                        accordionClosed: f
                    },
                    ".day": {
                        tap: b
                    }
                }), this.mapWidget({
                    ".doughnut-chart": {
                        TWidget: n
                    }
                }), Modernizr.desktop || this.mapWidget({
                    ".accordion": {
                        TWidget: m
                    }
                }), g.call(this)
            }, {
                className: "adult-weekly",
                autoRender: !0,
                hasAnimatedSlices: !1,
                generateHtml: function(a) {
                    return this.hasAnimated = !1, this.hasAnimatedSlices = !1, new Promise(function(b) {
                        o.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                selfInView: function() {
                    if (this.model && r.prototype.trackSleep(j.getSelectedUser(), "Week", this.model.toObject()), !this.hasAnimatedSlices) {
                        var a = this.model.get("firstDay");
                        this.parentView && this.parentView.model && this.parentView.model.fetchSleepSlices(this.model.get("firstDay"), "W1").then(function(b) {
                            b && this.model.get("firstDay") === a && this.el.hasClass("inView") && (d.call(this), c.call(this, b), this.model.trigger("slicesFetched")), this.render(".days").then(function() {
                                setTimeout(function() {
                                    (Modernizr.tablet && window.innerWidth >= 650 || Modernizr.desktop && !this.hasAnimated) && e.call(this), this.useThinSlices && (this.el.find(".slices").addClass("thin"), this.useThinSlices = !1), this.hasAnimatedSlices = !0
                                }.bind(this), 100)
                            }.bind(this))
                        }.bind(this), function b(b) {
                            console.error(b)
                        })
                    }
                }
            });
            return s
        }), define("rdust!templates/childviews/calendar", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('  <div class="day-headers"><div class="initial">S</div><div class="initial">M</div><div class="initial">T</div><div class="initial">W</div><div class="initial">T</div><div class="initial">F</div><div class="initial">S</div><div class="divider"></div></div>').exists(b.get("startDays"), b, {
                        block: c
                    }, null).exists(b.get("sleepData"), b, {
                        block: e
                    }, null).exists(b.get("endDays"), b, {
                        block: y
                    }, null)
                }

                function c(a, b) {
                    return a.section(b.get("startDays"), b, {
                        block: d
                    }, null)
                }

                function d(a) {
                    return a.write('<div class="empty day"><div class="divider"></div></div>')
                }

                function e(a, b) {
                    return a.section(b.get("sleepData"), b, {
                        block: f
                    }, null)
                }

                function f(a, b) {
                    return a.write('<div class="day').exists(b.get("noData"), b, {
                        block: g
                    }, null).write('" data-date="').reference(b.get("date"), b, "h").write('">').helper("select", b, {
                        block: h
                    }, {
                        key: p
                    }).write('<div class="date">').reference(b.get("dayOfMonth"), b, "h").write('</div><div class="sleepiq ').exists(b.get("isEdited"), b, {
                        block: q
                    }, null).write('">').reference(b.get("sleepQuotient"), b, "h").write('</div><div class="indicators">').exists(b.get("isChild"), b, {
                        block: r
                    }, null).write('<div class="indicator tag').exists(b.get("tags"), b, {
                        block: x
                    }, null).write('"></div></div><div class="divider"></div></div>')
                }

                function g(a) {
                    return a.write(" no-data")
                }

                function h(a, b) {
                    return a.helper("eq", b, {
                        block: i
                    }, {
                        value: "100"
                    }).helper("gt", b, {
                        block: j
                    }, {
                        value: k
                    }).helper("gt", b, {
                        block: l
                    }, {
                        value: m
                    }).helper("gt", b, {
                        block: n
                    }, {
                        value: "0"
                    }).helper("default", b, {
                        block: o
                    }, null)
                }

                function i(a, b) {
                    return a.write('<div class="bar green"><div class="small-date">').reference(b.get("dayOfMonth"), b, "h").write("</div></div>")
                }

                function j(a, b) {
                    return a.write('<div class="bar green"><div class="small-date">').reference(b.get("dayOfMonth"), b, "h").write("</div></div>")
                }

                function k(a, b) {
                    return a.reference(b.get("greenMin"), b, "h")
                }

                function l(a, b) {
                    return a.write('<div class="bar orange"><div class="small-date">').reference(b.get("dayOfMonth"), b, "h").write("</div></div>")
                }

                function m(a, b) {
                    return a.reference(b.get("orangeMin"), b, "h")
                }

                function n(a, b) {
                    return a.write('<div class="bar red"><div class="small-date">').reference(b.get("dayOfMonth"), b, "h").write("</div></div>")
                }

                function o(a, b) {
                    return a.write('<div class="bar"><div class="small-date">').reference(b.get("dayOfMonth"), b, "h").write("</div></div>")
                }

                function p(a, b) {
                    return a.reference(b.get("sleepQuotient"), b, "h")
                }

                function q(a) {
                    return a.write(" ess")
                }

                function r(a, b) {
                    return a.write('<div class="indicator goal').exists(b.get("goalEntry"), b, {
                        block: s
                    }, null).write('"></div>')
                }

                function s(a, b) {
                    return a.exists(b.getPath(!1, ["goalEntry", "status"]), b, {
                        block: t
                    }, null)
                }

                function t(a, b) {
                    return a.helper("select", b, {
                        block: u
                    }, {
                        key: w
                    })
                }

                function u(a, b) {
                    return a.helper("eq", b, {
                        block: v
                    }, {
                        value: "1"
                    })
                }

                function v(a) {
                    return a.write(" reveal")
                }

                function w(a, b) {
                    return a.reference(b.getPath(!1, ["goalEntry", "status"]), b, "h")
                }

                function x(a) {
                    return a.write(" reveal")
                }

                function y(a, b) {
                    return a.section(b.get("endDays"), b, {
                        block: z
                    }, null)
                }

                function z(a, b) {
                    return a.write('<div class="empty day"><div class="divider"></div><div class="bar"><div class="small-date">').reference(b.get("dayOfMonth"), b, "h").write('</div></div><div class="date">').reference(b.get("dayOfMonth"), b, "h").write("</div></div>")
                }
                return a.register("templates/childviews/calendar", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/calendar", b, c)
                }
            }
        }), define("app/ui/views/childviews/CalendarView", ["require", "lavaca/mvc/View", "app/models/FamilyModel", "rdust!templates/childviews/calendar"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("app/models/FamilyModel"),
                d = a("rdust!templates/childviews/calendar"),
                e = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    className: "calendar",
                    autoRender: !0,
                    generateHtml: function(a) {
                        return a.isChild = c.getSelectedUser().isChild, a.greenMin = a.isChild ? 55 : 69, a.orangeMin = a.isChild ? 35 : 49, new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return e
        }), define("rdust!templates/childviews/adult-monthly", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="overflow-scroll"><div class="overflow-scroll-inner">').partial("templates/childviews/averages", b, {
                        title: "Monthly Averages",
                        open: "true"
                    }).write('<div class="phone-wrapper"><div class="calendar-connector').helper("gt", b, {
                        block: c
                    }, {
                        key: d,
                        value: "35"
                    }).write('"></div></div></div></div>')
                }

                function c(a) {
                    return a.write(" six-rows")
                }

                function d(a, b) {
                    return a.reference(b.get("totalCalendarDays"), b, "h")
                }
                return a.register("templates/childviews/adult-monthly", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/adult-monthly", b, c)
                }
            }
        }), define("app/ui/views/childviews/AdultMonthlyView", ["require", "lavaca/mvc/View", "app/models/FamilyModel", "app/ui/views/childviews/CalendarView", "app/ui/views/childviews/HeartRateBreathRateView", "app/ui/widgets/DoughnutWidget", "rdust!templates/childviews/adult-monthly", "app/utils/MixPanelManager", "rdust!templates/childviews/averages"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("app/models/FamilyModel"),
                d = a("app/ui/views/childviews/CalendarView"),
                e = a("app/ui/views/childviews/HeartRateBreathRateView"),
                f = a("app/ui/widgets/DoughnutWidget"),
                g = a("rdust!templates/childviews/adult-monthly"),
                h = a("app/utils/MixPanelManager");
            a("rdust!templates/childviews/averages");
            var i = b.extend(function() {
                b.apply(this, arguments), this.mapChildView({
                    ".rates .mobile": {
                        TView: e,
                        model: this.model
                    },
                    ".calendar-connector": {
                        TView: d,
                        model: this.model
                    }
                }), this.mapEvent({
                    ".day[data-date]": {
                        tap: this.onTapDay
                    }
                }), this.mapWidget({
                    ".doughnut-chart": {
                        TWidget: f
                    }
                })
            }, {
                className: "adult-monthly",
                autoRender: !0,
                generateHtml: function(a) {
                    return this.hasAnimated = !1, new Promise(function(b) {
                        g.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                selfInView: function() {
                    this.model && h.prototype.trackSleep(c.getSelectedUser(), "Month", this.model.toObject()), this.hasAnimated || setTimeout(function() {
                        this.el.find(".doughnut-chart").trigger("animateChart"), this.hasAnimated = !0
                    }.bind(this), 150)
                },
                onTapDay: function(a) {
                    this.parentView.updateType("day", a.currentTarget.dataset.date)
                }
            });
            return i
        }), define("rdust!templates/childviews/kid-daily", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="overflow-scroll"><div class="overflow-scroll-inner"><div class="top-container ').notexists(b.get("naps"), b, {
                        block: c
                    }, null).write(" ").exists(b.get("sleepIQCalculating"), b, {
                        block: d
                    }, null).write('">').notexists(b.get("noData"), b, {
                        block: e
                    }, null).write('<div class="sleep-carousel ').exists(b.get("noData"), b, {
                        block: l
                    }, null).write('"><div class="time-bars-container ').exists(b.get("chartView"), b, {
                        block: m
                    }, null).write('" data-section="1">').partial("templates/childviews/bed-presence", b, {
                        postfix: n,
                        prounoun: o,
                        animationDelay: "0",
                        animationDuration: "2s"
                    }).exists(b.get("noData"), b, {
                        "else": p,
                        block: w
                    }, null).write('</div><div class="sleep-slices-container" data-section="2">').exists(b.get("canEditSlices"), b, {
                        block: x
                    }, null).exists(b.get("noData"), b, {
                        "else": y,
                        block: A
                    }, null).write('</div></div><!--[TODO REMOVE TEMPORARY EDIT]--><!-- <div class="edit-sleep"style="position: absolute;top: 10px;right: 40px;">EDIT</div> --><div class="sleep-number">Sleep Number<sup>&reg;</sup> Setting&nbsp;<span class="number ').helper("eq", b, {
                        block: B
                    }, {
                        key: C,
                        value: "100"
                    }).write('"><div class="circle">').reference(b.get("sleepNumber"), b, "h").write('</div></span><div class="lines"><span class="placeholder">Sleep Number<sup>&reg;</sup> Setting <span class="number">').exists(b.get("sleepNumber"), b, {
                        "else": D,
                        block: E
                    }, null).write('</span></span></div></div></div><div class="bottom-container"><div class="lower-wrap"><div class="goals"><div class="divider"></div><h1 class="username">').reference(b.get("userName"), b, "h").write("&rsquo;s Goal</h1>").exists(b.get("goal"), b, {
                        "else": F,
                        block: I
                    }, null).write('</div><div class="lower-row"><div class="tag-cloud ').notexists(b.get("tags"), b, {
                        block: L
                    }, null).write(" ").exists(b.get("showSvg"), b, {
                        block: M
                    }, null).write('"></div></div></div></div></div></div>')
                }

                function c(a) {
                    return a.write("no-naps")
                }

                function d(a) {
                    return a.write("siq-calculating")
                }

                function e(a, b) {
                    return a.write('<div class="total-times"><h1 class="sleepiq">SleepIQ<sup>&reg;</sup> <span>').reference(b.get("sleepQuotient"), b, "h").write('</span></h1><h1>Total Time In Bed &middot; <span class="').exists(b.get("isEdited"), b, {
                        block: f
                    }, null).write('">').reference(b.get("inBedFormatted"), b, "h").exists(b.get("isEdited"), b, {
                        block: g
                    }, null).write('</span></h1><h2 class="naps">').helper("select", b, {
                        block: h
                    }, {
                        key: k
                    }).write('</h2></div><div class="sleep-times"><ul class="time"><li class="restful"><div class="wrapper"><div class="circle"></div><div class="label">Restful</div></div><div class="value">').reference(b.get("restfulFormatted"), b, "h").write('</div></li><li class="restless"><div class="wrapper"><div class="circle"></div><div class="label">Restless</div></div><div class="value">').reference(b.get("restlessFormatted"), b, "h").write('</div></li><li class="out-of-bed"><div class="wrapper"><div class="circle"></div><div class="label">Out Of Bed</div></div><div class="value">').reference(b.get("outOfBedFormatted"), b, "h").write("</div></li></ul></div>")
                }

                function f(a) {
                    return a.write("is-edited")
                }

                function g(a) {
                    return a.write(' <div class="edited-label">(edited)</div>')
                }

                function h(a, b) {
                    return a.helper("gt", b, {
                        block: i
                    }, {
                        value: "1"
                    }).helper("eq", b, {
                        block: j
                    }, {
                        value: "1"
                    })
                }

                function i(a, b) {
                    return a.reference(b.get("naps"), b, "h").write(" Daytime Naps &middot; <span>").reference(b.get("napsTotalTimeFormatted"), b, "h").write("</span>")
                }

                function j(a, b) {
                    return a.reference(b.get("naps"), b, "h").write(" Daytime Nap &middot; <span>").reference(b.get("napsTotalTimeFormatted"), b, "h").write("</span>")
                }

                function k(a, b) {
                    return a.reference(b.get("naps"), b, "h")
                }

                function l(a) {
                    return a.write("pause")
                }

                function m(a) {
                    return a.write("hide")
                }

                function n(a, b) {
                    return a.reference(b.get("name"), b, "h")
                }

                function o(a, b) {
                    return a.reference(b.get("pronoun"), b, "h")
                }

                function p(a, b) {
                    return a.write('<ul class="time-bars" data-time="').reference(b.get("totalSleepSessionTime"), b, "h").write('"><li><div class="time-bar restful ').helper("eq", b, {
                        block: q
                    }, {
                        key: r,
                        value: "restful"
                    }).write('" data-time="').reference(b.get("restful"), b, "h").write('"></div></li><li><div class="time-bar restless ').helper("eq", b, {
                        block: s
                    }, {
                        key: t,
                        value: "restless"
                    }).write('" data-time="').reference(b.get("restless"), b, "h").write('"></div></li><li><div class="time-bar out-of-bed ').helper("eq", b, {
                        block: u
                    }, {
                        key: v,
                        value: "outOfBed"
                    }).write('" data-time="').reference(b.get("outOfBed"), b, "h").write('"></div></li><div class="divider"></div></ul>')
                }

                function q(a) {
                    return a.write("tallest")
                }

                function r(a, b) {
                    return a.reference(b.get("greatestTimeType"), b, "h")
                }

                function s(a) {
                    return a.write("tallest")
                }

                function t(a, b) {
                    return a.reference(b.get("greatestTimeType"), b, "h")
                }

                function u(a) {
                    return a.write("tallest")
                }

                function v(a, b) {
                    return a.reference(b.get("greatestTimeType"), b, "h")
                }

                function w(a) {
                    return a.write('<p class="no-data">No Data Recorded for this Session</p>')
                }

                function x(a) {
                    return a.write('<div class="edit-sleep"><span class="edit-sleep-modal">Edit Sleep </span></div>')
                }

                function y(a, b) {
                    return a.write('<div class="chart-block"><div class="bar-chart-wrapper" data-flags="true"></div><div class="timeline" data-hours="').reference(b.get("timelineHours"), b, "h").write('">').section(b.get("timeIncrements"), b, {
                        block: z
                    }, null).write("</div></div>")
                }

                function z(a, b) {
                    return a.write('<div class="interval"><div class="time">').reference(b.getPath(!0, []), b, "h", ["s"]).write('</div><div class="dot">&middot;</div></div>')
                }

                function A(a) {
                    return a.write('<p class="no-data">No Data Recorded for this Session</p>')
                }

                function B(a) {
                    return a.write("small")
                }

                function C(a, b) {
                    return a.reference(b.get("sleepNumber"), b, "h")
                }

                function D(a) {
                    return a.write("--")
                }

                function E(a, b) {
                    return a.reference(b.get("sleepNumber"), b, "h")
                }

                function F(a, b) {
                    return a.write('<h2 class="primary no-goals">').exists(b.get("canEdit"), b, {
                        "else": G,
                        block: H
                    }, null).write("</h2>")
                }

                function G(a) {
                    return a.write("Talk to your parents about setting sleep goals.")
                }

                function H(a) {
                    return a.write("No goals yet. Set the first goal now.")
                }

                function I(a, b) {
                    return a.write('<h2 class="primary">').reference(b.getPath(!1, ["goal", "goalTitle"]), b, "h").write('</h2><ul class="goal-days">').exists(b.get("goalDays"), b, {
                        block: J
                    }, null).write("</ul>")
                }

                function J(a, b) {
                    return a.section(b.get("goalDays"), b, {
                        block: K
                    }, null)
                }

                function K(a, b) {
                    return a.write('<li class="goal-day" data-date="').reference(b.getPath(!1, ["goalDays", b.get("$idx"), "date"]), b, "h").write('"><div class="star"></div><div class="initial">').reference(b.getPath(!1, ["goalDays", b.get("$idx"), "initial"]), b, "h").write("</div></li>")
                }

                function L(a) {
                    return a.write("none")
                }

                function M(a) {
                    return a.write("sleeping")
                }
                return a.register("templates/childviews/kid-daily", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/kid-daily", b, c)
                }
            }
        }), define("app/ui/views/childviews/KidDailyView", ["require", "lavaca/mvc/View", "lavaca/mvc/Router", "app/models/FamilyModel", "app/models/StateModel", "app/ui/widgets/DragAndSnapXWidget", "app/ui/views/childviews/TagsView", "app/ui/views/childviews/BarChartView", "app/env/ModernizrTests", "rdust!templates/childviews/kid-daily", "app/utils/debounce", "moment", "$", "app/utils/MixPanelManager", "lavaca/net/Connectivity"], function(a) {
            function b() {
                c.call(this), this.trackingInterval = setInterval(c.bind(this), 6e5)
            }

            function c() {
                this.checkingPresence || (this.checkingPresence = !0, n.checkBedPresence().then(function(a) {
                    var b = n.getSelectedUser(),
                        c = 0;
                    for (var d in a)
                        if (b.bedId === a[d].bedId) {
                            var e = b.side ? "rightSide" : "leftSide",
                                f = a[d][e] ? a[d][e].isInBed : !1;
                            this.el.find(".top-container").toggleClass("in-bed", f), c = f ? c + 1 : c
                        }
                    c ? (this.model.set("sleepIQCalculating", !1), this.model.set("showSvg", !0), this.render(".bed-presence, .tag-cloud").then(function() {
                        this.parentView.model.fetchSingleDay(this.model.get("date")).then(function(a) {
                            this.model.apply(a), this.parentView.model.fetchSleepSlices(this.model.get("date")).then(function(a) {
                                a && a.sliceList && (this.model.set("sliceList", a.sliceList), this.render(".sleep-slices-container"))
                            }.bind(this), function b(b) {
                                console.error(b)
                            })
                        }.bind(this))
                    }.bind(this))) : this.parentView.model.fetchSleepSlices(this.model.get("date")).then(function(a) {
                        a && a.sliceList && (this.model.set("sliceList", a.sliceList), this.render(".sleep-slices-container"))
                    }.bind(this), function g(g) {
                        console.error(g)
                    }), this.checkingPresence = !1
                }.bind(this), function() {
                    this.checkingPresence = !1
                }.bind(this)))
            }

            function d(a) {
                if (!(this.model.get("noData") || v(a.currentTarget).hasClass("sleeping") || !this.model.get("canEdit") && v(a.currentTarget).hasClass("none"))) {
                    var b = n.getSelectedUser(),
                        c = {
                            canEdit: this.model.get("canEdit") || !1,
                            date: this.model.get("date"),
                            checkedTags: this.model.get("tags") || [],
                            name: this.parentView && this.parentView.model ? this.parentView.model.get("firstName") : "",
                            sleeperId: b.sleeperId,
                            isChild: b.isChild
                        };
                    m.exec("/modals/activities", null, {
                        model: c
                    })
                }
            }

            function e(a) {
                if (!(Modernizr.desktop || v(a.currentTarget).hasClass("no-tip") || window.innerWidth >= 650)) {
                    var b = this.model.get("tip");
                    window.customAlert(b || "There is no tip for this day.", null, "bottom", "tip")
                }
            }

            function f() {
                var a = this.el.find(".time-bars"),
                    b = a.find(".time-bar"),
                    c = a.find(".tallest"),
                    d = c.data("time"),
                    e = a.height(),
                    f = a.data("time"),
                    g = 0;
                this.hasAnimated || (f >= 60 && c.length && (g = e - Math.ceil(e * (c.data("time") / f)), b.each(function(a, b) {
                    if (!v(b).hasClass("tallest") && v(b).data("time") >= 60) {
                        var c = v(b),
                            e = c.data("time"),
                            f = 100 * (e / d);
                        c.height(f + "%")
                    }
                }), c.height("100%"), b.each(function(a, b) {
                    setTimeout(function() {
                        v(b).addClass("show")
                    }.bind(this), 25 * a)
                })), this.hasAnimated = !0)
            }

            function g() {
                for (var a = this.model.get("date"), b = u(a).day("Sunday"), c = [], d = 0; 7 > d; d++) {
                    var e = b.clone().add(d, "days");
                    c.push({
                        date: e.format("YYYY-MM-DD"),
                        initial: e.format("dddd").slice(0, 1)
                    })
                }
                return this.model.set("goalDays", c), c
            }

            function h() {
                var a = this.parentView.model.get("goalEntries"),
                    b = [];
                if (a)
                    for (var c = 0; c < a.length; c++) {
                        var d = this.el.find('.goal-day[data-date="' + a[c].date + '"]');
                        d.length && (d.addClass(a[c].status ? "reached" : "missed"), b.push(a[c].status ? 1 : 0))
                    }
                this.model && w.prototype.trackSleep(n.getSelectedUser(), "Day", this.model.toObject(), b)
            }

            function i() {
                var a = this.getChildViews(".bar-chart-wrapper");
                a && a.forEach(function(a) {
                    a.testVisibleInViewAndHasSlices && a.testVisibleInViewAndHasSlices() && this.parentView && this.parentView.model && this.parentView.model.fetchSleepSlices(this.model.get("date")).then(function(a) {
                        a && a.sliceList && (this.model.set("sliceList", a.sliceList), this.model.trigger("redrawSlices"), this.model.set("hasSlices", !0), this.hasAnimated = !0)
                    }.bind(this), function b(b) {
                        console.error(b)
                    }), a.updateTimeFlags && a.updateTimeFlags()
                })
            }

            function j(a) {
                var b = v(a.currentTarget);
                this.el.find(".dot").removeClass("active"), this.el.find('.dot[data-control="' + b.data("section") + '"]').addClass("active"), this.el.find(".sleep-times").toggleClass("show-circles", !b.hasClass("time-bars-container")), this.el.find(".total-times").toggleClass("hide-iq", !b.hasClass("time-bars-container"))
            }

            function k() {
                if (x.isOffline()) window.customAlert.alert("There is currently no internet connection available. Please reestablish a connection and try again."), this.forceExit();
                else {
                    if (!this.model.get("sliceList")) return;
                    m.exec("/modals/edit-sleep", null, {
                        model: this.model
                    })
                }
            }
            var l = a("lavaca/mvc/View"),
                m = a("lavaca/mvc/Router"),
                n = a("app/models/FamilyModel"),
                o = a("app/models/StateModel"),
                p = (a("app/ui/widgets/DragAndSnapXWidget"), a("app/ui/views/childviews/TagsView")),
                q = a("app/ui/views/childviews/BarChartView"),
                r = a("app/env/ModernizrTests"),
                s = a("rdust!templates/childviews/kid-daily"),
                t = a("app/utils/debounce"),
                u = a("moment"),
                v = a("$"),
                w = a("app/utils/MixPanelManager"),
                x = a("lavaca/net/Connectivity"),
                y = l.extend(function() {
                    l.apply(this, arguments), this.mapChildView({
                        ".bar-chart-wrapper": {
                            TView: q,
                            model: this.model
                        },
                        ".tag-cloud": {
                            TView: p,
                            model: this.model
                        }
                    }), this.mapEvent({
                        "[data-section]": {
                            sectionInView: j
                        },
                        ".sleep-tip": {
                            tap: e
                        },
                        ".tag-cloud": {
                            tap: d
                        },
                        ".edit-sleep-modal": {
                            tap: k
                        }
                    }), v(window).on("resize.kidDaily", t(this.onResize.bind(this), 100))
                }, {
                    className: "kid-daily",
                    autoRender: !0,
                    generateHtml: function(a) {
                        if (a) {
                            var b = n.getSelectedUser();
                            a.canEdit = n.hasPermission(), a.name = b ? b.firstName : "", a.chartView = "Summary View" === o.get("toggleView"), b && (a.pronoun = b.isMale ? "he" : "she"), this.parentView && this.parentView.model && (a.goal = this.parentView.model.get("goal"), a.userName = this.parentView.model.get("firstName")), a.goalDays = g.call(this), this.model.set("goal", a.goal), this.model.set("canEdit", a.canEdit), a.chartView || (this.hasAnimated = !1, v(".sleep-carousel>.time-bars-container").show(), f.call(this)), this.hasAnimated = !1
                        }
                        return new Promise(function(b) {
                            s.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        this.clearPresenceInterval(), v(window).off("resize.kidDaily", t(this.onResize.bind(this), 100)), l.prototype.dispose.apply(this, arguments)
                    },
                    onResize: function() {
                        setTimeout(function() {
                            f.call(this)
                        }.bind(this), 500)
                    },
                    selfInView: function() {
                        var a = this.getChildViews(".tag-cloud"),
                            c = r.msie ? 300 : 200;
                        setTimeout(function() {
                            this.model && u().isSame(this.model.get("date"), "day") ? this.trackingInterval || b.call(this) : this.clearPresenceInterval(), a && a[0] && a[0].update(), f.call(this), i.call(this), this.parentView && this.parentView.model && this.parentView.model.get("goalEntries") ? h.call(this) : this.model && w.prototype.trackSleep(n.getSelectedUser(), "Day", this.model.toObject());
                            var c = this.model.get("date");
                            setTimeout(function() {
                                this.model && this.model.get("hasSlices") && this.el.hasClass("inView") ? this.hasAnimated || this.model.trigger("redrawSlices") : this.parentView && this.parentView.model && this.el.hasClass("inView") && this.parentView.model.fetchSleepSlices(this.model.get("date")).then(function(a) {
                                    this.model.get("date") === c && a && a.sliceList && (this.model.set("sliceList", a.sliceList), this.model.trigger("slicesFetched"), this.model.set("hasSlices", !0))
                                }.bind(this), function a(a) {
                                    window.customAlert.alert(a)
                                })
                            }.bind(this), 1500)
                        }.bind(this), c)
                    },
                    clearPresenceInterval: function() {
                        this.trackingInterval && (clearInterval(this.trackingInterval), this.trackingInterval = null, this.el.find(".in-bed").length > 0 && (this.model.set("showSvg", !1), this.render(".bed-presence, .tag-cloud")))
                    }
                });
            return y
        }), define("rdust!templates/childviews/kid-weekly", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="overflow-scroll"><div class="overflow-scroll-inner">').partial("templates/childviews/averages", b, {
                        title: "Weekly Averages",
                        accordion: "true",
                        isChild: "true"
                    }).write('<div class="days">').exists(b.get("graphData"), b, {
                        block: c
                    }, null).exists(b.get("days"), b, {
                        block: g
                    }, null).write("</div></div></div>")
                }

                function c(a, b) {
                    return a.exists(b.getPath(!1, ["graphData", "timeIntervals"]), b, {
                        block: d
                    }, null)
                }

                function d(a, b) {
                    return a.write('<div class="timeline" ').exists(b.get("graphData"), b, {
                        block: e
                    }, null).write(">").section(b.getPath(!1, ["graphData", "timeIntervals"]), b, {
                        block: f
                    }, null).write("</div>")
                }

                function e(a, b) {
                    return a.write('data-hours="').reference(b.getPath(!1, ["graphData", "timelineHours"]), b, "h").write('"')
                }

                function f(a, b) {
                    return a.write('<div class="interval"><div class="time">').reference(b.getPath(!0, []), b, "h").write('</div><div class="dot">&middot;</div></div>')
                }

                function g(a, b) {
                    return a.section(b.get("days"), b, {
                        block: h
                    }, null)
                }

                function h(a, b) {
                    return a.write('<div class="day" data-date="').reference(b.get("date"), b, "h").write('"><div class="info"><div class="column initial">').reference(b.get("initial"), b, "h").write('</div><div class="column tag').exists(b.get("tags"), b, {
                        block: i
                    }, null).write('"><div class="dot-wrap"><div class="dot "></div></div></div><div class="column goal"><div class="star" data-status="').reference(b.getPath(!1, ["goalEntry", "status"]), b, "h").write('"></div></div><div class="column sleepiq ').exists(b.get("isEdited"), b, {
                        block: j
                    }, null).write('">').reference(b.get("sleepQuotient"), b, "h").write('</div></div><div class="slices" data-date="').reference(b.get("date"), b, "h").write('"><div class="bar-chart-wrapper chart-wrapper" data-parent-timeline="true" data-overflow-right="false" data-overflow-left="false" data-overflow-right="false" data-overflow-left="false"></div></div></div>')
                }

                function i(a) {
                    return a.write(" reveal-dot")
                }

                function j(a) {
                    return a.write("ess")
                }
                return a.register("templates/childviews/kid-weekly", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/kid-weekly", b, c)
                }
            }
        }), define("app/ui/views/childviews/KidWeeklyView", ["require", "lavaca/mvc/View", "lavaca/mvc/Model", "app/models/FamilyModel", "app/ui/views/childviews/BarChartView", "app/ui/views/childviews/HeartRateBreathRateView", "app/ui/widgets/DragAccordionWidget", "app/ui/widgets/DoughnutWidget", "rdust!templates/childviews/kid-weekly", "moment", "$", "app/utils/MixPanelManager", "rdust!templates/childviews/averages"], function(a) {
            function b(a) {
                this.parentView.updateType("day", a.currentTarget.dataset.date)
            }

            function c(a) {
                for (var b = this.model.get("days"), c = 0; c < b.length; c++)
                    for (var d = 0; d < a.length; d++)
                        if (!b[c].noData && b[c].date === a[d].date) {
                            var e = {};
                            b[c].sliceList = a[d].sliceList, e['.slices[data-date="' + b[c].date + '"] .bar-chart-wrapper'] = {
                                TView: j,
                                model: new h({
                                    graphData: this.model.get("graphData") || 0,
                                    barData: b[c],
                                    date: b[c].date
                                })
                            }, this.mapChildView(e)
                        }
            }

            function d() {
                for (var a, b, c, d, e, f, g, h = this.model.get("days"), i = [], j = 0; j < h.length; j++) h[j].noData || (h[j].startingTenMinutes && h[j].startingTenMinutes.get("hour") > 17 && (this.hasPMTime = !0, a ? h[j].startingTenMinutes.get("hour") < a.get("hour") && (a = h[j].startingTenMinutes.clone()) : a = g = h[j].startingTenMinutes.clone()), h[j].endingTenMinutes && (b ? g = h[j].endingTenMinutes.clone().dayOfYear(b.dayOfYear()) : b = g = h[j].endingTenMinutes.clone(), g && g.isAfter(b) && (b = h[j].endingTenMinutes.clone()), h[j].sessionHours >= 15 && !Modernizr.tablet && !Modernizr.desktop && (this.useThinSlices = !0)));
                for (a || (a = o(this.model.get("firstDay") + "T18:00:00")), b || (b = o(this.model.get("firstDay") + "T18:00:00").add(12, "hours")), c = a.clone().subtract(1, "hour").startOf("hour"), d = b.clone().add(2, "hour").startOf("hour"), f = d.diff(c, "hours") - 24 * d.diff(c, "days"), e = c.clone(), c.format("YY-MM-DD") === d.format("YY-MM-DD") && 0 > f && (f += 24), f > 16 ? f = 16 : 12 > f && (d.add(12 - f, "hours"), f = 12), j = 0; f + 1 > j; j++) i.push(e.format("ha")), e.add(1, "hour");
                this.model.set("graphData", {
                    timelineHours: f,
                    tenMinuteIntervals: 6 * f,
                    timeIntervals: i,
                    startingTime: c,
                    endingTime: d
                })
            }

            function e() {
                setTimeout(function() {
                    this.el.find(".doughnut-chart").trigger("animateChart"), this.hasAnimated = !0
                }.bind(this), 150)
            }

            function f() {
                setTimeout(function() {
                    this.el.find(".doughnut-chart").trigger("reset")
                }.bind(this), 150)
            }
            var g = a("lavaca/mvc/View"),
                h = a("lavaca/mvc/Model"),
                i = a("app/models/FamilyModel"),
                j = a("app/ui/views/childviews/BarChartView"),
                k = a("app/ui/views/childviews/HeartRateBreathRateView"),
                l = a("app/ui/widgets/DragAccordionWidget"),
                m = a("app/ui/widgets/DoughnutWidget"),
                n = a("rdust!templates/childviews/kid-weekly"),
                o = a("moment"),
                p = (a("$"), a("app/utils/MixPanelManager"));
            a("rdust!templates/childviews/averages");
            var q = g.extend(function() {
                g.apply(this, arguments), this.mapChildView({
                    ".rates .mobile": {
                        TView: k,
                        model: this.model
                    }
                }), this.mapEvent({
                    self: {
                        accordionOpened: e,
                        accordionClosed: f
                    },
                    ".day": {
                        tap: b
                    }
                }), this.mapWidget({
                    ".doughnut-chart": {
                        TWidget: m
                    }
                }), Modernizr.desktop || this.mapWidget({
                    ".accordion": {
                        TWidget: l
                    }
                })
            }, {
                className: "kid-weekly",
                autoRender: !0,
                hasAnimated: !1,
                hasAnimatedSlices: !1,
                generateHtml: function(a) {
                    return this.hasAnimated = !1, this.hasAnimatedSlices = !1, new Promise(function(b) {
                        n.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                selfInView: function() {
                    if (this.model && p.prototype.trackSleep(i.getSelectedUser(), "Week", this.model.toObject()), !this.hasAnimatedSlices) {
                        var a = this.model.get("firstDay");
                        this.parentView && this.parentView.model && this.parentView.model.fetchSleepSlices(this.model.get("firstDay"), "W1").then(function(b) {
                            b && this.model.get("firstDay") === a && this.el.hasClass("inView") && (d.call(this), c.call(this, b), this.model.trigger("slicesFetched"), this.hasAnimatedSlices = !0), this.render(".days").then(function() {
                                setTimeout(function() {
                                    (Modernizr.tablet && window.innerWidth >= 650 || Modernizr.desktop && !this.hasAnimated) && e.call(this), this.useThinSlices && (this.el.find(".slices").addClass("thin"), this.useThinSlices = !1), this.hasAnimated = !0
                                }.bind(this), 100)
                            }.bind(this))
                        }.bind(this), function b(b) {
                            window.customAlert.alert(b)
                        }.bind(this))
                    }
                }
            });
            return q
        }), define("rdust!templates/childviews/kid-monthly", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="overflow-scroll"><div class="overflow-scroll-inner">').partial("templates/childviews/averages", b, {
                        title: "Monthly Averages",
                        open: "true",
                        isChild: "true"
                    }).write('<div class="phone-wrapper"><div class="calendar-connector').helper("gt", b, {
                        block: c
                    }, {
                        key: d,
                        value: "35"
                    }).write('"></div></div></div></div>')
                }

                function c(a) {
                    return a.write(" six-rows")
                }

                function d(a, b) {
                    return a.reference(b.get("totalCalendarDays"), b, "h")
                }
                return a.register("templates/childviews/kid-monthly", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/kid-monthly", b, c)
                }
            }
        }), define("app/ui/views/childviews/KidMonthlyView", ["require", "lavaca/mvc/View", "app/models/FamilyModel", "app/ui/views/childviews/CalendarView", "app/ui/widgets/DoughnutWidget", "app/ui/views/childviews/CoachmarkView", "app/models/StateModel", "rdust!templates/childviews/kid-monthly", "app/utils/MixPanelManager", "rdust!templates/childviews/averages"], function(a) {
            function b() {
                var a = !d.getFamily()[d.getLoggedInUserIndex()].get("isChild");
                a && g.displayCoachmark("kid-monthly")
            }
            var c = a("lavaca/mvc/View"),
                d = a("app/models/FamilyModel"),
                e = a("app/ui/views/childviews/CalendarView"),
                f = a("app/ui/widgets/DoughnutWidget"),
                g = a("app/ui/views/childviews/CoachmarkView"),
                h = (a("app/models/StateModel"), a("rdust!templates/childviews/kid-monthly")),
                i = a("app/utils/MixPanelManager");
            a("rdust!templates/childviews/averages");
            var j = c.extend(function() {
                c.apply(this, arguments), this.mapChildView({
                    ".calendar-connector": {
                        TView: e,
                        model: this.model
                    }
                }), this.mapEvent({
                    ".day[data-date]": {
                        tap: this.onTapDay
                    }
                }), this.mapWidget({
                    ".doughnut-chart": {
                        TWidget: f
                    }
                }), b.call(this)
            }, {
                className: "kid-monthly",
                autoRender: !0,
                generateHtml: function(a) {
                    return this.hasAnimated = !1, new Promise(function(b) {
                        h.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                selfInView: function() {
                    this.model && i.prototype.trackSleep(d.getSelectedUser(), "Month", this.model.toObject()), this.hasAnimated || setTimeout(function() {
                        this.el.find(".doughnut-chart").trigger("animateChart"), this.hasAnimated = !0
                    }.bind(this), 150)
                },
                onTapDay: function(a) {
                    this.parentView.updateType("day", a.currentTarget.dataset.date)
                }
            });
            return j
        }), define("rdust!templates/childviews/family-daily", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.exists(b.get("sleepers"), b, {
                        "else": c,
                        block: d
                    }, null)
                }

                function c(a) {
                    return a.write("<!-- <h1>loading</h1> -->")
                }

                function d(a, b) {
                    return a.section(b.get("sleepers"), b, {
                        block: e
                    }, null)
                }

                function e(a, b) {
                    return a.write('<div class="user-container ').exists(b.get("sleepIQCalculating"), b, {
                        block: f
                    }, null).write('" data-type="').exists(b.get("isChild"), b, {
                        "else": g,
                        block: h
                    }, null).write('" data-id="').reference(b.get("sleeperId"), b, "h").write('"><div class="profile"><div class="name"><h1>').reference(b.get("name"), b, "h").write('</h1></div><div class="calculating">Calculating SleepIQ<sup>®</sup></div>').exists(b.get("noData"), b, {
                        "else": i,
                        block: j
                    }, null).write('</div><div class="main-pill-chart-wrapper">').partial("templates/childviews/bed-presence", b, {
                        postfix: k,
                        pronoun: l,
                        animationDelay: m,
                        animationDuration: "2s"
                    }).write('<div class="pill-chart ').exists(b.get("noData"), b, {
                        block: n
                    }, null).write('" data-value="').reference(b.get("sleepQuotient"), b, "h").write('" data-sleep-iq="true" data-pills="20" data-open="true" data-rotation="90" data-pill-width="').reference(b.get("pillWidth"), b, "h").write('" data-pill-height="').reference(b.get("pillHeight"), b, "h").write('"><div class="circle"><div class="summary">').exists(b.get("noData"), b, {
                        "else": o,
                        block: p
                    }, null).write('</div></div></div></div><div class="bar-chart-wrapper" data-show-timeline="true" data-parent-timeline="true" data-sleeper-id="').reference(b.get("sleeperId"), b, "h").write('" data-overflow-right="false" data-overflow-left="false"></div>').exists(b.get("noData"), b, {
                        "else": q,
                        block: t
                    }, null).write("</div>")
                }

                function f(a) {
                    return a.write("siq-calculating")
                }

                function g(a) {
                    return a.write("parent")
                }

                function h(a) {
                    return a.write("child")
                }

                function i(a, b) {
                    return a.write('<div class="stats"><div class="avg"><span class="label">Time in Bed</span> <div class="dot"><i>•</i></div><span>').reference(b.get("inBedFormatted"), b, "h").write('</span></div><div class="chart-key"><div class="key restful"><i class="icon"></i><div class="label">Restful</div><div class="value">').reference(b.get("restfulFormatted"), b, "h").write('</div></div><div class="key restless"><i class="icon"></i><div class="label">Restless</div><div class="value">').reference(b.get("restlessFormatted"), b, "h").write('</div></div><div class="key out-of-bed"><i class="icon"></i><div class="label">Out of Bed</div><div class="value">').reference(b.get("outOfBedFormatted"), b, "h").write("</div></div></div></div>")
                }

                function j(a) {
                    return a.write('<div class="no-data-label"><h1>No Data Recorded for this Session.</h1></div>')
                }

                function k(a, b) {
                    return a.reference(b.get("name"), b, "h")
                }

                function l(a, b) {
                    return a.reference(b.get("pronoun"), b, "h")
                }

                function m(a, b) {
                    return a.reference(b.get("$idx"), b, "h")
                }

                function n(a) {
                    return a.write("no-data-hide")
                }

                function o(a, b) {
                    return a.write('<div class="label">SleepIQ<sup>&reg;</sup></div><div class="number">').reference(b.get("sleepQuotient"), b, "h").write("</div>")
                }

                function p(a) {
                    return a.write('<div class="label no-iq"><p>No Data Recorded for this Session.</p></div>')
                }

                function q(a, b) {
                    return a.write('<div class="timeline" ').exists(b.get("graphData"), b, {
                        block: r
                    }, null).write(">").section(b.getPath(!1, ["graphData", "timeIntervals"]), b, {
                        block: s
                    }, null).write("</div>")
                }

                function r(a, b) {
                    return a.write('data-hours="').reference(b.getPath(!1, ["graphData", "timelineHours"]), b, "h").write('"')
                }

                function s(a, b) {
                    return a.write('<div class="interval"><div class="time">').reference(b.getPath(!0, []), b, "h").write('</div><div class="dot">&middot;</div></div>')
                }

                function t(a, b) {
                    return a.write('<div class="no-data-message">').exists(b.get("inBed"), b, {
                        "else": u,
                        block: v
                    }, null).write("</div>")
                }

                function u(a) {
                    return a.write('<div class="no-data"><h1>No Data Recorded for this Session.</h1></div>')
                }

                function v(a) {
                    return a.write('<div class="no-data"><h1>Currently Tracking Sleep</h1></div>')
                }
                return a.register("templates/childviews/family-daily", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/family-daily", b, c)
                }
            }
        }), define("app/service/GoalsService", ["require", "app/service/Service", "lavaca/util/Disposable", "app/service/DemoData", "app/models/StateModel"], function(a) {
            var b = a("app/service/Service"),
                c = a("lavaca/util/Disposable"),
                d = a("app/service/DemoData"),
                e = a("app/models/StateModel"),
                f = c.extend(function() {
                    c.apply(this, arguments)
                }, {
                    getSleeperGoals: function(a) {
                        return e.get("demoMode") ? Promise.resolve(d.getSleeperGoals) : b.makeRequest("sleeper/" + a + "/goal")
                    },
                    createSleeperGoals: function(a, c) {
                        return e.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/goal/", c, "POST")
                    },
                    updateSleeperGoals: function(a, c, d) {
                        return e.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/goal/" + c, d, "PUT")
                    },
                    deleteGoal: function(a, c) {
                        return e.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/goal/" + c, null, "DELETE")
                    },
                    getSleeperGoalsList: function(a, c, f) {
                        return e.get("demoMode") ? Promise.resolve(d.getSleeperGoalsList(a)) : b.makeRequest("sleeper/" + a + "/goalEntries/?interval=" + c + "--" + f, null, "GET")
                    }
                });
            return new f
        }),
        function(a) {
            function b(a) {
                var b = "";
                if (a = parseInt(a, 10), !a || 1 > a) return b;
                for (; a;) b += "0", a -= 1;
                return b
            }

            function c(a, c, d) {
                return null == a && (a = ""), a = "" + a, (d ? a : "") + b(c - a.length) + (d ? "" : a)
            }

            function d(a) {
                return "[object Array]" === Object.prototype.toString.call(a)
            }

            function e(a) {
                return "[object Object]" === Object.prototype.toString.call(a)
            }

            function f(a, b) {
                for (var c = a.length; c -= 1;)
                    if (b(a[c])) return a[c]
            }

            function g(a, b) {
                var c, d = 0,
                    e = a.length;
                for ("function" != typeof b && (c = b, b = function(a) {
                        return a === c
                    }); e > d;) {
                    if (b(a[d])) return a[d];
                    d += 1
                }
            }

            function h(a, b) {
                var c = 0,
                    d = a.length;
                if (a && d)
                    for (; d > c;) {
                        if (b(a[c], c) === !1) return;
                        c += 1
                    }
            }

            function i(a, b) {
                var c = 0,
                    d = a.length,
                    e = [];
                if (!a || !d) return e;
                for (; d > c;) e[c] = b(a[c], c), c += 1;
                return e
            }

            function j(a, b) {
                return i(a, function(a) {
                    return a[b]
                })
            }

            function k(a) {
                var b = [];
                return h(a, function(a) {
                    a && b.push(a)
                }), b
            }

            function l(a) {
                var b = [];
                return h(a, function(a) {
                    g(b, a) || b.push(a)
                }), b
            }

            function m(a, b) {
                var c = [];
                return h(a, function(a) {
                    h(b, function(b) {
                        a === b && c.push(a)
                    })
                }), l(c)
            }

            function n(a, b) {
                var c = [];
                return h(a, function(d, e) {
                    return b(d) ? void 0 : (c = a.slice(e), !1)
                }), c
            }

            function o(a, b) {
                var c = a.slice().reverse();
                return n(c, b).reverse()
            }

            function p(a, b) {
                for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]);
                return a
            }
            var q;
            if ("function" == typeof require) try {
                q = require("moment")
            } catch (r) {}
            if (!q && a.moment && (q = a.moment), !q) throw "Moment Duration Format cannot find Moment.js";
            q.duration.fn.format = function() {
                var a, f, r, s, t, u, v = [].slice.call(arguments),
                    w = p({}, this.format.defaults),
                    x = q.duration(this);
                return w.duration = this, h(v, function(a) {
                    return "string" == typeof a || "function" == typeof a ? (w.template = a, void 0) : "number" == typeof a ? (w.precision = a, void 0) : (e(a) && p(w, a), void 0)
                }), r = w.types = d(w.types) ? w.types : w.types.split(" "), "function" == typeof w.template && (w.template = w.template.apply(w)), a = new RegExp(i(r, function(a) {
                    return w[a].source
                }).join("|"), "g"), s = function(a) {
                    return g(r, function(b) {
                        return w[b].test(a)
                    })
                }, f = i(w.template.match(a), function(a, b) {
                    var c = s(a),
                        d = a.length;
                    return {
                        index: b,
                        length: d,
                        token: "escape" === c ? a.replace(w.escape, "$1") : a,
                        type: "escape" === c || "general" === c ? null : c
                    }
                }, this), t = m(r, l(k(j(f, "type")))), t.length ? (h(t, function(a, b) {
                    var c, d, e, g, i;
                    c = x.as(a), d = c > 0 ? Math.floor(c) : Math.ceil(c), e = c - d, g = b + 1 === t.length, i = !b, h(f, function(b) {
                        b.type === a && (p(b, {
                            value: c,
                            wholeValue: d,
                            decimalValue: e,
                            isLeast: g,
                            isMost: i
                        }), i && null == w.forceLength && b.length > 1 && (w.forceLength = !0))
                    }), x.subtract(d, a)
                }), w.trim && (f = ("left" === w.trim ? n : o)(f, function(a) {
                    return !(a.isLeast || null != a.type && a.wholeValue)
                })), u = !1, "right" === w.trim && f.reverse(), f = i(f, function(a) {
                    var d, e;
                    if (!a.type) return a.token;
                    if (d = a.isLeast && w.precision < 0 ? (Math.floor(a.wholeValue * Math.pow(10, w.precision)) * Math.pow(10, -w.precision)).toString() : a.wholeValue.toString(), d = d.replace(/^\-/, ""), a.length > 1 && (u || a.isMost || w.forceLength) && (d = c(d, a.length)), a.isLeast && w.precision > 0) switch (e = a.decimalValue.toString().replace(/^\-/, "").split(/\.|e\-/), e.length) {
                        case 1:
                            d += "." + c(e[0], w.precision, !0).slice(0, w.precision);
                            break;
                        case 2:
                            d += "." + c(e[1], w.precision, !0).slice(0, w.precision);
                            break;
                        case 3:
                            d += "." + c(b(+e[2] - 1) + (e[0] || "0") + e[1], w.precision, !0).slice(0, w.precision);
                            break;
                        default:
                            throw "Moment Duration Format: unable to parse token decimal value."
                    }
                    return a.isMost && a.value < 0 && (d = "-" + d), u = !0, d
                }), "right" === w.trim && f.reverse(), f.join("")) : j(f, "token").join("")
            }, q.duration.fn.format.defaults = {
                escape: /\[(.+?)\]/,
                years: /[Yy]+/,
                months: /M+/,
                weeks: /[Ww]+/,
                days: /[Dd]+/,
                hours: /[Hh]+/,
                minutes: /m+/,
                seconds: /s+/,
                milliseconds: /S+/,
                general: /.+?/,
                types: "escape years months weeks days hours minutes seconds milliseconds general",
                trim: "left",
                precision: 0,
                forceLength: null,
                template: function() {
                    var a = this.types,
                        b = this.duration,
                        c = f(a, function(a) {
                            return b._data[a]
                        });
                    switch (c) {
                        case "seconds":
                            return "h:mm:ss";
                        case "minutes":
                            return "d[d] h:mm";
                        case "hours":
                            return "d[d] h[h]";
                        case "days":
                            return "M[m] d[d]";
                        case "weeks":
                            return "y[y] w[w]";
                        case "months":
                            return "y[y] M[m]";
                        case "years":
                            return "y[y]";
                        default:
                            return "y[y] M[m] d[d] h:mm:ss"
                    }
                }
            }
        }(this), define("moment-duration-format", ["moment"], function() {}), define("app/models/viewmodels/SleepViewModel", ["require", "lavaca/mvc/Model", "app/models/FamilyModel", "lavaca/mvc/Collection", "app/models/StateModel", "mout/object/get", "app/service/GoalsService", "app/service/SleepDataService", "app/service/EdpAccountService", "app/service/DemoData", "moment", "moment-duration-format"], function(a) {
            function b(a) {
                if (a.length >= 1) {
                    for (var b = 0, c = a.length; c > b; ++b)
                        if (a[b].isPrimary) return a[b];
                    return !1
                }
                return !1
            }

            function c(a) {
                console.log("Goals: ", a);
                for (var b = a.goals, c = 0, d = b.length; d > c; ++c)
                    if (void 0 !== b[c]) {
                        var e = "";
                        0 === b[c].goalType ? e = "Be in bed on time" : 1 === b[c].goalType ? e = "Stay in bed" : 2 === b[c].goalType && (e = "Get up"), b[c].goalTitle = e
                    }
                return b
            }

            function d(a) {
                try {
                    var b = [];
                    return a.forEach(function(a) {
                        var c = {};
                        c.sleeperId = a.sleeperId, c.date = a.date, a.goalEntry ? (c.goalId = a.goalEntry.goalId, c.status = a.goalEntry.status) : a.date && (i.get("demoMode") ? (a.goalEntry = {
                            status: 1
                        }, c.status = 1) : (a.goalEntry = {
                            status: 0
                        }, c.status = 0)), b.push(c)
                    }), b
                } catch (c) {
                    return {}
                }
            }

            function e(a) {
                var b, c;
                if (a.startDate && a.originalStartDate) {
                    b = n(a.startDate);
                    var d = b.diff(a.originalStartDate, "seconds", !0);
                    a.startDiff = d / 60 || 0
                } else a.endDiff = 0;
                if (a.endDate && a.originalEndDate) {
                    c = n(a.originalEndDate);
                    var e = c.diff(a.endDate, "seconds", !0);
                    a.endDiff = e / 60 || 0
                } else a.endDiff = 0;
                return a
            }

            function f(a, b, c, d) {
                var e = 36e5,
                    f = c ? 4 : 4.12,
                    h = c || b.diff(a) / e >= f,
                    i = n().diff(b) / e >= 2,
                    j = d.isAfter(n().subtract(7, "days").startOf("day"), "day"),
                    k = g.getFamily(),
                    l = k[g.getLoggedInUserIndex()],
                    m = !l.get("isChild");
                return h && j && i && m
            }
            var g = (a("lavaca/mvc/Model"), a("app/models/FamilyModel")),
                h = a("lavaca/mvc/Collection"),
                i = a("app/models/StateModel"),
                j = (a("mout/object/get"), a("app/service/GoalsService")),
                k = a("app/service/SleepDataService"),
                l = a("app/service/EdpAccountService"),
                m = a("app/service/DemoData"),
                n = a("moment");
            a("moment-duration-format");
            var o = h.extend(function() {
                h.call(this, arguments);
                var a = g.getSelectedUser();
                a && this.apply(a), this.displayDateFormats = {
                    day: Modernizr.tablet || Modernizr.desktop ? "dddd, MMMM D" : "ddd, MMM D",
                    week: Modernizr.tablet || Modernizr.desktop ? "MMMM D" : "MMM D",
                    month: "MMMM YYYY"
                }, i.on("goalsUpdated", this.getSleeperGoals.bind(this)), i.on("slicesUpdated", this.updateSleepSlicesForDay.bind(this)), i.on("offlineNotified", this.offlineNotified.bind(this))
            }, {
                dateFormat: "YYYY-MM-DD",
                activeDate: i.get("activeDate"),
                isFetching: !1,
                fetchPromise: $.Deferred(),
                dispose: function() {
                    i.off("goalsUpdated"), h.prototype.dispose.apply(this, arguments)
                },
                verifySleeperId: function() {
                    var a = g.getSelectedUser();
                    a && this.apply(a)
                },
                fetch: function(a, b) {
                    if (this.activeDate !== n().format("YYYY-MM-DD") && i.set("activeDate", n().format("YYYY-MM-DD")), i.get("activeDate") && (this.activeDate = i.get("activeDate")), !this.isFetching) {
                        var c = g.getSelectedUser(),
                            e = [],
                            f = "",
                            h = n(this.activeDate).startOf("month"),
                            j = n().format("YYYY-MM-DD"),
                            k = n().subtract(3, "months").format("YYYY-MM-DD");
                        if (this.get("hasFetched") && !a) return Promise.resolve();
                        if (a || b || (this.clear(), this.set("hasFetched", !1)), !c) return;
                        this.apply(c), f = this.get("sleeperId"), this.fetchMonth(f, h.format(this.dateFormat)).then(function(g) {
                            e.push(g), this.fetchMonth(f, h.subtract(1, "months").format(this.dateFormat)).then(function(g) {
                                e.push(g), this.fetchMonth(f, h.subtract(1, "months").format(this.dateFormat)).then(function(g) {
                                    var h = [];
                                    e.push(g), this.set("hasFetched", !0), i.get("demoMode") && (e = e.slice(0, 1));
                                    for (var l = 0; l < e.length; l++) {
                                        var m = n(this.activeDate).clone().subtract(l, "months").format(this.dateFormat);
                                        e[l].sleepData = this.parseDays(e[l].sleepData, m), h = h.concat(e[l].sleepData.slice().reverse()), e[l] = this.formatMonth(e[l], m)
                                    }
                                    return this.set("days", h), this.set("weeks", []), this.set("months", e), this.set("slideIndices", {
                                        day: 0,
                                        week: 0,
                                        month: 0
                                    }), this.buildWeek(this.activeDate, parseInt(h.length / 7, 10) + 1), this.updateType(b || "day"), c && (this.getActivities(k, j), this.fetchSmartTips(c, h).then(function(a) {
                                        a && a.length > 0 && this.updateSmartTips(h, a)
                                    }.bind(this))), a && this.setTypeIndex(a), this.get("isChild") ? (this.set("goalEntries", d.call(this, h)), this.getSleeperGoals(f).then(function() {
                                        this.isFetching = !1, this.fetchPromise.resolve()
                                    }.bind(this), function() {
                                        this.isFetching = !1, this.fetchPromise.resolve()
                                    }.bind(this)), void 0) : (this.trigger("reset"), this.isFetching = !1, this.fetchPromise.resolve(), void 0)
                                }.bind(this), function(a) {
                                    return this.handleError(a), this.isFetching = !1, this.fetchPromise.reject(a), a
                                })
                            }.bind(this), function(a) {
                                return this.handleError(a), this.isFetching = !1, this.fetchPromise.reject(a), a
                            })
                        }.bind(this), function(a) {
                            return this.handleError(a), this.isFetching = !1, this.fetchPromise.reject(a), a
                        }.bind(this))
                    }
                    return this.fetchPromise
                },
                fetchMonth: function(a, b) {
                    return k.getMonth(a, b)
                },
                fetchSingleDay: function(a) {
                    var b = this.get("sleeperId");
                    return new Promise(function(c, d) {
                        return this.fetchMonth(b, a).then(function(b) {
                            if (b && b.sleepData)
                                for (var d in b.sleepData)
                                    if (b.sleepData[d].date === a) return c(this.updateDay(b.sleepData[d], a));
                            return c()
                        }.bind(this), function(a) {
                            return d(a)
                        }.bind(this))
                    }.bind(this))
                },
                updateDay: function(a, b) {
                    var c = this.get("days");
                    for (var d in c) c[d].date === b && (c[d] = this.formatDay(a));
                    return this.set("days", c), a
                },
                fetchSleepSlices: function(a, b) {
                    var c = this.get("sleeperId");
                    return new Promise(function(d, e) {
                        return k.getSleepSlices(a, c, b).then(function(a) {
                            var c = a && a.sleepers ? a.sleepers[0] : {
                                    days: []
                                },
                                e = "W1" == b ? c.days : c.days[0];
                            return d(e)
                        }.bind(this), function(a) {
                            return this.handleError(a), e(a)
                        }.bind(this))
                    }.bind(this))
                },
                fetchSmartTips: function(a, b) {
                    return new Promise(function(c) {
                        l.getSmartTips(a, b.length).then(function(a) {
                            c(a)
                        }.bind(this), function() {
                            c()
                        }.bind(this))
                    }.bind(this))
                },
                getActivities: function(a, b) {
                    return new Promise(function(c, d) {
                        var e = this.get("sleeperId"),
                            f = g.getFamily()[g.getLoggedInUserIndex()];
                        e ? l.getProviders().then(function(c) {
                            var d = !1;
                            c.providers.forEach(function(a) {
                                a.connected && (d = !0)
                            }), d || f.get("sleeperId") !== e ? (this.get("days"), l.getActivities(e, a, b).then(function(a) {
                                a.activities.forEach(function(a) {
                                    for (var b in a.partner) {
                                        var d = c.providers.find(function(a) {
                                            return a.id === b
                                        });
                                        if (d && d.data_types.indexOf("activity") >= 0 && null !== a.partner[b].summary_data) {
                                            var e = this.get("days"),
                                                f = e.find(function(b) {
                                                    return b.date === a.activityDate
                                                }),
                                                g = this.filter({
                                                    date: a.activityDate
                                                }),
                                                h = a.partner[b].summary_data.split(/, |,/);
                                            h.forEach(function(a) {
                                                f.tags.push(a), g[0].get("tags").push(a)
                                            }.bind(this))
                                        }
                                    }
                                }.bind(this)), i.trigger("providerTagsFetched")
                            }.bind(this), function() {
                                console.warn("err fetching edp activities")
                            })) : console.log("not fetching")
                        }.bind(this), function() {
                            console.log("err")
                        }.bind(this)) : d()
                    }.bind(this))
                },
                parseDays: function(a, b) {
                    var c, d, e;
                    if (a && a.length > 0)
                        for (e = 0; e < a.length; e++) a[e] = this.formatDay(a[e]), a[e].date === this.activeDate && a.splice(e + 1, a.length - 1);
                    else
                        for (c = n(b).startOf("month").format(this.dateFormat), d = n(c).daysInMonth(), e = 0; d > e && (a[e] = this.formatDay({
                                date: n(c).add(e, "days").format(this.dateFormat)
                            }), a[e].date !== this.activeDate); e++);
                    return i.get("demoMode") ? a.slice(0, 3) : a
                },
                updateType: function(a) {
                    this.set("dataType", a), this.trigger("updateDataType"), this.clearModels(), this.add(this.get(a + "s"))
                },
                updateTypeIndex: function(a) {
                    this.get("slideIndices")[this.get("dataType")] = a
                },
                setTypeIndex: function(a) {
                    var b;
                    switch (this.get("dataType")) {
                        case "week":
                            b = "firstDay";
                            break;
                        case "month":
                            b = "firstOfMonth";
                            break;
                        default:
                            b = "date"
                    }
                    for (var c = 0; c < this.count(); c++)
                        if (this.models[c].get(b) === a) {
                            this.updateTypeIndex(c);
                            break
                        }
                },
                formatDate: function(a, b) {
                    return b = b || "day", n(a).format(this.displayDateFormats[b])
                },
                formatDay: function(a, b) {
                    if (a.formattedDate = this.formatDate(a.date || b, "day"), a.dayOfMonth = n(a.date || b).format("D"), a.naps = 0, a.napsTotalTime = 0, a.sessions && a.sessions.length > 0)
                        for (var c = 0; c < a.sessions.length; c++) a.sessions[c].longest ? a = this.formatDaySession(a, a.sessions[c]) : this.isPositiveInteger(a.sessions[c].totalSleepSessionTime) && (a.naps++, a.napsTotalTime += a.sessions[c].totalSleepSessionTime);
                    else a.session ? a = this.formatDaySession(a, a.session) : a.noData = !0;
                    return a.naps && !a.noData && (a.napsTotalTimeFormatted = this.formatTime(a.napsTotalTime)), a
                },
                formatDaySession: function(a, b) {
                    var c = n(b.startDate),
                        d = n(b.endDate),
                        g = n(b.originalStartDate),
                        h = n(b.originalEndDate),
                        i = c.clone().startOf("hour"),
                        j = d.get("minute") ? d.clone().endOf("hour").add(1, "seconds") : d.clone(),
                        k = g.clone().startOf("hour"),
                        l = h.get("minute") ? h.clone().endOf("hour").add(1, "seconds") : h.clone(),
                        m = Math.abs(i.diff(j, "hours")),
                        o = Math.abs(k.diff(l, "hours")),
                        p = 0,
                        q = 0;
                    12 > m ? (6 >= m && (i.subtract(2, "hours"), j.subtract(2, "hours")), j.add(12 - m, "hours"), p = 12) : p = m, 12 > o ? (6 >= o && (k.subtract(2, "hours"), l.subtract(2, "hours")), l.add(12 - o, "hours"), q = 12) : q = o;
                    for (var r in b) "sleepQuotient" === r || "sleepNumber" === r ? (a[r] = parseInt(b[r], 10), a[r] = isNaN(a[r]) || a[r] < 0 || a[r] > 100 ? "--" : a[r]) : (a[r] = b[r], "avgHeartRate" !== r && "avgRespirationRate" !== r || this.isPositiveInteger(a[r]) || (a[r] = "00"));
                    m > 24 && (m = 24), p > 24 && (p = 24), o > 24 && (m = 24), q > 24 && (p = 24), a.oStartingTenMinutes = g.clone().add(-(g.minute() % 10), "minutes"), a.oEndingTenMinutes = h.clone().add(10 - h.minute() % 10, "minutes"), a.sessionHours = m, a.originalSessionHours = o, a.timelineHours = p, a.originalTimelineHours = q, a.startingTenMinutes = n(c).isAfter(g) ? c.clone() : g.clone().add(-(g.minute() % 10), "minutes"), a.endingTenMinutes = n(d).isBefore(h) ? d.clone() : h.clone().add(10 - h.minute() % 10, "minutes"), a.startingTenMinutesFormatted = c.clone().add((10 - c.minute()) % 10, "minutes").format("h:mm"), a.endingTenMinutesFormatted = d.clone().add((10 - d.minute()) % 10, "minutes").format("h:mm"), a.originalStartingTenMinutes = g.clone().add(-(g.minute() % 10), "minutes"), a.originalStartingTenMinutesFormatted = g.clone().add((10 - g.minute()) % 10, "minutes").format("h:mm"), a.originalEndingTenMinutes = h.clone().add(-(10 - h.minute() % 10), "minutes"), a.originalEndingTenMinutesFormatted = h.clone().add((10 - h.minute()) % 10, "minutes").format("h:mm"), a.intervalsFromStart = a.startingTenMinutes.diff(i, "minutes") / 10, a.oIntervalsFromStart = a.originalStartingTenMinutes.diff(k, "minutes") / 10, a.intervalsFromEnd = Math.abs(a.endingTenMinutes.diff(j.clone().add(1, "minutes"), "minutes") / 10), a.tenMinuteIntervals = 6 * a.timelineHours, a.oTenMinuteIntervals = 6 * a.originalTimelineHours, a.timeIncrements = this.formatTimeIncrements(i, j, a.timelineHours), a.originalTimeIncrements = this.formatTimeIncrements(k, l, a.originalTimelineHours), a.inBedFormatted = this.formatTime(a.inBed), a.outOfBedFormatted = this.formatTime(a.outOfBed), a.restfulFormatted = this.formatTime(a.restful), a.restlessFormatted = this.formatTime(a.restless), a.startTimeFormatted = c.clone().format("h:mm a"), a.endTimeFormatted = d.clone().format("h:mm a"), a.startTimeOriginalFormatted = g.clone().format("h:mm a"), a.endTimeOriginalFormatted = h.clone().format("h:mm a"), a.isEdited = n(c).isAfter(g) || n(d).isBefore(h), a.canEditSlices = f.call(this, c, d, a.isEdited, n(a.date));
                    var s = g.clone(),
                        t = h.clone(),
                        u = t.diff(s, "seconds");
                    a.originalInBedFormatted = this.formatTime(u), n(c).isAfter(g) && (a.startDate = c.clone().add(g.minute() % 10, "minutes"), a.originalStartDate = g), n(d).isBefore(h) && (a.endDate = d.clone().add(-(10 - h.minutes() % 10), "minutes").startOf("minute"), a.originalEndDate = h), a = e.call(this, a);
                    var v = Math.max.apply(Math, [a.restful, a.restless, a.outOfBed]);
                    return v && (a.greatestTimeType = a.restful == v ? "restful" : a.restless == v ? "restless" : "outOfBed"), a
                },
                formatWeek: function(a) {
                    var b = 0,
                        c = n(a.firstDay).format(this.displayDateFormats.week),
                        d = n(a.lastDay).format(this.displayDateFormats.week);
                    a.avgSleepIQ = 0, a.avgHeartRate = 0, a.avgRespirationRate = 0, a.inBed = 0, a.outOfBed = 0, a.restful = 0, a.restless = 0, c.split(" ")[0] === d.split(" ")[0] && (d = d.substr(d.indexOf(" ") + 1)), a.formattedDate = c + " &ndash; " + d;
                    var e = a.formattedDate;
                    if (i.get("demoMode")) return a = m.weekSleepData, a.inBedFormatted = this.formatTime(a.inBed), a.outOfBedFormatted = this.formatTime(a.outOfBed), a.restfulFormatted = this.formatTime(a.restful), a.restlessFormatted = this.formatTime(a.restless), a.formattedDate = e, a.days.forEach(function(a) {
                        a = this.formatDay(a, a.date)
                    }.bind(this)), a;
                    for (var f = 0; f < a.days.length; f++) {
                        var g = a.days[f];
                        g.sleepQuotient > 0 && "N/A" !== g.sleepQuotient && (a.avgSleepIQ += "string" == typeof g.sleepQuotient ? parseInt(g.sleepQuotient, 10) : g.sleepQuotient, a.avgHeartRate += "string" == typeof g.avgHeartRate ? parseInt(g.avgHeartRate, 10) : g.avgHeartRate, a.avgRespirationRate += "string" == typeof g.avgRespirationRate ? parseInt(g.avgRespirationRate, 10) : g.avgRespirationRate, a.inBed += "string" == typeof g.inBed ? parseInt(g.inBed, 10) : g.inBed, a.outOfBed += "string" == typeof g.outOfBed ? parseInt(g.outOfBed, 10) : g.outOfBed, a.restful += "string" == typeof g.restful ? parseInt(g.restful, 10) : g.restful, a.restless += "string" == typeof g.restless ? parseInt(g.restless, 10) : g.restless, b++)
                    }
                    return a.avgSleepIQ = Math.round(a.avgSleepIQ / b), a.avgHeartRate = Math.round(a.avgHeartRate / b), a.avgRespirationRate = Math.round(a.avgRespirationRate / b), a.inBed = Math.round(a.inBed / b), a.outOfBed = Math.round(a.outOfBed / b), a.restful = Math.round(a.restful / b), a.restless = Math.round(a.restless / b), a.inBedFormatted = this.formatTime(a.inBed), a.outOfBedFormatted = this.formatTime(a.outOfBed), a.restfulFormatted = this.formatTime(a.restful), a.restlessFormatted = this.formatTime(a.restless), a
                },
                formatMonth: function(a, b) {
                    var c, d = n(b).add(1, "months").date(0).date(),
                        e = n(b).date(1).weekday(),
                        f = 7 - (n(b).date(d).weekday() + 1),
                        g = a.sleepData || 0,
                        h = d - g.length,
                        j = n(b).date(),
                        k = Array.apply(null, new Array(e)).map(Number.prototype.valueOf, 0),
                        l = Array.apply(null, new Array(f)).map(Number.prototype.valueOf, 0),
                        o = 0,
                        p = !0;
                    if (h)
                        for (; d !== j;) l.unshift({
                            dayOfMonth: d--
                        });
                    if (g)
                        for (c = 0; c < g.length; c++) g[c].noData || (o++, p = !1);
                    if (i.get("demoMode")) {
                        var q = 0;
                        for (var r in a.sleepData) q += a.sleepData[r].inBed;
                        a.inBed = q
                    }
                    return i.get("demoMode") ? (a = m.monthSleepData, a.inBedFormatted = this.formatTime(a.inBed), a.outOfBedFormatted = this.formatTime(a.outOfBed), a.restfulFormatted = this.formatTime(a.restful), a.restlessFormatted = this.formatTime(a.restless), a.formattedDate = n(b).format(this.displayDateFormats.month), a.startDays = k, a.sleepData.forEach(function(a) {
                        a = this.formatDay(a, a.date)
                    }.bind(this)), a) : (p || (a.inBedFormatted = this.formatTime(a.inBed / o), a.outOfBedFormatted = this.formatTime(a.outOfBed / o), a.restfulFormatted = this.formatTime(a.restful / o), a.restlessFormatted = this.formatTime(a.restless / o)), a.startDays = k, i.get("demoMode") || (a.endDays = l), a.totalCalendarDays = k.length + g.length + l.length, a.firstOfMonth = n(b).startOf("month").format(this.dateFormat), a.formattedDate = n(b).format(this.displayDateFormats.month), a.noData = 0 === g.length || p, a.avgSleepIQ = isNaN(a.avgSleepIQ) || a.avgSleepIQ < 0 || a.avgSleepIQ > 100 ? "--" : a.avgSleepIQ, a.avgHeartRate = isNaN(a.avgHeartRate) || a.avgHeartRate < 0 || a.avgHeartRate > 150 ? "--" : a.avgHeartRate, a.avgRespirationRate = isNaN(a.avgRespirationRate) || a.avgRespirationRate < 0 || a.avgRespirationRate > 150 ? "--" : a.avgRespirationRate, a)
                },
                buildWeek: function(a, b) {
                    var c, d, e, f = n(a).startOf("week").format(this.dateFormat),
                        g = 7,
                        h = this.get("days"),
                        j = [];
                    b = b || 1;
                    for (var k = 0; b > k; k++) {
                        f = 0 === k ? f : n(f).subtract(7, "days").format(this.dateFormat);
                        for (var l = 0; g > l; l++) {
                            e = n(f).add(l, "days").format(this.dateFormat);
                            for (var m = 0; m < h.length; m++)
                                if (d = null, h[m].date === e || h[m].formattedDate === e) {
                                    d = h[m];
                                    break
                                }
                            j[l] = d ? d : {
                                date: e
                            }, j[l].initial = n(e).format("ddd")[0], this.get("completed") && !this.get("completed").weeks && j[l].date === i.get("activationDate") && (this.get("completed").weeks = !0)
                        }
                        c = {
                            days: j
                        }, c.firstDay = j[0].date, c.lastDay = j[6].date, this.get("weeks").push(this.formatWeek(c)), j = []
                    }
                },
                updateSmartTips: function(a, b) {
                    a.map(function(a, c) {
                        return a.tip && (this.models[c].set("tip", b[c].title), this.models[c].set("smartTip", b[c].title), a.tip = b[c].title), a
                    }.bind(this))
                },
                formatTimeIncrements: function(a, b, c) {
                    var d = a.clone().startOf("hour"),
                        e = (b.clone().endOf("hour"), []),
                        f = 1,
                        g = 0;
                    if (c > 24 || isNaN(c)) return e;
                    for (var h = 0; h <= Math.round(c / f) + g; h++) {
                        var i = d.clone();
                        h > 0 && i.add(f * h, "hour"), e.push(i.format("ha"))
                    }
                    return e
                },
                formatTime: function(a) {
                    var b = n.duration(a, "seconds").format("h[h] m[m]"),
                        c = /([0-9]{1,})?h/.exec(b),
                        d = /([0-9]{1,})?m/.exec(b);
                    return 0 > a ? "N/A" : ((c && c[1].length > 3 || d && d[1].length > 2) && (b = "N/A"), d && d[1] && Number(d[1]) < 10 && (b = b.replace(d[1] + "m", "0" + d[1] + "m")), c || (b = "0h " + b), b)
                },
                isPositiveInteger: function(a) {
                    try {
                        var b = parseInt(a, 10),
                            c = isNaN(b);
                        return c ? !1 : b > 0
                    } catch (d) {
                        return !1
                    }
                },
                handleError: function(a) {
                    i.trigger("resetOffline");
                    var b = a.indexOf("cellular network or internet");
                    this.set("hasFetched", !0), -1 != b ? window.customAlert.alert(a) : window.customAlert.alert("Pardon us. We are experiencing technical difficulties; please check back later.")
                },
                offlineNotified: function() {
                    this.set("hasFetched", !0)
                },
                updateSleepSlicesForDay: function(a) {
                    var b = this.get("days");
                    if (this.models.length > 0)
                        for (var c = 0, d = this.models.length; d > c; ++c)
                            if (n(this.models[c].get("date")).format("YYYY-DD-MM") == n(a.session.endDate).format("YYYY-DD-MM")) {
                                var f = n(this.models[c].get("originalStartDate")),
                                    h = n(this.models[c].get("originalEndDate")),
                                    j = n(a.session.startDate),
                                    k = n(a.session.endDate),
                                    l = n(a.session.startDate).clone().startOf("hour"),
                                    m = k.get("minute") ? k.clone().endOf("hour").add(1, "seconds") : k.clone();
                                this.models[c].set("startDate", a.session.startDate), this.models[c].set("endDate", a.session.endDate), this.models[c].set("startTimeFormatted", n(a.session.startDate).format("h:mm a")), this.models[c].set("endTimeFormatted", n(a.session.endDate).format("h:mm a")), this.models[c].set("sleepQuotient", a.session.sleepQuotient), this.models[c].set("isEdited", n(a.session.startDate).isAfter(f) || n(a.session.endDate).isBefore(h)), n(a.session.startDate).isAfter(f) || n(a.session.endDate).isBefore(h) ? (this.models[c].set("startingTenMinutes", n(a.session.startDate).clone()), this.models[c].set("endingTenMinutes", n(a.session.endDate).clone())) : (this.models[c].set("startingTenMinutes", n(a.session.startDate).clone().add(-(f.minute() % 10), "minutes")), this.models[c].set("endingTenMinutes", n(a.session.endDate).clone().add(10 - h.minute() % 10, "minutes"))), this.models[c].set("startingTenMinutesFormatted", n(a.session.startDate).clone().add((10 - n(a.session.startDate).minute()) % 10, "minutes").format("h:mm")), this.models[c].set("endingTenMinutesFormatted", n(a.session.endDate).clone().add((10 - n(a.session.endDate).minute()) % 10, "minutes").format("h:mm")), this.models[c].set("timeIncrements", this.formatTimeIncrements(j, k, this.models[c].get("timelineHours"))), this.models[c].set("intervalsFromStart", n(this.models[c].get("startingTenMinutes")).diff(l, "minutes") / 10), this.models[c].set("intervalsFromEnd", Math.abs(n(this.models[c].get("endingTenMinutes")).diff(m.clone().add(1, "minutes"), "minutes") / 10)), this.models[c].set("inBedFormatted", this.formatTime(a.session.inBed)), this.models[c].set("outOfBedFormatted", this.formatTime(a.session.outOfBed)), this.models[c].set("restfulFormatted", this.formatTime(a.session.restful)), this.models[c].set("restlessFormatted", this.formatTime(a.session.restless)), this.models[c].set("sleeperId", g.getSelectedUser().sleeperId);
                                var o = {};
                                o.startDate = n(a.session.startDate), o.endDate = n(a.session.endDate), n(a.session.startDate).isAfter(f) && 0 != f.minutes() % 10 && o.startDate.add(f.minute() % 10, "minutes"), n(a.session.endDate).isBefore(h) && 0 != h.minutes() % 10 && o.endDate.add(-(10 - h.minutes() % 10), "minutes").startOf("minute"), o.originalStartDate = f, o.originalEndDate = h, o = e.call(this, o), this.models[c].set("startDiff", o.startDiff), this.models[c].set("endDiff", o.endDiff);
                                var p = this,
                                    q = b.find(function(b) {
                                        return b.date == p.models[c].get("date") ? (b.sleepQuotient = a.session.sleepQuotient, b) : void 0
                                    });
                                "undefined" != typeof q && this.formatDaySession(q, a.session), i.trigger("sleepSliceUpdate", a.session);
                                var r = i.get("editedSleepData");
                                if (r) {
                                    var s = null;
                                    r.forEach(function(a) {
                                        a.get("date") === p.models[c].get("date") && a.get("sleeperId") === p.models[c].get("sleeperId") && (s = a)
                                    }), r.push(p.models[c]), s ? i.set("editedSleepData", r.splice(r.indexOf(s), 1)) : i.set("editedSleepData", r)
                                } else r = [], r.push(p.models[c]), i.set("editedSleepData", r)
                            }
                },
                getSleeperGoals: function() {
                    return new Promise(function(a, d) {
                        var e = this.get("sleeperId");
                        e ? j.getSleeperGoals(e).then(function(d) {
                            d && d.goals && this.set("goal", b(c(d))), this.trigger("reset"), a()
                        }.bind(this), function() {
                            this.trigger("reset"), a()
                        }.bind(this)) : d()
                    }.bind(this))
                }
            });
            return o
        }), define("app/service/WifiService", ["require", "lavaca/util/Disposable", "app/service/Service", "app/models/StateModel", "app/models/AccountModel"], function(a) {
            var b = a("lavaca/util/Disposable"),
                c = a("app/service/Service"),
                d = a("app/models/StateModel");
            a("app/models/AccountModel");
            var e = b.extend(function() {
                b.apply(this, arguments)
            }, {
                getWifi: function() {
                    return d.get("demoMode") ? Promise.resolve() : c.makeRequest("wifi")
                },
                addWifi: function(a) {
                    if (d.get("demoMode")) return Promise.resolve();
                    var b = a.ssid,
                        e = a.password,
                        f = a.identity,
                        g = a.eap,
                        h = a.eap;
                    if (b) {
                        var i = {
                            ssid: b
                        };
                        return "string" == typeof e && (i.password = e), f && (i.identity = f), "undefined" != typeof g && (i.eap = g), h && (i.protocol = h), c.makeRequest("wifi", i, "POST")
                    }
                    return Promise.resolve()
                },
                addWifiAndReturnConfig: function(a) {
                    if (d.get("demoMode")) return Promise.resolve();
                    var b = $.Deferred();
                    return a ? this.addWifi(a).then(function() {
                        this.getWifiConfig().then(function(a) {
                            b.resolve(a)
                        }.bind(this), function(a) {
                            a && 200 === a.status && a.responseText ? b.resolve(a.responseText) : b.reject(a.responseText)
                        }.bind(this))
                    }.bind(this), function(a) {
                        b.reject(a.responseText)
                    }.bind(this)) : b.reject(), b
                },
                deleteWifi: function(a) {
                    if (d.get("demoMode")) return Promise.resolve();
                    var b = $.Deferred();
                    return c.makeRequest("wifi/" + a, null, "DELETE").then(function() {
                        b.resolve()
                    }.bind(this), function(a) {
                        a && 200 === a.status && a.responseText ? b.resolve() : b.reject(a)
                    }.bind(this)), b
                },
                getWifiConfig: function() {
                    return d.get("demoMode") ? Promise.resolve() : c.makeRequest("config", {
                        dataType: "text"
                    })
                },
                getVersions: function(a) {
                    return d.get("demoMode") ? Promise.resolve() : c.makeRequest("device/latestSoftware", {
                        macAddress: a
                    })
                }
            });
            return new e
        }), define("app/models/viewmodels/DashboardViewModel", ["require", "app/models/viewmodels/SleepViewModel", "app/models/FamilyModel", "app/models/StateModel", "lavaca/mvc/Collection", "app/service/WifiService", "moment", "moment-duration-format"], function(a) {
            function b(a) {
                try {
                    var b = a;
                    for (var c in b) {
                        var d = b[c].sleepers;
                        if (b[c] && b[c].days)
                            for (var f in b[c].days) {
                                var g = [];
                                if (b[c].days[f].sleepers.length < d.length) {
                                    for (var h in b[c].days[f].sleepers) d.forEach(function(a) {
                                        a.sleeperId === b[c].days[f].sleepers[h].sleeperId && g.push({
                                            sleeperId: a.sleeperId
                                        })
                                    });
                                    for (var i in d) e(g, d[i].sleeperId) && "0" !== d[i].bedId && b[c].days[f].sleepers.push({
                                        name: d[i].name,
                                        sleeperId: d[i].sleeperId,
                                        isChild: d[i].isChild
                                    })
                                }
                                for (var j = b[c].days[f].sleepers.length; j--;) "0" === b[c].days[f].sleepers[j].bedId && b[c].days[f].sleepers.splice(j, 1)
                            }
                    }
                    return b
                } catch (k) {
                    return !1
                }
            }

            function c(a) {
                return a && a.sort(function(a, b) {
                    if (!a.isChild && !b.isChild) {
                        if (a.name && b.name && a.name !== b.name) {
                            var c = a.name.toUpperCase(),
                                d = b.name.toUpperCase();
                            return d > c ? -1 : c > d ? 1 : 0
                        }
                        return 0
                    }
                    if (!a.isChild) return -1;
                    if (!b.isChild) return 1;
                    if (a.isChild && b.isChild) {
                        if (a.name && b.name) {
                            var e = a.name.toUpperCase(),
                                f = b.name.toUpperCase();
                            return f > e ? -1 : e > f ? 1 : 0
                        }
                        return 0
                    }
                    return 0
                }), a
            }

            function d(a) {
                if (a)
                    for (var b in a)
                        if (a[b] && a[b].days)
                            for (var c in a[b].days) a[b].days && a[b].days[c] && a[b].days[c].sleepers && a[b].days[c].sleepers.sort(function(a, b) {
                                if (!a.isChild && !b.isChild) {
                                    if (a.name && b.name && a.name !== b.name) {
                                        var c = a.name.toUpperCase(),
                                            d = b.name.toUpperCase();
                                        return d > c ? -1 : c > d ? 1 : 0
                                    }
                                    return 0
                                }
                                if (!a.isChild) return -1;
                                if (!b.isChild) return 1;
                                if (a.isChild && b.isChild) {
                                    if (a.name && b.name) {
                                        var e = a.name.toUpperCase(),
                                            f = b.name.toUpperCase();
                                        return f > e ? -1 : e > f ? 1 : 0
                                    }
                                    return 0
                                }
                                return 0
                            });
                return []
            }

            function e(a, b) {
                if (a) {
                    for (var c in a)
                        if (a[c].sleeperId === b) return !1;
                    return !0
                }
                return !0
            }

            function f() {
                var a = [],
                    b = {
                        days: [],
                        sleepers: []
                    },
                    c = {},
                    d = h.getSleepersOnBedsWithoutFetch();
                if (d) {
                    c.date = this.activeDate;
                    var e = [];
                    for (var f in d) {
                        var g = {
                            name: d[f].get("firstName"),
                            sleeperId: d[f].get("sleeperId")
                        };
                        b.sleepers.push(g), e.push(g)
                    }
                    c.sleepers = e, b.days.push(c)
                }
                return a.push(b), a
            }
            var g = a("app/models/viewmodels/SleepViewModel"),
                h = a("app/models/FamilyModel"),
                i = a("app/models/StateModel"),
                j = a("lavaca/mvc/Collection"),
                k = (a("app/service/WifiService"), a("moment"));
            a("moment-duration-format");
            var l = g.extend(function() {
                j.call(this, arguments), this.displayDateFormats = {
                    day: Modernizr.tablet || Modernizr.desktop ? "dddd, MMMM D" : "ddd, MMM D",
                    week: Modernizr.tablet || Modernizr.desktop ? "MMMM D" : "MMM D",
                    month: "MMMM YYYY"
                }, i.on("logout", this.clearOnLogout.bind(this))
            }, {
                isDashboard: !0,
                clearOnLogout: function() {
                    this.clear(), this.clearModels()
                },
                refetchOnResume: function() {
                    this.set("hasFetched", !1), this.clear(), this.clearModels(), this.trigger("reset"), this.activeDate = k().format("YYYY-MM-DD"), this.fetch()
                },
                fetch: function(a, c) {
                    i.get("activeDate") && (this.activeDate = i.get("activeDate")), this.clear();
                    var e = [],
                        g = "YYYY-MM",
                        j = k(this.activeDate).startOf("month"),
                        l = j.clone().subtract(1, "months"),
                        m = j.clone().subtract(2, "months"),
                        n = 0;
                    return h.fetchFamilySleepData(j.format(g)).then(function(i) {
                        return e.push(i), i && i.days && (n += i.days.length), h.fetchFamilySleepData(l.format(g)).then(function(i) {
                            return e.push(i), i && i.days && (n += i.days.length), h.fetchFamilySleepData(m.format(g)).then(function(g) {
                                var h = [];
                                e.push(g), g && g.days && (n += g.days.length);
                                var i = g;
                                e = b.call(this, e), e || (e = i), 0 === n && (e = f.call(this)), d.call(this, e), this.set("slideIndices", {
                                    day: 0,
                                    week: 0,
                                    month: 0
                                });
                                for (var j = 0; j < e.length; j++) {
                                    for (var l = 0; l < e[j].days.length; l++) {
                                        for (var m in e[j].days[l].sleepers) e[j].days[l].sleepers[m] = this.formatDay(e[j].days[l].sleepers[m], e[j].days[l].date);
                                        e[j].days[l].formattedDate = this.formatDate(e[j].days[l].date), e[j].days[l].date === this.activeDate && e[j].days.splice(l + 1, e[j].days.length - 1)
                                    }
                                    h = h.concat(e[j].days.reverse());
                                    var o = k(this.activeDate).clone().subtract(j, "months").format(this.dateFormat);
                                    e[j] = this.formatMonth(e[j], o)
                                }
                                this.set("days", h), this.set("weeks", []), this.set("months", e), c ? this.set("dataType", c) : this.set("dataType", "day"), a && this.set("landingDate", a), this.buildWeek(this.activeDate, parseInt(h.length / 7, 10) + 1), this.add(h), this.set("hasFetched", !0), this.trigger("reset")
                            }.bind(this), function(a) {
                                return a
                            })
                        }.bind(this), function(a) {
                            return a
                        })
                    }.bind(this), function(a) {
                        return a
                    })
                },
                formatWeek: function(a) {
                    a.sleepers = [];
                    var b = {
                            avgSleepIq: 0,
                            avgHeartRate: 0,
                            avgRespirationRate: 0,
                            inBed: 0,
                            outOfBed: 0,
                            restful: 0,
                            restless: 0,
                            usableDays: 0
                        },
                        c = k(a.firstDay).format(this.displayDateFormats.week),
                        d = k(a.lastDay).format(this.displayDateFormats.week);
                    k(a.firstDay).month() === k(a.lastDay).month() && (d = d.slice(d.indexOf(" ") + 1)), a.formattedDate = c + " &ndash; " + d, a.formattedLabel = "Weekly Averages";
                    for (var e = 0; e < a.days.length; e++) {
                        var f = a.days[e];
                        for (var g in f.sleepers) a.sleepers[g] = a.sleepers[g] || $.extend(!0, {}, b), a.sleepers[g].name = f.sleepers[g].name, a.sleepers[g].sleeperId = f.sleepers[g].sleeperId, f.sleepers[g].sleepQuotient > 0 && "N/A" !== f.sleepers[g].sleepQuotient && (this.isPositiveInteger(f.sleepers[g].sleepQuotient) && (a.sleepers[g].avgSleepIq += parseInt(f.sleepers[g].sleepQuotient, 10)), this.isPositiveInteger(f.sleepers[g].avgHeartRate) && (a.sleepers[g].avgHeartRate += parseInt(f.sleepers[g].avgHeartRate, 10)), this.isPositiveInteger(f.sleepers[g].avgRespirationRate) && (a.sleepers[g].avgRespirationRate += parseInt(f.sleepers[g].avgRespirationRate, 10)), this.isPositiveInteger(f.sleepers[g].inBed) && (a.sleepers[g].inBed += parseInt(f.sleepers[g].inBed, 10)), this.isPositiveInteger(f.sleepers[g].outOfBed) && (a.sleepers[g].outOfBed += parseInt(f.sleepers[g].outOfBed, 10)), this.isPositiveInteger(f.sleepers[g].restful) && (a.sleepers[g].restful += parseInt(f.sleepers[g].restful, 10)), this.isPositiveInteger(f.sleepers[g].restless) && (a.sleepers[g].restless += parseInt(f.sleepers[g].restless, 10)), a.sleepers[g].usableDays++)
                    }
                    for (var h in a.sleepers) a.sleepers[h].avgSleepIq && (a.sleepers[h].avgSleepIq = Math.round(a.sleepers[h].avgSleepIq / a.sleepers[h].usableDays)), a.sleepers[h].avgHeartRate && (a.sleepers[h].avgHeartRate = Math.round(a.sleepers[h].avgHeartRate / a.sleepers[h].usableDays)), a.sleepers[h].avgRespirationRate && (a.sleepers[h].avgRespirationRate = Math.round(a.sleepers[h].avgRespirationRate / a.sleepers[h].usableDays)), a.sleepers[h].inBed && (a.sleepers[h].inBed = Math.round(a.sleepers[h].inBed / a.sleepers[h].usableDays)), a.sleepers[h].outOfBed && (a.sleepers[h].outOfBed = Math.round(a.sleepers[h].outOfBed / a.sleepers[h].usableDays)), a.sleepers[h].restful && (a.sleepers[h].restful = Math.round(a.sleepers[h].restful / a.sleepers[h].usableDays)), a.sleepers[h].restless && (a.sleepers[h].restless = Math.round(a.sleepers[h].restless / a.sleepers[h].usableDays)), a.sleepers[h].inBedFormatted = this.formatTime(a.sleepers[h].inBed), a.sleepers[h].outOfBedFormatted = this.formatTime(a.sleepers[h].outOfBed), a.sleepers[h].restfulFormatted = this.formatTime(a.sleepers[h].restful), a.sleepers[h].restlessFormatted = this.formatTime(a.sleepers[h].restless), this.isPositiveInteger(a.sleepers[h].inBed) || (a.sleepers[h].noData = !0), delete a.sleepers[h].usableDays;
                    return delete a.days, a
                },
                formatMonth: function(a, b) {
                    a.formattedDate = k(b).format(this.displayDateFormats.month), a.date = a.startDate;
                    for (var d in a.sleepers) {
                        if (i.get("demoMode")) {
                            var e = 0;
                            for (var f in a.days)
                                for (var g in a.days[f].sleepers) a.sleepers[d].sleeperId === a.days[f].sleepers[g].sleeperId && (e += a.days[f].sleepers[g].inBed);
                            a.sleepers[d].inBed = e
                        }
                        var h = a.sleepers[d].avgSleepIQ;
                        h = isNaN(h) || 1 > h || h > 100 ? "--" : h, a.sleepers[d].avgSleepIQ = h, a.sleepers[d].inBedFormatted = this.formatTime(a.sleepers[d].inBed / a.days.length), a.sleepers[d].outOfBedFormatted = this.formatTime(a.sleepers[d].outOfBed / a.days.length), a.sleepers[d].restfulFormatted = this.formatTime(a.sleepers[d].restful / a.days.length), a.sleepers[d].restlessFormatted = this.formatTime(a.sleepers[d].restless / a.days.length), a.sleepers[d].firstOfMonth = k(b).startOf("month").format(this.dateFormat), a.sleepers[d].formattedDate = k(b).format(this.displayDateFormats.month), a.sleepers[d].avgHeartRate = isNaN(a.sleepers[d].avgHeartRate) || a.sleepers[d].avgHeartRate < 0 || a.sleepers[d].avgHeartRate > 150 ? "--" : a.sleepers[d].avgHeartRate, a.sleepers[d].avgRespirationRate = isNaN(a.sleepers[d].avgRespirationRate) || a.sleepers[d].avgRespirationRate < 0 || a.sleepers[d].avgRespirationRate > 150 ? "--" : a.sleepers[d].avgRespirationRate, 0 != h && "undefined" != typeof h && "--" != h || this.isPositiveInteger(a.sleepers[d].inBed) || (a.sleepers[d].noData = !0)
                    }
                    return a.sleepers = c(a.sleepers), delete a.days, a
                },
                fetchFamilySleepSlicesForDay: function(a) {
                    return h.fetchSlices(a).then(function(a) {
                        a && this.addSleepSlices(a)
                    }.bind(this)).catch(function(a) {
                        console.log("A fatal error has occured!", a)
                    })
                },
                updateTypeIndex: function(a) {
                    this.get("slideIndices")[this.get("dataType")] = a
                },
                addSleepSlices: function(a) {
                    var b = this.get("days"),
                        c = a.sleepers,
                        d = c && c.length ? c[0] : {},
                        e = d.days && d.days.length ? d.days[0].date : "";
                    for (var f in b)
                        if (b[f].date === e) {
                            b[f].hasSlices = !0;
                            for (var g in b[f].sleepers)
                                for (var h in c)
                                    if (b[f].sleepers[g].sleeperId === c[h].sleeperId && (b[f].sleepers[g].sliceSize = c[h].sliceSize, c[h].days && c[h].days.length)) {
                                        b[f].sleepers[g].sliceList = c[h].days[0].sliceList;
                                        try {
                                            this.models[f].get("sleepers")[g].sliceList = c[h].days[0].sliceList
                                        } catch (i) {}
                                    }
                        }
                    this.set("days", b);
                    for (var j in this.models) this.models[j].get("date") === e && this.models[j].set("hasSlices", !0)
                }
            });
            return new l
        }), define("rdust!templates/childviews/bed-presence", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="bed-presence">').notexists(b.get("sleepIQCalculating"), b, {
                        "else": c,
                        block: d
                    }, null).write('<div class="message">').notexists(b.get("sleepIQCalculating"), b, {
                        "else": h,
                        block: i
                    }, null).write('</div><div class="mini-message">').exists(b.get("sleepIQCalculating"), b, {
                        block: j
                    }, null).write('</div><div class="sub-message">').notexists(b.get("sleepIQCalculating"), b, {
                        "else": k,
                        block: l
                    }, null).write("</div></div>")
                }

                function c(a) {
                    return a.write('<div class="icon-calculating"></div>')
                }

                function d(a, b) {
                    return a.write('<div class="equalizer ').notexists(b.get("showSvg"), b, {
                        block: e
                    }, null).write('">').exists(b.get("showSvg"), b, {
                        block: f
                    }, null).write("</div>")
                }

                function e(a) {
                    return a.write("hide-svg")
                }

                function f(a, b) {
                    return a.write('<svg x="0px" y="0px" width="36px" height="36px" viewBox="0 0 36 36" enable-background="new 0 0 36 36"><circle id="circle1').reference(b.get("postfix"), b, "h").write('"  fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="5" cy="31" r="2"/><circle id="circle2').reference(b.get("postfix"), b, "h").write('"  fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="5" cy="24.5" r="2"/><circle id="circle3').reference(b.get("postfix"), b, "h").write('"  fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="5" cy="18" r="2"/><circle id="circle4').reference(b.get("postfix"), b, "h").write('"  fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="5" cy="11.5" r="2"/><circle id="circle5').reference(b.get("postfix"), b, "h").write('"  fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="5" cy="5" r="2"/><circle id="circle6').reference(b.get("postfix"), b, "h").write('"  fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="11.5" cy="31" r="2"/><circle id="circle7').reference(b.get("postfix"), b, "h").write('"  fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="11.5" cy="24.5" r="2"/><circle id="circle8').reference(b.get("postfix"), b, "h").write('"  fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="11.5" cy="18" r="2"/><circle id="circle9').reference(b.get("postfix"), b, "h").write('"  fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="11.5" cy="11.5" r="2"/><circle id="circle10').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="11.5" cy="5" r="2"/><circle id="circle11').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="18" cy="31" r="2"/><circle id="circle12').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="18" cy="24.5" r="2"/><circle id="circle13').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="18" cy="18" r="2"/><circle id="circle14').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="18" cy="11.5" r="2"/><circle id="circle15').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="18" cy="5" r="2"/><circle id="circle16').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="24.5" cy="31" r="2"/><circle id="circle17').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="24.5" cy="24.5" r="2"/><circle id="circle18').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="24.5" cy="18" r="2"/><circle id="circle19').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="24.5" cy="11.5" r="2"/><circle id="circle20').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="24.5" cy="5" r="2"/><circle id="circle21').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="31" cy="31" r="2"/><circle id="circle22').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="31" cy="24.5" r="2"/><circle id="circle23').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="31" cy="18" r="2"/><circle id="circle24').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="31" cy="11.5" r="2"/><circle id="circle25').reference(b.get("postfix"), b, "h").write('" fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" cx="31" cy="5" r="2"/><!-- First Row --><animate xlink:href="#circle3').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"begin="circ12').reference(b.get("postfix"), b, "h").write('.begin + 0.1"dur="').reference(b.get("animationDuration"), b, "h").write('"values="0; 1; 0; 0"keyTimes="0; 0.15; 0.85; 1"repeatCount="indefinite"calcMode="discrete"id="circ3').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle4').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ3').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.3; 0.7; 1"repeatCount="indefinite"calcMode="discrete"id="circ4').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle5').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ3').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.45; 0.55; 1"repeatCount="indefinite"calcMode="discrete"id="circ5').reference(b.get("postfix"), b, "h").write('"/><!-- Second Row --><animate xlink:href="#circle8').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"begin="circ12').reference(b.get("postfix"), b, "h").write('.begin + 0.7"dur="').reference(b.get("animationDuration"), b, "h").write('"values="0; 1; 0; 0"keyTimes="0; 0.15; 0.85; 1"repeatCount="indefinite"calcMode="discrete"id="circ8').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle9').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ8').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.3; 0.7; 1"repeatCount="indefinite"calcMode="discrete"id="circ9').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle10').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ8').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.45; 0.55; 1"repeatCount="indefinite"calcMode="discrete"id="circ10').reference(b.get("postfix"), b, "h").write('"/><!-- Third Row --><animate xlink:href="#circle12').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"begin="').helper("math", b, {}, {
                        key: g,
                        method: "divide",
                        operand: "1.5"
                    }).write('s"dur="').reference(b.get("animationDuration"), b, "h").write('"values="0; 1; 0; 0"keyTimes="0; 0.15; 0.85; 1"repeatCount="indefinite"calcMode="discrete"id="circ12').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle13').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ12').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.3; 0.7; 1"repeatCount="indefinite"calcMode="discrete"id="circ13').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle14').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ12').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.45; 0.55; 1"repeatCount="indefinite"calcMode="discrete"id="circ14').reference(b.get("postfix"), b, "h").write('"/><!-- Fourth Row --><animate xlink:href="#circle17').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"begin="circ12').reference(b.get("postfix"), b, "h").write('.begin + 0.5"dur="').reference(b.get("animationDuration"), b, "h").write('"values="0; 1; 0; 0"keyTimes="0; 0.1; 0.9; 1"repeatCount="indefinite"calcMode="discrete"id="circ17').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle18').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ17').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.2; 0.8; 1"repeatCount="indefinite"calcMode="discrete"id="circ18').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle19').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ17').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.3; 0.7; 1"repeatCount="indefinite"calcMode="discrete"id="circ19').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle20').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ17').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.4; 0.6; 1"repeatCount="indefinite"calcMode="discrete"id="circ20').reference(b.get("postfix"), b, "h").write('"/><!-- Fifth Row --><animate xlink:href="#circle22').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"begin="circ12').reference(b.get("postfix"), b, "h").write('.begin + 0.2"dur="').reference(b.get("animationDuration"), b, "h").write('"values="0; 1; 0; 0"keyTimes="0; 0.15; 0.85; 1"repeatCount="indefinite"calcMode="discrete"id="circ22').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle23').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ22').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.3; 0.7; 1"repeatCount="indefinite"calcMode="discrete"id="circ23').reference(b.get("postfix"), b, "h").write('"/><animate xlink:href="#circle24').reference(b.get("postfix"), b, "h").write('"attributeName="opacity"attributeType="CSS"to="0"dur="').reference(b.get("animationDuration"), b, "h").write('"begin="circ22').reference(b.get("postfix"), b, "h").write('.begin"values="0; 1; 0; 0"keyTimes="0; 0.45; 0.55; 1"repeatCount="indefinite"calcMode="discrete"id="circ24').reference(b.get("postfix"), b, "h").write('"/></svg>')
                }

                function g(a, b) {
                    return a.reference(b.get("animationDelay"), b, "h")
                }

                function h(a, b) {
                    return a.write(" We are calculating<br /> ").reference(b.get("postfix"), b, "h").write("&#8217;s SleepIQ<sup>®</sup> Score")
                }

                function i(a) {
                    return a.write(" In Bed")
                }

                function j(a) {
                    return a.write("Calculating<br /> SleepIQ<sup>®</sup>")
                }

                function k(a, b) {
                    return a.write(" Check back soon to see how ").reference(b.get("pronoun"), b, "h").write(" slept last night.")
                }

                function l(a, b) {
                    return a.write(" Check back in the morning to see how ").reference(b.get("postfix"), b, "h").write(" slept.")
                }
                return a.register("templates/childviews/bed-presence", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/bed-presence", b, c)
                }
            }
        }), define("app/ui/views/childviews/FamilyDailyView", ["require", "lavaca/mvc/View", "lavaca/mvc/Model", "app/models/StateModel", "app/models/FamilyModel", "app/ui/views/childviews/BarChartView", "app/ui/widgets/PillChart", "rdust!templates/childviews/family-daily", "moment", "app/utils/MixPanelManager", "app/models/viewmodels/DashboardViewModel", "rdust!templates/childviews/bed-presence"], function(a) {
            function b() {
                c.call(this), this.trackingInterval = setInterval(c.bind(this), 6e5)
            }

            function c() {
                this.checkingPresence || (this.checkingPresence = !0, console.log("checking bed presence"), i.checkBedPresence().then(function(a) {
                    var b = 0;
                    i.eachSleeperOnBed(function(c, d) {
                        for (var e in a)
                            if (d.get("bedId") === a[e].bedId) {
                                var f = d.get("side") ? "rightSide" : "leftSide",
                                    g = a[e][f] ? a[e][f].isInBed : !1,
                                    h = this.el.find('.user-container[data-id="' + d.get("sleeperId") + '"]');
                                if (h.toggleClass("in-bed", g), g) {
                                    var i = this.model.get("sleepers"),
                                        j = i.find(function(a) {
                                            return a.sleeperId == d.get("sleeperId")
                                        });
                                    j.sleepIQCalculating = !1, j.inBed = !0, this.render(".no-data-message"), h.removeClass("siq-calculating")
                                }
                                b = g ? b + 1 : b
                            }
                    }.bind(this)), this.model.set("showSvg", !!b), this.render(".bed-presence").then(function() {
                        this.parentView && this.parentView.model && this.model.get("date") && this.parentView.model.fetchFamilySleepSlicesForDay(this.model.get("date")).then(function() {
                            this.onSlicesFetched(), this.checkingPresence = !1
                        }.bind(this), function a(a) {
                            this.checkingPresence = !1, console.error(a)
                        }.bind(this))
                    }.bind(this))
                }.bind(this), function() {
                    this.checkingPresence = !1, console.log("presence checked failed")
                }.bind(this)))
            }

            function d() {
                for (var a, b, c, d, e, f, g, h = this.model.get("sleepers"), i = [], j = 0; j < h.length; j++) h[j].startingTenMinutes && h[j].startingTenMinutes.get("hour") > 17 && (this.hasPMTime = !0, a ? h[j].startingTenMinutes.get("hour") < a.get("hour") && (a = h[j].startingTenMinutes.clone()) : a = g = h[j].startingTenMinutes.clone()), h[j].endingTenMinutes && (b ? g = h[j].endingTenMinutes.clone().dayOfYear(b.dayOfYear()) : b = g = h[j].endingTenMinutes.clone(), g && g.isAfter(b) && (b = h[j].endingTenMinutes.clone()), h[j].sessionHours >= 15 && !Modernizr.tablet && !Modernizr.desktop && (this.useThinSlices = !0));
                a || (a = m(this.model.get("date") + "T18:00:00")), b || (b = m(this.model.get("date") + "T18:00:00").add(12, "hours")), c = a.clone().subtract(1, "hour").startOf("hour"), d = b.clone().add(2, "hour").startOf("hour"), f = d.diff(c, "hours") - 24 * d.diff(c, "days"), e = c.clone(), c.format("YY-MM-DD") === d.format("YY-MM-DD") && 0 > f && (f += 24), f > 16 ? f = 16 : 12 > f && (d.add(12 - f, "hours"), f = 12);
                for (var k = 0; f + 1 > k; k++) i.push(e.format("ha")), e.add(1, "hour");
                this.model.set("graphData", {
                    timelineHours: f,
                    tenMinuteIntervals: 6 * f,
                    timeIntervals: i,
                    startingTime: c,
                    endingTime: d,
                    family: !0
                })
            }

            function e() {
                for (var a = this.model.get("sleepers"), b = 0; b < a.length; b++)
                    if (a[b].sliceList) {
                        var c = {};
                        c[".bar-chart-wrapper[data-sleeper-id=" + a[b].sleeperId + "]"] = {
                            TView: j,
                            model: new g({
                                isFamily: !0,
                                graphData: this.model.get("graphData") || 0,
                                barData: a[b],
                                date: this.model.get("date")
                            })
                        }, this.mapChildView(c)
                    }
                this.render(".bar-chart-wrapper, .timeline")
            }
            var f = a("lavaca/mvc/View"),
                g = a("lavaca/mvc/Model"),
                h = a("app/models/StateModel"),
                i = a("app/models/FamilyModel"),
                j = a("app/ui/views/childviews/BarChartView"),
                k = a("app/ui/widgets/PillChart"),
                l = a("rdust!templates/childviews/family-daily"),
                m = a("moment"),
                n = a("app/utils/MixPanelManager"),
                o = a("app/models/viewmodels/DashboardViewModel");
            a("rdust!templates/childviews/bed-presence");
            var p = f.extend(function() {
                f.apply(this, arguments), this.mapWidget({
                    ".pill-chart": {
                        TWidget: k
                    }
                })
            }, {
                className: "family-daily",
                autoRender: !0,
                generateHtml: function(a) {
                    this.hasAnimated = !1;
                    var b = h.get("editedSleepData"),
                        c = null;
                    b && (b.forEach(function(b) {
                        b.get("date") === a.date && a.sleepers.forEach(function(a) {
                            a.sleeperId === b.get("sleeperId") && (a.sleepQuotient = b.get("sleepQuotient"), a.inBedFormatted = b.get("inBedFormatted"), a.restfulFormatted = b.get("restfulFormatted"), a.restlessFormatted = b.get("restlessFormatted"), a.outOfBedFormatted = b.get("outOfBedFormatted"), a.startingTenMinutes = b.get("startingTenMinutes"), a.endingTenMinutes = b.get("endingTenMinutes"), c = b)
                        })
                    }), c && h.set("editedSleepData", b.splice(b.indexOf(c), 1)));
                    var d = this.getChildViews(".bar-chart-wrapper");
                    return d.forEach(function(a) {
                        a.el.html(""), a.model && a.model.clear()
                    }), this.el.find(".timeline").html(""), this.model && this.model.set("graphData", null), a.pillWidth = Modernizr.tablet ? "3" : "2", a.pillHeight = Modernizr.tablet ? "12" : "14", new Promise(function(b) {
                        l.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    this.el.on("widgetAdded", this.widgetAdded.bind(this)), f.prototype.onRenderSuccess.apply(this, arguments)
                },
                widgetAdded: function(a, b) {
                    this.el.hasClass("inView") && !b.hasAnimated && b.update()
                },
                selfInView: function() {
                    if (n.prototype.setFamilySleepDailyType(o.get("selectedType"), o.get("currentDate")), n.prototype.trackFamilySleep("Day", this.model.toObject(), o.get("selectedType")), setTimeout(function() {
                            var a = this.getWidgets(".pill-chart");
                            a && a.forEach(function(a) {
                                a.update()
                            })
                        }.bind(this), 200), this.model && m().isSame(this.model.get("date"), "day")) this.trackingInterval || b.call(this);
                    else {
                        if (this.clearPresenceInterval(), this.hasAnimated) return;
                        this.model && this.model.get("hasSlices") ? this.onSlicesFetched() : this.parentView && this.parentView.model && this.model.get("date") && this.parentView.model.fetchFamilySleepSlicesForDay(this.model.get("date")).then(function() {
                            this.onSlicesFetched()
                        }.bind(this), function a(a) {
                            console.error(a)
                        })
                    }
                },
                dispose: function() {
                    this.el.off("widgetAdded"), this.clearPresenceInterval(), f.prototype.dispose.apply(this, arguments)
                },
                clearPresenceInterval: function() {
                    this.trackingInterval && (clearInterval(this.trackingInterval), this.trackingInterval = null, console.log("presence cleared"), this.el.find(".in-bed").length > 0 && (this.model.set("showSvg", !1), this.render(".bed-presence")))
                },
                onSlicesFetched: function() {
                    for (var a = !1, b = this.model.get("sleepers"), c = 0; c < b.length; c++) b[c].sliceList && (a = !0);
                    a && (d.call(this), e.call(this)), this.hasAnimated = !0
                }
            });
            return p
        }), define("rdust!templates/childviews/family-weekly", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.section(b.get("sleepers"), b, {
                        block: c
                    }, null)
                }

                function c(a, b) {
                    return a.write('<div class="user-container" data-type="').exists(b.get("isChild"), b, {
                        "else": d,
                        block: e
                    }, null).write('" data-date="').reference(b.get("firstDay"), b, "h").write('" data-id="').reference(b.get("sleeperId"), b, "h").write('"><div class="name"><h1>').reference(b.get("name"), b, "h").write("</h1></div>").notexists(b.get("noData"), b, {
                        block: f
                    }, null).write('<div class="main-pill-chart-wrapper">').notexists(b.get("noData"), b, {
                        block: g
                    }, null).write("</div>").exists(b.get("noData"), b, {
                        block: h
                    }, null).write("</div>")
                }

                function d(a) {
                    return a.write("parent")
                }

                function e(a) {
                    return a.write("child")
                }

                function f(a, b) {
                    return a.write('<div class="stats"><div class="avg"><span class="label">Avg Time in Bed</span> <div class="dot"><i>•</i></div><span>').reference(b.get("inBedFormatted"), b, "h").write('</span></div><div class="chart-key"><div class="key restful"><i class="icon"></i><div class="label">Restful</div><div class="value">').reference(b.get("restfulFormatted"), b, "h").write('</div></div><div class="key restless"><i class="icon"></i><div class="label">Restless</div><div class="value">').reference(b.get("restlessFormatted"), b, "h").write('</div></div><div class="key out-of-bed"><i class="icon"></i><div class="label">Out of Bed</div><div class="value">').reference(b.get("outOfBedFormatted"), b, "h").write("</div></div></div></div>")
                }

                function g(a, b) {
                    return a.write('<div class="pill-chart" data-value="').reference(b.get("avgSleepIq"), b, "h").write('" data-sleep-iq="true" data-pills="20" data-open="true" data-rotation="90" data-pill-width="').reference(b.get("pillWidth"), b, "h").write('" data-pill-height="').reference(b.get("pillHeight"), b, "h").write('"><div class="circle"><div class="summary"><div class="label">SleepIQ<sup>&reg;</sup></div><div class="number">').reference(b.get("avgSleepIq"), b, "h").write("</div></div></div></div>")
                }

                function h(a) {
                    return a.write('<p class="no-data">No Data Recorded for this week</p>')
                }
                return a.register("templates/childviews/family-weekly", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/family-weekly", b, c)
                }
            }
        }), define("app/ui/views/childviews/FamilyWeeklyView", ["require", "lavaca/mvc/View", "app/models/StateModel", "app/models/FamilyModel", "app/ui/widgets/PillChart", "rdust!templates/childviews/family-weekly", "$", "app/utils/MixPanelManager"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = (a("app/models/StateModel"), a("app/models/FamilyModel"), a("app/ui/widgets/PillChart")),
                d = a("rdust!templates/childviews/family-weekly"),
                e = (a("$"), a("app/utils/MixPanelManager")),
                f = b.extend(function() {
                    b.apply(this, arguments), this.mapWidget({
                        ".pill-chart": {
                            TWidget: c
                        }
                    }), this.render()
                }, {
                    className: "family-weekly",
                    generateHtml: function(a) {
                        return a && (a.pillWidth = Modernizr.tablet ? "3" : "2", a.pillHeight = Modernizr.tablet ? "12" : "12"), new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        this.el.on("widgetAdded", this.widgetAdded.bind(this)), b.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    widgetAdded: function(a, b) {
                        this.el.hasClass("inView") && !b.hasAnimated && b.update()
                    },
                    selfInView: function() {
                        e.prototype.trackFamilySleep("Week", this.model.toObject()), setTimeout(function() {
                            var a = this.getWidgets(".pill-chart");
                            a && a.forEach(function(a) {
                                a.update()
                            })
                        }.bind(this), 300)
                    },
                    dispose: function() {
                        this.el.off("inView widgetAdded"), b.prototype.dispose.apply(this, arguments)
                    }
                });
            return f
        }), define("rdust!templates/childviews/family-monthly", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.section(b.get("sleepers"), b, {
                        block: c
                    }, null)
                }

                function c(a, b) {
                    return a.write('<div class="user-container" data-type="').exists(b.get("isChild"), b, {
                        "else": d,
                        block: e
                    }, null).write('" data-date="').reference(b.get("firstDay"), b, "h").write('" data-id="').reference(b.get("sleeperId"), b, "h").write('"><div class="name"><h1>').reference(b.get("name"), b, "h").write("</h1></div>").notexists(b.get("noData"), b, {
                        block: f
                    }, null).write('<div class="main-pill-chart-wrapper">').notexists(b.get("noData"), b, {
                        block: g
                    }, null).write("</div>").exists(b.get("noData"), b, {
                        block: h
                    }, null).write("</div>")
                }

                function d(a) {
                    return a.write("parent")
                }

                function e(a) {
                    return a.write("child")
                }

                function f(a, b) {
                    return a.write('<div class="stats"><div class="avg"><span class="label">Avg Time in Bed</span> <div class="dot"><i>•</i></div><span>').reference(b.get("inBedFormatted"), b, "h").write('</span></div><div class="chart-key"><div class="key restful"><i class="icon"></i><div class="label">Restful</div><div class="value">').reference(b.get("restfulFormatted"), b, "h").write('</div></div><div class="key restless"><i class="icon"></i><div class="label">Restless</div><div class="value">').reference(b.get("restlessFormatted"), b, "h").write('</div></div><div class="key out-of-bed"><i class="icon"></i><div class="label">Out of Bed</div><div class="value">').reference(b.get("outOfBedFormatted"), b, "h").write("</div></div></div></div>")
                }

                function g(a, b) {
                    return a.write('<div class="pill-chart" data-value="').reference(b.get("avgSleepIQ"), b, "h").write('" data-sleep-iq="true" data-pills="20" data-open="true" data-rotation="90" data-pill-width="').reference(b.get("pillWidth"), b, "h").write('" data-pill-height="').reference(b.get("pillHeight"), b, "h").write('"><div class="circle"><div class="summary"><div class="label">SleepIQ<sup>&reg;</sup></div><div class="number">').reference(b.get("avgSleepIQ"), b, "h").write("</div></div></div></div>")
                }

                function h(a) {
                    return a.write('<p class="no-data">No Data Recorded for this month</p>')
                }
                return a.register("templates/childviews/family-monthly", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/family-monthly", b, c)
                }
            }
        }), define("app/ui/views/childviews/FamilyMonthlyView", ["require", "lavaca/mvc/View", "app/models/StateModel", "app/models/FamilyModel", "app/ui/widgets/PillChart", "rdust!templates/childviews/family-monthly", "$", "app/utils/MixPanelManager"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = (a("app/models/StateModel"), a("app/models/FamilyModel"), a("app/ui/widgets/PillChart")),
                d = a("rdust!templates/childviews/family-monthly"),
                e = (a("$"), a("app/utils/MixPanelManager")),
                f = b.extend(function() {
                    b.apply(this, arguments), this.mapWidget({
                        ".pill-chart": {
                            TWidget: c
                        }
                    })
                }, {
                    className: "family-monthly",
                    autoRender: !0,
                    generateHtml: function(a) {
                        return a && (a.pillWidth = Modernizr.tablet ? "3" : "2", a.pillHeight = Modernizr.tablet ? "12" : "12"), new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        this.el.on("widgetAdded", this.widgetAdded.bind(this)), b.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    widgetAdded: function(a, b) {
                        this.el.hasClass("inView") && !b.hasAnimated && b.update()
                    },
                    selfInView: function() {
                        e.prototype.trackFamilySleep("Month", this.model.toObject()), setTimeout(function() {
                            var a = this.getWidgets(".pill-chart");
                            a && a.forEach(function(a) {
                                a.update()
                            })
                        }.bind(this), 300)
                    },
                    dispose: function() {
                        this.el.off("widgetAdded"), b.prototype.dispose.apply(this, arguments)
                    }
                });
            return f
        }), define("app/ui/views/childviews/SleepView", ["require", "$", "app/models/StateModel", "lavaca/mvc/View", "app/utils/debounce", "app/models/FamilyModel", "app/ui/views/controlviews/toast", "lavaca/fx/Transition", "lavaca/fx/Transform", "rdust!templates/childviews/sleep", "moment", "app/ui/views/childviews/AdultDailyView", "app/ui/views/childviews/AdultWeeklyView", "app/ui/views/childviews/AdultMonthlyView", "app/ui/views/childviews/KidDailyView", "app/ui/views/childviews/KidWeeklyView", "app/ui/views/childviews/KidMonthlyView", "app/ui/views/childviews/FamilyDailyView", "app/ui/views/childviews/FamilyWeeklyView", "app/ui/views/childviews/FamilyMonthlyView", "app/ui/views/childviews/LoadingAnimationView", "rdust!templates/headers/header"], function(a) {
            var b = a("$"),
                c = a("app/models/StateModel"),
                d = a("lavaca/mvc/View"),
                e = a("app/utils/debounce"),
                f = a("app/models/FamilyModel"),
                g = a("app/ui/views/controlviews/toast"),
                h = a("lavaca/fx/Transition"),
                i = a("lavaca/fx/Transform"),
                j = a("rdust!templates/childviews/sleep"),
                k = a("moment"),
                l = a("app/ui/views/childviews/AdultDailyView"),
                m = a("app/ui/views/childviews/AdultWeeklyView"),
                n = a("app/ui/views/childviews/AdultMonthlyView"),
                o = a("app/ui/views/childviews/KidDailyView"),
                p = a("app/ui/views/childviews/KidWeeklyView"),
                q = a("app/ui/views/childviews/KidMonthlyView"),
                r = a("app/ui/views/childviews/FamilyDailyView"),
                s = a("app/ui/views/childviews/FamilyWeeklyView"),
                t = a("app/ui/views/childviews/FamilyMonthlyView"),
                u = a("app/ui/views/childviews/LoadingAnimationView");
            a("rdust!templates/headers/header");
            var v = h.cssProperty(),
                w = v + "-duration",
                x = i.cssProperty(),
                y = d.extend(function() {
                    d.apply(this, arguments), this.mapEvent({
                        ".last-night": {
                            tap: this.slideToFirst
                        },
                        ".navigation": {
                            tap: this.showNavigationPopover
                        },
                        ".type-selector .toggle": {
                            tap: this.toggleTypeSelector
                        },
                        ".type-selector .selection": {
                            tap: this.selectType
                        },
                        "#app-toggle-chart": {
                            tap: this.toggleChart
                        },
                        self: {
                            tap: this.closeNavigationPopover
                        },
                        model: {
                            redrawSlides: this.redrawSlides,
                            reset: this.onModelReset
                        },
                        ext: {
                            stateModel: {
                                object: c,
                                events: {
                                    ptrReload: this.ptrReload.bind(this),
                                    sleepSliceUpdate: this.beginUpdate.bind(this)
                                }
                            }
                        }
                    }), this.mapChildView({
                        "#toast-container": {
                            TView: g,
                            model: {}
                        },
                        ".ptr-loader": {
                            TView: u,
                            model: {}
                        },
                        ".loading-animation-view": {
                            TView: u,
                            model: this.model
                        }
                    }), (Modernizr.tablet || Modernizr.desktop) && this.mapEvent({
                        "#desktop-controls button": {
                            tap: this.onTapNavigationButton
                        }
                    }), Modernizr.desktop || this.mapEvent({
                        ".slide": {
                            dragstart: this.onDragStart,
                            drag: this.onDragMove,
                            dragend: this.onDragEnd
                        }
                    }), this.setTView(), this.currentIndex = this.model.currentIndex || 0, this.model && this.model.models && this.render()
                }, {
                    selectorClosing: !1,
                    selectorOpen: !1,
                    swipeToClose: !0,
                    translate: 0,
                    masterSlideIndex: 0,
                    minScroll: 6,
                    maxScroll: 5,
                    isScrolling: !1,
                    transitionDuration: 500,
                    className: "sleep-view element-to-scale",
                    returningFromESS: !1,
                    generateHtml: function(a) {
                        var b = f.getFamily(),
                            c = b[f.getLoggedInUserIndex()];
                        return c && c.get("isChild") && this.model.set("isChildLoggedIn", !0), new Promise(function(b) {
                            j.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        b(window).off("resize.carousel" + this.id), d.prototype.dispose.apply(this, arguments)
                    },
                    beginUpdate: function() {
                        this.returningFromESS || (this.returningFromESS = !0, setTimeout(function() {
                            this.returningFromESS = !1
                        }.bind(this), 250), setTimeout(function() {
                            this.onModelReset(), setTimeout(function() {
                                this.el.find(".last-night").toggleClass("conceal", 0 == this.currentIndex || this.selectorClosing)
                            }.bind(this), 600)
                        }.bind(this), 1))
                    },
                    getSleeperGoals: function() {
                        this.model && "function" == typeof this.model.getSleeperGoals && this.model.getSleeperGoals()
                    },
                    ptrReload: function() {
                        this.model && (this.model.ptr = !0, this.model.isDashboard ? "day" === this.model.get("dataType") ? this.model.fetch(this.model.get("currentDate")) : "week" === this.model.get("dataType") ? this.model.fetch(this.model.get("formattedDate"), "week") : "month" === this.model.get("dataType") && this.model.fetch(this.model.get("formattedDate"), "month") : "day" === this.model.get("dataType") ? this.model.fetch(this.model.get("currentDate")) : "week" === this.model.get("dataType") ? this.model.fetch(k(this.model.get("formattedDate"), "MMMM DD " + k().year()).format("YYYY-MM-DD"), "week") : "month" === this.model.get("dataType") && this.model.fetch(k(this.model.get("formattedDate"), "MMMM YYYY 01").format("YYYY-MM-DD"), "month"))
                    },
                    showNavigationPopover: function(a) {
                        this.el.find(".type-selector").toggleClass("show"), this.el.find(".desktop-cover").toggleClass("show"), a.preventDefault(), a.stopPropagation()
                    },
                    closeNavigationPopover: function() {
                        this.el.find(".type-selector").removeClass("show")
                    },
                    setTView: function() {
                        if (b(".subheader").removeClass("day week month").addClass(this.model.get("dataType")), this.model.get("sleeperId"))
                            if (this.model.get("isChild")) switch (this.model.get("dataType")) {
                                case "week":
                                    this.TView = p;
                                    break;
                                case "month":
                                    this.TView = q;
                                    break;
                                default:
                                    this.TView = o
                            } else switch (this.model.get("dataType")) {
                                case "week":
                                    this.TView = m;
                                    break;
                                case "month":
                                    this.TView = n;
                                    break;
                                default:
                                    this.TView = l
                            } else switch (this.model.get("dataType")) {
                                case "week":
                                    this.TView = s;
                                    break;
                                case "month":
                                    this.TView = t;
                                    break;
                                default:
                                    this.TView = r
                            }
                    },
                    onModelReset: function() {
                        setTimeout(function() {
                            b("#view-root").removeClass("block-touches"), b(window).off("resize.carousel" + this.id), this.model && this.model.models && (b(window).on("resize.carousel" + this.id, e(this.onResize.bind(this), 100)), this.model.isDashboard && (console.log("Dashboard thinggy"), this.model.ptr ? (this.model.ptr = !1, this.model.set("selectedType", "Overview"), this.updateType(this.model.get("dataType"), this.model.get("landingDate"))) : this.updateType(this.model.get("dataType"), this.model.get("landingDate"), !0)), this.setTView(), this.render(".ptr-wrap,.date-bar").then(function() {
                                this.init(), c.trigger("loggingIn"), 1 != c.get("ESSaving")
                            }.bind(this)))
                        }.bind(this), 50)
                    },
                    onResetTips: function() {
                        console.log("reset tipss"), this.render(".tip-container")
                    },
                    redrawSlides: function(a) {
                        this.render(".wrap, .last-night").then(function() {
                            this.setCurrentIndex(a || 0), this.translate = this.currentIndex * this.width, this.init(!0, !0), this.render(".pill")
                        }.bind(this))
                    },
                    changeDate: function() {
                        this.model.set("formattedDate", this.views[this.masterSlideIndex].model.get("formattedDate")), this.model.set("currentDate", this.views[this.masterSlideIndex].model.get("date")), this.model.set("noData", this.views[this.masterSlideIndex].model.get("noData")), this.model.set("sleepNumber", this.views[this.masterSlideIndex].model.get("sleepQuotient")), this.model.set("toggleView", c.get("toggleView"));
                        var a = this.views[this.masterSlideIndex].model.get("formattedLabel") || void 0;
                        this.model.set("formattedLabel", a), this.render(".date-bar .date"), this.render(".date-bar #app-toggle-chart"), setTimeout(function() {
                            this.el.find("#desktop-controls .previous").toggleClass("disabled", !this.hasNext()), this.el.find("#desktop-controls .next").toggleClass("disabled", !this.hasPrevious()), this.el.find(".last-night").toggleClass("conceal", !this.hasNext())
                        }.bind(this), 100)
                    },
                    slideInView: function() {
                        this.el.find(".last-night").toggleClass("conceal", 0 == this.currentIndex || this.selectorClosing), this.model.get("slideIndices") && this.model.updateTypeIndex(this.currentIndex), this.changeDate(), setTimeout(function() {
                            var a = this.views[this.masterSlideIndex];
                            a && (a.el.addClass("inView").siblings().removeClass("inView"), "function" == typeof a.selfInView && a.selfInView())
                        }.bind(this), 10)
                    },
                    toggleTypeSelector: function(a) {
                        a && (a.preventDefault(), a.stopPropagation()), this.el.find(".pill").removeClass("open"), this.el.find(".pill").nextTransitionEnd(function() {
                            this.el.find(".date-bar").hasClass("expand") && this.el.find(".pill").addClass("open")
                        }.bind(this)), this.el.find(".date-bar").toggleClass("expand"), this.el.find(".type-selector").toggleClass("hide-arrow"), this.el.find(".date-bar").hasClass("expand") ? (this.selectorOpen = !0, this.el.find(".ui-blocker").removeClass("no-show"), this.el.find(".last-night").addClass("conceal")) : (this.selectorOpen = !1, this.el.find(".ui-blocker").addClass("no-show"), 0 !== this.currentIndex && this.el.find(".last-night").removeClass("conceal"))
                    },
                    closeTypeSelector: function(a) {
                        this.selectorOpen && this.toggleTypeSelector(a)
                    },
                    selectType: function(a) {
                        b(a.currentTarget).hasClass("selected") || b(a.currentTarget).hasClass("last-night") || (this.el.find(".selection").removeClass("selected"), b(a.currentTarget).addClass("selected"), this.updateType(b(a.currentTarget).data("type"))), this.el.find(".date-bar").removeClass("expand"), this.selectorClosing = !0, this.selectorOpen = !1, this.el.find(".type-selector").removeClass("show"), setTimeout(function() {
                            this.el.find(".type-selector").removeClass("hide-arrow").end().find(".last-night").toggleClass("conceal", 0 === this.currentIndex), this.el.find(".selection:not(.selected)").last().addClass("last-visible"), this.selectorClosing = !1
                        }.bind(this), 500)
                    },
                    selectView: function() {
                        router.exec("/modals/edit-sleep", null, {
                            model: this.model
                        })
                    },
                    toggleChart: function() {
                        this.model.get("noData") || ("Chart View" === c.get("toggleView") ? c.set("toggleView", "Summary View") : c.set("toggleView", "Chart View"), this.model.get("sleeperId") ? this.model.get("isChild") ? b(".sleep-carousel>.time-bars-container:visible").length ? b(".sleep-carousel>.time-bars-container").hide() : b(".sleep-carousel>.time-bars-container").show() : b(".sleep-carousel>.sleepiq:visible").length ? b(".sleep-carousel>.sleepiq").hide() : b(".sleep-carousel>.sleepiq").show() : b(".family-dashboard.dashboard").toggleClass("details"), this.model.set("toggleView", c.get("toggleView")), this.render(".date-bar #app-toggle-chart"))
                    },
                    updateType: function(a, b, c) {
                        var d;
                        if (this.model.updateType(a), this.setTView(), b) {
                            var e = "date";
                            !a || "month" != a && "week" != a || (e = "formattedDate"), this.model.each(function(a, c) {
                                c.get(e) === b && (d = a)
                            })
                        } else this.model.get("slideIndices") && (d = this.model.get("slideIndices")[this.model.get("dataType")]);
                        c || this.redrawSlides(d)
                    },
                    slideToFirst: function() {
                        0 !== this.currentIndex && (this.masterSlideIndex = this.currentIndex = this.translate = 0, this.render().then(function() {
                            this.init(!1, !0)
                        }.bind(this)))
                    },
                    onRenderSuccess: function() {
                        this.model && this.model.models && this.model.models.length > 0 && (b(window).on("resize.carousel" + this.id, e(this.onResize.bind(this), 200)), this.init()), d.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    init: function(a, d) {
                        var e = this,
                            f = 1;
                        1 == c.get("ESSaving") ? f = 250 : d || c.set("toggleView", "Chart View"), setTimeout(function() {
                            this.render(".date-bar"), this.hasRendered && e.el && (this.model && this.model.get("slideIndices") && !d && (this.setCurrentIndex(this.model.get("slideIndices")[this.model.get("dataType")]), this.translate = this.currentIndex * this.width, a = !0), e.width = e.el.width() || b(window).width(), e.initialTranslateOffset = a ? 0 : e.width * e.currentIndex, e.container = e.el.find(".slide-container"), e.container.parent().addClass("visible fade-in"), e.slides = e.el.find(".slide"), e.setInitialPosition(), e.createViews())
                        }.bind(this), f)
                    },
                    setInitialPosition: function() {
                        this.setTransitionDuration(0), this.translateX(this.currentIndex * this.width)
                    },
                    createViews: function() {
                        var a;
                        this.views = [];
                        for (var b = 0; 3 > b; b++) a = this.slides.eq(b), this.views[b] = new this.TView(a, null, this);
                        this.updateSlides()
                    },
                    getPreviousIndex: function() {
                        return this.currentIndex - 1
                    },
                    getNextIndex: function() {
                        return this.hasNext() ? this.currentIndex + 1 : -1
                    },
                    hasPrevious: function() {
                        return this.currentIndex > 0
                    },
                    hasNext: function() {
                        return this.model && this.model.models ? this.currentIndex < this.model.models.length - 1 : !1
                    },
                    hasIndex: function(a) {
                        return a > -1 && a < this.model.models.length
                    },
                    setCurrentIndex: function(a) {
                        this.masterSlideIndex = this.masterSlideIndex + (a - this.currentIndex), this.masterSlideIndex < 0 ? this.masterSlideIndex = 2 : this.masterSlideIndex > 2 && (this.masterSlideIndex = 0), this.currentIndex = a, this.trigger("newIndex", this.currentIndex)
                    },
                    updateSlides: function() {
                        var a, b, c, d, e = this,
                            f = -1;
                        if (a = [
                                [0, 1, -1],
                                [-1, 0, 1],
                                [1, -1, 0]
                            ], this.views) {
                            for (; c = this.views[++f];) b = this.currentIndex + a[this.masterSlideIndex][f], d = this.model.models[b], "function" == typeof c.clearPresenceInterval && c.clearPresenceInterval(), d && c.model != d ? (c.model = d, function(b) {
                                var c = e.currentIndex + a[e.masterSlideIndex][b],
                                    d = c * e.width - e.initialTranslateOffset,
                                    f = e.views[b],
                                    g = f.render;
                                g.call(f).then(function() {
                                    var a = {
                                        right: d + "px"
                                    };
                                    a[v] = "", a[x] = "", this.el[0].slideIndex = c, this.el.css(a).addClass("drawn")
                                }.bind(f))
                            }(f)) : d && c.model == d && function(b) {
                                var c = e.currentIndex + a[e.masterSlideIndex][b],
                                    d = c * e.width - e.initialTranslateOffset,
                                    f = e.views[b],
                                    g = {
                                        right: d + "px"
                                    };
                                g[v] = "", g[x] = "", f.el[0].slideIndex = c, f.el.css(g).addClass("drawn")
                            }(f);
                            this.slideInView()
                        }
                    },
                    onEmpty: function() {
                        this.el.addClass("empty")
                    },
                    translateX: function(a, b) {
                        b !== !1 && (this.translate = this.currentIndex * this.width, this.container.css(x, "translate3d(" + (a + this.initialTranslateOffset) + "px, 0, 0)"))
                    },
                    setTransitionDuration: function(a) {
                        var b = "string" == typeof a ? a : a + "ms";
                        this.container.css(w, b)
                    },
                    onDragStart: function(a) {
                        this.isPaused || (this.setTransitionDuration(0), this.isMovingInYAxis = "down" === a.gesture.direction || "up" === a.gesture.direction ? !0 : !1)
                    },
                    onDragMove: function(a) {
                        this.isPaused || (this.el.find(".type-selector").removeClass("show"), Math.abs(a.gesture.deltaX) > this.minScroll && !this.isMovingInYAxis && (a.preventDefault(), a.stopPropagation(), a.gesture.preventDefault(), a.gesture.stopPropagation(), this.closeTypeSelector(a), this.translateX(a.gesture.deltaX + this.translate, this.isScrolling)), this.isScrolling = this.isScrolling || Math.abs(a.gesture.deltaX) > this.minScroll)
                    },
                    onDragEnd: function(a) {
                        if (!this.isPaused) {
                            var b;
                            this.isMovingInYAxis || (b = Math.abs(a.gesture.deltaX) > 50 ? this.currentIndex + (a.gesture.deltaX > 0 ? 1 : -1) : Math.round(-this.translateX / this.width), this.isScrolling && this.animateToSlide(b), this.isScrolling = !1), this.translate = this.currentIndex * this.width
                        }
                    },
                    animateToSlide: function(a, b) {
                        var c = this,
                            d = Promise;
                        return a !== this.currentIndex && c.hasIndex(a) ? (this.setCurrentIndex(a), this.updateSlides(), d.resolve()) : (a = this.currentIndex, d.resolve()), this.setTransitionDuration(b >= 0 ? b : this.transitionDuration), this.translateX(a * this.width), d
                    },
                    onResize: function() {
                        this.width = this.el.width() || b(window).width(), this.animateToSlide(this.currentIndex, 0), this.updateSlides()
                    },
                    onTapNavigationButton: function(a) {
                        var b = a && a.currentTarget && a.currentTarget.dataset && a.currentTarget.dataset.direction ? a.currentTarget.dataset.direction : !1;
                        return b ? (this.animateToSlide(this.currentIndex + ("left" == b ? 1 : -1)), void 0) : !1
                    },
                    pause: function() {
                        this.isPaused = !0
                    },
                    resume: function() {
                        this.isPaused = !1
                    }
                });
            return y
        }), define("rdust!templates/pageviews/dashboard", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/dashboard-header", b, {
                        pageTitle: "Family Sleep"
                    }).write('<header class="subheader tabs segmented-control-tabs" data-type="').reference(b.get("dataType"), b, "h").write('"><section class="day-header"><h1>DAILY SCORE</h1></section><section class="week-header"><h1>WEEKLY AVERAGES</h1></section><section class="month-header"><h1>MONTHLY AVERAGES</h1></section></header><div id="toast-container"></div><section class="sleep">').notexists(b.get("hasFetched"), b, {
                        block: c
                    }, null).write("</section>")
                }

                function c(a) {
                    return a.write('<div class="loading-animation-view"></div><div class="loading-text">Loading</div>')
                }
                return a.register("templates/pageviews/dashboard", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/dashboard", b, c)
                }
            }
        }), define("rdust!templates/headers/dashboard-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header dashboard"><div class="user-menu">☰</div><div class="title">').exists(b.get("pageTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><button class="remote right"><div class="center"><div class="icon siqfont">↕</div><div class="remote-alert"></div><span>Remote</span></div></button></header>')
                }

                function c(a) {
                    return a.write("SleepIQ<sup>&reg;</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("pageTitle"), b, "h", ["s"])
                }
                return a.register("templates/headers/dashboard-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/dashboard-header", b, c)
                }
            }
        }), define("app/ui/views/pageviews/DashboardView", ["require", "./BaseView", "lavaca/mvc/Router", "app/ui/widgets/SlidingTabBarWidget", "app/models/StateModel", "app/models/AccountModel", "app/models/FamilyModel", "app/ui/views/childviews/SleepView", "app/ui/views/controlviews/UserSwitchView", "app/ui/views/controlviews/toast", "app/ui/views/childviews/CoachmarkView", "rdust!templates/pageviews/dashboard", "app/utils/MixPanelManager", "app/ui/views/childviews/LoadingAnimationView", "$", "rdust!templates/headers/dashboard-header"], function(a) {
            function b(a) {
                a && a.currentTarget && q(a.currentTarget).addClass("selected").siblings().removeClass("selected");
                var b = {
                    dataType: this.model.get("dataType")
                };
                if (b.date = this.model.get("currentDate") ? this.model.get("currentDate") : a.currentTarget.dataset.date, this.model.get("formattedDate") && (b.formattedDate = this.model.get("formattedDate")), a && a.currentTarget && a.currentTarget.dataset && a.currentTarget.dataset.id) g.exec("/user/" + a.currentTarget.dataset.id, null, b);
                else if (a && a.userId) g.exec("/user/" + a.userId, null, b);
                else {
                    var c = j.getSelectedUser();
                    c && c.sleeperId ? g.exec("/user/" + c.sleeperId, null, b) : g.exec("/user")
                }
            }

            function c() {
                if (this.model) {
                    var a = this.el.find("header.subheader");
                    a.attr("data-type", this.model.get("dataType"))
                }
            }

            function d(a, b) {
                var c = b.currentTarget,
                    d = q(b.currentTarget);
                d.hasClass("on") && (this.model.set("selectedType", c.dataset.type), o.prototype.trackFamilySleepDailyType(this.model.get("selectedType"), this.model.get("currentDate")), "details" == c.dataset.type ? (this.el.addClass("details"), e.call(this)) : this.el.removeClass("details"))
            }

            function e() {
                var a = !j.getFamily()[j.getLoggedInUserIndex()].get("isChild"),
                    b = {};
                a && (b && 1 == b.familySleep || i.get("demoMode") ? console.log("Routine List Has Been Viewed") : (b.familySleep = !0, console.log("First Viewing"), m.displayCoachmark("family-sleep")))
            }
            var f = a("./BaseView"),
                g = a("lavaca/mvc/Router"),
                h = a("app/ui/widgets/SlidingTabBarWidget"),
                i = a("app/models/StateModel"),
                j = (a("app/models/AccountModel"), a("app/models/FamilyModel")),
                k = a("app/ui/views/childviews/SleepView"),
                l = (a("app/ui/views/controlviews/UserSwitchView"), a("app/ui/views/controlviews/toast")),
                m = a("app/ui/views/childviews/CoachmarkView"),
                n = a("rdust!templates/pageviews/dashboard"),
                o = a("app/utils/MixPanelManager"),
                p = a("app/ui/views/childviews/LoadingAnimationView"),
                q = a("$");
            a("rdust!templates/headers/dashboard-header");
            var r = f.extend(function() {
                f.apply(this, arguments), this.mapEvent({
                    ".user-container": {
                        tap: b
                    },
                    self: {
                        "tab-tapped": d
                    },
                    model: {
                        updateDataType: c
                    },
                    ext: {
                        stateModel: {
                            object: i,
                            events: {
                                resume: this.onResume.bind(this)
                            }
                        }
                    }
                }), this.mapWidget({
                    self: {
                        TWidget: h
                    }
                }), this.mapChildView({
                    ".sleep": {
                        TView: k,
                        model: this.model
                    },
                    "#toast-container": {
                        TView: l,
                        model: {}
                    },
                    ".cover .loading-animation-view": {
                        TView: p,
                        model: this.model
                    }
                }), (Modernizr.desktop || window.innerWidth >= 650) && e.call(this)
            }, {
                className: "family-dashboard dashboard",
                onResume: function() {
                    i.isNewFetchDate() && this.model && this.model.refetchOnResume()
                },
                generateHtml: function(a) {
                    return a && a.selectedType && "details" === a.selectedType && this.el.addClass("details"), new Promise(function(b) {
                        n.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                dispose: function() {
                    f.prototype.dispose.apply(this, arguments)
                },
                onRenderSuccess: function() {
                    this.model && this.model.models && this.model.models.length <= 0 && this.el.addClass("initializing"), Modernizr.desktop || Modernizr.tablet ? this.model.set("selectedType", "Both") : this.model.set("selectedType", "Overview"), f.prototype.onRenderSuccess.apply(this, arguments)
                },
                onFinishLoading: function() {
                    this.el.addClass("hide-cover"), setTimeout(function() {
                        this.el.removeClass("initializing hide-cover")
                    }.bind(this), 500)
                }
            });
            return r
        }), define("app/models/validations/setup-bed", ["require"], function() {
            return {
                bedName: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                sleeperName: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required",
                        message: "To continue please input sleeper name."
                    }]
                }),
                optional: JSON.stringify({
                    validated: !1,
                    rules: {
                        optional: !0
                    }
                }),
                zipCode: JSON.stringify({
                    validated: !1,
                    message: "Not a valid zip code",
                    rules: [{
                        type: "required"
                    }, {
                        type: "allow",
                        numbers: !0,
                        letters: !1,
                        special: ["-"],
                        message: 'Only numbers and "-" are allowed'
                    }, {
                        type: "length",
                        min: 5,
                        message: "Not a valid zip code"
                    }]
                }),
                timeZone: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                })
            }
        }), define("sccomm/SelectComfortConstants", ["require"], function() {
            var a = {
                SERVICE: "ffffd1fd-388d-938b-344a-939d1f6efee0",
                CHARACTERISTIC_TX: "ffffd1fd-388d-938b-344a-939d1f6efee1",
                CHARACTERISTIC_RX: "ffffd1fd-388d-938b-344a-939d1f6efee2",
                OUTLET_SERVICE: "d829",
                OUTLET_SERVICE_LONG: "734e5582-bb4e-ee4a-744c-6579444dd829",
                OUTLET_SERVICE_LONG_ANDROID: "0000d829-0000-1000-8000-00805f9b34fb",
                OUTLET_CHARACTERISTIC_STATE: "734e5582-bb4e-ee4a-744c-6579444dd82a",
                OUTLET_CHARACTERISTIC_CONFIGURATION: "734e5582-bb4e-ee4a-744c-6579444dd82b",
                OUTLET_CHARACTERISTIC_NAME: "734e5582-bb4e-ee4a-744c-6579444dd82c",
                SleepExpertLongKeys: ["SWSC", "SWST", "SWCF", "SREL", "SRFS", "SFWU"],
                SCReplyBit: 128,
                SCDeviceQueryRequest: 0,
                SCBindClearRequest: 1,
                SCForceIdleRequest: 2,
                SCControlBindTableRequest: 5,
                SCControlBindWindowRequest: 6,
                SCNameRequest: 32,
                SCChangeChannelRequest: 100,
                SCSignalStrengthRequest: 101,
                SCSoftwareRevisionRequest: 113,
                SCMPChangeDeviceList: 17,
                SCMPChangeDeviceListReplyLength: 0,
                SCMPStatusRequest: 18,
                SCMPStatusRequestReplyLength: null,
                SCPSetPointChangeRequest: 17,
                SCPSetPointChangeRequestReply: 145,
                SCPSetPointChangeRequestReplyLength: 0,
                SCPPumpStatusRequest: 18,
                SCPPumpStatusRequestReply: 146,
                SCPPumpStatusRequestReplyLength: 5,
                SCPMemoryValueChangeRequest: 19,
                SCPMemoryValueChangeRequestReplyLength: 2,
                SCPMemoryValueRecallRequest: 20,
                SCPMemoryValueRecallRequestReplyLength: 2,
                SCPFillRequest: 21,
                SCPFillRequestReplyLength: 0,
                SCPConstantRequest: 22,
                SCPConstantRequestReplyLength: 8,
                SCPTickMarkLimitRequest: 24,
                SCPTickMarkLimitRequestReplyLength: 1,
                SCPSNRSRequest: 25,
                SCPSNRSRequestReplyLength: 1,
                SCPJobStatusRequest: 34,
                SCPJobStatusRequestReplyLength: 15,
                SCPPumpStateRequest: 26,
                SCPPumpStateRequestReplyLength: 4,
                SCPLeakTestRequest: 96,
                SCPSelfTestRequest: 3,
                SCPSelfTestRequestReplyLength: 7,
                SCFirmwareRequest: 4,
                SCFirmwareRequestReplyLength: null,
                SCPFactoryResetRequest: 114,
                SCPFactoryResetRequestReplyLength: 0,
                SCPChamberTypeRequest: 97,
                SCPChamberTypeRequestReplyLength: 4,
                SCPLEDOverride: 98,
                SCPLEDOverrideReplyLength: 0,
                SCTESetPointRequest: 17,
                SCTEStatusRequest: 18,
                SCTEPowerRequest: 19,
                SCTEReadDataRequest: 20,
                SCTEReadEEPROMRequest: 22,
                SCTEWriteEEPROMRequest: 23,
                SCTE_FFTStatusRequest: 24,
                SCTEStartFFTRequest: 25,
                SCTESelfTestRequest: 3,
                SCFAdjustmentChangeRequest: 17,
                SCFAdjustmentChangeRequestReplyLength: 0,
                SCFOutletChangeRequest: 19,
                SCFOutletChangeRequestReplyLength: 0,
                SCFAdjustmentStatusRequest: 18,
                SCFAdjustmentStatusRequestReplyLength: 15,
                SCFMassageStatusRequest: 26,
                SCFMassageStatusRequestReplyLength: 11,
                SCFOutletStatusRequest: 20,
                SCFOutletStatusRequestReplyLength: 3,
                SCFActivatePresetRequest: 21,
                SCFActivatePresetRequestReplyLength: 0,
                SCFStorePresetRequest: 22,
                SCFStorePresetRequestReplyLength: 0,
                SCFReadPresetRequest: 24,
                SCFReadPresetRequestReplyLength: 2,
                SCFResetPresetRequest: 23,
                SCFResetPresetRequestReplyLength: 0,
                SCFMotionHalt: 25,
                SCFMotionHaltReplyLength: 0,
                SCFSystemSettingRequest: 36,
                SCFSystemSettingRequestReplyLength: 0,
                SCFSystemStatusRequest: 37,
                SCFSystemStatusRequestReplyLength: 7,
                SCFSelfTestRequest: 3,
                SCFSelfTestRequestReplyLength: 1,
                SCSEShortWriteRequest: 27,
                SCSEShortReadRequest: 28,
                SCSELongRequest: 29,
                SCBCommTestRequest: 127,
                SCOStatusRequest: 18,
                SCOChangeRequest: 19,
                SCOChangeRequestReplyLength: 0,
                SCOAddRemoveRequest: 20,
                SCOAddRemoveRequestReplyAddLength: 7,
                SCOAddRemoveRequestReplyRemoveLength: 0,
                SCOGetSetName: 21,
                SCOSenseAndDoConfigureRequest: 20,
                SCOSenseAndDoConfigureRequestReplyLength: 0,
                SCOSenseAndDoStatusRequest: 18,
                SCOSenseAndDoStatusRequestReplyLength: 2,
                SCNC_TestFixture: 0,
                SCNC_PumpDevice: 1,
                SCNC_PumpController: 2,
                SCNC_Reserved_UARTHeader: 22,
                SCNC_FoundationDevice: 65,
                SCNC_FoundationController: 66,
                SCNC_SleepExpertDevice: 81,
                SCNC_SleepExpertController: 82,
                SCNC_TemperatureEngineDevice: 97,
                SCNC_TemperatureEngineController: 98,
                SCNC_MCRProxyDevice: 113,
                SCNC_MCRProxyController: 114,
                SCNC_BridgeDevice: 129,
                SCNC_BridgeController: 130,
                SCNC_OutletDevice: 145,
                SCNC_OutletController: 146,
                SCNC_SenseAndDoDevice: 49,
                SCNC_SenseAndDoController: 50,
                kSCMessagePreamble: "1616",
                kSCMessageHeaderSize: 10,
                kSCMessageMaxPayload: 15,
                kSCMessageUARTPreSize: 2,
                kSCMessageUARTPostSize: 2,
                kSCMessageHdrUARTSize: 14,
                kSCMessageMaxSize: 29,
                kSCMessageErrorNone: 0,
                kSCMessageErrorTimeout: 1,
                kSCMessageErrorNoBridge: 2,
                kSCMessageErrorNoDevice: 3,
                kSCMessageErrorCanceled: 4,
                kSCMessageErrorNAK: 5,
                chamberInvalidBitErrorMessage: "Your SleepIQ device has a problem. You may need to reset it by unplugging it and plugging it back in.",
                engageChamberInflateTarget: 100,
                engageChamberInflateTo: 50,
                engageChamberInflateStartPoint: 0,
                outletDirectConfigurationType: "02",
                outletDirectConfigurationPeripheralTime: 30,
                ScanTime: 3e3,
                ConnectTime: 15e3,
                kSCMessageSegmentGap: 10,
                KeepAliveInterval: 1e3,
                ReconnectInterval: 1e3,
                messageGap: 0,
                messageGapLong: 50,
                kSCMessageShortTimeout: 1200,
                kSCMessageLongTimeout: 2e3,
                kSCMessageExtraLongTimeout: 5e3,
                kSCMessageRetryCount: 2,
                connectionCloseTimeout: 500,
                outletConnectionCloseTimeout: 1e3,
                chamberInvalidBitTimout: 1100,
                pumpSetSleepNumberWithProgressTimeout: 12e5,
                pumpSetSleepNumberWithProgressInterval: 500,
                pumpSetSleepNumberWithProgressIntervalTimeout: 3e3,
                pumpGetStatusFalseyTimeout: 500,
                expertScanForWifiNetworksFalseyTimeout: 5e3,
                OutletBitUpdateInterval: 3200,
                OutletBitUpdateTimout: 12e4,
                RSSIRangeLimit: -95,
                shouldOpenBeforeCalls: !1,
                shouldRetryCalls: !0,
                shouldRetryCount: 3
            };
            return a
        }), define("sccomm/CommunicationLogger", ["require", "lavaca/util/Disposable", "$"], function(a) {
            function b() {
                for (var a = "", b = this.logQueue.length - 1; b > 0; b--) a += this.logQueue[b];
                d("#logging").html(a)
            }
            var c = a("lavaca/util/Disposable"),
                d = a("$"),
                e = c.extend(function() {
                    c.call(this, arguments), window.verboseLogging = !1, this.registeredClass = {
                        DeviceCommunication: {
                            isOn: !0,
                            color: "rgb(121, 208, 255)"
                        },
                        Message: {
                            isOn: !1,
                            color: "rgb(255, 69, 47)"
                        },
                        MessageQueue: {
                            isOn: !1,
                            color: "orange"
                        },
                        MessageTranslation: {
                            isOn: !1,
                            color: "yellow"
                        }
                    }, this.logQueue = [], this.logQueueLengthLimit = 1e3
                }, {
                    log: function(a) {
                        if (("local" === window.env || window.verboseLogging) && arguments.length > 1 && this.registeredClass[a] && this.registeredClass[a].isOn)
                            for (var c = 1; c < arguments.length; c++)
                                if (arguments[c]) {
                                    var d = "",
                                        e = "div",
                                        f = this.registeredClass[a].color,
                                        g = arguments[c];
                                    console.log(arguments[c]), "string" == typeof arguments[c] && arguments[c].indexOf("rssi") >= 0 && (e = "span"), "object" == typeof arguments[c] && (g = JSON.stringify(arguments[c])), d = "<" + e + ' style="color:' + f + ';">' + g + "</" + e + ">", this.logQueue.push(d), this.logQueue.length > this.logQueueLengthLimit && this.logQueue.shift(), b.call(this)
                                }
                    }
                });
            return new e
        }), define("sccomm/Message", ["require", "lavaca/util/Disposable", "./SelectComfortConstants", "./CommunicationHelpers", "./CommunicationLogger", "$"], function(a) {
            function b(a, b) {
                f.log("Message", a, b)
            }
            var c = a("lavaca/util/Disposable"),
                d = a("./SelectComfortConstants"),
                e = a("./CommunicationHelpers"),
                f = a("./CommunicationLogger");
            a("$");
            var g = c.extend(function(a, b, d, f, g, h) {
                c.call(this, arguments), a && a.length > 5 && e.isHex(a) ? this.initFromHex(a) : "undefined" != typeof b && "undefined" != typeof d && "undefined" != typeof f && "undefined" != typeof g && (this.srcNodeClass = a, this.orgNodeClass = a, this.command = b, this.srcID = d, this.dstID = f, this.orgID = d, this.subCommand = g, h instanceof Uint8Array && (this.payload = h), this.generateSendData())
            }, {
                srcNodeClass: "",
                srcID: "",
                dstID: "",
                orgNodeClass: "",
                orgID: "",
                command: "",
                subCommand: "",
                payload: "",
                srcNodeClassHex: "",
                srcIDHex: "",
                dstIDHex: "",
                orgNodeClassHex: "",
                orgIDHex: "",
                commandHex: "",
                subCommandHex: "",
                payloadHex: "",
                base64: [],
                hex: [],
                initFromHex: function(a) {
                    var c = e.hexToRaw(a);
                    if (a.substring(0, 4) === d.kSCMessagePreamble) {
                        var f = a.substring(a.length - 4, a.length),
                            g = e.fletcherChecksumHexToHex(a.substring(4, a.length - 4));
                        if (f !== g) return b.call(this, "Checksum failed, discarding message."), void 0
                    }
                    var h = 15 & c[11];
                    this.srcNodeClass = c[2], this.srcID = c[3] << 8 | c[4], this.dstID = c[5] << 8 | c[6], this.orgNodeClass = c[5], this.orgID = c[8] << 8 | c[9], this.command = c[10], this.subCommand = c[11] >> 4, this.srcNodeClassHex = a.substring(4, 6), this.srcIDHex = a.substring(6, 10), this.dstIDHex = a.substring(10, 14), this.orgNodeClassHex = a.substring(14, 16), this.orgIDHex = a.substring(16, 20), this.commandHex = a.substring(20, 22), this.subCommandHex = a.substring(22, 24), this.payload = new Uint8Array(h);
                    for (var i = 0; h > i; i++) this.payload[i] = c[i + 12];
                    this.payloadHex = e.rawToHex(this.payload)
                },
                toRaw: function() {
                    var a = 0;
                    this.payload && (a = this.payload.length > 15 ? 15 : this.payload.length);
                    var b = new Uint8Array(10 + a);
                    if (b[0] = this.srcNodeClass, b[1] = 255 & this.srcID >> 8, b[2] = 255 & this.srcID, b[3] = 255 & this.dstID >> 8, b[4] = 255 & this.dstID, b[5] = this.orgNodeClass, b[6] = 255 & this.orgID >> 8, b[7] = 255 & this.orgID, b[8] = this.command, this.payload) {
                        b[9] = (15 & this.subCommand) << 4 | 15 & a;
                        for (var c = 0; a > c; c++) b[10 + c] = this.payload[c]
                    } else b[9] = 0 | (15 & this.subCommand) << 4;
                    return b
                },
                toHex: function() {
                    return e.rawToHex(this.toRaw())
                },
                generateSendData: function() {
                    var a = this.toHex(),
                        b = e.fletcherChecksumHexToHex(a),
                        c = d.kSCMessagePreamble + a + b;
                    this.srcNodeClassHex = c.substring(4, 6), this.srcIDHex = c.substring(6, 10), this.dstIDHex = c.substring(10, 14), this.orgNodeClassHex = c.substring(14, 16), this.orgIDHex = c.substring(16, 20), this.commandHex = c.substring(20, 22), this.subCommandHex = c.substring(22, 24), this.payload && (this.payloadHex = e.rawToHex(this.payload));
                    var f;
                    this.base64 = [], this.hex = [], c.length > 40 ? (f = c.substring(0, 40), this.hex.push(f), this.base64.push(e.hexToBase64(f)), f = c.substring(40, c.length), this.hex.push(f), this.base64.push(e.hexToBase64(f))) : (this.hex.push(c), this.base64.push(e.hexToBase64(c)))
                }
            });
            return g
        }), define("sccomm/MessageTranslation", ["require", "lavaca/events/EventDispatcher", "./SelectComfortConstants", "./CommunicationHelpers", "./Message", "mout/array/contains", "./CommunicationLogger", "$"], function(a) {
            function b(a, b) {
                h.log("MessageTranslation", a, b)
            }
            var c = a("lavaca/events/EventDispatcher"),
                d = a("./SelectComfortConstants"),
                e = a("./CommunicationHelpers"),
                f = a("./Message"),
                g = a("mout/array/contains"),
                h = a("./CommunicationLogger");
            a("$");
            var i = c.extend(function() {
                c.call(this, arguments)
            }, {
                orgID: 64341,
                dstID: 1817,
                setWireBind: function(a) {
                    var b = e.hexToRaw(a.payloadHex);
                    return this.orgID = b[8] << 8 | b[9], this.dstID = a.orgID, a
                },
                createNewBoundMessage: function(a, c, d, g) {
                    var h = new f(a, c, this.orgID, this.dstID, d, g);
                    return b.call(this, "Bound Message", e.base64ToHex(h.base64[0])), h
                },
                dataReceived: function(a) {
                    var c = e.arrayBufferToRaw(a),
                        f = e.rawToHex(c);
                    b.call(this, "data received " + f);
                    var g = 15 & c[11],
                        h = g + d.kSCMessageHdrUARTSize;
                    f.substring(0, 4) === d.kSCMessagePreamble && c.length === h ? this.completeDataRecieved(f) : f.substring(0, 4) === d.kSCMessagePreamble ? this.partial = f : (f = this.partial + f, c = e.hexToRaw(f), g = 15 & c[11], h = g + d.kSCMessageHdrUARTSize, f.substring(0, 4) === d.kSCMessagePreamble && c.length === h && this.completeDataRecieved(f))
                },
                completeDataRecieved: function(a) {
                    var c = new f(a);
                    b.call(this, "Retreived Message", c), this.trigger("messageReturned", {
                        message: c
                    })
                },
                messageForWireBind: function() {
                    var a = new f(d.SCNC_MCRProxyController, d.SCDeviceQueryRequest, 0, 0, 0, e.hexToRaw("f1a128a151ecfb55"));
                    return b.call(this, "Wire Bind", e.base64ToHex(a.base64[0])), a
                },
                messageForFactoryReset: function() {
                    var a = this.createNewBoundMessage(d.SCNC_PumpController, d.SCPFactoryResetRequest, 0, null);
                    return a.expectedResponsePayloadLength = d.SCPFactoryResetRequestReplyLength, a
                },
                messageForPumpSetSleepNumber: function(a, b) {
                    var c = this.createNewBoundMessage(d.SCNC_PumpController, d.SCPSetPointChangeRequest, a, e.intToRaw(b));
                    return c.expectedResponsePayloadLength = d.SCPSetPointChangeRequestReplyLength, c
                },
                messageForPumpGetStatus: function() {
                    var a = this.createNewBoundMessage(d.SCNC_PumpController, d.SCPPumpStatusRequest, 0, null);
                    return a.expectedResponsePayloadLength = d.SCPPumpStatusRequestReplyLength, a
                },
                messageDecodeForPumpGetStatus: function(a) {
                    return a.returnObject = {}, a.returnObject.isDualChamber = 1 === a.subCommand, a.returnObject.jobs = a.payload[0], a.returnObject.isActive = 1 === a.payload[0], a.returnObject.rightSide = a.payload[1], a.returnObject.leftSide = a.payload[2], b.call(this, "Pump Status: " + a.returnObject.leftSide + " " + a.returnObject.rightSide), a
                },
                messageForPumpGetJobStatus: function() {
                    var a = this.createNewBoundMessage(d.SCNC_PumpController, d.SCPJobStatusRequest, 0, null);
                    return a.expectedResponsePayloadLength = d.SCPJobStatusRequestReplyLength, a
                },
                messageForPumpGetState: function() {
                    var a = this.createNewBoundMessage(d.SCNC_PumpController, d.SCPPumpStateRequest, 0, null);
                    return a.expectedResponsePayloadLength = d.SCPPumpStateRequestReplyLength, a
                },
                messageDecodeForPumpGetState: function(a) {
                    a.returnObject = {}, a.returnObject.isDualChamber = 1 === a.subCommand, a.returnObject.rightSide = a.payload[1], a.returnObject.leftSide = a.payload[2];
                    var c = e.digitToBinary(a.payload[3]);
                    return a.returnObject.isActive = "1" === c.substring(3, 4), a.returnObject.activeSideID = "1" === c.substring(2, 3) ? 1 : 0, a.returnObject.activeSide = "1" === c.substring(2, 3) ? "left" : "right", a.returnObject.pumpAction = "1" === c.substring(1, 2) ? "deflate" : "inflate", b.call(this, "Pump State: " + a.returnObject.leftSide + " " + a.returnObject.rightSide + " " + a.returnObject.isActive + " " + a.returnObject.activeSide + " " + a.returnObject.pumpAction), a
                },
                messageForPumpSetForceIdle: function() {
                    var a = this.createNewBoundMessage(d.SCNC_PumpController, d.SCForceIdleRequest, 0, null);
                    return a
                },
                messageForPumpGetSideName: function(a) {
                    var b = this.createNewBoundMessage(d.SCNC_PumpController, d.SCNameRequest, a, null);
                    return b
                },
                messageForPumpSetSideName: function(a, b) {
                    var c = this.createNewBoundMessage(d.SCNC_PumpController, d.SCNameRequest, a + 1, e.stringToBytes(b));
                    return c
                },
                messageForPumpGetMemory: function() {
                    var a = this.createNewBoundMessage(d.SCNC_PumpController, d.SCPMemoryValueRecallRequest, 0, null);
                    return a.expectedResponsePayloadLength = d.SCPMemoryValueRecallRequestReplyLength, a
                },
                messageDecodeForPumpGetMemory: function(a) {
                    return a.returnObject = {}, a.returnObject.rightSide = a.payload[0], a.returnObject.leftSide = a.payload[1], a
                },
                messageForPumpSetMemory: function(a, b) {
                    var c = new Uint8Array(1);
                    c[0] = b;
                    var e = this.createNewBoundMessage(d.SCNC_PumpController, d.SCPMemoryValueChangeRequest, a, c);
                    return e.expectedResponsePayloadLength = d.SCPMemoryValueChangeRequestReplyLength, e
                },
                messageForPumpGetSoftwareVersion: function() {
                    var a = this.createNewBoundMessage(d.SCNC_PumpController, d.SCSoftwareRevisionRequest, 0, null);
                    return a
                },
                messageDecodeForPumpGetSoftwareVersion: function(a) {
                    return a.returnObject = {}, a.returnObject.deviceID = a.payloadHex.substr(0, 16), a.returnObject.versionNumber = a.payloadHex.substr(16, 8), a.returnObject.radioRevision = Number(a.payloadHex.substr(24, a.payloadHex.length)), a
                },
                messageForPumpGetChamberType: function() {
                    var a = this.createNewBoundMessage(d.SCNC_PumpController, d.SCPChamberTypeRequest, 2, null);
                    return a
                },
                messageDecodeForPumpGetChamberType: function(a) {
                    return a.returnObject = {}, a.returnObject.isRightChamber = 0 !== a.payload[0], a.returnObject.rightChamberType = a.payload[1], a.returnObject.isLeftChamber = 0 !== a.payload[2], a.returnObject.leftChamberType = a.payload[3], a.returnObject.isK2 = 2 === a.payload[1] || 2 === a.payload[3], a.returnObject.isK1 = (1 === a.payload[1] || 1 === a.payload[3]) && !a.returnObject.isK2, a.returnObject.isAdult = !a.returnObject.isK1 && !a.returnObject.isK2, a
                },
                messageForPumpSetLEDOverride: function(a) {
                    var b = this.createNewBoundMessage(d.SCNC_PumpController, d.SCPLEDOverride, a, null);
                    return b.expectedResponsePayloadLength = d.SCPLEDOverrideReplyLength, b.checkForZeroSubCommand = !0, b
                },
                messageForProxyGetNodeList: function() {
                    var a = this.createNewBoundMessage(d.SCNC_MCRProxyController, d.SCMPStatusRequest, 0, null);
                    return a
                },
                messageDecodeForProxyGetNodeList: function(a) {
                    return a.returnObject = {}, a.returnObject.hasPump = e.isHexContainedInRaw(d.SCNC_PumpDevice, a.payload), a.returnObject.hasFoundation = e.isHexContainedInRaw(d.SCNC_FoundationDevice, a.payload), a.returnObject.hasSleepExpert = e.isHexContainedInRaw(d.SCNC_SleepExpertDevice, a.payload), a.returnObject.hasTemperatureEngine = e.isHexContainedInRaw(d.TemperatureEngineDevice, a.payload), a.returnObject.hasProxy = e.isHexContainedInRaw(d.SCNC_MCRProxyDevice, a.payload), a.returnObject.hasBridge = e.isHexContainedInRaw(d.SCNC_BridgeDevice, a.payload), a
                },
                messageForSetAddNode: function() {
                    var a = this.createNewBoundMessage(d.SCNC_MCRProxyController, d.SCMPChangeDeviceList, 0, null);
                    return a.expectedResponsePayloadLength = d.SCMPChangeDeviceListReplyLength, a
                },
                messageForSetRemoveNode: function() {
                    var a = this.createNewBoundMessage(d.SCNC_MCRProxyController, d.SCMPChangeDeviceList, 1, null);
                    return a.expectedResponsePayloadLength = d.SCMPChangeDeviceListReplyLength, a
                },
                messageForFoundationSetAdjustment: function(a) {
                    var b = new Uint8Array([50, 0, 50, 0, 255, 255, 255, 255, 255, 255, 255, 255]),
                        c = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFAdjustmentChangeRequest, a || 0, b);
                    return c.expectedResponsePayloadLength = d.SCFAdjustmentChangeRequestReplyLength, c
                },
                messageForFoundationGetSystemStatus: function() {
                    var a = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFSystemStatusRequest, 0, null);
                    return a.expectedResponsePayloadLength = d.SCFSystemStatusRequestReplyLength, a
                },
                messageDecodeForFoundationGetSystemStatus: function(a) {
                    return a.returnObject = {}, a.returnObject.hasSplit = 0 !== a.payload[0], a.returnObject.hasDualBoard = "1" === e.digitToBinary(a.payload[3]).substring(3, 4), a.returnObject.hasMassageAndLighting = "1" === e.digitToBinary(a.payload[3]).substring(2, 3), a.returnObject.hasFootControl = "1" === e.digitToBinary(a.payload[3]).substring(1, 2), a
                },
                messageForFoundationSetPreset: function(a, b, c) {
                    var e = new Uint8Array(2);
                    e[0] = b, e[1] = 1 === c ? 1 : 0;
                    var f = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFActivatePresetRequest, a || 0, e);
                    return f.expectedResponsePayloadLength = d.SCFActivatePresetRequestReplyLength, f.checkForZeroSubCommand = !0, f
                },
                messageForFoundationStorePreset: function(a, b) {
                    var c = new Uint8Array(1);
                    c[0] = b;
                    var e = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFStorePresetRequest, a || 0, c);
                    return e.expectedResponsePayloadLength = d.SCFStorePresetRequestReplyLength, e
                },
                messageForFoundationReadPreset: function(a, b) {
                    var c = new Uint8Array(1);
                    c[0] = b;
                    var e = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFReadPresetRequest, a || 0, c);
                    return e.expectedResponsePayloadLength = d.SCFReadPresetRequestReplyLength, e
                },
                messageForFoundationResetPreset: function(a, b) {
                    var c = new Uint8Array(1);
                    c[0] = b;
                    var e = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFResetPresetRequest, a || 0, c);
                    return e.expectedResponsePayloadLength = d.SCFResetPresetRequestReplyLength, e
                },
                messageForFoundationGetAdjustment: function() {
                    var a = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFAdjustmentStatusRequest, 0, null);
                    return a.expectedResponsePayloadLength = d.SCFAdjustmentStatusRequestReplyLength, a
                },
                messageDecodeForFoundationGetAdjustment: function(a) {
                    return a.returnObject = {}, a.returnObject.state = a.payload[0], a.returnObject.headPosition = [a.payload[1], a.payload[2]], a.returnObject.footPosition = [a.payload[3], a.payload[4]], a.returnObject.presetCurrent = [Number(15 & a.payload[14] >> 4), Number(15 & a.payload[14])], a
                },
                messageForFoundationSetMotionHalt: function(a, b, c, e) {
                    var f = new Uint8Array(3);
                    f[0] = b ? 1 : 255, f[1] = c ? 1 : 255, f[2] = e ? 1 : 255;
                    var g = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFMotionHalt, a, f);
                    return g.expectedResponsePayloadLength = d.SCFMotionHaltReplyLength, g
                },
                messageForFoundationSetLight: function(a, b, c) {
                    var e = new Uint8Array(3);
                    e[0] = b, e[1] = 255 & c, e[2] = c >> 8;
                    var f = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFOutletChangeRequest, a || 4, e);
                    return f.expectedResponsePayloadLength = d.SCFOutletChangeRequestReplyLength, f.checkForZeroSubCommand = !0, f
                },
                messageForFoundationGetLight: function(a) {
                    var b = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFOutletStatusRequest, a || 4, null);
                    return b.expectedResponsePayloadLength = d.SCFOutletStatusRequestReplyLength, b
                },
                messageDecodeForFoundationGetLight: function(a) {
                    return a.returnObject = {}, a.returnObject.isOn = Number(a.payload[0]) >= 1, a.returnObject.timeout = Number("" + a.payload[1] + a.payload[2]), a
                },
                messageForFoundationSetForceIdle: function() {
                    var a = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCForceIdleRequest, 0, null);
                    return a
                },
                messageForFoundationGetSoftwareVersion: function() {
                    var a = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCSoftwareRevisionRequest, 0, null);
                    return a
                },
                messageDecodeForFoundationGetSoftwareVersion: function(a) {
                    return a.returnObject = {}, a.returnObject.deviceID = a.payloadHex.substr(0, 16), a.returnObject.versionNumber = a.payloadHex.substr(16, 8), a.returnObject.radioRevision = Number(a.payloadHex.substr(24, a.payloadHex.length)), a
                },
                messageForFoundationGetMassage: function(a) {
                    var b = this.createNewBoundMessage(d.SCNC_FoundationController, d.SCFMassageStatusRequest, a, null);
                    return b.expectedResponsePayloadLength = d.SCFMassageStatusRequestReplyLength, b
                },
                messageDecodeForFoundationGetMassage: function(a) {
                    return a.returnObject = {}, a.returnObject.headMassageStatus = Number(a.payload[1]), a.returnObject.footMassageStatus = Number(a.payload[2]), a.returnObject.waveMassageStatus = Number(a.payload[3]), a
                },
                messageForOutletGetCachedStatus: function() {
                    var a = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOStatusRequest, 0, null);
                    return a
                },
                messageDecodeForOutletGetCachedStatus: function(a) {
                    a.returnObject = {}, a.returnObject.outletArray = [];
                    for (var c, d, f, g, h = 0; h < a.payload.length; h++) d = e.intToRaw(a.payload[h]), f = e.rawToHex(d), c = e.hexToBinary(f, 8), g = {
                        isOn120: "1" === c.substring(c.length - 1, c.length - 0),
                        isOn12: "1" === c.substring(c.length - 2, c.length - 1),
                        isUpdateRequested: "1" === c.substring(c.length - 3, c.length - 2),
                        isUnused: "1" === c.substring(c.length - 4, c.length - 3),
                        isNotInUse: "1" === c.substring(c.length - 5, c.length - 4)
                    }, a.returnObject.outletArray[h] = g;
                    return b.call(this, "Outlet Cached Status: " + JSON.stringify(a.returnObject.outletArray)), a
                },
                messageForOutletSetRequestStatus: function(a) {
                    var b = null;
                    if (a && a.length > 0) {
                        b = new Uint8Array(a.length);
                        for (var c = 0; c < a.length; c++) b[c] = a[c]
                    }
                    var e = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOStatusRequest, 0, b);
                    return e
                },
                messageDecodeForOutletSetRequestStatus: function(a) {
                    a.returnObject = {}, a.returnObject.outletArray = [];
                    for (var c, d, f, g, h = 0; h < a.payload.length; h++) d = e.intToRaw(a.payload[h]), f = e.rawToHex(d), c = e.hexToBinary(f, 8), g = {
                        isOn120: "1" === c.substring(c.length - 1, c.length - 0),
                        isOn12: "1" === c.substring(c.length - 2, c.length - 1),
                        isUpdateRequested: "1" === c.substring(c.length - 3, c.length - 2),
                        isUnused: "1" === c.substring(c.length - 4, c.length - 3),
                        isNotInUse: "1" === c.substring(c.length - 5, c.length - 4)
                    }, a.returnObject.outletArray[h] = g;
                    return b.call(this, "Outlet Status: " + JSON.stringify(a.returnObject.outletArray)), a
                },
                messageForOutletSetOutlet: function(a, b, c) {
                    var e = new Uint8Array(3);
                    e[0] = b ? 1 : 0, e[1] = c ? 1 : 0, e[2] = 255;
                    var f = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOChangeRequest, a, e);
                    return f.expectedResponsePayloadLength = d.SCOChangeRequestReplyLength, f
                },
                messageForOutletSetOutlet120: function(a, b) {
                    var c = new Uint8Array(3);
                    c[0] = b ? 1 : 0, c[1] = 255, c[2] = 255;
                    var e = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOChangeRequest, a, c);
                    return e.expectedResponsePayloadLength = d.SCOChangeRequestReplyLength, e
                },
                messageForOutletSetOutlet12: function(a, b) {
                    var c = new Uint8Array(3);
                    c[0] = 255, c[1] = b ? 1 : 0, c[2] = 255;
                    var e = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOChangeRequest, a, c);
                    return e.expectedResponsePayloadLength = d.SCOChangeRequestReplyLength, e
                },
                messageDecodeForOutletSetOutlet: function(a) {
                    return a.returnObject = {}, a
                },
                messageForOutletSetAddOutlet: function(a, b) {
                    var c = null,
                        f = 1;
                    c = new Uint8Array(7), c[0] = Number(a);
                    var g = b || "";
                    g = g.replaceAll(":", "");
                    var h = e.hexToRaw(g);
                    6 == h.length && (c[1] = h[0], c[2] = h[1], c[3] = h[2], c[4] = h[3], c[5] = h[4], c[6] = h[5]);
                    var i = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOAddRemoveRequest, f, c);
                    return i
                },
                messageDecodeForOutletSetAddOutlet: function(a) {
                    return a.returnObject = {}, a.returnObject.which = a.payload[0], a
                },
                messageForOutletSetRemoveOutlet: function(a) {
                    var b = null,
                        c = 2;
                    b = new Uint8Array(1), b[0] = Number(a);
                    var e = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOAddRemoveRequest, c, b);
                    return e
                },
                messageDecodeForOutletSetRemoveOutlet: function(a) {
                    return a.returnObject = {}, a.returnObject.which = a.payload[0], a
                },
                messageForOutletGetOutlet: function(a) {
                    var b = null,
                        c = 0;
                    b = new Uint8Array(1), b[0] = Number(a);
                    var e = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOAddRemoveRequest, c, b);
                    return e.expectedResponsePayloadLength = 7, e
                },
                messageDecodeForOutletGetOutlet: function(a) {
                    return a.returnObject = {}, a.returnObject.which = a.payload[0], a
                },
                messageForOutletGetName: function(a) {
                    var b = 0,
                        c = Number(a),
                        e = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOGetSetName, c, b);
                    return e
                },
                messageDecodeForOutletGetName: function(a) {
                    return a.returnObject = {}, a.returnObject.name = e.bytesToString(a.payload), a
                },
                messageForOutletSetName: function(a, b) {
                    var c = e.stringToBytes(b),
                        f = Number(a),
                        g = this.createNewBoundMessage(d.SCNC_OutletController, d.SCOGetSetName, f, c);
                    return g
                },
                messageDecodeForOutletSetName: function(a) {
                    return a.returnObject = {}, a
                },
                messageForOutletGetSenseAndDoStatus: function() {
                    var a = this.createNewBoundMessage(d.SCNC_SenseAndDoController, d.SCOSenseAndDoStatusRequest, 0, null);
                    return a.expectedResponsePayloadLength = d.SCOSenseAndDoStatusRequestReplyLength, a
                },
                messageDecodeForOutletGetSenseAndDoStatus: function(a) {
                    return a.returnObject = {}, a.returnObject.isGlobalConfiguration = 0 === a.payload[0], a.returnObject.isSmartOutletConfiguration = 0 === a.payload[1], a
                },
                messageForOutletSetSenseAndDoConfigure: function(a, b) {
                    var c = new Uint8Array(2);
                    c[0] = 1 == a ? 1 : 0, c[1] = b ? 0 : 1;
                    var e = this.createNewBoundMessage(d.SCNC_SenseAndDoController, d.SCOSenseAndDoConfigureRequest, 0, c);
                    return e.expectedResponsePayloadLength = d.SCOSenseAndDoConfigureRequestReplyLength, e
                },
                messageForGetKeyedValueShort: function(a) {
                    var b = this.createNewBoundMessage(d.SCNC_SleepExpertController, d.SCSEShortReadRequest, 0, e.stringToBytes(a));
                    return b
                },
                messageForGetKeyedValueLong: function(a) {
                    var b = this.createNewBoundMessage(d.SCNC_SleepExpertController, d.SCSELongRequest, 2, e.stringToBytes(a));
                    return b.expectedResponsePayloadLength = 8, b.isLong = !0, b
                },
                messageForGetKeyedValueLongChunk: function(a) {
                    var b = this.createNewBoundMessage(d.SCNC_SleepExpertController, d.SCSELongRequest, a, null);
                    return b
                },
                messageDecodeForGetKeyedValueLong: function(a) {
                    if (a.returnObject = {}, 8 === a.payload.length) {
                        var c = "" + a.payload[0] + a.payload[1] + a.payload[2] + a.payload[3],
                            d = "" + a.payload[4] + a.payload[5] + a.payload[6] + a.payload[7];
                        a.returnObject.crc = parseInt(c, 10), a.returnObject.remaining = parseInt(d, 10), b.call(this, "crc:" + c + " remaining:" + d)
                    }
                    return a
                },
                messageForGetKeyedValue: function(a) {
                    return g(d.SleepExpertLongKeys, a) ? this.messageForGetKeyedValueLong(a) : this.messageForGetKeyedValueShort(a)
                },
                messageForSetKeyedValueShort: function(a, b) {
                    var c;
                    b instanceof Uint8Array && (c = b), "string" == typeof b && (c = e.stringToBytes(b));
                    var f = this.createNewBoundMessage(d.SCNC_SleepExpertController, d.SCSEShortWriteRequest, 0, c);
                    return f.expectedResponsePayloadLength = 0, f
                },
                messageForSetKeyedValueLong: function(a, b) {
                    var c = b.length,
                        f = e.crc32(b),
                        g = e.stringToBytes(a),
                        h = new Uint8Array(12);
                    h[0] = g[0], h[1] = g[1], h[2] = g[2], h[3] = g[3], h[4] = 255 & f >> 24, h[5] = 255 & f >> 16, h[6] = 255 & f >> 8, h[7] = 255 & f, h[8] = 255 & c >> 24, h[9] = 255 & c >> 16, h[10] = 255 & c >> 8, h[11] = 255 & c;
                    var i = this.createNewBoundMessage(d.SCNC_SleepExpertController, d.SCSELongRequest, 1, h);
                    return i.expectedResponsePayloadLength = 0, i.isLong = !0, i
                },
                messageForSetKeyedValueLongChunk: function(a, b) {
                    var c = this.createNewBoundMessage(d.SCNC_SleepExpertController, d.SCSELongRequest, a, e.stringToBytes(b));
                    return c.expectedResponsePayloadLength = 0, c
                },
                messageDecodeForSetKeyedValueLong: function(a) {
                    if (a.returnObject = {}, 8 === a.payload.length) {
                        var c = "" + a.payload[0] + a.payload[1] + a.payload[2] + a.payload[3],
                            d = "" + a.payload[4] + a.payload[5] + a.payload[6] + a.payload[7];
                        a.returnObject.crc = parseInt(c, 10), a.returnObject.remaining = parseInt(d, 10), b.call(this, "crc:" + c + " remaining:" + d)
                    }
                    return a
                },
                messageForSetKeyedValue: function(a, b) {
                    return b.length > 12 ? this.messageForSetKeyedValueLong(a, b) : this.messageForSetKeyedValueShort(a, b)
                },
                messageDecodeForExpertGetSystemStatus: function(a) {
                    if (a.returnObject = {}, a.payload.length >= 3) {
                        switch (a.returnObject.errorString = "", a.returnObject.wifiStatusKey = parseInt(a.payload[0], 10), a.returnObject.wifiStatusKey) {
                            case 0:
                                a.returnObject.wifiStatusValue = "Wifi Status Unknown";
                                break;
                            case 1:
                                a.returnObject.wifiStatusValue = "Wifi Associated";
                                break;
                            case 2:
                                a.returnObject.wifiStatusValue = "Wifi Associated, but weak signal";
                                break;
                            case 3:
                                a.returnObject.wifiStatusValue = "Could not find Wifi network";
                                break;
                            case 4:
                                a.returnObject.wifiStatusValue = "Invalid Wifi password";
                                break;
                            case 5:
                                a.returnObject.wifiStatusValue = "Wifi Weak Signal";
                                break;
                            case 6:
                                a.returnObject.wifiStatusValue = "Ethernet Connected";
                                break;
                            default:
                                a.returnObject.wifiStatusValue = "Wifi Status Unknown"
                        }
                        switch (a.returnObject.isWifiConnected = 1 === a.returnObject.wifiStatusKey || 2 === a.returnObject.wifiStatusKey || 5 === a.returnObject.wifiStatusKey || 6 === a.returnObject.wifiStatusKey, a.returnObject.isWifiConnected || (a.returnObject.errorString = a.returnObject.wifiStatusValue), a.returnObject.internetStatusKey = parseInt(a.payload[1], 10), a.returnObject.internetStatusKey) {
                            case 0:
                                a.returnObject.internetStatusValue = "Internet Status Unknown";
                                break;
                            case 1:
                                a.returnObject.internetStatusValue = "Internet Connected";
                                break;
                            case 2:
                                a.returnObject.internetStatusValue = "Unable to Connect the Internet";
                                break;
                            case 3:
                                a.returnObject.internetStatusValue = "Unable to Connect the Internet";
                                break;
                            default:
                                a.returnObject.internetStatusValue = "Internet Status Unknown"
                        }
                        switch (a.returnObject.isInternetConnected = 1 === a.returnObject.internetStatusKey, a.returnObject.isWifiConnected && !a.returnObject.isInternetConnected && (a.returnObject.errorString = a.returnObject.internetStatusValue), a.returnObject.serverStatusKey = parseInt(a.payload[2], 10), a.returnObject.serverStatusKey) {
                            case 0:
                                a.returnObject.serverStatusValue = "SleepIQ Server Status Unknown";
                                break;
                            case 1:
                                a.returnObject.serverStatusValue = "Connected to Server";
                                break;
                            case 2:
                                a.returnObject.serverStatusValue = "Unable to connect to SleepIQ Server";
                                break;
                            case 3:
                                a.returnObject.serverStatusValue = "Unable to connect to SleepIQ Server";
                                break;
                            case 4:
                                a.returnObject.serverStatusValue = "Unable to connect to SleepIQ Server";
                                break;
                            default:
                                a.returnObject.serverStatusValue = "SleepIQ Server Status Unknown"
                        }
                        a.returnObject.isServerConnected = 1 === a.returnObject.serverStatusKey, a.returnObject.isWifiConnected && a.returnObject.isInternetConnected && !a.returnObject.isServerConnected && (a.returnObject.errorString = "Server Status Returned: " + a.returnObject.serverStatusValue), a.returnObject.hasReceivedSignificantError = 4 === a.returnObject.wifiStatusKey || 3 === a.returnObject.internetStatusKey || 3 === a.returnObject.serverStatusKey || 4 === a.returnObject.serverStatusKey
                    }
                    return a
                }
            });
            return new i
        }), define("sccomm/PromiseToRetry", ["require", "$"], function(a) {
            var b = a("$");
            return function(a, c, d, e) {
                var f = b.Deferred(),
                    g = 0,
                    h = function() {
                        c.apply(a, arguments).then(function() {
                            f.resolve.apply(this, arguments)
                        }.bind(this), function() {
                            g >= e ? f.reject.apply(this, arguments) : (g++, h.apply(this, d))
                        }.bind(this)).progress(function() {
                            f.notify.apply(this, arguments)
                        })
                    };
                return h.apply(this, d), f
            }
        }), define("sccomm/MessageQueue", ["require", "lavaca/events/EventDispatcher", "./MessageTranslation", "./SelectComfortConstants", "./CommunicationHelpers", "./ConnectedDeviceStateModel", "./CommunicationLogger", "./PromiseToRetry", "$", "moment"], function(a) {
            function b() {
                this.responseQueueID++, this.responseQueueID > 50 && (this.responseQueueID = 1)
            }

            function c() {
                this.streamQueueID++, this.streamQueueID > 50 && (this.streamQueueID = 1)
            }

            function d() {
                this.inProcess = !1, this.responseQueue[this.currentResponseQueueID].responseTimeoutID && clearTimeout(this.responseQueue[this.currentResponseQueueID].responseTimeoutID), setTimeout(function() {
                    h.call(this)
                }.bind(this), n.call(this))
            }

            function e() {
                this.streamInProcess = !1
            }

            function f(a, b) {
                o.call(this, "Failed Stream", b), this.streamQueue[a].returnPromise.reject(b), this.streamQueue[a].message = null, e.call(this)
            }

            function g(a) {
                o.call(this, "Failed Response", a), this.responseQueue[this.currentResponseQueueID].returnPromise.reject(a), this.responseQueue[this.currentResponseQueueID].message = null, d.call(this)
            }

            function h() {
                if (this.queue.length > 0) {
                    this.lastSendDate = new Date, this.inProcess = !0, o.call(this, "Process Queue");
                    var a = this.queue.shift();
                    i.call(this, a)
                }
            }

            function i(a) {
                a.sendDate = new Date, this.currentResponseQueueID = a.responseQueueID, t.get("isConnected") || g.call(this, "Not Connected"), o.call(this, "sendCommand:" + a.commandHex);
                var b = t.get("address");
                o.call(this, "Send Part 1"), window.bluetoothle.writeCharacteristicValue(b, r.SERVICE, r.CHARACTERISTIC_RX, s.hexToRaw(a.hex[0]).buffer).then(function() {
                    o.call(this, "Send Part 1 Success")
                }.bind(this), function() {
                    g.call(this, "Failed to Send")
                }.bind(this)), a.base64.length > 1 && (o.call(this, "Send Part 2"), setTimeout(function() {
                    var b = t.get("address");
                    window.bluetoothle.writeCharacteristicValue(b, r.SERVICE, r.CHARACTERISTIC_RX, s.hexToRaw(a.hex[1]).buffer).then(function() {
                        o.call(this, "Send Part 2 Success")
                    }.bind(this), function() {
                        g.call(this, "Failed to Send Second Part")
                    }.bind(this))
                }.bind(this), r.kSCMessageSegmentGap)), this.responseQueue[this.currentResponseQueueID].responseTimeoutID = setTimeout(function() {
                    o.call(this, "Should we timeout?"), this.responseQueue && this.currentResponseQueueID && this.responseQueue[this.currentResponseQueueID] && this.responseQueue[this.currentResponseQueueID].message && this.responseQueue[this.currentResponseQueueID].returnPromise && (g.call(this, "Timeout"), console.warn("messageTimeout"))
                }.bind(this), m.call(this))
            }

            function j(a) {
                o.call(this, "subscribe response", a);
                var b = a.message || {},
                    c = this.responseQueue[this.currentResponseQueueID].message || {},
                    e = c.command + 128 === b.command || 0 === c.command,
                    f = "number" == typeof c.expectedResponsePayloadLength && b.payload.length === c.expectedResponsePayloadLength || "number" != typeof c.expectedResponsePayloadLength,
                    h = !c.checkForZeroSubCommand || c.checkForZeroSubCommand && 0 === b.subCommand;
                o.call(this, "returnedSendCommand:" + c.commandHex + " - replyCommand:" + b.commandHex), e && f && h ? (b.sendDate = c.sendDate, b.successReplyDate = new Date, b.timeTaken = x().diff(b.sendDate), o.call(this, "timeTaken: " + b.timeTaken), this.responseQueue[this.currentResponseQueueID].returnPromise.resolve(b), this.responseQueue[this.currentResponseQueueID].message = null, d.call(this)) : g.call(this, "Invalid Response: length-" + f + " reply-" + e)
            }

            function k(a, b, c, d) {
                var g = q.messageForGetKeyedValueLongChunk(d);
                this.send(g).then(function(f) {
                    if (this.streamQueue[a].dataStream += f.payloadHex, c -= f.payload.length, 15 === f.payload.length) {
                        var g = d + 1;
                        g > 14 && (g = 12), k.call(this, a, b, c, g)
                    } else {
                        var h = atob(s.hexToBase64(this.streamQueue[a].dataStream));
                        o.call(this, h), this.streamQueue[a].returnPromise.resolve(h), e.call(this)
                    }
                }.bind(this), function(b) {
                    o.call(this, "Lost a packet"), f.call(this, a, b)
                }.bind(this))
            }

            function l(a, b) {
                var c = this.streamQueue[a].dataStream.substring(0, 15);
                o.call(this, "chunk: " + c);
                var d = q.messageForSetKeyedValueLongChunk(b, c);
                this.send(d).then(function() {
                    if (15 === c.length) {
                        this.streamQueue[a].dataStream = this.streamQueue[a].dataStream.substring(15, this.streamQueue[a].dataStream.length);
                        var d = b + 1;
                        d > 11 && (d = 9), l.call(this, a, d)
                    } else o.call(this, "stream send done"), this.streamQueue[a].returnPromise.resolve(), e.call(this)
                }.bind(this), function(b) {
                    o.call(this, "Lost a packet"), f.call(this, a, b)
                }.bind(this))
            }

            function m() {
                var a = Modernizr.android ? r.kSCMessageLongTimeout : r.kSCMessageShortTimeout;
                return Modernizr.android && this.streamInProcess && (a = r.kSCMessageExtraLongTimeout), a
            }

            function n() {
                return Modernizr.android ? r.messageGapLong : r.messageGap
            }

            function o(a, b) {
                u.log("MessageQueue", a, b)
            }
            var p = a("lavaca/events/EventDispatcher"),
                q = a("./MessageTranslation"),
                r = a("./SelectComfortConstants"),
                s = a("./CommunicationHelpers"),
                t = a("./ConnectedDeviceStateModel"),
                u = a("./CommunicationLogger"),
                v = a("./PromiseToRetry"),
                w = a("$"),
                x = a("moment"),
                y = p.extend(function() {
                    p.call(this, arguments), this.queue = [], this.lastSendDate = new Date, this.responseQueueID = 1, this.responseQueue = [], this.inProcess = !1, this.streamQueueID = 1, this.streamQueue = [], q.on("messageReturned", j.bind(this))
                }, {
                    send: function(a) {
                        var c = this.responseQueueID;
                        return a.responseQueueID = c, this.responseQueue[c] = {
                            returnPromise: w.Deferred(),
                            message: a
                        }, o.call(this, "Send Message", a), this.queue.push(a), this.inProcess || h.call(this), b.call(this), this.responseQueue[c].returnPromise
                    },
                    getKey: function(a) {
                        if (a.isLong) {
                            this.streamInProcess = !0;
                            var b = this.streamQueueID;
                            return this.streamQueue[b] = {
                                returnPromise: w.Deferred(),
                                dataStream: ""
                            }, this.send(a).then(function(a) {
                                var c = q.messageDecodeForGetKeyedValueLong(a);
                                this.streamQueue[b].message = c, k.call(this, b, c.returnObject.crc, c.returnObject.remaining, 12)
                            }.bind(this), function(a) {
                                f.call(this, b, a)
                            }.bind(this)), c.call(this), this.streamQueue[b].returnPromise
                        }
                        return r.shouldRetryCalls ? v(this, this.send, [a], r.shouldRetryCount) : this.send(a)
                    },
                    setKey: function(a, b) {
                        if (a.isLong) {
                            this.streamInProcess = !0;
                            var d = this.streamQueueID;
                            return this.streamQueue[d] = {
                                returnPromise: w.Deferred(),
                                dataStream: b
                            }, this.send(a).then(function() {
                                l.call(this, d, 9)
                            }.bind(this), function(a) {
                                f.call(this, d, a)
                            }.bind(this)), c.call(this), this.streamQueue[d].returnPromise
                        }
                        return r.shouldRetryCalls ? v(this, this.send, [a], r.shouldRetryCount) : this.send(a)
                    },
                    dispose: function() {
                        return p.prototype.dispose.apply(this, arguments)
                    }
                });
            return new y
        }), define("mout/array/sort", [], function() {
            function a(d, e) {
                if (null == d) return [];
                if (d.length < 2) return d;
                null == e && (e = b);
                var f, g, h;
                return f = ~~(d.length / 2), g = a(d.slice(0, f), e), h = a(d.slice(f, d.length), e), c(g, h, e)
            }

            function b(a, b) {
                return b > a ? -1 : a > b ? 1 : 0
            }

            function c(a, b, c) {
                for (var d = []; a.length && b.length;) c(a[0], b[0]) <= 0 ? d.push(a.shift()) : d.push(b.shift());
                return a.length && d.push.apply(d, a), b.length && d.push.apply(d, b), d
            }
            return a
        }), define("sccomm/DeviceCommunication", ["require", "lavaca/events/EventDispatcher", "./MessageTranslation", "./MessageQueue", "./ConnectedDeviceStateModel", "./CommunicationHelpers", "./SelectComfortConstants", "./CommunicationLogger", "./CapabilitiesModel", "./PromiseToRetry", "moment", "mout/array/sort", "$"], function(a) {
            function b(a) {
                D.call(this, "Characteristic callback", a), F.dataReceived(a.value)
            }

            function c() {
                var a = H.get("capabilities").toObject() || {};
                return a.hasFoundation
            }

            function d() {
                var a = H.get("capabilities").toObject() || {};
                return a.isAdult
            }

            function e() {
                var a = P.Deferred();
                return a.resolve(), a
            }

            function f() {
                var a = P.Deferred(),
                    b = H.get("capabilities"),
                    c = b.get("outletArray") || [],
                    d = [];
                if (0 === c.length) return a.resolve(d), a;
                for (var f = 0; f < c.length; f++) c[f].isNotInUse || (d[f] = {}, d[f].isOn120 = c[f].isOn120, d[f].isOn12 = c[f].isOn12);
                return d.length > 0 ? this.outletGetName(0).then(function(a) {
                    return a && a.returnObject && (d[0].name = a.returnObject.name), d.length > 1 ? this.outletGetName(1) : e.call(this)
                }.bind(this), function() {
                    return a.reject(), a
                }.bind(this)).then(function(a) {
                    return a && a.returnObject && (d[1].name = a.returnObject.name), d.length > 2 ? this.outletGetName(2) : e.call(this)
                }.bind(this), function() {
                    return a.reject(), a
                }.bind(this)).then(function(a) {
                    return a && a.returnObject && (d[2].name = a.returnObject.name), d.length > 3 ? this.outletGetName(3) : e.call(this)
                }.bind(this), function() {
                    return a.reject(), a
                }.bind(this)).then(function(a) {
                    return a && a.returnObject && (d[3].name = a.returnObject.name), d.length > 4 ? this.outletGetName(4) : e.call(this)
                }.bind(this), function() {
                    return a.reject(), a
                }.bind(this)).then(function(b) {
                    b && b.returnObject && (d[4].name = b.returnObject.name), a.resolve(d)
                }.bind(this), function() {
                    return a.reject(), a
                }.bind(this)) : a.resolve(d), a
            }

            function g(a) {
                function b(b) {
                    var e = H.get("macAddress");
                    I.containsMacAddress(e, b.name) && (d = !0, b = z.call(this, b), D.call(this, "Found device checking capabilities: " + JSON.stringify(b.capabilities)), b.capabilities.outletArray && b.capabilities.outletArray[a] ? b.capabilities.outletArray[a].isUpdateRequested ? (D.call(this, "Still Waiting for Update"), c.reject("Still Waiting for Update")) : b.capabilities.outletArray[a].isUpdateRequested || b.capabilities.outletArray[a].isNotInUse ? (D.call(this, "Not Setup Properly"), c.reject("Not Setup Properly")) : c.resolve() : (D.call(this, "ManufacturerData Decode Error"), c.reject("ManufacturerData Decode Error")), window.bluetoothle.stopDiscovery(), window.bluetoothle.off("deviceAdded"), c.resolve())
                }
                var c = P.Deferred(),
                    d = !1;
                return window.bluetoothle ? (window.bluetoothle.on("deviceAdded", b), window.bluetoothle.startDiscovery(), setTimeout(function() {
                    if (window.bluetoothle.stopDiscovery(), window.bluetoothle.off("deviceAdded"), !d) {
                        var a = H.get("macAddress");
                        D.call(this, "Device " + a + " not found"), c.reject("Device " + a + " not found")
                    }
                }.bind(this), J.ScanTime), c) : (c.reject(), c)
            }

            function h(a) {
                function b() {
                    return clearTimeout(e), clearInterval(f), d.resolve(), d
                }

                function c() {
                    return D.call(this, "Timeout Reached"), clearTimeout(e), clearInterval(f), d.reject("Timeout Reached"), d
                }
                var d = P.Deferred();
                if (!window.bluetoothle) return d.reject("No Connection"), d;
                var e = setTimeout(function() {
                        c.call(this)
                    }.bind(this), J.OutletBitUpdateTimout),
                    f = setInterval(function() {
                        g.call(this, a).then(function() {
                            b.call(this)
                        }.bind(this), function() {}.bind(this))
                    }.bind(this), J.OutletBitUpdateInterval);
                return d
            }

            function i(a, b) {
                var c = P.Deferred();
                return j.call(this, a).then(function(a) {
                    b && (a = b(a)), c.resolve(a)
                }.bind(this), function(a) {
                    c.reject(a)
                }.bind(this)), c
            }

            function j(a) {
                var b = P.Deferred();
                return "opened" == this.currentState || J.shouldOpenBeforeCalls ? J.shouldOpenBeforeCalls ? (this.open().then(function() {
                    return G.send(a)
                }.bind(this), function() {
                    b.reject("No Connection")
                }.bind(this)), b) : J.shouldRetryCalls ? M(G, G.send, [a], J.shouldRetryCount) : G.send(a) : (b.reject(), b)
            }

            function k(a) {
                var b = P.Deferred();
                return window.bluetoothle ? (window.bluetoothle.connect(a).then(function() {
                    b.resolve()
                }.bind(this), function() {
                    b.reject()
                }.bind(this)), b) : (b.resolve(), b)
            }

            function l(a) {
                var b = P.Deferred();
                return window.bluetoothle ? (window.bluetoothle.startCharacteristicNotifications(a, J.SERVICE, J.CHARACTERISTIC_TX).then(function() {
                    b.resolve()
                }.bind(this), function() {
                    b.reject()
                }.bind(this)), b) : (b.resolve(), b)
            }

            function m(a) {
                if (this.currentState = a, this.trigger("stateChange", {
                        state: a
                    }), D.call(this, "bt---" + a), "opening" === a && (this.connectTiming = new Date), ("opening" === a || "opened" === a) && (this.isOpen = !0), "opened" === a) {
                    var b = N().diff(this.connectTiming);
                    D.call(this, "connectTimeTaken: " + b), Modernizr.setTest("ble-active-connection", !0), H.set("isConnected", !0)
                }("closing" === a || "closed" === a) && (this.isOpen = !1, Modernizr.setTest("ble-active-connection", !1), H.set("isConnected", !1))
            }

            function n() {
                var a = N().diff(G.lastSendDate);
                o.call(this) && a > 100 + C.call(this) && "opened" === this.currentState && this.rssi(), "" == H.get("address") && r.call(this)
            }

            function o() {
                return !H.get("appBackgrounded") && "" !== H.get("address")
            }

            function p() {
                o.call(this) && (D.call(this, "attempt reconnect"), M(this, this.fastReconnect, [], 3).then(function() {
                    D.call(this, "reconnected")
                }.bind(this), function() {
                    H.trigger("connectionLost", {
                        reason: "Connection Dropped"
                    }), r.call(this)
                }.bind(this)))
            }

            function q() {
                this.close().then(function() {
                    console.warn("Connection Dropped"), D.call(this, "connectionDropped"), o.call(this) && p.call(this)
                }.bind(this))
            }

            function r() {
                this._keepAliveInterval && (clearInterval(this._keepAliveInterval), this._keepAliveInterval = null)
            }

            function s() {
                this._keepAliveInterval || (this._keepAliveInterval = setInterval(n.bind(this), J.KeepAliveInterval))
            }

            function t(a) {
                if (!a.rssi || a.rssi > J.RSSIRangeLimit)
                    for (var b = a.uuids || [], c = 0; c < b.length; c++) b[c].toLowerCase() === J.SERVICE && x.call(this, a)
            }

            function u(a) {
                return a === J.OUTLET_SERVICE || a === J.OUTLET_SERVICE_LONG || a === J.OUTLET_SERVICE_LONG_ANDROID
            }

            function v(a) {
                if (!a.rssi || a.rssi > J.RSSIRangeLimit)
                    for (var b = a.uuids || [], c = 0; c < b.length; c++) {
                        var d = b[c].toLowerCase();
                        D.call(this, a.name + ":" + d), u.call(this, d) && (a.isOutlet = !0, x.call(this, a))
                    }
            }

            function w(a) {
                if (!a.rssi || a.rssi > J.RSSIRangeLimit)
                    for (var b = a.uuids || [], c = 0; c < b.length; c++) {
                        var d = b[c].toLowerCase();
                        D.call(this, a.name + ":" + d), (u.call(this, d) || d === J.SERVICE) && (u.call(this, d) && (a.isOutlet = !0), x.call(this, a))
                    }
            }

            function x(a) {
                var b = H.get("scanResults");
                I.objectHasUniqueAddress(b, a) && (D.call(this, a), a = y.call(this, a), a = z.call(this, a), b.push(a), b = O(b, function(a, b) {
                    var c = Number(a.rssi) || 0,
                        d = Number(b.rssi) || 0;
                    return d - c
                }), H.set("scanResults", b), this.trigger("scanResult", {
                    result: a
                }))
            }

            function y(a) {
                var b = a.name || "";
                return I.nameContainsMacAddress(b) && (a.macAddress = I.nameExtractMacAddress(a.name)), !a.name && Modernizr.android && (a.name = a.address, a.macAddress = a.address), a
            }

            function z(a) {
                var b = new L;
                if (a.manufacturerData && "object" == typeof a.manufacturerData && a.manufacturerData.SN && !a.isOutlet) {
                    var c = I.arrayBufferToRaw(a.manufacturerData.SN),
                        d = I.rawToHex(c);
                    if (I.hexToBinary(d), D.call(this, name + ":" + d), 12 === d.length) {
                        var e = I.manufacturerDataDecode(d);
                        b.set("isRightChamber", e.isRightChamber), b.set("rightChamberType", e.rightChamberType), b.set("isLeftChamber", e.isLeftChamber), b.set("leftChamberType", e.leftChamberType), b.set("isChamberTypeValid", e.isChamberTypeValid), b.set("isK2", 2 === b.get("rightChamberType") && b.get("isRightChamber") || 2 === b.get("leftChamberType") && b.get("isLeftChamber")), b.set("isK1", (1 === b.get("rightChamberType") && b.get("isRightChamber") || 1 === b.get("leftChamberType") && b.get("isLeftChamber")) && !b.get("isK2")), b.set("isAdult", !b.get("isK1") && !b.get("isK2")), b.get("isK1") ? b.set("type", "K1") : b.get("isK2") ? b.set("type", "K2") : b.set("type", "Adult"), b.set("hasOutletConfigured", e.hasOutletConfigured), b.set("outletArray", e.outletArray)
                    }
                    a.manufacturerDataHex = d
                }
                return a.isOutlet && b.setAsOutlet(), a.capabilities = b.toObject(), a.capabilitiesJSON = JSON.stringify(b.toObject()), a.isK1 = b.get("isK1"), a.isK2 = b.get("isK2"), a.isAdult = b.get("isAdult"), D.call(this, a.name + ":" + a.capabilitiesJSON), a
            }

            function A(a) {
                return a ? ("string" != typeof a || "string" == typeof a && a.length < 10 ? a = [] : "string" == typeof a && (a = JSON.parse(JSON.parse(JSON.stringify(a.replace(/\,\n\}|\,\n\n\}|\,\}/g, "}"))))), B(a)) : void 0
            }

            function B(a) {
                return a || (a = []), a.forEach(function(b, c) {
                    for (var d = a.length; d--;) a[d].ssid === b.ssid && a[d].security === b.security && d != c && a.splice(d, 1)
                }), a
            }

            function C() {
                return Modernizr.android ? J.kSCMessageLongTimeout : J.kSCMessageShortTimeout
            }

            function D(a, b) {
                K.log("DeviceCommunication", a, b)
            }
            var E = a("lavaca/events/EventDispatcher"),
                F = a("./MessageTranslation"),
                G = a("./MessageQueue"),
                H = a("./ConnectedDeviceStateModel"),
                I = a("./CommunicationHelpers"),
                J = a("./SelectComfortConstants"),
                K = a("./CommunicationLogger"),
                L = a("./CapabilitiesModel"),
                M = a("./PromiseToRetry"),
                N = a("moment"),
                O = a("mout/array/sort"),
                P = a("$"),
                Q = E.extend(function() {
                    E.call(this, arguments)
                }, {
                    isOpen: !1,
                    currentState: "closed",
                    outOfRangeCount: 0,
                    ignoreNextPumpStatus: !1,
                    _pumpCheckInterval: [],
                    _pumpCheckCompleteFailure: [],
                    _pumpCheckTimeout: [],
                    _demoPreviousSleepNumber: [0, 0],
                    setDevice: function(a) {
                        H.set("macAddress", a)
                    },
                    open: function() {
                        var a = P.Deferred();
                        if (H.get("isDemo")) return a.resolve(H.get("capabilities").toObject()), a;
                        if (!window.bluetoothle) return a.reject(), a;
                        if (this.currentState && "closed" !== this.currentState) H.get("capabilities").updateModernizr(), a.resolve(H.get("capabilities").toObject());
                        else {
                            m.call(this, "opening");
                            var c = H.get("macAddress"),
                                d = H.get("address");
                            window.bluetoothle.on("deviceDropped", q.bind(this)), window.bluetoothle.on("characteristicValueChanged", b.bind(this)), this.connectionTimeout = setTimeout(function() {
                                return D.call(this, "connection timeout"), r.call(this), this.close(), a.reject(), a
                            }.bind(this), J.ConnectTime), D.call(this, "resolving"), this.getAddressFromMacAddress(c).then(function(a) {
                                return d = a, H.set("address", d), D.call(this, "resolved"), D.call(this, "connecting"), k.call(this, d)
                            }.bind(this), function() {
                                return D.call(this, "resolve error"), this.close(), clearTimeout(this.connectionTimeout), a.reject(), a
                            }.bind(this)).then(function() {
                                return D.call(this, "connected"), D.call(this, "subscribing"), l.call(this, d)
                            }.bind(this), function() {
                                return D.call(this, "connect error"), this.close(), clearTimeout(this.connectionTimeout), a.reject(), a
                            }.bind(this)).then(function() {
                                return D.call(this, "subscribed"), m.call(this, "opened"), D.call(this, "binding"), this.wireBind()
                            }.bind(this), function() {
                                return D.call(this, "subscribe error"), this.close(), clearTimeout(this.connectionTimeout), a.reject(), a
                            }.bind(this)).then(function() {
                                return D.call(this, "bound"), D.call(this, "getting proxy"), this.proxyGetNodeList()
                            }.bind(this), function() {
                                return D.call(this, "bind error"), this.close(), clearTimeout(this.connectionTimeout), a.reject(), a
                            }.bind(this)).then(function(a) {
                                return a && a.returnObject && H.get("capabilities").apply(a.returnObject), D.call(this, "got proxy"), D.call(this, "getting foundation"), this.foundationGetSystemStatus()
                            }.bind(this), function() {
                                return D.call(this, "proxy node list error"), this.close(), clearTimeout(this.connectionTimeout), a.reject(), a
                            }.bind(this)).then(function(b) {
                                b && b.returnObject && H.get("capabilities").apply(b.returnObject), D.call(this, "got foundation"), D.call(this, "capabilities" + JSON.stringify(H.get("capabilities").toObject())), s.call(this), clearTimeout(this.connectionTimeout), H.get("capabilities").updateModernizr(), a.resolve(H.get("capabilities").toObject())
                            }.bind(this), function() {
                                return D.call(this, "foundation status error"), this.close(), clearTimeout(this.connectionTimeout), a.reject(), a
                            }.bind(this))
                        }
                        return a
                    },
                    openWithRetry: function() {
                        return M(this, this.open, [], 2)
                    },
                    openWithInfo: function() {
                        var a = P.Deferred(),
                            b = {};
                        return this.openWithRetry().then(function(c) {
                            b = c, this.getBedInformation().then(function() {
                                return a.resolve(b), a
                            }.bind(this), function(b) {
                                return a.reject(b), a
                            }.bind(this))
                        }.bind(this), function(b) {
                            return a.reject(b), a
                        }.bind(this)), a
                    },
                    fastReconnect: function() {
                        var a = P.Deferred(),
                            c = H.get("address");
                        return window.bluetoothle ? c ? (D.call(this, "fast reconnect"), this.currentState && "closed" !== this.currentState ? (a.reject(), a) : (m.call(this, "opening"), window.bluetoothle.on("deviceDropped", q.bind(this)), window.bluetoothle.on("characteristicValueChanged", b.bind(this)), this.connectionTimeout = setTimeout(function() {
                            return D.call(this, "connection timeout"), this.close(), a.reject(), a
                        }.bind(this), J.ConnectTime), k.call(this, c).then(function() {
                            return D.call(this, "connected"), D.call(this, "subscribing"), l.call(this, c)
                        }.bind(this), function() {
                            return D.call(this, "connect error"), this.close(), clearTimeout(this.connectionTimeout), a.reject(), a
                        }.bind(this)).then(function() {
                            D.call(this, "subscribed"), m.call(this, "opened"), clearTimeout(this.connectionTimeout), s.call(this), a.resolve()
                        }.bind(this), function() {
                            return D.call(this, "subscribe error"), this.close(), clearTimeout(this.connectionTimeout), a.reject(), a
                        }.bind(this)), a)) : this.open() : (a.reject(), a)
                    },
                    close: function() {
                        var a = P.Deferred(),
                            b = H.get("address");
                        return m.call(this, "closing"), r.call(this), window.bluetoothle ? (window.bluetoothle.off("deviceDropped"), window.bluetoothle.off("characteristicValueChanged"), window.bluetoothle.stopCharacteristicNotifications(b, J.SERVICE, J.CHARACTERISTIC_TX), window.bluetoothle.disconnect(b).then(function() {
                            D.call(this, "disconnected")
                        }.bind(this), function() {
                            D.call(this, "disconnected error")
                        }.bind(this)), setTimeout(function() {
                            m.call(this, "closed"), a.resolve()
                        }.bind(this), J.connectionCloseTimeout), a) : (a.resolve(), a)
                    },
                    openOutlet: function() {
                        var a = P.Deferred();
                        if (!window.bluetoothle) return a.resolve(), a;
                        var b = H.get("outletMacAddress"),
                            c = H.get("outletAddress");
                        return this.connectionTimeout = setTimeout(function() {
                            return D.call(this, "connection timeout"), this.closeOutlet(), a.reject(), a
                        }.bind(this), J.ConnectTime), D.call(this, "resolving"), this.getOutletAddressFromMacAddress(b).then(function(a) {
                            return c = a, H.set("outletAddress", c), D.call(this, "resolved"), D.call(this, "connecting"), k.call(this, c)
                        }.bind(this), function() {
                            return D.call(this, "resolve error"), clearTimeout(this.connectionTimeout), this.closeOutlet(), a.reject(), a
                        }.bind(this)).then(function() {
                            D.call(this, "connected"), clearTimeout(this.connectionTimeout), a.resolve()
                        }.bind(this), function() {
                            return D.call(this, "connect error"), clearTimeout(this.connectionTimeout), this.closeOutlet(), a.reject(), a
                        }.bind(this)), a
                    },
                    closeOutlet: function() {
                        var a = P.Deferred(),
                            b = H.get("outletAddress");
                        return window.bluetoothle ? (window.bluetoothle.disconnect(b), setTimeout(function() {
                            a.resolve()
                        }.bind(this), J.outletConnectionCloseTimeout), a) : (a.resolve(), a)
                    },
                    resolveAddress: function(a) {
                        var b = P.Deferred(),
                            c = null;
                        return window.bluetoothle && a ? (window.bluetoothle.on("deviceAdded", function(d) {
                            d = y.call(this, d), I.containsMacAddress(a, d.name) ? (D.call(this, d.name + " -xxx " + a), c = d.address, d = z.call(this, d), H.get("capabilities").apply(d.capabilities), window.bluetoothle.stopDiscovery(), window.bluetoothle.off("deviceAdded"), b.resolve(c)) : c = I.formatMacAddress(a)
                        }.bind(this)), console.log("startDiscovery"), window.bluetoothle.startDiscovery(), setTimeout(function() {
                            window.bluetoothle.stopDiscovery(), window.bluetoothle.off("deviceAdded"), b.resolve(c), c || b.reject()
                        }.bind(this), J.ScanTime), b) : (b.reject(), b)
                    },
                    getAddressFromMacAddress: function(a) {
                        var b = P.Deferred();
                        return this.resolveAddress(a).then(function(c) {
                            var d = H.get("capabilities").toObject();
                            d.isChamberTypeValid ? b.resolve(c) : setTimeout(function() {
                                this.resolveAddress(a).then(function(a) {
                                    d = H.get("capabilities").toObject(), d.isChamberTypeValid ? b.resolve(a) : (window.navigator && window.navigator.notification && navigator.notification.alert(J.chamberInvalidBitErrorMessage, function() {}, "SleepIQ", "OK"), b.reject())
                                }.bind(this), function() {
                                    b.reject()
                                }.bind(this))
                            }.bind(this), J.chamberInvalidBitTimout)
                        }.bind(this), function() {
                            b.reject()
                        }.bind(this)), b
                    },
                    getOutletAddressFromMacAddress: function(a) {
                        var b = P.Deferred(),
                            c = null;
                        return window.bluetoothle && a ? H.get("outletAddress") && "" !== H.get("outletAddress") ? (b.resolve(H.get("outletAddress")), b) : (window.bluetoothle.on("deviceAdded", function(d) {
                            I.containsMacAddress(a, d.name) && (D.call(this, d.name + " -xxx " + a), c = d.address, window.bluetoothle.stopDiscovery(), window.bluetoothle.off("deviceAdded"), b.resolve(c))
                        }.bind(this)), window.bluetoothle.startDiscovery(), setTimeout(function() {
                            window.bluetoothle.stopDiscovery(), window.bluetoothle.off("deviceAdded"), c || b.reject()
                        }.bind(this), J.ScanTime), b) : (b.reject(), b)
                    },
                    scan: function(a) {
                        var b = P.Deferred();
                        return window.bluetoothle ? (H.set("scanResults", []), a && "bed" === a ? window.bluetoothle.on("deviceAdded", t.bind(this)) : a && "outlet" === a ? window.bluetoothle.on("deviceAdded", v.bind(this)) : window.bluetoothle.on("deviceAdded", w.bind(this)), window.bluetoothle.startDiscovery(), setTimeout(function() {
                            window.bluetoothle.stopDiscovery(), window.bluetoothle.off("deviceAdded"), b.resolve(H.get("scanResults"))
                        }, J.ScanTime), b) : (setTimeout(function() {
                            b.resolve()
                        }, J.ScanTime), b)
                    },
                    rssi: function() {
                        var a = P.Deferred();
                        if (!window.bluetoothle) return a.reject(), a;
                        var b = H.get("address");
                        return window.bluetoothle.getDevice(b).then(function(b) {
                            D.call(this, "-rssi " + b.rssi + "-"), this.trigger("rssi-update", {
                                rssi: b.rssi
                            }), b.rssi < J.RSSIRangeLimit ? (this.outOfRangeCount++, this.outOfRangeCount > 1 && (D.call(this, "rssi out of range, closing"), H.trigger("connectionLost", {
                                reason: "Out Of Range"
                            }), this.close())) : this.outOfRangeCount = 0, a.resolve(b.rssi)
                        }.bind(this), function(b) {
                            D.call(this, "rssi error: " + b.error + " - " + b.message), a.reject()
                        }.bind(this)), a
                    },
                    wireBind: function() {
                        var a = P.Deferred(),
                            b = F.messageForWireBind();
                        return D.call(this, "wireBind"), j.call(this, b).then(function(b) {
                            F.setWireBind(b), D.call(this, "wireBind success"), a.resolve(b)
                        }.bind(this), function(b) {
                            D.call(this, "wireBind error " + JSON.stringify(b)), a.reject(b)
                        }.bind(this)), a
                    },
                    factoryReset: function() {
                        return D.call(this, "Factory Reset"), i.call(this, F.messageForFactoryReset())
                    },
                    pumpSetSleepNumber: function(a, b) {
                        return D.call(this, "pumpSetSleepNumber: " + a + ":" + b), i.call(this, F.messageForPumpSetSleepNumber(a, b))
                    },
                    pumpSetHaltSleepNumberWithProgress: function(a) {
                        D.call(this, "pumpSetHaltSleepNumberWithProgress"), a ? H.trigger("haltSleepNumberWithProgressSide" + a) : (H.trigger("haltSleepNumberWithProgressSide0"), H.trigger("haltSleepNumberWithProgressSide1"))
                    },
                    pumpSetSleepNumberWithProgress: function(a, b, c) {
                        function d() {
                            v.notify(r, null), this._pumpCheckInterval[r] = setInterval(e.bind(this), J.pumpSetSleepNumberWithProgressInterval), g.call(this), this._pumpCheckCompleteFailure[r] = setTimeout(function() {
                                this.pumpSetForceIdle(), n.call(this, r)
                            }.bind(this), J.pumpSetSleepNumberWithProgressTimeout), 0 == r ? H.on("haltSleepNumberWithProgressSide0", function() {
                                D.call(this, "caught pumpSetHaltSleepNumberWithProgress for side 0"), n.call(this, 0)
                            }.bind(this)) : H.on("haltSleepNumberWithProgressSide1", function() {
                                D.call(this, "caught pumpSetHaltSleepNumberWithProgress for side 1"), n.call(this, 1)
                            }.bind(this)), H.on("pumpForceIdle", function() {
                                D.call(this, "caught pumpForceIdle " + r), m.call(this, r)
                            }.bind(this))
                        }

                        function e() {
                            if (D.call(this, "pumpLoop"), H.get("isDemo")) {
                                D.call(this, "pumpLoop demo change");
                                var a = Number(o) + Number(s),
                                    b = p != a;
                                f.call(this, Number(a), b)
                            } else this.pumpGetStatus().then(function(a) {
                                D.call(this, "pumpLoop reply success");
                                var b = 0 == r ? a.returnObject.rightSide : a.returnObject.leftSide,
                                    c = a.returnObject.isActive;
                                f.call(this, b, c)
                            }.bind(this), function() {}.bind(this))
                        }

                        function f(a, b) {
                            return o = a, H.get("isDemo") && (this._demoPreviousSleepNumber[r] = o, !b) ? (m.call(this, r), void 0) : ((p == o || p == o - 5 || p == o + 5) && u++, b || t++, D.call(this, "update: increment-" + a + ": destination-" + p + ": isActive-" + b + ": INACTIVECOUNT-" + t + ": DESTINATIONSUCCESSCOUNT-" + u), t > 1 ? m.call(this, r) : g.call(this), v.notify(r, o), void 0)
                        }

                        function g() {
                            j.call(this, r), this._pumpCheckTimeout[r] = setTimeout(function() {
                                D.call(this, "pumpLoop timeout"), m.call(this, r)
                            }.bind(this), J.pumpSetSleepNumberWithProgressIntervalTimeout)
                        }

                        function h(a) {
                            i.call(this, a), j.call(this, a), k.call(this, a), l.call(this)
                        }

                        function i(a) {
                            this._pumpCheckInterval[a] && (clearInterval(this._pumpCheckInterval[a]), this._pumpCheckInterval[a] = null)
                        }

                        function j(a) {
                            this._pumpCheckTimeout[a] && (clearTimeout(this._pumpCheckTimeout[a]), this._pumpCheckTimeout[a] = null)
                        }

                        function k(a) {
                            this._pumpCheckCompleteFailure[a] && (clearTimeout(this._pumpCheckCompleteFailure[a]), this._pumpCheckCompleteFailure[a] = null)
                        }

                        function l() {
                            0 == r ? H.off("haltSleepNumberWithProgressSide0") : H.off("haltSleepNumberWithProgressSide1"), H.off("pumpForceIdle")
                        }

                        function m(a) {
                            return h.call(this, a), D.call(this, "end loop"), v.resolve(r, o), v
                        }

                        function n(a) {
                            h.call(this, a), D.call(this, "fail loop");
                            var b = !0;
                            return v.reject(b), v
                        }
                        var o, p, q, r, s, t, u, v = P.Deferred();
                        return t = 0, u = 0, q = this._demoPreviousSleepNumber[a] || 0, c && Number(c) && (q = Number(c)), p = Number(b), o = Number(q) || 0, r = a, s = p - q > 0 ? 5 : -5, D.call(this, "pumpSetSleepNumber: " + r + ":" + p), p == q ? (v.resolve(r, p), v) : (H.get("isDemo") ? d.call(this) : this.pumpSetSleepNumber(r, p).then(function() {
                            d.call(this)
                        }.bind(this), function() {
                            var a = !1;
                            v.reject(a)
                        }.bind(this)), v)
                    },
                    pumpEngageChamber: function(a, b) {
                        function c(a) {
                            var b = 100 * Number(a) / Math.abs(f - h);
                            return Math.round(b)
                        }

                        function d() {
                            if (H.get("isDemo")) {
                                var a = P.Deferred();
                                return a.resolve({}), a
                            }
                            return this.pumpGetState()
                        }
                        var e = P.Deferred(),
                            f = "undefined" != typeof b ? Number(b) : J.engageChamberInflateTo,
                            g = J.engageChamberInflateTarget,
                            h = J.engageChamberInflateStartPoint,
                            i = J.engageChamberInflateStartPoint;
                        return e.notify(0), d.call(this).then(function(b) {
                            b = b || {};
                            var d = b.returnObject || {
                                leftSide: 0,
                                rightSide: 0
                            };
                            return h = 0 == a ? d.rightSide : d.leftSide, i = h, D.call(this, "start:" + h + " current:" + i), h >= f ? (D.call(this, "no need to test"), e.notify(100), e.resolve(100), e) : (this.pumpSetSleepNumberWithProgress(a, g, h).then(function(a, b) {
                                return i = b, b >= f - 5 ? (D.call(this, "chamber engage finished"), e.notify(100), e.resolve(100)) : (D.call(this, "chamber engage errored showing where we stopped " + i), e.notify(c.call(this, i)), e.reject(c.call(this, i))), e
                            }.bind(this), function() {
                                return D.call(this, "chamber engage errored showing where we stopped " + i), e.notify(c.call(this, i)), e.reject(c.call(this, i)), e
                            }.bind(this)).progress(function(a, b) {
                                if (null != b) {
                                    i = Number(b);
                                    var d = c.call(this, i);
                                    if (i >= f) return e.notify(100), D.call(this, "progress and complete " + i), this.pumpSetForceIdle(), e.resolve(100), e;
                                    D.call(this, "progress " + i + " percentage:" + d), e.notify(d)
                                }
                            }.bind(this)), void 0)
                        }.bind(this), function() {
                            return e.reject(), e
                        }.bind(this)), e
                    },
                    pumpGetMemory: function() {
                        return D.call(this, "pumpGetMemory"), i.call(this, F.messageForPumpGetMemory(), F.messageDecodeForPumpGetMemory)
                    },
                    pumpSetMemory: function(a, b) {
                        return D.call(this, "pumpSetMemory: " + a + b), i.call(this, F.messageForPumpSetMemory(a, b))
                    },
                    pumpGetStatus: function() {
                        var a = P.Deferred();
                        return D.call(this, "pumpGetStatus"), this.pumpGetStatusSingle().then(function(b) {
                            return this.ignoreNextPumpStatus ? (this.ignoreNextPumpStatus = !1, D.call(this, "ignoring status"), setTimeout(function() {
                                this.pumpGetStatusSingle().then(function(b) {
                                    return D.call(this, "second status " + b.returnObject.rightSide), a.resolve(b), a
                                }.bind(this), function(b) {
                                    return a.reject(b), a
                                }.bind(this))
                            }.bind(this), J.pumpGetStatusFalseyTimeout), void 0) : (a.resolve(b), a)
                        }.bind(this), function(b) {
                            return a.reject(b), a
                        }.bind(this)), a
                    },
                    pumpGetStatusSingle: function() {
                        return i.call(this, F.messageForPumpGetStatus(), F.messageDecodeForPumpGetStatus)
                    },
                    pumpGetJobStatus: function() {
                        return i.call(this, F.messageForPumpGetJobStatus())
                    },
                    pumpSetForceIdle: function() {
                        return this.ignoreNextPumpStatus = !0, H.trigger("pumpForceIdle"), i.call(this, F.messageForPumpSetForceIdle())
                    },
                    pumpGetState: function() {
                        return D.call(this, "pumpGetState"), i.call(this, F.messageForPumpGetState(), F.messageDecodeForPumpGetState)
                    },
                    pumpGetSoftwareVersion: function() {
                        return i.call(this, F.messageForPumpGetSoftwareVersion(), F.messageDecodeForPumpGetSoftwareVersion)
                    },
                    pumpGetChamberType: function() {
                        return i.call(this, F.messageForPumpGetChamberType(), F.messageDecodeForPumpGetChamberType)
                    },
                    pumpGetChamberTypeCompatabilityMode: function() {
                        var a = P.Deferred();
                        return this.pumpGetChamberType().then(function(b) {
                            a.resolve(b)
                        }.bind(this), function(b) {
                            if ("string" == typeof b && "timeout" == b.toLowerCase()) {
                                var c = {};
                                c.returnObject = {}, c.returnObject.isRightChamber = !0, c.returnObject.rightChamberType = 0, c.returnObject.isLeftChamber = !0, c.returnObject.leftChamberType = 0, c.returnObject.isK2 = !1, c.returnObject.isK1 = !1, c.returnObject.isAdult = !0, a.resolve(c)
                            } else a.reject(b)
                        }.bind(this)), a
                    },
                    pumpSetLEDOverrideBlink: function() {
                        return i.call(this, F.messageForPumpSetLEDOverride(3))
                    },
                    pumpSetLEDOverrideRevert: function() {
                        return i.call(this, F.messageForPumpSetLEDOverride(0))
                    },
                    proxyGetNodeList: function() {
                        return D.call(this, "proxyGetNodeList"), i.call(this, F.messageForProxyGetNodeList(), F.messageDecodeForProxyGetNodeList)
                    },
                    proxySetAddNode: function(a) {
                        return i.call(this, F.messageForSetAddNode(a))
                    },
                    proxySetRemoveNode: function(a) {
                        return i.call(this, F.messageForSetRemoveNode(a))
                    },
                    foundationSetAdjustment: function(a) {
                        if (!c.call(this)) {
                            var b = P.Deferred();
                            return b.resolve(), b
                        }
                        return i.call(this, F.messageForFoundationSetAdjustment(a))
                    },
                    foundationGetSystemStatus: function() {
                        var a = P.Deferred();
                        return c.call(this) ? (D.call(this, "foundationGetSystemStatus"), i.call(this, F.messageForFoundationGetSystemStatus(), F.messageDecodeForFoundationGetSystemStatus)) : (a.resolve(), a)
                    },
                    foundationGetAdjustment: function() {
                        var a = P.Deferred();
                        return c.call(this) ? (D.call(this, "foundationGetAdjustment"), i.call(this, F.messageForFoundationGetAdjustment(), F.messageDecodeForFoundationGetAdjustment)) : (a.resolve(), a)
                    },
                    foundationSetMotionHalt: function(a, b, d, e) {
                        if (!c.call(this)) {
                            var f = P.Deferred();
                            return f.resolve(), f
                        }
                        return i.call(this, F.messageForFoundationSetMotionHalt(a, b, d, e))
                    },
                    foundationSetLight: function(a, b, d) {
                        var e = P.Deferred();
                        return c.call(this) ? (D.call(this, "foundationSetLight:" + a + "-" + b), i.call(this, F.messageForFoundationSetLight(a, b, d))) : (e.resolve(), e)
                    },
                    foundationGetLight: function(a) {
                        var b = P.Deferred();
                        return c.call(this) ? (D.call(this, "foundationGetLight:" + a), i.call(this, F.messageForFoundationGetLight(a), F.messageDecodeForFoundationGetLight)) : (b.resolve(), b)
                    },
                    foundationGetAllLights: function() {
                        var a = P.Deferred(),
                            b = {};
                        return this.foundationGetLight(1).then(function(a) {
                            return b["1"] = a && a.returnObject && a.returnObject.isOn, this.foundationGetLight(2)
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)).then(function(a) {
                            return b["2"] = a && a.returnObject && a.returnObject.isOn, this.foundationGetLight(3)
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)).then(function(a) {
                            return b["3"] = a && a.returnObject && a.returnObject.isOn, this.foundationGetLight(4)
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)).then(function(c) {
                            b["4"] = c && c.returnObject && c.returnObject.isOn, a.resolve(b)
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)), a
                    },
                    foundationSetPreset: function(a, b) {
                        var d = P.Deferred();
                        return c.call(this) ? i.call(this, F.messageForFoundationSetPreset(a, b)) : (d.resolve(), d)
                    },
                    foundationSetForceIdle: function() {
                        if (!c.call(this)) {
                            var a = P.Deferred();
                            return a.resolve(), a
                        }
                        return i.call(this, F.messageForFoundationSetForceIdle())
                    },
                    foundationGetSoftwareVersion: function() {
                        var a = P.Deferred();
                        return c.call(this) ? i.call(this, F.messageForFoundationGetSoftwareVersion(), F.messageDecodeForFoundationGetSoftwareVersion) : (a.resolve(), a)
                    },
                    outletGetCachedStatus: function() {
                        return i.call(this, F.messageForOutletGetCachedStatus(), F.messageDecodeForOutletGetCachedStatus)
                    },
                    outletSetRequestStatus: function(a) {
                        return i.call(this, F.messageForOutletSetRequestStatus(a), F.messageDecodeForOutletSetRequestStatus)
                    },
                    outletSetOutlet: function(a, b, c) {
                        return i.call(this, F.messageForOutletSetOutlet(a, b, c), F.messageDecodeForOutletSetOutlet)
                    },
                    outletSetOutlet120: function(a, b) {
                        return i.call(this, F.messageForOutletSetOutlet120(a, b), F.messageDecodeForOutletSetOutlet)
                    },
                    outletSetOutlet12: function(a, b) {
                        return i.call(this, F.messageForOutletSetOutlet12(a, b), F.messageDecodeForOutletSetOutlet)
                    },
                    outletSetAddOutlet: function(a, b) {
                        return i.call(this, F.messageForOutletSetAddOutlet(a, b), F.messageDecodeForOutletSetAddOutlet)
                    },
                    outletSetRemoveOutlet: function(a) {
                        return i.call(this, F.messageForOutletSetRemoveOutlet(a), F.messageDecodeForOutletSetRemoveOutlet)
                    },
                    outletGetOutlet: function(a) {
                        return i.call(this, F.messageForOutletGetOutlet(a), F.messageDecodeForOutletGetOutlet)
                    },
                    outletGetName: function(a) {
                        return i.call(this, F.messageForOutletGetName(a), F.messageDecodeForOutletGetName)
                    },
                    outletSetName: function(a, b) {
                        return i.call(this, F.messageForOutletSetName(a, b), F.messageDecodeForOutletSetName)
                    },
                    outletGetSenseAndDoStatus: function() {
                        var a = P.Deferred();
                        if (d.call(this)) {
                            var b = {};
                            return b.returnObject = {}, b.returnObject.isGlobalConfiguration = !1, b.returnObject.isSmartOutletConfiguration = !1, a.resolve(b), a
                        }
                        return i.call(this, F.messageForOutletGetSenseAndDoStatus(), F.messageDecodeForOutletGetSenseAndDoStatus)
                    },
                    outletSetSenseAndDo: function(a) {
                        return i.call(this, F.messageForOutletSetSenseAndDoConfigure(1, a))
                    },
                    getKeyedValue: function(a) {
                        var b = F.messageForGetKeyedValue(a);
                        return G.getKey(b)
                    },
                    setKeyedValue: function(a, b) {
                        var c = F.messageForSetKeyedValue(a, b);
                        return G.setKey(c, b)
                    },
                    expertGetSystemStatus: function() {
                        var a = P.Deferred();
                        return this.getKeyedValue("SYST").then(function(b) {
                            b = F.messageDecodeForExpertGetSystemStatus(b), a.resolve(b)
                        }.bind(this), function(b) {
                            a.reject(b)
                        }.bind(this)), a
                    },
                    expertScanForWifiNetworks: function() {
                        var a = P.Deferred();
                        return this.open().then(function() {
                            this.expertGetFormattedWifiNetworks().then(function(b) {
                                b.length <= 0 ? setTimeout(function() {
                                    this.expertGetFormattedWifiNetworks().then(function(b) {
                                        b.length <= 0 ? a.reject("Unable to find any networks") : a.resolve(b)
                                    }.bind(this), function(b) {
                                        a.reject(b)
                                    })
                                }.bind(this), J.expertScanForWifiNetworksFalseyTimeout) : a.resolve(b)
                            }.bind(this), function(b) {
                                a.reject(b)
                            })
                        }.bind(this), function(b) {
                            a.reject(b)
                        }), a
                    },
                    expertGetFormattedWifiNetworks: function() {
                        var a = P.Deferred();
                        return this.getKeyedValue("SWSC").then(function(b) {
                            a.resolve(A.call(this, b))
                        }.bind(this), function(b) {
                            a.reject(b)
                        }), a
                    },
                    expertGetStatusFrimwareUpdate: function() {
                        var a = P.Deferred();
                        return this.getKeyedValue("SFWU").then(function(b) {
                            a.resolve(b)
                        }.bind(this), function(b) {
                            a.reject(b)
                        }), a
                    },
                    expertGetRFSVersion: function() {
                        var a = P.Deferred();
                        return this.getKeyedValue("SRFS").then(function(b) {
                            a.resolve(b)
                        }.bind(this), function(b) {
                            a.reject(b)
                        }), a
                    },
                    expertGetBAMITVersion: function() {
                        var a = P.Deferred();
                        return this.getKeyedValue("SREL").then(function(b) {
                            a.resolve(b)
                        }.bind(this), function(b) {
                            a.reject(b)
                        }), a
                    },
                    outletDirectGetConfiguration: function() {
                        var a = P.Deferred(),
                            b = H.get("outletAddress");
                        return window.bluetoothle.readCharacteristicValue(b, J.OUTLET_SERVICE_LONG, J.OUTLET_CHARACTERISTIC_CONFIGURATION).then(function(b) {
                            a.resolve(b)
                        }.bind(this), function(b) {
                            a.reject(b)
                        }.bind(this)), a
                    },
                    outletDirectSetConfiguration: function(a, b, c) {
                        var d = P.Deferred(),
                            e = H.get("outletAddress"),
                            f = J.outletDirectConfigurationType + I.reverseHex(b) + I.intToHexByte(a) + I.intToHexByte(c || J.outletDirectConfigurationPeripheralTime),
                            g = I.hexToRaw(f);
                        return window.bluetoothle.writeCharacteristicValue(e, J.OUTLET_SERVICE_LONG, J.OUTLET_CHARACTERISTIC_CONFIGURATION, g.buffer).then(function(a) {
                            d.resolve(a)
                        }.bind(this), function(a) {
                            d.reject(a)
                        }.bind(this)), d
                    },
                    configureOutlet: function(a, b, c) {
                        var d = P.Deferred();
                        return H.set("macAddress", a), H.set("outletMacAddress", b), d.notify("unknown", "unknown", "unknown"), D.call(this, "close pump"), this.close().then(function() {
                            return D.call(this, "closeded pump"), D.call(this, "opening outlet"), d.notify("unknown", "unknown", "unknown"), this.openOutlet()
                        }.bind(this), function() {
                            return d.reject("Failed to close pump."), d.notify("failure", "failure", "failure"), d
                        }.bind(this)).then(function() {
                            return D.call(this, "opened outlet"), D.call(this, "configuring outlet"), d.notify("unknown", "unknown", "unknown"), this.outletDirectSetConfiguration(c, a)
                        }.bind(this), function() {
                            return d.reject("Failed to connect to the outlet."), d.notify("failure", "failure", "failure"), d
                        }.bind(this)).then(function() {
                            return D.call(this, "configured outlet"), D.call(this, "closing outlet"), d.notify("unknown", "success", "unknown"), this.closeOutlet()
                        }.bind(this), function() {
                            return d.reject("Failed to configure the outlet."), d.notify("failure", "failure", "failure"), d
                        }.bind(this)).then(function() {
                            return D.call(this, "closed outlet"), D.call(this, "opening pump"), d.notify("unknown", "success", "unknown"), this.open()
                        }.bind(this), function() {
                            return d.reject("Failed to disconnect from the outlet."), d.notify("failure", "failure", "failure"), d
                        }.bind(this)).then(function() {
                            return D.call(this, "opened pump"), D.call(this, "configuring pump"), d.notify("unknown", "success", "unknown"), this.outletSetAddOutlet(c, b)
                        }.bind(this), function() {
                            return d.reject("Failed to connect to the pump."), d.notify("failure", "success", "failure"), d
                        }.bind(this)).then(function() {
                            return D.call(this, "configured pump"), D.call(this, "verifying connection"), d.notify("success", "success", "unknown"), this.verifyConnectedOutlet(a, c)
                        }.bind(this), function() {
                            return d.reject("Failed to configure the pump."), d.notify("failure", "success", "failure"), d
                        }.bind(this)).then(function() {
                            D.call(this, "verifyed connection"), d.notify("success", "success", "success"), d.resolve()
                        }.bind(this), function() {
                            return d.reject("The outlet and the pump failed to communicate."), d.notify("success", "success", "failure"), d
                        }.bind(this)), d
                    },
                    verifyConnectedOutlet: function(a, b) {
                        var c = P.Deferred();
                        return H.set("macAddress", a), c.notify("unknown", "unknown", "unknown"), D.call(this, "opening pump"), this.open().then(function() {
                            return D.call(this, "opened pump"), D.call(this, "request outlet status"), c.notify("unknown", "unknown", "unknown"), this.outletSetRequestStatus([b])
                        }.bind(this), function() {
                            return c.reject("Failed to connect to the pump."), c.notify("failure", "unknown", "unknown"), c
                        }.bind(this)).then(function() {
                            return D.call(this, "got outlet status"), D.call(this, "closing pump"), c.notify("unknown", "unknown", "unknown"), this.close()
                        }.bind(this), function() {
                            return c.reject("Failed to request outlet status."), c.notify("failure", "unknown", "unknown"), c
                        }.bind(this)).then(function() {
                            return D.call(this, "closed pump"), D.call(this, "checking connection"), c.notify("success", "unknown", "unknown"), h.call(this, b)
                        }.bind(this), function() {
                            return c.reject("Failed to disconnect from the pump."), c.notify("failure", "unknown", "unknown"), c
                        }.bind(this)).then(function() {
                            D.call(this, "checked connection"), c.notify("success", "success", "success"), c.resolve()
                        }.bind(this), function() {
                            return c.reject("The outlet and the pump failed to communicate."), c.notify("success", "failure", "failure"), c
                        }.bind(this)), c
                    },
                    getBedInformation: function() {
                        var a = P.Deferred(),
                            b = H.get("remote");
                        return H.get("isDemo") ? (a.resolve(b), a) : (this.pumpGetStatus().then(function(a) {
                            return b.leftSide.sleepNumber = Number(a.returnObject.leftSide), b.rightSide.sleepNumber = Number(a.returnObject.rightSide), this.pumpGetMemory()
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)).then(function(a) {
                            return b.leftSide.sleepNumberMemory = Number(a.returnObject.leftSide), b.rightSide.sleepNumberMemory = Number(a.returnObject.rightSide), this.foundationGetAllLights()
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)).then(function(a) {
                            return b.lightStatus = a, this.foundationGetAdjustment()
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)).then(function(a) {
                            return a && a.returnObject ? (b.leftSide.foundationPreset = Number(a.returnObject.presetCurrent[0]), b.rightSide.foundationPreset = Number(a.returnObject.presetCurrent[1])) : (b.leftSide.foundationPreset = -1, b.rightSide.foundationPreset = -1), this.outletGetSenseAndDoStatus()
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)).then(function(a) {
                            return a && a.returnObject && (b.isOnSenseAndDo = a.returnObject.isSmartOutletConfiguration), f.call(this)
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)).then(function(c) {
                            b.outletArray = c || [];
                            var d = H.get("capabilities");
                            1 === d.get("rightChamberType") && (b.kidBedChamber.sideId = 0, b.kidBedChamber.sleepNumber = b.rightSide.sleepNumber, b.kidBedChamber.sleepNumberMemory = b.rightSide.sleepNumberMemory), 2 === d.get("rightChamberType") && (b.kidHeadTilt.sideId = 0, b.kidHeadTilt.sleepNumber = b.rightSide.sleepNumber, b.kidHeadTilt.sleepNumberMemory = b.rightSide.sleepNumberMemory), 1 === d.get("leftChamberType") && (b.kidBedChamber.sideId = 1, b.kidBedChamber.sleepNumber = b.leftSide.sleepNumber, b.kidBedChamber.sleepNumberMemory = b.leftSide.sleepNumberMemory), 2 === d.get("leftChamberType") && (b.kidHeadTilt.sideId = 1, b.kidHeadTilt.sleepNumber = b.leftSide.sleepNumber, b.kidHeadTilt.sleepNumberMemory = b.leftSide.sleepNumberMemory), D.call(this, b), H.set("remote", b), a.resolve(b)
                        }.bind(this), function() {
                            return a.reject(), a
                        }.bind(this)), a)
                    },
                    openAndRemoveOutlet: function() {
                        var a = P.Deferred();
                        return this.open().then(function() {
                            this.outletSetRemoveOutlet(0).then(function(b) {
                                a.resolve(b)
                            }.bind(this), function() {
                                a.reject()
                            }.bind(this))
                        }.bind(this), function() {
                            a.reject()
                        }.bind(this)), a
                    }
                });
            return new Q
        }), define("rdust!templates/childviews/DiscreteProgressView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="title">Step <div class="current-step-index">1</div> of ').reference(b.get("stepCount"), b, "h").write('</div><div class="steps" style="margin-right: 0;"><div class="bar"><div class="percentage"></div></div>').section(b.get("steps"), b, {
                        block: c
                    }, null).write("</div>")
                }

                function c(a, b) {
                    return a.write('<div data-state="todo" class="step" data-index="').reference(b.get("$idx"), b, "h").write('" style="width: ').reference(b.get("width"), b, "h").write('%"></div>')
                }
                return a.register("templates/childviews/DiscreteProgressView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/DiscreteProgressView", b, c)
                }
            }
        }), define("app/ui/views/childviews/DiscreteProgressView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/DiscreteProgressView"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("rdust!templates/childviews/DiscreteProgressView"),
                d = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    template: "templates/childviews/DiscreteProgressView",
                    className: "discreteprogress",
                    autoRender: !0,
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            c.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    init: function(a) {
                        this.stepCount = a || 10, this.model = {
                            steps: new Array(this.stepCount),
                            width: 100 / (this.stepCount - 1),
                            stepCount: this.stepCount
                        }, this.render()
                    },
                    updateProgress: function(a) {
                        this.currentStep = Math.round(a * this.stepCount / 100), this.el.find(".current-step-index").text(this.currentStep), this.el.find(".bar .percentage").css("width", (this.currentStep - 1) * (100 / (this.stepCount - 1)) + "%");
                        for (var b = 0; b < this.stepCount; b++) {
                            var c = "todo";
                            b < this.currentStep - 1 ? c = "complete" : b === this.currentStep - 1 && (c = "current"), this.el.find(".step:eq(" + b + ")").attr("data-state", c)
                        }
                    }
                });
            return d
        }), define("app/models/BindingStateModel", ["require", "lavaca/mvc/Model", "sccomm/ConnectedDeviceStateModel", "app/models/BedCollection", "lavaca/fx/Transform", "sccomm/DeviceCommunication", "app/ui/views/childviews/DiscreteProgressView", "app/utils/MixPanelManager", "moment"], function(a) {
            var b = a("lavaca/mvc/Model"),
                c = a("sccomm/ConnectedDeviceStateModel"),
                d = a("app/models/BedCollection"),
                e = a("lavaca/fx/Transform"),
                f = (a("sccomm/DeviceCommunication"), a("app/ui/views/childviews/DiscreteProgressView")),
                g = (e.cssProperty(), a("app/utils/MixPanelManager")),
                h = a("moment"),
                i = b.extend(function() {
                    b.call(this, arguments), this.init()
                }, {
                    initProgress: function() {
                        setTimeout(function() {
                            $("#modal").addClass("with-status"), setTimeout(function() {
                                $("#modal").append($('<div class="binding-progress"></div>')), this.progressView = new f("#modal .binding-progress");
                                var a = d.getCurrentBedModel();
                                this.stepCount = 6, a.get("isK2") && (this.stepCount = 8), this.progressView.init(this.stepCount), setTimeout(function() {
                                    this.updateProgressByStep(1)
                                }.bind(this), 80)
                            }.bind(this), 300)
                        }.bind(this), 500)
                    },
                    disposeProgress: function() {
                        this.progressView && (this.progressView.dispose(), $("#modal .binding-progress").remove(), $("#modal").removeClass("with-status"))
                    },
                    updateProgressByStep: function(a) {
                        var b = 100 * a / this.stepCount + 1;
                        this.updateProgress(b)
                    },
                    updateProgress: function(a) {
                        this.progressView && this.progressView.updateProgress(a)
                    },
                    isKidsBed: function() {
                        var a = d.getCurrentBedModel(),
                            b = a.get("model") || "";
                        return "k1" == b.toLowerCase() || "k2" == b.toLowerCase()
                    },
                    resetState: function() {
                        this.disposeProgress(), this.set("action", null), this.set("viewToExitAfter", null), this.set("title", null), this.set("alternateCompleteText", null)
                    },
                    init: function() {
                        c.reset()
                    },
                    writeMixPanel: function(a, b) {
                        var e = d.getCurrentBedModel().toObject();
                        e.foundationType = c.get("capabilities").get("isFF1") ? "FF1" : c.get("capabilities").get("isFF2") ? "FF2" : c.get("capabilities").get("isFF3") ? "FF3" : "None";
                        var f = h().format();
                        switch (a) {
                            case "BedScanning":
                                g.prototype.trackBedPairingScanning(h.duration(h(f).diff(this.get("startBedScanTime"))).format("s")), this.set("startBedScanTime", null);
                                break;
                            case "DualAirEngagement":
                                g.prototype.trackDualAirEngagement(e, h.duration(h(f).diff(this.get("startBedEngagingTime"))).format("s")), this.set("startBedEngagingTime", null);
                                break;
                            case "HeadTiltSetup":
                                g.prototype.trackHeadTiltSetup(e, b.success, h.duration(h(f).diff(this.get("startTime"))).format("s"));
                                break;
                            case "OutletSetup":
                                g.prototype.trackOutletSetup(e, b.success, b.bound, "name" in b ? b.name : null, h.duration(h(f).diff(this.get("startTime"))).format("s"));
                                break;
                            case "ScanOutlet":
                                g.prototype.trackOutletScan(e, h.duration(h(f).diff(this.get("startScanOutletTime"))).format("s"));
                                break;
                            case "BedBaseline":
                                g.prototype.trackBedBaseline(e, b.success, h.duration(h(f).diff(this.get("startTime"))).format("s"));
                                break;
                            case "WiFiNetworkSetup":
                                g.prototype.trackWiFiSetup(b.selectedNetwork, b.isPasswordProtected, b.security, b.success, h.duration(h(f).diff(this.get("startWifiTime"))).format("s"));
                                break;
                            case "PairingTrouble":
                                g.prototype.trackPairingTrouble(e, b.troubleIssue, b.macAddress || null);
                                break;
                            case "BedPairing":
                                g.prototype.trackBedPairing(e, b.pairingAction, b.lightBlinkingAction || null)
                        }
                    }
                });
            return new i
        }), define("rdust!templates/pageviews/BedSettingsView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/dashboard-header", b, {
                        pageTitle: "Bed Settings"
                    }).write('<div class="content overflow-scroll"><div class="overflow-scroll-inner"><div class="bed-settings-wrapper item-list ').exists(b.get("isPauseMode"), b, {
                        block: c
                    }, null).write('">').exists(b.get("isPaired"), b, {
                        block: d
                    }, null).write('<!-- this allows transform revealing of banner --><div class="non-banner-wrapper">').exists(b.get("isPaired"), b, {
                        "else": e,
                        block: f
                    }, null).write('<div class="item-heading">Bed Details</div><div class="form" data-form="bed-settings" data-animate-labels="true"><div class="input-wrapper"><label for="bedName" ').exists(b.get("name"), b, {
                        block: j
                    }, null).write('>Bed Name</label><input data-save-on-blur type="text" name="bedName" maxlength="256" ').exists(b.get("name"), b, {
                        block: k
                    }, null).write(' data-validation="').reference(b.getPath(!1, ["validations", "bedName"]), b, "h").write('" ').notexists(b.get("canEdit"), b, {
                        block: l
                    }, null).write(' needsclick tabindex="1"/><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper network ').exists(b.get("isPaired"), b, {
                        block: m
                    }, null).write('"><label for="network" class="reveal">Network</label><div class="link-item network-link ').notexists(b.get("canEdit"), b, {
                        block: n
                    }, null).write('"><input class="name" name="network" type="text" readonly="true" value="').reference(b.get("networkName"), b, "h").write('" ').notexists(b.get("canEdit"), b, {
                        block: o
                    }, null).write(' tabindex="2"/></div></div><div class="input-wrapper zip-code"><label for="zipCode" ').exists(b.get("zipcode"), b, {
                        block: p
                    }, null).write('>Zip Code</label><input data-save-on-blur name="zipCode" type="number" data-validation="').reference(b.getPath(!1, ["validations", "zipCode"]), b, "h").write('" value="').reference(b.get("zipcode"), b, "h").write('" pattern="\\d*" maxlength="5" ').notexists(b.get("canEdit"), b, {
                        block: q
                    }, null).write(' needsclick tabindex="3"/><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper time-zone"><label for="timeZone" class="reveal">Time Zone</label><select data-save-on-blur name="timeZone" class="time" data-validation="').reference(b.getPath(!1, ["validations", "timeZone"]), b, "h").write('" needsclick ').notexists(b.get("canEdit"), b, {
                        block: r
                    }, null).write(' tabindex="4"><option value="" disabled selected></option><option  ').notexists(b.get("canEdit"), b, {
                        block: s
                    }, null).write(' data-utc-offset="-10"   value="US/Hawaii">US/Hawaii</option><option  ').notexists(b.get("canEdit"), b, {
                        block: t
                    }, null).write(' data-utc-offset="-9"    value="US/Alaska">US/Alaska</option><option  ').notexists(b.get("canEdit"), b, {
                        block: u
                    }, null).write(' data-utc-offset="-8"    value="US/Pacific">US/Pacific</option><option  ').notexists(b.get("canEdit"), b, {
                        block: v
                    }, null).write(' data-utc-offset="-7"    value="US/Arizona">US/Arizona</option><option  ').notexists(b.get("canEdit"), b, {
                        block: w
                    }, null).write(' data-utc-offset="-7"    value="US/Mountain">US/Mountain</option><option  ').notexists(b.get("canEdit"), b, {
                        block: x
                    }, null).write(' data-utc-offset="-6"    value="US/Central">US/Central</option><option  ').notexists(b.get("canEdit"), b, {
                        block: y
                    }, null).write(' data-utc-offset="-5"    value="US/Eastern">US/Eastern</option><option  ').notexists(b.get("canEdit"), b, {
                        block: z
                    }, null).write(' data-utc-offset="-5"    value="US/East-Indiana">US/East-Indiana</option><option  ').notexists(b.get("canEdit"), b, {
                        block: A
                    }, null).write(' data-utc-offset="-6"    value="America/Mexico_City">America/Mexico_City</option><option  ').notexists(b.get("canEdit"), b, {
                        block: B
                    }, null).write(' data-utc-offset="-8"    value="America/Tijuana">America/Tijuana</option><option  ').notexists(b.get("canEdit"), b, {
                        block: C
                    }, null).write(' data-utc-offset="-7"    value="America/Chihuahua">America/Chihuahua</option><option  ').notexists(b.get("canEdit"), b, {
                        block: D
                    }, null).write(' data-utc-offset="-6"    value="America/Guatemala">America/Guatemala</option><option  ').notexists(b.get("canEdit"), b, {
                        block: E
                    }, null).write(' data-utc-offset="-5"    value="America/Bogota">America/Bogota</option><option  ').notexists(b.get("canEdit"), b, {
                        block: F
                    }, null).write(' data-utc-offset="-4.5"  value="America/Caracas">America/Caracas</option><option  ').notexists(b.get("canEdit"), b, {
                        block: G
                    }, null).write(' data-utc-offset="-4"    value="America/Manaus">America/Manaus</option><option  ').notexists(b.get("canEdit"), b, {
                        block: H
                    }, null).write(' data-utc-offset="-4"    value="America/Santiago">America/Santiago</option><option  ').notexists(b.get("canEdit"), b, {
                        block: I
                    }, null).write(' data-utc-offset="-5"    value="Canada/Eastern">Canada/Eastern</option><option  ').notexists(b.get("canEdit"), b, {
                        block: J
                    }, null).write(' data-utc-offset="-6"    value="Canada/Saskatchewan">Canada/Saskatchewan</option><option  ').notexists(b.get("canEdit"), b, {
                        block: K
                    }, null).write(' data-utc-offset="-3.5"  value="Canada/Newfoundland">Canada/Newfoundland</option><option  ').notexists(b.get("canEdit"), b, {
                        block: L
                    }, null).write(' data-utc-offset="-3"    value="Brazil/East">Brazil/East</option><option  ').notexists(b.get("canEdit"), b, {
                        block: M
                    }, null).write(' data-utc-offset="-3"    value="America/Buenos_Aires">America/Buenos_Aires</option><option  ').notexists(b.get("canEdit"), b, {
                        block: N
                    }, null).write(' data-utc-offset="-3"    value="America/Godthab">America/Godthab</option><option  ').notexists(b.get("canEdit"), b, {
                        block: O
                    }, null).write(' data-utc-offset="-3"    value="America/Montevideo">America/Montevideo</option><option  ').notexists(b.get("canEdit"), b, {
                        block: P
                    }, null).write(' data-utc-offset="-2"    value="Atlantic/South_Georgia">Atlantic/South_Georgia</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Q
                    }, null).write(' data-utc-offset="-1"    value="Atlantic/Azores">Atlantic/Azores</option><option  ').notexists(b.get("canEdit"), b, {
                        block: R
                    }, null).write(' data-utc-offset="-1"    value="Atlantic/Cape_Verde">Atlantic/Cape_Verde</option><option  ').notexists(b.get("canEdit"), b, {
                        block: S
                    }, null).write(' data-utc-offset="1"     value="Africa/Casablanca">Africa/Casablanca</option><option  ').notexists(b.get("canEdit"), b, {
                        block: T
                    }, null).write(' data-utc-offset="0"     value="Europe/London">Europe/London</option><option  ').notexists(b.get("canEdit"), b, {
                        block: U
                    }, null).write(' data-utc-offset="1"     value="Europe/Berlin">Europe/Berlin</option><option  ').notexists(b.get("canEdit"), b, {
                        block: V
                    }, null).write(' data-utc-offset="1"     value="Europe/Belgrade">Europe/Belgrade</option><option  ').notexists(b.get("canEdit"), b, {
                        block: W
                    }, null).write(' data-utc-offset="1"     value="Europe/Brussels">Europe/Brussels</option><option  ').notexists(b.get("canEdit"), b, {
                        block: X
                    }, null).write(' data-utc-offset="1"     value="Europe/Warsaw">Europe/Warsaw</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Y
                    }, null).write(' data-utc-offset="1"     value="Africa/Algiers">Africa/Algiers</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Z
                    }, null).write(' data-utc-offset="2"     value="Asia/Amman">Asia/Amman</option><option  ').notexists(b.get("canEdit"), b, {
                        block: $
                    }, null).write(' data-utc-offset="2"     value="Europe/Athens">Europe/Athens</option><option  ').notexists(b.get("canEdit"), b, {
                        block: _
                    }, null).write(' data-utc-offset="2"     value="Asia/Beirut">Asia/Beirut</option><option  ').notexists(b.get("canEdit"), b, {
                        block: ab
                    }, null).write(' data-utc-offset="2"     value="Africa/Cairo">Africa/Cairo</option><option  ').notexists(b.get("canEdit"), b, {
                        block: bb
                    }, null).write(' data-utc-offset="2"     value="Africa/Harare">Africa/Harare</option><option  ').notexists(b.get("canEdit"), b, {
                        block: cb
                    }, null).write(' data-utc-offset="2"     value="Europe/Helsinki">Europe/Helsinki</option><option  ').notexists(b.get("canEdit"), b, {
                        block: db
                    }, null).write(' data-utc-offset="2"     value="Asia/Jerusalem">Asia/Jerusalem</option><option  ').notexists(b.get("canEdit"), b, {
                        block: eb
                    }, null).write(' data-utc-offset="2"     value="Europe/Minsk">Europe/Minsk</option><option  ').notexists(b.get("canEdit"), b, {
                        block: fb
                    }, null).write(' data-utc-offset="1"     value="Africa/Windhoek">Africa/Windhoek</option><option  ').notexists(b.get("canEdit"), b, {
                        block: gb
                    }, null).write(' data-utc-offset="3"     value="Asia/Baghdad">Asia/Baghdad</option><option  ').notexists(b.get("canEdit"), b, {
                        block: hb
                    }, null).write(' data-utc-offset="3"     value="Asia/Kuwait">Asia/Kuwait</option><option  ').notexists(b.get("canEdit"), b, {
                        block: ib
                    }, null).write(' data-utc-offset="3"     value="Europe/Moscow">Europe/Moscow</option><option  ').notexists(b.get("canEdit"), b, {
                        block: jb
                    }, null).write(' data-utc-offset="3"     value="Africa/Nairobi">Africa/Nairobi</option><option  ').notexists(b.get("canEdit"), b, {
                        block: kb
                    }, null).write(' data-utc-offset="4"     value="Asia/Tbilisi">Asia/Tbilisi</option><option  ').notexists(b.get("canEdit"), b, {
                        block: lb
                    }, null).write(' data-utc-offset="3.5"   value="Asia/Tehran">Asia/Tehran</option><option  ').notexists(b.get("canEdit"), b, {
                        block: mb
                    }, null).write(' data-utc-offset="4"     value="Asia/Muscat">Asia/Muscat</option><option  ').notexists(b.get("canEdit"), b, {
                        block: nb
                    }, null).write(' data-utc-offset="4"     value="Asia/Baku">Asia/Baku</option><option  ').notexists(b.get("canEdit"), b, {
                        block: ob
                    }, null).write(' data-utc-offset="4"     value="Asia/Yerevan">Asia/Yerevan</option><option  ').notexists(b.get("canEdit"), b, {
                        block: pb
                    }, null).write(' data-utc-offset="4.5"   value="Asia/Kabul">Asia/Kabul</option><option  ').notexists(b.get("canEdit"), b, {
                        block: qb
                    }, null).write(' data-utc-offset="6"     value="Asia/Yekaterinburg">Asia/Yekaterinburg</option><option  ').notexists(b.get("canEdit"), b, {
                        block: rb
                    }, null).write(' data-utc-offset="5"     value="Asia/Karachi">Asia/Karachi</option><option  ').notexists(b.get("canEdit"), b, {
                        block: sb
                    }, null).write(' data-utc-offset="5.5"   value="Asia/Calcutta">Asia/Calcutta</option><option  ').notexists(b.get("canEdit"), b, {
                        block: tb
                    }, null).write(' data-utc-offset="5.5"   value="Asia/Colombo">Asia/Colombo</option><option  ').notexists(b.get("canEdit"), b, {
                        block: ub
                    }, null).write(' data-utc-offset="5.75"  value="Asia/Katmandu">Asia/Katmandu</option><option  ').notexists(b.get("canEdit"), b, {
                        block: vb
                    }, null).write(' data-utc-offset="6"     value="Asia/Novosibirsk">Asia/Novosibirsk</option><option  ').notexists(b.get("canEdit"), b, {
                        block: wb
                    }, null).write(' data-utc-offset="6"     value="Asia/Dhaka">Asia/Dhaka</option><option  ').notexists(b.get("canEdit"), b, {
                        block: xb
                    }, null).write(' data-utc-offset="6.5"   value="Asia/Rangoon">Asia/Rangoon</option><option  ').notexists(b.get("canEdit"), b, {
                        block: yb
                    }, null).write(' data-utc-offset="7"     value="Asia/Bangkok">Asia/Bangkok</option><option  ').notexists(b.get("canEdit"), b, {
                        block: zb
                    }, null).write(' data-utc-offset="7"     value="Asia/Krasnoyarsk">Asia/Krasnoyarsk</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Ab
                    }, null).write(' data-utc-offset="8"     value="Asia/Hong_Kong">Asia/Hong_Kong</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Bb
                    }, null).write(' data-utc-offset="9"     value="Asia/Irkutsk">Asia/Irkutsk</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Cb
                    }, null).write(' data-utc-offset="8"     value="Asia/Kuala_Lumpur">Asia/Kuala_Lumpur</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Db
                    }, null).write(' data-utc-offset="8"     value="Australia/Perth">Australia/Perth</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Eb
                    }, null).write(' data-utc-offset="8"     value="Asia/Taipei">Asia/Taipei</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Fb
                    }, null).write(' data-utc-offset="9"     value="Asia/Tokyo">Asia/Tokyo</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Gb
                    }, null).write(' data-utc-offset="9"     value="Asia/Seoul">Asia/Seoul</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Hb
                    }, null).write(' data-utc-offset="9"     value="Asia/Yakutsk">Asia/Yakutsk</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Ib
                    }, null).write(' data-utc-offset="9.5"   value="Australia/Adelaide">Australia/Adelaide</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Jb
                    }, null).write(' data-utc-offset="9.5"   value="Australia/Darwin">Australia/Darwin</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Kb
                    }, null).write(' data-utc-offset="10"    value="Australia/Brisbane">Australia/Brisbane</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Lb
                    }, null).write(' data-utc-offset="10"    value="Australia/Sydney">Australia/Sydney</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Mb
                    }, null).write(' data-utc-offset="10"    value="Pacific/Guam">Pacific/Guam</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Nb
                    }, null).write(' data-utc-offset="10"    value="Australia/Hobart">Australia/Hobart</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Ob
                    }, null).write(' data-utc-offset="10"    value="Asia/Vladivostok">Asia/Vladivostok</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Pb
                    }, null).write(' data-utc-offset="12"    value="Asia/Magadan">Asia/Magadan</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Qb
                    }, null).write(' data-utc-offset="12"    value="Pacific/Auckland">Pacific/Auckland</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Rb
                    }, null).write(' data-utc-offset="12"    value="Pacific/Fiji">Pacific/Fiji</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Sb
                    }, null).write(' data-utc-offset="13"    value="Pacific/Tongatapu">Pacific/Tongatapu</option><option  ').notexists(b.get("canEdit"), b, {
                        block: Tb
                    }, null).write(' data-utc-offset="11"    value="Pacific/Midway">Pacific/Midway</option></select><p class="error-message"></p></div>').exists(b.get("isPaired"), b, {
                        block: Ub
                    }, null).write("</div><br>").exists(b.get("canEdit"), b, {
                        block: Vb
                    }, null).write('</div><!-- END non-banner-wrapper --></div><!-- END bed-settings-wrapper --></div><!-- END overflow-scroll-inner --></div><!-- END overflow-scroll --><div class="selected-child">').partial("templates/headers/back-header", b, {
                        pageTitle: $b
                    }).write('<div class="child-wrapper"></div></div>')
                }

                function c(a) {
                    return a.write(" show-banner")
                }

                function d(a) {
                    return a.write('<div class="sleepiq-banner-off"><div class="text-content">SleepIQ<sup>&reg;</sup> technology is currently off.<br>To resume readings, TURN ON.</div></div>')
                }

                function e(a) {
                    return a.write("<br />")
                }

                function f(a, b) {
                    return a.exists(b.get("canEdit"), b, {
                        "else": g,
                        block: h
                    }, null)
                }

                function g(a) {
                    return a.write("<br />")
                }

                function h(a, b) {
                    return a.write('<div class="sleepiq-toggle"><div class="label">SleepIQ<sup>&reg;</sup> Technology</div><div class="switch').notexists(b.get("isPauseMode"), b, {
                        block: i
                    }, null).write('"><div class="rocker"></div><div class="label on">On</div><div class="label off">Off</div></div></div>')
                }

                function i(a) {
                    return a.write(" on")
                }

                function j(a) {
                    return a.write('class="reveal"')
                }

                function k(a, b) {
                    return a.write('value="').reference(b.get("name"), b, "h").write('" data-validate-onload="true"')
                }

                function l(a) {
                    return a.write("disabled")
                }

                function m(a) {
                    return a.write("show")
                }

                function n(a) {
                    return a.write("disabled")
                }

                function o(a) {
                    return a.write("disabled")
                }

                function p(a) {
                    return a.write('class="reveal"')
                }

                function q(a) {
                    return a.write("disabled")
                }

                function r(a) {
                    return a.write('disabled="disabled"')
                }

                function s(a) {
                    return a.write("disabled")
                }

                function t(a) {
                    return a.write("disabled")
                }

                function u(a) {
                    return a.write("disabled")
                }

                function v(a) {
                    return a.write("disabled")
                }

                function w(a) {
                    return a.write("disabled")
                }

                function x(a) {
                    return a.write("disabled")
                }

                function y(a) {
                    return a.write("disabled")
                }

                function z(a) {
                    return a.write("disabled")
                }

                function A(a) {
                    return a.write("disabled")
                }

                function B(a) {
                    return a.write("disabled")
                }

                function C(a) {
                    return a.write("disabled")
                }

                function D(a) {
                    return a.write("disabled")
                }

                function E(a) {
                    return a.write("disabled")
                }

                function F(a) {
                    return a.write("disabled")
                }

                function G(a) {
                    return a.write("disabled")
                }

                function H(a) {
                    return a.write("disabled")
                }

                function I(a) {
                    return a.write("disabled")
                }

                function J(a) {
                    return a.write("disabled")
                }

                function K(a) {
                    return a.write("disabled")
                }

                function L(a) {
                    return a.write("disabled")
                }

                function M(a) {
                    return a.write("disabled")
                }

                function N(a) {
                    return a.write("disabled")
                }

                function O(a) {
                    return a.write("disabled")
                }

                function P(a) {
                    return a.write("disabled")
                }

                function Q(a) {
                    return a.write("disabled")
                }

                function R(a) {
                    return a.write("disabled")
                }

                function S(a) {
                    return a.write("disabled")
                }

                function T(a) {
                    return a.write("disabled")
                }

                function U(a) {
                    return a.write("disabled")
                }

                function V(a) {
                    return a.write("disabled")
                }

                function W(a) {
                    return a.write("disabled")
                }

                function X(a) {
                    return a.write("disabled")
                }

                function Y(a) {
                    return a.write("disabled")
                }

                function Z(a) {
                    return a.write("disabled")
                }

                function $(a) {
                    return a.write("disabled")
                }

                function _(a) {
                    return a.write("disabled")
                }

                function ab(a) {
                    return a.write("disabled")
                }

                function bb(a) {
                    return a.write("disabled")
                }

                function cb(a) {
                    return a.write("disabled")
                }

                function db(a) {
                    return a.write("disabled")
                }

                function eb(a) {
                    return a.write("disabled")
                }

                function fb(a) {
                    return a.write("disabled")
                }

                function gb(a) {
                    return a.write("disabled")
                }

                function hb(a) {
                    return a.write("disabled")
                }

                function ib(a) {
                    return a.write("disabled")
                }

                function jb(a) {
                    return a.write("disabled")
                }

                function kb(a) {
                    return a.write("disabled")
                }

                function lb(a) {
                    return a.write("disabled")
                }

                function mb(a) {
                    return a.write("disabled")
                }

                function nb(a) {
                    return a.write("disabled")
                }

                function ob(a) {
                    return a.write("disabled")
                }

                function pb(a) {
                    return a.write("disabled")
                }

                function qb(a) {
                    return a.write("disabled")
                }

                function rb(a) {
                    return a.write("disabled")
                }

                function sb(a) {
                    return a.write("disabled")
                }

                function tb(a) {
                    return a.write("disabled")
                }

                function ub(a) {
                    return a.write("disabled")
                }

                function vb(a) {
                    return a.write("disabled")
                }

                function wb(a) {
                    return a.write("disabled")
                }

                function xb(a) {
                    return a.write("disabled")
                }

                function yb(a) {
                    return a.write("disabled")
                }

                function zb(a) {
                    return a.write("disabled")
                }

                function Ab(a) {
                    return a.write("disabled")
                }

                function Bb(a) {
                    return a.write("disabled")
                }

                function Cb(a) {
                    return a.write("disabled")
                }

                function Db(a) {
                    return a.write("disabled")
                }

                function Eb(a) {
                    return a.write("disabled")
                }

                function Fb(a) {
                    return a.write("disabled")
                }

                function Gb(a) {
                    return a.write("disabled")
                }

                function Hb(a) {
                    return a.write("disabled")
                }

                function Ib(a) {
                    return a.write("disabled")
                }

                function Jb(a) {
                    return a.write("disabled")
                }

                function Kb(a) {
                    return a.write("disabled")
                }

                function Lb(a) {
                    return a.write("disabled")
                }

                function Mb(a) {
                    return a.write("disabled")
                }

                function Nb(a) {
                    return a.write("disabled")
                }

                function Ob(a) {
                    return a.write("disabled")
                }

                function Pb(a) {
                    return a.write("disabled")
                }

                function Qb(a) {
                    return a.write("disabled")
                }

                function Rb(a) {
                    return a.write("disabled")
                }

                function Sb(a) {
                    return a.write("disabled")
                }

                function Tb(a) {
                    return a.write("disabled")
                }

                function Ub(a, b) {
                    return a.write('<div class="input-wrapper status"><label for="status" class="reveal">Status</label><div class="status-value ').reference(b.get("statusNamed"), b, "h").write('"><i></i><input class="status-value-label" name="status" type="text" readonly="true" value="').reference(b.get("statusNamed"), b, "h").write('" tabindex="5"/></div></div>')
                }

                function Vb(a, b) {
                    return a.exists(b.get("isPaired"), b, {
                        "else": Wb,
                        block: Xb
                    }, null)
                }

                function Wb(a) {
                    return a.write('<div class="item-heading requires-ble">Bed Setup</div><div class="link-item link requires-ble" data-href="/binding/welcome"><span class="name">Pair this Bed</span></div>')
                }

                function Xb(a, b) {
                    return a.write('<div class="item-heading">Troubleshooting</div><div class="link-item subpage-link"><span class="name">Network Troubleshooting</span></div><div class="link-item link" data-href="/binding/onlybaseline"><span class="name">Baseline Bed</span></div>').exists(b.get("isK2"), b, {
                        block: Yb
                    }, null).write('<div class="link-item link requires-ble" data-href="/binding/replacepumphardware"><span class="name">Replace Pump Hardware</span></div>').exists(b.get("isK2"), b, {
                        block: Zb
                    }, null)
                }

                function Yb(a) {
                    return a.write('<div class="link-item link requires-ble" data-href="/binding/testheadtilt"><span class="name">Test Headtilt</span></div><div class="link-item link requires-ble" data-href="/binding/testoutlet"><span class="name">Test Outlet Connection</span></div>')
                }

                function Zb(a) {
                    return a.write('<div class="link-item link requires-ble" data-href="/binding/replaceoutlet"><span class="name">Replace Outlet</span></div>')
                }

                function $b(a, b) {
                    return a.reference(b.get("currentTitle"), b, "h")
                }
                return a.register("templates/pageviews/BedSettingsView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/BedSettingsView", b, c)
                }
            }
        }), define("app/utils/ZipCodes", ["require"], function() {
            return {
                zip: [210, 211, 212, 213, 214, 215, 501, 544, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 650, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 674, 676, 677, 678, 680, 681, 682, 683, 685, 687, 688, 690, 692, 693, 694, 698, 703, 704, 705, 707, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 747, 748, 751, 752, 754, 757, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 775, 777, 778, 780, 782, 783, 784, 785, 786, 791, 792, 794, 795, 801, 802, 803, 804, 805, 820, 821, 822, 823, 824, 830, 831, 840, 841, 850, 851, 901, 902, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 975, 976, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1020, 1021, 1022, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1050, 1053, 1054, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1114, 1115, 1116, 1118, 1119, 1128, 1129, 1133, 1138, 1139, 1144, 1151, 1152, 1199, 1201, 1202, 1203, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1235, 1236, 1237, 1238, 1240, 1242, 1243, 1244, 1245, 1247, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1264, 1266, 1267, 1270, 1301, 1302, 1330, 1331, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1349, 1350, 1351, 1354, 1355, 1360, 1364, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1375, 1376, 1378, 1379, 1380, 1393, 1420, 1427, 1430, 1431, 1432, 1436, 1438, 1440, 1441, 1450, 1451, 1452, 1453, 1460, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1542, 1543, 1545, 1546, 1550, 1560, 1561, 1562, 1564, 1566, 1568, 1569, 1570, 1571, 1580, 1581, 1582, 1583, 1585, 1586, 1588, 1590, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1634, 1653, 1654, 1655, 1701, 1702, 1703, 1704, 1705, 1718, 1719, 1720, 1721, 1730, 1731, 1740, 1741, 1742, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1754, 1756, 1757, 1760, 1770, 1772, 1773, 1775, 1776, 1778, 1784, 1801, 1803, 1805, 1806, 1807, 1808, 1810, 1812, 1813, 1815, 1820, 1821, 1822, 1823, 1824, 1826, 1827, 1830, 1831, 1832, 1833, 1834, 1835, 1840, 1841, 1842, 1843, 1844, 1845, 1850, 1851, 1852, 1853, 1854, 1856, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1876, 1879, 1880, 1885, 1886, 1887, 1888, 1889, 1890, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1913, 1915, 1921, 1922, 1923, 1929, 1930, 1931, 1936, 1937, 1938, 1940, 1944, 1945, 1947, 1949, 1950, 1951, 1952, 1960, 1961, 1965, 1966, 1969, 1970, 1971, 1982, 1983, 1984, 1985, 2018, 2019, 2020, 2021, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2035, 2038, 2040, 2041, 2043, 2044, 2045, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2065, 2066, 2067, 2070, 2071, 2072, 2081, 2085, 2090, 2093, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2199, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2215, 2216, 2217, 2222, 2238, 2239, 2241, 2254, 2258, 2266, 2269, 2272, 2277, 2283, 2284, 2293, 2295, 2297, 2301, 2302, 2303, 2304, 2305, 2322, 2324, 2325, 2327, 2330, 2331, 2332, 2333, 2334, 2337, 2338, 2339, 2341, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2366, 2367, 2368, 2369, 2370, 2375, 2379, 2381, 2382, 2401, 2402, 2403, 2404, 2405, 2407, 2420, 2421, 2445, 2446, 2447, 2451, 2452, 2453, 2454, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2464, 2465, 2466, 2467, 2468, 2471, 2472, 2474, 2475, 2476, 2477, 2478, 2479, 2481, 2482, 2492, 2493, 2494, 2495, 2532, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2549, 2551, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2561, 2562, 2563, 2564, 2565, 2567, 2568, 2571, 2573, 2574, 2575, 2576, 2584, 2595, 2601, 2625, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2657, 2659, 2660, 2661, 2662, 2663, 2664, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2675, 2702, 2703, 2712, 2713, 2714, 2715, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2735, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2760, 2761, 2762, 2763, 2764, 2766, 2767, 2768, 2769, 2770, 2771, 2777, 2779, 2780, 2781, 2783, 2789, 2790, 2791, 2801, 2802, 2804, 2805, 2806, 2807, 2808, 2809, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2852, 2854, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2885, 2886, 2887, 2888, 2889, 2891, 2892, 2893, 2894, 2895, 2896, 2898, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2940, 3004, 3030, 3031, 3032, 3033, 3034, 3036, 3037, 3038, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3051, 3052, 3053, 3054, 3055, 3057, 3058, 3060, 3061, 3062, 3063, 3064, 3070, 3071, 3073, 3076, 3077, 3079, 3082, 3084, 3086, 3087, 3091, 3097, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3215, 3216, 3217, 3218, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3237, 3238, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3249, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3266, 3268, 3269, 3270, 3272, 3273, 3274, 3275, 3276, 3278, 3279, 3280, 3281, 3282, 3284, 3287, 3289, 3290, 3291, 3293, 3298, 3299, 3301, 3302, 3303, 3304, 3305, 3307, 3342, 3386, 3431, 3435, 3438, 3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3455, 3456, 3457, 3458, 3461, 3462, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3477, 3552, 3561, 3570, 3572, 3574, 3575, 3576, 3578, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3587, 3588, 3589, 3590, 3592, 3595, 3597, 3598, 3601, 3602, 3603, 3604, 3605, 3607, 3608, 3609, 3638, 3648, 3678, 3688, 3733, 3740, 3741, 3743, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3765, 3766, 3768, 3769, 3770, 3771, 3773, 3774, 3777, 3779, 3780, 3781, 3782, 3784, 3785, 3801, 3802, 3803, 3804, 3805, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3824, 3825, 3826, 3827, 3830, 3832, 3833, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3862, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3878, 3882, 3883, 3884, 3885, 3886, 3887, 3890, 3891, 3894, 3896, 3897, 3901, 3902, 3903, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4013, 4014, 4015, 4016, 4017, 4019, 4020, 4021, 4022, 4024, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4046, 4047, 4048, 4049, 4050, 4051, 4053, 4054, 4055, 4056, 4057, 4061, 4062, 4063, 4064, 4065, 4066, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079, 4081, 4082, 4083, 4084, 4085, 4086, 4087, 4088, 4090, 4091, 4092, 4093, 4094, 4095, 4096, 4097, 4098, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4112, 4116, 4122, 4123, 4124, 4210, 4211, 4212, 4216, 4217, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4230, 4231, 4234, 4236, 4237, 4238, 4239, 4240, 4241, 4243, 4250, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4265, 4266, 4267, 4268, 4270, 4271, 4273, 4274, 4275, 4276, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4294, 4321, 4327, 4330, 4332, 4333, 4336, 4338, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4357, 4358, 4359, 4360, 4363, 4364, 4401, 4402, 4406, 4408, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4422, 4423, 4424, 4426, 4427, 4428, 4429, 4430, 4431, 4434, 4435, 4438, 4441, 4442, 4443, 4444, 4448, 4449, 4450, 4451, 4453, 4454, 4455, 4456, 4457, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4467, 4468, 4469, 4471, 4472, 4473, 4474, 4475, 4476, 4478, 4479, 4481, 4485, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4495, 4496, 4497, 4530, 4535, 4536, 4537, 4538, 4539, 4541, 4543, 4544, 4546, 4547, 4548, 4549, 4551, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4562, 4563, 4564, 4565, 4567, 4568, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4578, 4579, 4600, 4605, 4606, 4607, 4609, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 4619, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4634, 4635, 4637, 4640, 4642, 4643, 4644, 4645, 4646, 4648, 4649, 4650, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4660, 4662, 4664, 4665, 4666, 4667, 4668, 4669, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4679, 4680, 4681, 4683, 4684, 4685, 4686, 4690, 4691, 4693, 4694, 4724, 4730, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 4745, 4746, 4747, 4750, 4751, 4752, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4768, 4769, 4770, 4772, 4773, 4774, 4775, 4776, 4777, 4779, 4780, 4781, 4782, 4783, 4785, 4786, 4787, 4788, 4840, 4841, 4842, 4843, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 4862, 4863, 4864, 4865, 4901, 4903, 4910, 4911, 4912, 4915, 4917, 4918, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4932, 4933, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942, 4943, 4944, 4945, 4947, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 4956, 4957, 4958, 4961, 4962, 4963, 4964, 4965, 4966, 4967, 4969, 4970, 4971, 4972, 4973, 4974, 4975, 4976, 4978, 4979, 4981, 4982, 4983, 4984, 4985, 4986, 4987, 4988, 4989, 4992, 5001, 5009, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5058, 5059, 5060, 5061, 5062, 5065, 5067, 5068, 5069, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5079, 5080, 5081, 5083, 5084, 5085, 5086, 5088, 5089, 5091, 5101, 5124, 5141, 5142, 5143, 5144, 5146, 5148, 5149, 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5158, 5159, 5161, 5201, 5210, 5219, 5233, 5250, 5251, 5252, 5253, 5254, 5255, 5257, 5260, 5261, 5262, 5267, 5286, 5301, 5302, 5303, 5304, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5350, 5351, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5360, 5361, 5362, 5363, 5364, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5418, 5433, 5439, 5440, 5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448, 5449, 5450, 5451, 5452, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5465, 5466, 5468, 5469, 5470, 5471, 5472, 5473, 5474, 5476, 5477, 5478, 5479, 5481, 5482, 5483, 5485, 5486, 5487, 5488, 5489, 5490, 5491, 5492, 5494, 5495, 5501, 5544, 5601, 5602, 5603, 5604, 5609, 5620, 5626, 5633, 5640, 5641, 5647, 5648, 5649, 5650, 5651, 5652, 5653, 5654, 5655, 5656, 5657, 5658, 5660, 5661, 5662, 5663, 5664, 5665, 5666, 5667, 5669, 5670, 5671, 5672, 5673, 5674, 5675, 5676, 5677, 5678, 5679, 5680, 5681, 5682, 5701, 5702, 5730, 5731, 5732, 5733, 5734, 5735, 5736, 5737, 5738, 5739, 5740, 5741, 5742, 5743, 5744, 5745, 5746, 5747, 5748, 5750, 5751, 5752, 5753, 5757, 5758, 5759, 5760, 5761, 5762, 5763, 5764, 5765, 5766, 5767, 5768, 5769, 5770, 5772, 5773, 5774, 5775, 5776, 5777, 5778, 5801, 5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5832, 5833, 5836, 5837, 5838, 5839, 5840, 5841, 5842, 5843, 5845, 5846, 5847, 5848, 5849, 5850, 5851, 5852, 5853, 5855, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5866, 5867, 5868, 5871, 5872, 5873, 5874, 5875, 5892, 5901, 5902, 5903, 5904, 5905, 5906, 5907, 5928, 5958, 6001, 6002, 6006, 6010, 6011, 6013, 6016, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6037, 6039, 6040, 6041, 6043, 6045, 6049, 6050, 6051, 6052, 6053, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 6067, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6098, 6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, 6114, 6115, 6117, 6118, 6119, 6120, 6123, 6126, 6127, 6128, 6129, 6131, 6132, 6133, 6134, 6137, 6138, 6140, 6141, 6142, 6143, 6144, 6145, 6146, 6147, 6150, 6151, 6152, 6153, 6154, 6155, 6156, 6160, 6161, 6167, 6176, 6180, 6183, 6199, 6226, 6230, 6231, 6232, 6233, 6234, 6235, 6237, 6238, 6239, 6241, 6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 6250, 6251, 6254, 6255, 6256, 6258, 6259, 6260, 6262, 6263, 6264, 6265, 6266, 6267, 6268, 6269, 6277, 6278, 6279, 6280, 6281, 6282, 6320, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6337, 6339, 6340, 6349, 6350, 6351, 6353, 6354, 6355, 6357, 6359, 6360, 6365, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6390, 6401, 6403, 6404, 6405, 6408, 6409, 6410, 6411, 6412, 6413, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6422, 6423, 6424, 6426, 6430, 6431, 6432, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, 6444, 6447, 6450, 6451, 6454, 6455, 6456, 6457, 6459, 6460, 6467, 6468, 6469, 6470, 6471, 6472, 6473, 6474, 6475, 6477, 6478, 6479, 6480, 6481, 6482, 6483, 6484, 6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6497, 6498, 6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6510, 6511, 6512, 6513, 6514, 6515, 6516, 6517, 6518, 6519, 6520, 6521, 6524, 6525, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 6537, 6538, 6540, 6601, 6602, 6604, 6605, 6606, 6607, 6608, 6610, 6611, 6612, 6614, 6615, 6650, 6673, 6699, 6701, 6702, 6703, 6704, 6705, 6706, 6708, 6710, 6712, 6716, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6731, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6762, 6763, 6770, 6776, 6777, 6778, 6779, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6790, 6791, 6793, 6794, 6795, 6796, 6798, 6801, 6804, 6807, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6819, 6820, 6824, 6825, 6829, 6830, 6831, 6832, 6836, 6840, 6842, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6870, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6883, 6888, 6889, 6890, 6896, 6897, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 6910, 6911, 6912, 6913, 6914, 6920, 6921, 6922, 6925, 6926, 6927, 6928, 6993, 7001, 7002, 7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 7012, 7013, 7014, 7015, 7016, 7017, 7018, 7019, 7020, 7021, 7022, 7023, 7024, 7026, 7027, 7028, 7029, 7030, 7031, 7032, 7033, 7034, 7035, 7036, 7039, 7040, 7041, 7042, 7043, 7044, 7045, 7046, 7047, 7050, 7051, 7052, 7054, 7055, 7057, 7058, 7059, 7060, 7061, 7062, 7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 7071, 7072, 7073, 7074, 7075, 7076, 7077, 7078, 7079, 7080, 7081, 7082, 7083, 7086, 7087, 7088, 7090, 7091, 7092, 7093, 7094, 7095, 7096, 7097, 7099, 7101, 7102, 7103, 7104, 7105, 7106, 7107, 7108, 7109, 7110, 7111, 7112, 7114, 7115, 7175, 7182, 7184, 7188, 7189, 7191, 7192, 7193, 7194, 7195, 7197, 7198, 7199, 7201, 7202, 7203, 7204, 7205, 7206, 7207, 7208, 7290, 7301, 7302, 7303, 7304, 7305, 7306, 7307, 7308, 7309, 7310, 7311, 7399, 7401, 7403, 7405, 7407, 7410, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 7423, 7424, 7427, 7428, 7430, 7432, 7435, 7436, 7438, 7439, 7440, 7442, 7444, 7446, 7450, 7451, 7452, 7456, 7457, 7458, 7460, 7461, 7462, 7463, 7465, 7470, 7474, 7477, 7480, 7481, 7495, 7498, 7501, 7502, 7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7522, 7524, 7530, 7533, 7538, 7543, 7544, 7571, 7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7610, 7620, 7621, 7624, 7626, 7627, 7628, 7630, 7631, 7632, 7640, 7641, 7642, 7643, 7644, 7645, 7646, 7647, 7648, 7649, 7650, 7652, 7653, 7656, 7657, 7660, 7661, 7662, 7663, 7666, 7670, 7675, 7676, 7677, 7688, 7701, 7702, 7703, 7704, 7709, 7710, 7711, 7712, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 7724, 7726, 7727, 7728, 7730, 7731, 7732, 7733, 7734, 7735, 7737, 7738, 7739, 7740, 7746, 7747, 7748, 7750, 7751, 7752, 7753, 7754, 7755, 7756, 7757, 7758, 7760, 7762, 7763, 7764, 7765, 7777, 7799, 7801, 7802, 7803, 7806, 7819, 7820, 7821, 7822, 7823, 7825, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7855, 7856, 7857, 7860, 7863, 7865, 7866, 7869, 7870, 7871, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7885, 7890, 7901, 7902, 7919, 7920, 7921, 7922, 7924, 7926, 7927, 7928, 7930, 7931, 7932, 7933, 7934, 7935, 7936, 7938, 7939, 7940, 7945, 7946, 7950, 7952, 7960, 7961, 7962, 7963, 7969, 7970, 7974, 7976, 7977, 7978, 7979, 7980, 7981, 7983, 7997, 7999, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 8008, 8009, 8010, 8011, 8012, 8014, 8015, 8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8025, 8026, 8027, 8028, 8029, 8030, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8041, 8042, 8043, 8045, 8046, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8059, 8060, 8061, 8062, 8063, 8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, 8080, 8081, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 8099, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8201, 8202, 8203, 8204, 8205, 8210, 8212, 8213, 8214, 8215, 8217, 8218, 8219, 8220, 8221, 8223, 8224, 8225, 8226, 8227, 8230, 8231, 8232, 8234, 8237, 8240, 8241, 8242, 8243, 8244, 8245, 8246, 8247, 8248, 8250, 8251, 8252, 8253, 8260, 8270, 8283, 8302, 8310, 8311, 8312, 8313, 8314, 8315, 8316, 8317, 8318, 8319, 8320, 8321, 8322, 8323, 8324, 8326, 8327, 8328, 8329, 8330, 8332, 8334, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 8349, 8350, 8352, 8353, 8360, 8361, 8362, 8370, 8401, 8402, 8403, 8404, 8405, 8406, 8501, 8502, 8504, 8505, 8510, 8511, 8512, 8514, 8515, 8518, 8520, 8525, 8526, 8527, 8528, 8530, 8533, 8534, 8535, 8536, 8540, 8541, 8542, 8543, 8544, 8550, 8551, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8560, 8561, 8562, 8570, 8601, 8602, 8603, 8604, 8605, 8606, 8607, 8608, 8609, 8610, 8611, 8618, 8619, 8620, 8625, 8628, 8629, 8638, 8640, 8641, 8645, 8646, 8647, 8648, 8650, 8666, 8677, 8690, 8691, 8695, 8701, 8720, 8721, 8722, 8723, 8724, 8730, 8731, 8732, 8733, 8734, 8735, 8736, 8738, 8739, 8740, 8741, 8742, 8750, 8751, 8752, 8753, 8754, 8755, 8756, 8757, 8758, 8759, 8792, 8801, 8802, 8803, 8804, 8805, 8807, 8808, 8809, 8810, 8812, 8816, 8817, 8818, 8820, 8821, 8822, 8823, 8824, 8825, 8826, 8827, 8828, 8829, 8830, 8831, 8832, 8833, 8834, 8835, 8836, 8837, 8840, 8844, 8846, 8848, 8850, 8851, 8852, 8853, 8854, 8855, 8857, 8858, 8859, 8861, 8862, 8863, 8865, 8867, 8868, 8869, 8870, 8871, 8872, 8873, 8875, 8876, 8877, 8878, 8879, 8880, 8882, 8884, 8885, 8886, 8887, 8888, 8889, 8890, 8896, 8899, 8901, 8902, 8903, 8904, 8905, 8906, 8907, 8922, 8933, 8988, 8989, 10001, 10002, 10003, 10004, 10005, 10006, 10007, 10008, 10009, 10010, 10011, 10012, 10013, 10014, 10015, 10016, 10017, 10018, 10019, 10020, 10021, 10022, 10023, 10024, 10025, 10026, 10027, 10028, 10029, 10030, 10031, 10032, 10033, 10034, 10035, 10036, 10037, 10038, 10039, 10040, 10041, 10043, 10044, 10045, 10046, 10047, 10048, 10055, 10060, 10069, 10072, 10079, 10080, 10081, 10082, 10087, 10090, 10094, 10095, 10096, 10098, 10099, 10101, 10102, 10103, 10104, 10105, 10106, 10107, 10108, 10109, 10110, 10111, 10112, 10113, 10114, 10115, 10116, 10117, 10118, 10119, 10120, 10121, 10122, 10123, 10124, 10125, 10126, 10128, 10129, 10130, 10131, 10132, 10133, 10138, 10149, 10150, 10151, 10152, 10153, 10154, 10155, 10156, 10157, 10158, 10159, 10160, 10161, 10162, 10163, 10164, 10165, 10166, 10167, 10168, 10169, 10170, 10171, 10172, 10173, 10174, 10175, 10176, 10177, 10178, 10179, 10184, 10185, 10196, 10197, 10199, 10203, 10211, 10212, 10213, 10242, 10249, 10250, 10256, 10257, 10258, 10259, 10260, 10261, 10265, 10268, 10269, 10270, 10271, 10272, 10273, 10274, 10275, 10276, 10277, 10278, 10279, 10280, 10281, 10282, 10285, 10286, 10292, 10301, 10302, 10303, 10304, 10305, 10306, 10307, 10308, 10309, 10310, 10311, 10312, 10313, 10314, 10422, 10451, 10452, 10453, 10454, 10455, 10456, 10457, 10458, 10459, 10460, 10461, 10462, 10463, 10464, 10465, 10466, 10467, 10468, 10469, 10470, 10471, 10472, 10473, 10474, 10475, 10499, 10501, 10502, 10503, 10504, 10505, 10506, 10507, 10509, 10510, 10511, 10512, 10514, 10516, 10517, 10518, 10519, 10520, 10521, 10522, 10523, 10524, 10526, 10527, 10528, 10530, 10532, 10533, 10535, 10536, 10537, 10538, 10540, 10541, 10542, 10543, 10545, 10546, 10547, 10548, 10549, 10550, 10551, 10552, 10553, 10557, 10558, 10559, 10560, 10562, 10566, 10567, 10570, 10571, 10572, 10573, 10576, 10577, 10578, 10579, 10580, 10581, 10583, 10586, 10587, 10588, 10589, 10590, 10591, 10592, 10594, 10595, 10596, 10597, 10598, 10601, 10602, 10603, 10604, 10605, 10606, 10607, 10610, 10625, 10629, 10633, 10650, 10701, 10702, 10703, 10704, 10705, 10706, 10707, 10708, 10709, 10710, 10730, 10801, 10802, 10803, 10804, 10805, 10901, 10910, 10911, 10912, 10913, 10914, 10915, 10916, 10917, 10918, 10919, 10920, 10921, 10922, 10923, 10924, 10925, 10926, 10927, 10928, 10930, 10931, 10932, 10933, 10940, 10941, 10943, 10946, 10950, 10952, 10953, 10954, 10956, 10957, 10958, 10959, 10960, 10962, 10963, 10964, 10965, 10968, 10969, 10970, 10973, 10974, 10975, 10976, 10977, 10979, 10980, 10981, 10982, 10983, 10984, 10985, 10986, 10987, 10988, 10989, 10990, 10992, 10993, 10994, 10995, 10996, 10997, 10998, 11001, 11002, 11003, 11004, 11005, 11010, 11020, 11021, 11022, 11023, 11024, 11025, 11026, 11027, 11030, 11040, 11041, 11042, 11043, 11044, 11050, 11051, 11052, 11053, 11054, 11055, 11096, 11099, 11101, 11102, 11103, 11104, 11105, 11106, 11109, 11120, 11201, 11202, 11203, 11204, 11205, 11206, 11207, 11208, 11209, 11210, 11211, 11212, 11213, 11214, 11215, 11216, 11217, 11218, 11219, 11220, 11221, 11222, 11223, 11224, 11225, 11226, 11228, 11229, 11230, 11231, 11232, 11233, 11234, 11235, 11236, 11237, 11238, 11239, 11240, 11241, 11242, 11243, 11244, 11245, 11247, 11248, 11249, 11251, 11252, 11254, 11255, 11256, 11286, 11302, 11351, 11352, 11353, 11354, 11355, 11356, 11357, 11358, 11359, 11360, 11361, 11362, 11363, 11364, 11365, 11366, 11367, 11368, 11369, 11370, 11371, 11372, 11373, 11374, 11375, 11377, 11378, 11379, 11380, 11381, 11385, 11386, 11388, 11390, 11405, 11411, 11412, 11413, 11414, 11415, 11416, 11417, 11418, 11419, 11420, 11421, 11422, 11423, 11424, 11425, 11426, 11427, 11428, 11429, 11430, 11431, 11432, 11433, 11434, 11435, 11436, 11439, 11451, 11484, 11499, 11501, 11507, 11509, 11510, 11514, 11516, 11517, 11518, 11520, 11530, 11531, 11535, 11536, 11542, 11545, 11547, 11548, 11549, 11550, 11551, 11552, 11553, 11554, 11555, 11556, 11557, 11558, 11559, 11560, 11561, 11562, 11563, 11564, 11565, 11566, 11568, 11569, 11570, 11571, 11572, 11575, 11576, 11577, 11579, 11580, 11581, 11582, 11583, 11588, 11590, 11592, 11593, 11594, 11595, 11596, 11597, 11598, 11599, 11690, 11691, 11692, 11693, 11694, 11695, 11696, 11697, 11701, 11702, 11703, 11704, 11705, 11706, 11707, 11708, 11709, 11710, 11713, 11714, 11715, 11716, 11717, 11718, 11719, 11720, 11721, 11722, 11724, 11725, 11726, 11727, 11729, 11730, 11731, 11732, 11733, 11735, 11736, 11737, 11738, 11739, 11740, 11741, 11742, 11743, 11745, 11746, 11747, 11749, 11750, 11751, 11752, 11753, 11754, 11755, 11756, 11757, 11758, 11760, 11762, 11763, 11764, 11765, 11766, 11767, 11768, 11769, 11770, 11771, 11772, 11773, 11774, 11775, 11776, 11777, 11778, 11779, 11780, 11782, 11783, 11784, 11786, 11787, 11788, 11789, 11790, 11791, 11792, 11793, 11794, 11795, 11796, 11797, 11798, 11801, 11802, 11803, 11804, 11805, 11815, 11819, 11853, 11854, 11855, 11901, 11930, 11931, 11932, 11933, 11934, 11935, 11937, 11939, 11940, 11941, 11942, 11944, 11946, 11947, 11948, 11949, 11950, 11951, 11952, 11953, 11954, 11955, 11956, 11957, 11958, 11959, 11960, 11961, 11962, 11963, 11964, 11965, 11967, 11968, 11969, 11970, 11971, 11972, 11973, 11975, 11976, 11977, 11978, 11980, 12007, 12008, 12009, 12010, 12015, 12016, 12017, 12018, 12019, 12020, 12022, 12023, 12024, 12025, 12027, 12028, 12029, 12031, 12032, 12033, 12035, 12036, 12037, 12040, 12041, 12042, 12043, 12045, 12046, 12047, 12050, 12051, 12052, 12053, 12054, 12055, 12056, 12057, 12058, 12059, 12060, 12061, 12062, 12063, 12064, 12065, 12066, 12067, 12068, 12069, 12070, 12071, 12072, 12073, 12074, 12075, 12076, 12077, 12078, 12081, 12082, 12083, 12084, 12085, 12086, 12087, 12089, 12090, 12092, 12093, 12094, 12095, 12103, 12106, 12107, 12108, 12110, 12111, 12115, 12116, 12117, 12118, 12120, 12121, 12122, 12123, 12124, 12125, 12128, 12130, 12131, 12132, 12133, 12134, 12136, 12137, 12138, 12139, 12140, 12141, 12143, 12144, 12147, 12148, 12149, 12150, 12151, 12153, 12154, 12155, 12156, 12157, 12158, 12159, 12160, 12161, 12162, 12164, 12165, 12166, 12167, 12168, 12169, 12170, 12172, 12173, 12174, 12175, 12176, 12177, 12179, 12180, 12181, 12182, 12183, 12184, 12185, 12186, 12187, 12188, 12189, 12190, 12192, 12193, 12194, 12195, 12196, 12197, 12198, 12201, 12202, 12203, 12204, 12205, 12206, 12207, 12208, 12209, 12210, 12211, 12212, 12214, 12220, 12222, 12223, 12224, 12225, 12226, 12227, 12228, 12229, 12230, 12231, 12232, 12233, 12234, 12235, 12236, 12237, 12238, 12239, 12240, 12241, 12242, 12243, 12244, 12245, 12246, 12247, 12248, 12249, 12250, 12252, 12255, 12256, 12257, 12260, 12261, 12262, 12288, 12301, 12302, 12303, 12304, 12305, 12306, 12307, 12308, 12309, 12325, 12345, 12401, 12402, 12404, 12405, 12406, 12407, 12409, 12410, 12411, 12412, 12413, 12414, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, 12436, 12438, 12439, 12440, 12441, 12442, 12443, 12444, 12446, 12447, 12448, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12463, 12464, 12465, 12466, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12477, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12498, 12501, 12502, 12503, 12504, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12533, 12534, 12537, 12538, 12540, 12541, 12542, 12543, 12544, 12545, 12546, 12547, 12548, 12549, 12550, 12551, 12552, 12553, 12555, 12557, 12561, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, 12571, 12572, 12574, 12575, 12577, 12578, 12580, 12581, 12582, 12583, 12584, 12585, 12586, 12588, 12589, 12590, 12592, 12593, 12594, 12601, 12602, 12603, 12604, 12697, 12701, 12710, 12719, 12720, 12721, 12722, 12723, 12724, 12725, 12726, 12727, 12729, 12732, 12733, 12734, 12736, 12737, 12738, 12739, 12740, 12741, 12742, 12743, 12745, 12746, 12747, 12748, 12749, 12750, 12751, 12752, 12754, 12755, 12756, 12758, 12759, 12760, 12762, 12763, 12764, 12765, 12766, 12767, 12768, 12769, 12770, 12771, 12775, 12776, 12777, 12778, 12779, 12780, 12781, 12782, 12783, 12784, 12785, 12786, 12787, 12788, 12789, 12790, 12791, 12792, 12793, 12801, 12803, 12804, 12805, 12807, 12808, 12809, 12810, 12811, 12812, 12814, 12815, 12816, 12817, 12819, 12820, 12821, 12822, 12823, 12824, 12825, 12827, 12828, 12830, 12831, 12832, 12833, 12834, 12835, 12836, 12837, 12838, 12839, 12841, 12842, 12843, 12844, 12845, 12846, 12847, 12848, 12849, 12850, 12851, 12852, 12853, 12854, 12855, 12856, 12857, 12858, 12859, 12860, 12861, 12862, 12863, 12864, 12865, 12866, 12870, 12871, 12872, 12873, 12874, 12877, 12878, 12879, 12883, 12884, 12885, 12886, 12887, 12901, 12903, 12910, 12911, 12912, 12913, 12914, 12915, 12916, 12917, 12918, 12919, 12920, 12921, 12922, 12923, 12924, 12926, 12927, 12928, 12929, 12930, 12932, 12933, 12934, 12935, 12936, 12937, 12938, 12939, 12941, 12942, 12943, 12944, 12945, 12946, 12949, 12950, 12952, 12953, 12955, 12956, 12957, 12958, 12959, 12960, 12961, 12962, 12964, 12965, 12966, 12967, 12969, 12970, 12972, 12973, 12974, 12975, 12976, 12977, 12978, 12979, 12980, 12981, 12983, 12985, 12986, 12987, 12989, 12992, 12993, 12995, 12996, 12997, 12998, 13020, 13021, 13022, 13024, 13026, 13027, 13028, 13029, 13030, 13031, 13032, 13033, 13034, 13035, 13036, 13037, 13039, 13040, 13041, 13042, 13043, 13044, 13045, 13051, 13052, 13053, 13054, 13056, 13057, 13060, 13061, 13062, 13063, 13064, 13065, 13066, 13068, 13069, 13071, 13072, 13073, 13074, 13076, 13077, 13078, 13080, 13081, 13082, 13083, 13084, 13087, 13088, 13089, 13090, 13092, 13093, 13101, 13102, 13103, 13104, 13107, 13108, 13110, 13111, 13112, 13113, 13114, 13115, 13116, 13117, 13118, 13119, 13120, 13121, 13122, 13123, 13124, 13126, 13129, 13131, 13132, 13133, 13134, 13135, 13136, 13137, 13138, 13139, 13140, 13141, 13142, 13143, 13144, 13145, 13146, 13147, 13148, 13149, 13152, 13153, 13154, 13155, 13156, 13157, 13158, 13159, 13160, 13162, 13163, 13164, 13165, 13166, 13167, 13201, 13202, 13203, 13204, 13205, 13206, 13207, 13208, 13209, 13210, 13211, 13212, 13214, 13215, 13217, 13218, 13219, 13220, 13221, 13224, 13225, 13244, 13250, 13251, 13252, 13260, 13261, 13290, 13301, 13302, 13303, 13304, 13305, 13308, 13309, 13310, 13312, 13313, 13314, 13315, 13316, 13317, 13318, 13319, 13320, 13321, 13322, 13323, 13324, 13325, 13326, 13327, 13328, 13329, 13331, 13332, 13333, 13334, 13335, 13337, 13338, 13339, 13340, 13341, 13342, 13343, 13345, 13346, 13348, 13350, 13352, 13353, 13354, 13355, 13357, 13360, 13361, 13362, 13363, 13364, 13365, 13367, 13368, 13388, 13396, 13401, 13402, 13403, 13404, 13406, 13407, 13408, 13409, 13410, 13411, 13413, 13415, 13416, 13417, 13418, 13420, 13421, 13424, 13425, 13426, 13428, 13431, 13433, 13435, 13436, 13437, 13438, 13439, 13440, 13441, 13442, 13444, 13449, 13450, 13452, 13453, 13454, 13455, 13456, 13457, 13459, 13460, 13461, 13464, 13465, 13468, 13469, 13470, 13471, 13472, 13473, 13475, 13476, 13477, 13478, 13479, 13480, 13482, 13483, 13484, 13485, 13486, 13488, 13489, 13490, 13491, 13492, 13493, 13494, 13495, 13501, 13502, 13503, 13504, 13505, 13550, 13562, 13578, 13599, 13601, 13602, 13603, 13605, 13606, 13607, 13608, 13610, 13611, 13612, 13613, 13614, 13615, 13616, 13617, 13618, 13619, 13620, 13621, 13622, 13623, 13624, 13625, 13626, 13627, 13628, 13630, 13631, 13632, 13633, 13634, 13635, 13636, 13637, 13638, 13639, 13640, 13641, 13642, 13643, 13645, 13646, 13647, 13648, 13649, 13650, 13651, 13652, 13654, 13655, 13656, 13657, 13658, 13659, 13660, 13661, 13662, 13664, 13665, 13666, 13667, 13668, 13669, 13670, 13671, 13672, 13673, 13674, 13675, 13676, 13677, 13678, 13679, 13680, 13681, 13682, 13683, 13684, 13685, 13687, 13688, 13690, 13691, 13692, 13693, 13694, 13695, 13696, 13697, 13698, 13699, 13730, 13731, 13732, 13733, 13734, 13736, 13737, 13738, 13739, 13740, 13743, 13744, 13745, 13746, 13747, 13748, 13749, 13750, 13751, 13752, 13753, 13754, 13755, 13756, 13757, 13758, 13760, 13761, 13762, 13763, 13766, 13774, 13775, 13776, 13777, 13778, 13780, 13782, 13783, 13784, 13786, 13787, 13788, 13790, 13792, 13794, 13795, 13796, 13797, 13801, 13802, 13803, 13804, 13806, 13807, 13808, 13809, 13810, 13811, 13812, 13813, 13814, 13815, 13820, 13825, 13826, 13827, 13830, 13832, 13833, 13834, 13835, 13837, 13838, 13839, 13840, 13841, 13842, 13843, 13844, 13845, 13846, 13847, 13848, 13849, 13850, 13851, 13856, 13859, 13860, 13861, 13862, 13863, 13864, 13865, 13901, 13902, 13903, 13904, 13905, 13942, 14001, 14003, 14004, 14005, 14006, 14008, 14009, 14010, 14011, 14012, 14013, 14020, 14021, 14024, 14025, 14026, 14027, 14028, 14029, 14030, 14031, 14032, 14033, 14034, 14035, 14036, 14037, 14038, 14039, 14040, 14041, 14042, 14043, 14047, 14048, 14051, 14052, 14054, 14055, 14056, 14057, 14058, 14059, 14060, 14061, 14062, 14063, 14064, 14065, 14066, 14067, 14068, 14069, 14070, 14072, 14075, 14080, 14081, 14082, 14083, 14085, 14086, 14091, 14092, 14094, 14095, 14098, 14101, 14102, 14103, 14105, 14107, 14108, 14109, 14110, 14111, 14112, 14113, 14120, 14125, 14126, 14127, 14129, 14130, 14131, 14132, 14133, 14134, 14135, 14136, 14138, 14139, 14140, 14141, 14143, 14144, 14145, 14150, 14151, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14201, 14202, 14203, 14204, 14205, 14206, 14207, 14208, 14209, 14210, 14211, 14212, 14213, 14214, 14215, 14216, 14217, 14218, 14219, 14220, 14221, 14222, 14223, 14224, 14225, 14226, 14227, 14228, 14231, 14233, 14240, 14241, 14260, 14261, 14263, 14264, 14265, 14267, 14269, 14270, 14272, 14273, 14276, 14280, 14301, 14302, 14303, 14304, 14305, 14410, 14411, 14413, 14414, 14415, 14416, 14417, 14418, 14420, 14422, 14423, 14424, 14425, 14427, 14428, 14429, 14430, 14432, 14433, 14435, 14437, 14441, 14443, 14445, 14449, 14450, 14452, 14453, 14454, 14456, 14458, 14461, 14462, 14463, 14464, 14466, 14467, 14468, 14469, 14470, 14471, 14472, 14475, 14476, 14477, 14478, 14479, 14480, 14481, 14482, 14484, 14485, 14486, 14487, 14488, 14489, 14502, 14504, 14505, 14506, 14507, 14508, 14510, 14511, 14512, 14513, 14514, 14515, 14516, 14517, 14518, 14519, 14520, 14521, 14522, 14525, 14526, 14527, 14529, 14530, 14532, 14533, 14534, 14536, 14537, 14538, 14539, 14541, 14542, 14543, 14544, 14545, 14546, 14547, 14548, 14549, 14550, 14551, 14555, 14556, 14557, 14558, 14559, 14560, 14561, 14563, 14564, 14568, 14569, 14571, 14572, 14580, 14585, 14586, 14588, 14589, 14590, 14591, 14592, 14601, 14602, 14603, 14604, 14605, 14606, 14607, 14608, 14609, 14610, 14611, 14612, 14613, 14614, 14615, 14616, 14617, 14618, 14619, 14620, 14621, 14622, 14623, 14624, 14625, 14626, 14627, 14638, 14639, 14642, 14643, 14644, 14645, 14646, 14647, 14649, 14650, 14651, 14652, 14653, 14660, 14664, 14673, 14683, 14692, 14694, 14701, 14702, 14703, 14704, 14706, 14707, 14708, 14709, 14710, 14711, 14712, 14714, 14715, 14716, 14717, 14718, 14719, 14720, 14721, 14722, 14723, 14724, 14726, 14727, 14728, 14729, 14730, 14731, 14732, 14733, 14735, 14736, 14737, 14738, 14739, 14740, 14741, 14742, 14743, 14744, 14745, 14747, 14748, 14750, 14751, 14752, 14753, 14754, 14755, 14756, 14757, 14758, 14760, 14766, 14767, 14769, 14770, 14771, 14772, 14774, 14775, 14776, 14777, 14778, 14779, 14781, 14782, 14783, 14784, 14785, 14786, 14787, 14788, 14801, 14802, 14803, 14804, 14805, 14806, 14807, 14808, 14809, 14810, 14812, 14813, 14814, 14815, 14816, 14817, 14818, 14819, 14820, 14821, 14822, 14823, 14824, 14825, 14826, 14827, 14830, 14831, 14836, 14837, 14838, 14839, 14840, 14841, 14842, 14843, 14844, 14845, 14846, 14847, 14850, 14851, 14852, 14853, 14854, 14855, 14856, 14857, 14858, 14859, 14860, 14861, 14863, 14864, 14865, 14867, 14869, 14870, 14871, 14872, 14873, 14874, 14876, 14877, 14878, 14879, 14880, 14881, 14882, 14883, 14884, 14885, 14886, 14887, 14889, 14891, 14892, 14893, 14894, 14895, 14897, 14898, 14901, 14902, 14903, 14904, 14905, 14925, 15001, 15003, 15004, 15005, 15006, 15007, 15009, 15010, 15012, 15014, 15015, 15017, 15018, 15019, 15020, 15021, 15022, 15024, 15025, 15026, 15027, 15028, 15030, 15031, 15032, 15033, 15034, 15035, 15036, 15037, 15038, 15042, 15043, 15044, 15045, 15046, 15047, 15049, 15050, 15051, 15052, 15053, 15054, 15055, 15056, 15057, 15059, 15060, 15061, 15062, 15063, 15064, 15065, 15066, 15067, 15068, 15069, 15071, 15072, 15074, 15075, 15076, 15077, 15078, 15081, 15082, 15083, 15084, 15085, 15086, 15087, 15088, 15089, 15090, 15091, 15095, 15096, 15101, 15102, 15104, 15106, 15108, 15110, 15112, 15116, 15120, 15122, 15123, 15126, 15127, 15129, 15130, 15131, 15132, 15133, 15134, 15135, 15136, 15137, 15139, 15140, 15142, 15143, 15144, 15145, 15146, 15147, 15148, 15163, 15189, 15201, 15202, 15203, 15204, 15205, 15206, 15207, 15208, 15209, 15210, 15211, 15212, 15213, 15214, 15215, 15216, 15217, 15218, 15219, 15220, 15221, 15222, 15223, 15224, 15225, 15226, 15227, 15228, 15229, 15230, 15231, 15232, 15233, 15234, 15235, 15236, 15237, 15238, 15239, 15240, 15241, 15242, 15243, 15244, 15246, 15250, 15251, 15252, 15253, 15254, 15255, 15257, 15258, 15259, 15260, 15261, 15262, 15263, 15264, 15265, 15266, 15267, 15268, 15270, 15272, 15274, 15275, 15276, 15277, 15278, 15279, 15281, 15282, 15283, 15285, 15286, 15290, 15298, 15301, 15310, 15311, 15312, 15313, 15314, 15315, 15316, 15317, 15320, 15321, 15322, 15323, 15324, 15325, 15327, 15329, 15330, 15331, 15332, 15333, 15334, 15336, 15337, 15338, 15339, 15340, 15341, 15342, 15344, 15345, 15346, 15347, 15348, 15349, 15350, 15351, 15352, 15353, 15354, 15355, 15357, 15358, 15359, 15360, 15361, 15362, 15363, 15364, 15365, 15366, 15367, 15368, 15370, 15376, 15377, 15378, 15379, 15380, 15401, 15410, 15411, 15412, 15413, 15415, 15416, 15417, 15419, 15420, 15421, 15422, 15423, 15424, 15425, 15427, 15428, 15429, 15430, 15431, 15432, 15433, 15434, 15435, 15436, 15437, 15438, 15439, 15440, 15442, 15443, 15444, 15445, 15446, 15447, 15448, 15449, 15450, 15451, 15454, 15455, 15456, 15458, 15459, 15460, 15461, 15462, 15463, 15464, 15465, 15466, 15467, 15468, 15469, 15470, 15471, 15472, 15473, 15474, 15475, 15476, 15477, 15478, 15479, 15480, 15482, 15483, 15484, 15485, 15486, 15488, 15489, 15490, 15492, 15493, 15501, 15502, 15510, 15520, 15521, 15522, 15530, 15531, 15532, 15533, 15534, 15535, 15536, 15537, 15538, 15539, 15540, 15541, 15542, 15544, 15545, 15546, 15547, 15548, 15549, 15550, 15551, 15552, 15553, 15554, 15555, 15557, 15558, 15559, 15560, 15561, 15562, 15563, 15564, 15565, 15601, 15605, 15606, 15610, 15611, 15612, 15613, 15615, 15616, 15617, 15618, 15619, 15620, 15621, 15622, 15623, 15624, 15625, 15626, 15627, 15628, 15629, 15630, 15631, 15632, 15633, 15634, 15635, 15636, 15637, 15638, 15639, 15640, 15641, 15642, 15643, 15644, 15646, 15647, 15650, 15655, 15656, 15658, 15660, 15661, 15662, 15663, 15664, 15665, 15666, 15668, 15670, 15671, 15672, 15673, 15674, 15675, 15676, 15677, 15678, 15679, 15680, 15681, 15682, 15683, 15684, 15685, 15686, 15687, 15688, 15689, 15690, 15691, 15692, 15693, 15695, 15696, 15697, 15698, 15701, 15705, 15710, 15711, 15712, 15713, 15714, 15715, 15716, 15717, 15720, 15721, 15722, 15723, 15724, 15725, 15727, 15728, 15729, 15730, 15731, 15732, 15733, 15734, 15736, 15737, 15738, 15739, 15740, 15741, 15742, 15744, 15745, 15746, 15747, 15748, 15750, 15751, 15752, 15753, 15754, 15756, 15757, 15758, 15759, 15760, 15761, 15762, 15763, 15764, 15765, 15767, 15770, 15771, 15772, 15773, 15774, 15775, 15776, 15777, 15778, 15779, 15780, 15781, 15783, 15784, 15801, 15817, 15821, 15822, 15823, 15824, 15825, 15827, 15828, 15829, 15831, 15832, 15834, 15840, 15841, 15845, 15846, 15847, 15848, 15849, 15851, 15853, 15856, 15857, 15860, 15861, 15863, 15864, 15865, 15866, 15868, 15870, 15874, 15901, 15902, 15904, 15905, 15906, 15907, 15909, 15915, 15920, 15921, 15922, 15923, 15924, 15925, 15926, 15927, 15928, 15929, 15930, 15931, 15934, 15935, 15936, 15937, 15938, 15940, 15942, 15943, 15944, 15945, 15946, 15948, 15949, 15951, 15952, 15953, 15954, 15955, 15956, 15957, 15958, 15959, 15960, 15961, 15962, 15963, 15965, 15973, 16001, 16002, 16003, 16006, 16016, 16017, 16018, 16020, 16021, 16022, 16023, 16024, 16025, 16027, 16028, 16029, 16030, 16033, 16034, 16035, 16036, 16037, 16038, 16039, 16040, 16041, 16045, 16046, 16048, 16049, 16050, 16051, 16052, 16053, 16054, 16055, 16056, 16057, 16058, 16059, 16061, 16063, 16066, 16101, 16102, 16103, 16105, 16107, 16108, 16110, 16111, 16112, 16113, 16114, 16115, 16116, 16117, 16120, 16121, 16123, 16124, 16125, 16127, 16130, 16131, 16132, 16133, 16134, 16136, 16137, 16140, 16141, 16142, 16143, 16145, 16146, 16148, 16150, 16151, 16153, 16154, 16155, 16156, 16157, 16159, 16160, 16161, 16172, 16201, 16210, 16211, 16212, 16213, 16214, 16215, 16216, 16217, 16218, 16220, 16221, 16222, 16223, 16224, 16225, 16226, 16228, 16229, 16230, 16232, 16233, 16234, 16235, 16236, 16238, 16239, 16240, 16242, 16244, 16245, 16246, 16248, 16249, 16250, 16253, 16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261, 16262, 16263, 16299, 16301, 16302, 16311, 16312, 16313, 16314, 16316, 16317, 16319, 16321, 16322, 16323, 16326, 16327, 16328, 16329, 16331, 16332, 16333, 16334, 16335, 16340, 16341, 16342, 16343, 16344, 16345, 16346, 16347, 16350, 16351, 16352, 16353, 16354, 16355, 16360, 16361, 16362, 16364, 16365, 16366, 16367, 16368, 16369, 16370, 16371, 16372, 16373, 16374, 16375, 16388, 16401, 16402, 16403, 16404, 16405, 16406, 16407, 16410, 16411, 16412, 16413, 16414, 16415, 16416, 16417, 16420, 16421, 16422, 16423, 16424, 16426, 16427, 16428, 16430, 16432, 16433, 16434, 16435, 16436, 16438, 16440, 16441, 16442, 16443, 16444, 16475, 16501, 16502, 16503, 16504, 16505, 16506, 16507, 16508, 16509, 16510, 16511, 16512, 16514, 16515, 16522, 16530, 16531, 16532, 16533, 16534, 16538, 16541, 16544, 16546, 16550, 16553, 16554, 16558, 16563, 16565, 16601, 16602, 16603, 16611, 16613, 16614, 16616, 16617, 16619, 16620, 16621, 16622, 16623, 16624, 16625, 16627, 16629, 16630, 16631, 16633, 16634, 16635, 16636, 16637, 16638, 16639, 16640, 16641, 16644, 16645, 16646, 16647, 16648, 16650, 16651, 16652, 16654, 16655, 16656, 16657, 16659, 16660, 16661, 16662, 16663, 16664, 16665, 16666, 16667, 16668, 16669, 16670, 16671, 16672, 16673, 16674, 16675, 16677, 16678, 16679, 16680, 16681, 16682, 16683, 16684, 16685, 16686, 16689, 16691, 16692, 16693, 16694, 16695, 16698, 16699, 16701, 16720, 16724, 16725, 16726, 16727, 16728, 16729, 16730, 16731, 16732, 16733, 16734, 16735, 16738, 16740, 16743, 16744, 16745, 16746, 16748, 16749, 16750, 16751, 16801, 16802, 16803, 16804, 16805, 16815, 16820, 16821, 16822, 16823, 16825, 16826, 16827, 16828, 16829, 16830, 16832, 16833, 16834, 16835, 16836, 16837, 16838, 16839, 16840, 16841, 16843, 16844, 16845, 16847, 16848, 16849, 16850, 16851, 16852, 16853, 16854, 16855, 16856, 16858, 16859, 16860, 16861, 16863, 16864, 16865, 16866, 16868, 16870, 16871, 16872, 16873, 16874, 16875, 16876, 16877, 16878, 16879, 16881, 16882, 16901, 16910, 16911, 16912, 16914, 16915, 16917, 16918, 16920, 16921, 16922, 16923, 16925, 16926, 16927, 16928, 16929, 16930, 16932, 16933, 16935, 16936, 16937, 16938, 16939, 16940, 16941, 16942, 16943, 16945, 16946, 16947, 16948, 16950, 17001, 17002, 17003, 17004, 17005, 17006, 17007, 17008, 17009, 17010, 17011, 17012, 17013, 17014, 17015, 17016, 17017, 17018, 17019, 17020, 17021, 17022, 17023, 17024, 17025, 17026, 17027, 17028, 17029, 17030, 17031, 17032, 17033, 17034, 17035, 17036, 17037, 17038, 17039, 17040, 17041, 17042, 17043, 17044, 17045, 17046, 17047, 17048, 17049, 17050, 17051, 17052, 17053, 17054, 17055, 17056, 17057, 17058, 17059, 17060, 17061, 17062, 17063, 17064, 17065, 17066, 17067, 17068, 17069, 17070, 17071, 17072, 17073, 17074, 17075, 17076, 17077, 17078, 17080, 17081, 17082, 17083, 17084, 17085, 17086, 17087, 17088, 17089, 17090, 17091, 17093, 17094, 17097, 17098, 17099, 17101, 17102, 17103, 17104, 17105, 17106, 17107, 17108, 17109, 17110, 17111, 17112, 17113, 17120, 17121, 17122, 17123, 17124, 17125, 17126, 17127, 17128, 17129, 17130, 17140, 17177, 17201, 17210, 17211, 17212, 17213, 17214, 17215, 17217, 17219, 17220, 17221, 17222, 17223, 17224, 17225, 17228, 17229, 17231, 17232, 17233, 17235, 17236, 17237, 17238, 17239, 17240, 17241, 17243, 17244, 17246, 17247, 17249, 17250, 17251, 17252, 17253, 17254, 17255, 17256, 17257, 17260, 17261, 17262, 17263, 17264, 17265, 17266, 17267, 17268, 17269, 17270, 17271, 17272, 17275, 17294, 17301, 17302, 17303, 17304, 17306, 17307, 17309, 17310, 17311, 17312, 17313, 17314, 17315, 17316, 17317, 17318, 17319, 17320, 17321, 17322, 17323, 17324, 17325, 17326, 17327, 17329, 17331, 17332, 17333, 17337, 17339, 17340, 17342, 17343, 17344, 17345, 17346, 17347, 17349, 17350, 17352, 17353, 17354, 17355, 17356, 17358, 17360, 17361, 17362, 17363, 17364, 17365, 17366, 17368, 17370, 17371, 17372, 17375, 17401, 17402, 17403, 17404, 17405, 17406, 17407, 17415, 17501, 17502, 17503, 17504, 17505, 17506, 17507, 17508, 17509, 17511, 17512, 17516, 17517, 17518, 17519, 17520, 17521, 17522, 17527, 17528, 17529, 17532, 17533, 17534, 17535, 17536, 17537, 17538, 17540, 17543, 17545, 17547, 17549, 17550, 17551, 17552, 17554, 17555, 17557, 17560, 17562, 17563, 17564, 17565, 17566, 17567, 17568, 17569, 17570, 17572, 17573, 17575, 17576, 17577, 17578, 17579, 17580, 17581, 17582, 17583, 17584, 17585, 17601, 17602, 17603, 17604, 17605, 17606, 17607, 17608, 17699, 17701, 17702, 17703, 17705, 17720, 17721, 17722, 17723, 17724, 17726, 17727, 17728, 17729, 17730, 17731, 17735, 17737, 17738, 17739, 17740, 17741, 17742, 17743, 17744, 17745, 17747, 17748, 17749, 17750, 17751, 17752, 17754, 17756, 17757, 17758, 17759, 17760, 17762, 17763, 17764, 17765, 17767, 17768, 17769, 17771, 17772, 17773, 17774, 17776, 17777, 17778, 17779, 17786, 17801, 17810, 17812, 17813, 17814, 17815, 17820, 17821, 17822, 17823, 17824, 17825, 17827, 17828, 17829, 17830, 17831, 17832, 17833, 17834, 17835, 17836, 17837, 17839, 17840, 17841, 17842, 17843, 17844, 17845, 17846, 17847, 17850, 17851, 17853, 17855, 17856, 17857, 17858, 17859, 17860, 17861, 17862, 17864, 17865, 17866, 17867, 17868, 17870, 17872, 17876, 17877, 17878, 17880, 17881, 17882, 17883, 17884, 17885, 17886, 17887, 17888, 17889, 17901, 17920, 17921, 17922, 17923, 17925, 17927, 17929, 17930, 17931, 17932, 17933, 17934, 17935, 17936, 17938, 17941, 17942, 17943, 17944, 17945, 17946, 17948, 17949, 17951, 17952, 17953, 17954, 17957, 17959, 17960, 17961, 17963, 17964, 17965, 17966, 17967, 17968, 17970, 17972, 17974, 17976, 17978, 17979, 17980, 17981, 17982, 17983, 17985, 18001, 18002, 18003, 18010, 18011, 18012, 18013, 18014, 18015, 18016, 18017, 18018, 18020, 18021, 18024, 18025, 18030, 18031, 18032, 18034, 18035, 18036, 18037, 18038, 18039, 18040, 18041, 18042, 18043, 18044, 18045, 18046, 18049, 18050, 18051, 18052, 18053, 18054, 18055, 18056, 18058, 18059, 18060, 18062, 18063, 18064, 18065, 18066, 18067, 18068, 18069, 18070, 18071, 18072, 18073, 18074, 18076, 18077, 18078, 18079, 18080, 18081, 18083, 18084, 18085, 18086, 18087, 18088, 18091, 18092, 18096, 18098, 18099, 18101, 18102, 18103, 18104, 18105, 18106, 18109, 18160, 18175, 18195, 18201, 18202, 18210, 18211, 18212, 18214, 18216, 18218, 18219, 18220, 18221, 18222, 18223, 18224, 18225, 18229, 18230, 18231, 18232, 18234, 18235, 18237, 18239, 18240, 18241, 18242, 18243, 18244, 18245, 18246, 18247, 18248, 18249, 18250, 18251, 18252, 18254, 18255, 18256, 18301, 18320, 18321, 18322, 18323, 18324, 18325, 18326, 18327, 18328, 18330, 18331, 18332, 18333, 18334, 18335, 18336, 18337, 18340, 18341, 18342, 18343, 18344, 18346, 18347, 18348, 18349, 18350, 18351, 18352, 18353, 18354, 18355, 18356, 18357, 18360, 18370, 18371, 18372, 18373, 18377, 18401, 18403, 18405, 18407, 18410, 18411, 18413, 18414, 18415, 18416, 18417, 18419, 18420, 18421, 18424, 18425, 18426, 18427, 18428, 18430, 18431, 18433, 18434, 18435, 18436, 18437, 18438, 18439, 18440, 18441, 18443, 18444, 18445, 18446, 18447, 18448, 18449, 18451, 18452, 18453, 18454, 18455, 18456, 18457, 18458, 18459, 18460, 18461, 18462, 18463, 18464, 18465, 18466, 18469, 18470, 18471, 18472, 18473, 18501, 18502, 18503, 18504, 18505, 18507, 18508, 18509, 18510, 18512, 18514, 18515, 18517, 18518, 18519, 18522, 18540, 18577, 18601, 18602, 18603, 18610, 18611, 18612, 18614, 18615, 18616, 18617, 18618, 18619, 18621, 18622, 18623, 18624, 18625, 18626, 18627, 18628, 18629, 18630, 18631, 18632, 18634, 18635, 18636, 18638, 18640, 18641, 18642, 18643, 18644, 18651, 18653, 18654, 18655, 18656, 18657, 18660, 18661, 18672, 18690, 18701, 18702, 18703, 18704, 18705, 18706, 18707, 18708, 18709, 18710, 18711, 18715, 18761, 18762, 18763, 18764, 18765, 18766, 18767, 18768, 18769, 18773, 18774, 18801, 18810, 18812, 18813, 18814, 18815, 18816, 18817, 18818, 18820, 18821, 18822, 18823, 18824, 18825, 18826, 18827, 18828, 18829, 18830, 18831, 18832, 18833, 18834, 18837, 18839, 18840, 18842, 18843, 18844, 18845, 18846, 18847, 18848, 18850, 18851, 18853, 18854, 18901, 18903, 18910, 18911, 18912, 18913, 18914, 18915, 18916, 18917, 18918, 18920, 18921, 18922, 18923, 18924, 18925, 18926, 18927, 18928, 18929, 18930, 18931, 18932, 18933, 18934, 18935, 18936, 18938, 18940, 18942, 18943, 18944, 18945, 18946, 18947, 18949, 18950, 18951, 18953, 18954, 18955, 18956, 18957, 18958, 18960, 18962, 18963, 18964, 18966, 18968, 18969, 18970, 18971, 18972, 18974, 18976, 18977, 18979, 18980, 18981, 18991, 19001, 19002, 19003, 19004, 19006, 19007, 19008, 19009, 19010, 19012, 19013, 19014, 19015, 19016, 19017, 19018, 19019, 19020, 19021, 19022, 19023, 19025, 19026, 19027, 19028, 19029, 19030, 19031, 19032, 19033, 19034, 19035, 19036, 19037, 19038, 19039, 19040, 19041, 19043, 19044, 19046, 19047, 19048, 19049, 19050, 19052, 19053, 19054, 19055, 19056, 19057, 19058, 19059, 19061, 19063, 19064, 19065, 19066, 19067, 19070, 19072, 19073, 19074, 19075, 19076, 19078, 19079, 19080, 19081, 19082, 19083, 19085, 19086, 19087, 19088, 19089, 19090, 19091, 19092, 19093, 19094, 19095, 19096, 19098, 19099, 19101, 19102, 19103, 19104, 19105, 19106, 19107, 19108, 19109, 19110, 19111, 19112, 19113, 19114, 19115, 19116, 19118, 19119, 19120, 19121, 19122, 19123, 19124, 19125, 19126, 19127, 19128, 19129, 19130, 19131, 19132, 19133, 19134, 19135, 19136, 19137, 19138, 19139, 19140, 19141, 19142, 19143, 19144, 19145, 19146, 19147, 19148, 19149, 19150, 19151, 19152, 19153, 19154, 19155, 19156, 19160, 19161, 19162, 19170, 19171, 19172, 19173, 19175, 19177, 19178, 19179, 19181, 19182, 19183, 19184, 19185, 19187, 19188, 19191, 19192, 19193, 19194, 19196, 19197, 19244, 19255, 19301, 19310, 19311, 19312, 19316, 19317, 19318, 19319, 19320, 19330, 19331, 19333, 19335, 19339, 19340, 19341, 19342, 19343, 19344, 19345, 19346, 19347, 19348, 19350, 19351, 19352, 19353, 19354, 19355, 19357, 19358, 19360, 19362, 19363, 19365, 19366, 19367, 19369, 19370, 19371, 19372, 19373, 19374, 19375, 19376, 19380, 19381, 19382, 19383, 19390, 19395, 19397, 19398, 19399, 19401, 19403, 19404, 19405, 19406, 19407, 19408, 19409, 19420, 19421, 19422, 19423, 19424, 19425, 19426, 19428, 19429, 19430, 19432, 19435, 19436, 19437, 19438, 19440, 19441, 19442, 19443, 19444, 19446, 19450, 19451, 19452, 19453, 19454, 19455, 19456, 19457, 19460, 19462, 19464, 19465, 19468, 19470, 19472, 19473, 19474, 19475, 19477, 19478, 19480, 19481, 19482, 19483, 19484, 19485, 19486, 19487, 19488, 19489, 19490, 19492, 19493, 19494, 19495, 19496, 19501, 19503, 19504, 19505, 19506, 19507, 19508, 19510, 19511, 19512, 19516, 19517, 19518, 19519, 19520, 19522, 19523, 19524, 19525, 19526, 19529, 19530, 19533, 19534, 19535, 19536, 19538, 19539, 19540, 19541, 19542, 19543, 19544, 19545, 19546, 19547, 19548, 19549, 19550, 19551, 19554, 19555, 19557, 19559, 19560, 19562, 19564, 19565, 19567, 19601, 19602, 19603, 19604, 19605, 19606, 19607, 19608, 19609, 19610, 19611, 19612, 19640, 19650, 19685, 19700, 19701, 19702, 19703, 19706, 19707, 19708, 19709, 19710, 19711, 19712, 19713, 19714, 19715, 19716, 19717, 19718, 19720, 19721, 19725, 19726, 19730, 19731, 19732, 19733, 19734, 19735, 19736, 19743, 19766, 19801, 19802, 19803, 19804, 19805, 19806, 19807, 19808, 19809, 19810, 19814, 19815, 19850, 19853, 19880, 19884, 19885, 19886, 19887, 19889, 19890, 19891, 19892, 19893, 19894, 19895, 19896, 19897, 19898, 19899, 19901, 19902, 19903, 19904, 19905, 19925, 19930, 19931, 19933, 19934, 19936, 19938, 19939, 19940, 19941, 19942, 19943, 19944, 19945, 19946, 19947, 19950, 19951, 19952, 19953, 19954, 19955, 19956, 19958, 19960, 19961, 19962, 19963, 19964, 19966, 19967, 19968, 19969, 19970, 19971, 19973, 19975, 19977, 19979, 19980, 19999, 20001, 20002, 20003, 20004, 20005, 20006, 20007, 20008, 20009, 20010, 20011, 20012, 20013, 20015, 20016, 20017, 20018, 20019, 20020, 20024, 20026, 20029, 20030, 20032, 20033, 20035, 20036, 20037, 20038, 20039, 20040, 20041, 20042, 20043, 20044, 20045, 20046, 20047, 20049, 20050, 20051, 20052, 20053, 20055, 20056, 20057, 20058, 20059, 20060, 20061, 20062, 20063, 20064, 20065, 20066, 20067, 20068, 20069, 20070, 20071, 20073, 20074, 20075, 20076, 20077, 20078, 20080, 20081, 20082, 20088, 20090, 20091, 20097, 20098, 20099, 20101, 20102, 20103, 20104, 20105, 20106, 20107, 20108, 20109, 20110, 20111, 20112, 20113, 20115, 20116, 20117, 20118, 20119, 20120, 20121, 20122, 20124, 20128, 20129, 20130, 20131, 20132, 20134, 20135, 20136, 20137, 20138, 20139, 20140, 20141, 20142, 20143, 20144, 20146, 20147, 20148, 20149, 20151, 20152, 20153, 20155, 20156, 20158, 20159, 20160, 20163, 20164, 20165, 20166, 20167, 20168, 20169, 20170, 20171, 20172, 20175, 20176, 20177, 20178, 20180, 20181, 20182, 20184, 20185, 20186, 20187, 20188, 20190, 20191, 20192, 20193, 20194, 20195, 20196, 20197, 20198, 20199, 20201, 20202, 20203, 20204, 20206, 20207, 20208, 20210, 20211, 20212, 20213, 20214, 20215, 20216, 20217, 20218, 20219, 20220, 20221, 20222, 20223, 20224, 20226, 20227, 20228, 20229, 20230, 20231, 20232, 20233, 20235, 20238, 20239, 20240, 20241, 20242, 20244, 20245, 20250, 20251, 20254, 20260, 20261, 20262, 20265, 20266, 20268, 20270, 20277, 20289, 20299, 20301, 20303, 20306, 20307, 20310, 20314, 20315, 20317, 20318, 20319, 20330, 20332, 20336, 20337, 20338, 20340, 20350, 20370, 20372, 20373, 20374, 20375, 20380, 20388, 20389, 20390, 20391, 20392, 20393, 20394, 20395, 20398, 20401, 20402, 20403, 20404, 20405, 20406, 20407, 20408, 20409, 20410, 20411, 20412, 20413, 20414, 20415, 20416, 20418, 20419, 20420, 20421, 20422, 20423, 20424, 20425, 20426, 20427, 20428, 20429, 20431, 20433, 20434, 20435, 20436, 20437, 20439, 20440, 20441, 20442, 20444, 20447, 20451, 20453, 20456, 20460, 20463, 20468, 20469, 20470, 20472, 20500, 20501, 20502, 20503, 20504, 20505, 20506, 20507, 20508, 20510, 20515, 20520, 20521, 20522, 20523, 20524, 20525, 20526, 20527, 20530, 20531, 20532, 20533, 20534, 20535, 20536, 20537, 20538, 20539, 20540, 20541, 20542, 20543, 20544, 20546, 20547, 20548, 20549, 20550, 20551, 20552, 20553, 20554, 20555, 20557, 20558, 20559, 20560, 20565, 20566, 20570, 20571, 20572, 20573, 20575, 20576, 20577, 20578, 20579, 20580, 20581, 20585, 20586, 20590, 20591, 20593, 20594, 20597, 20599, 20601, 20602, 20603, 20604, 20606, 20607, 20608, 20609, 20610, 20611, 20612, 20613, 20615, 20616, 20617, 20618, 20619, 20620, 20621, 20622, 20623, 20624, 20625, 20626, 20627, 20628, 20629, 20630, 20632, 20634, 20635, 20636, 20637, 20639, 20640, 20643, 20645, 20646, 20650, 20653, 20656, 20657, 20658, 20659, 20660, 20661, 20662, 20664, 20667, 20670, 20674, 20675, 20676, 20677, 20678, 20680, 20682, 20684, 20685, 20686, 20687, 20688, 20689, 20690, 20692, 20693, 20695, 20697, 20701, 20703, 20704, 20705, 20706, 20707, 20708, 20709, 20710, 20711, 20712, 20714, 20715, 20716, 20717, 20718, 20719, 20720, 20721, 20722, 20723, 20724, 20725, 20726, 20731, 20732, 20733, 20735, 20736, 20737, 20738, 20740, 20741, 20742, 20743, 20744, 20745, 20746, 20747, 20748, 20749, 20750, 20751, 20752, 20753, 20754, 20755, 20757, 20758, 20759, 20762, 20763, 20764, 20765, 20768, 20769, 20770, 20771, 20772, 20773, 20774, 20775, 20776, 20777, 20778, 20779, 20781, 20782, 20783, 20784, 20785, 20787, 20788, 20790, 20791, 20794, 20797, 20799, 20812, 20813, 20814, 20815, 20816, 20817, 20818, 20824, 20825, 20827, 20830, 20831, 20832, 20833, 20837, 20838, 20839, 20841, 20842, 20847, 20848, 20849, 20850, 20851, 20852, 20853, 20854, 20855, 20857, 20859, 20860, 20861, 20862, 20866, 20868, 20871, 20872, 20874, 20875, 20876, 20877, 20878, 20879, 20880, 20882, 20884, 20885, 20886, 20889, 20891, 20892, 20894, 20895, 20896, 20897, 20898, 20899, 20901, 20902, 20903, 20904, 20905, 20906, 20907, 20908, 20910, 20911, 20912, 20913, 20914, 20915, 20916, 20918, 20997, 21001, 21002, 21004, 21005, 21009, 21010, 21012, 21013, 21014, 21015, 21017, 21018, 21020, 21022, 21023, 21027, 21028, 21029, 21030, 21031, 21032, 21034, 21035, 21036, 21037, 21040, 21041, 21042, 21043, 21044, 21045, 21046, 21047, 21048, 21050, 21051, 21052, 21053, 21054, 21055, 21056, 21057, 21060, 21061, 21062, 21071, 21074, 21075, 21076, 21077, 21078, 21080, 21082, 21084, 21085, 21087, 21088, 21090, 21092, 21093, 21094, 21098, 21102, 21104, 21105, 21106, 21108, 21111, 21113, 21114, 21117, 21120, 21122, 21123, 21128, 21130, 21131, 21132, 21133, 21136, 21139, 21140, 21144, 21146, 21150, 21152, 21153, 21154, 21155, 21156, 21157, 21158, 21160, 21161, 21162, 21163, 21176, 21201, 21202, 21203, 21204, 21205, 21206, 21207, 21208, 21209, 21210, 21211, 21212, 21213, 21214, 21215, 21216, 21217, 21218, 21219, 21220, 21221, 21222, 21223, 21224, 21225, 21226, 21227, 21228, 21229, 21230, 21231, 21233, 21234, 21235, 21236, 21237, 21239, 21240, 21241, 21244, 21250, 21251, 21252, 21260, 21263, 21264, 21265, 21268, 21270, 21273, 21274, 21275, 21278, 21279, 21280, 21281, 21282, 21283, 21284, 21285, 21286, 21287, 21288, 21289, 21290, 21297, 21298, 21401, 21402, 21403, 21404, 21405, 21411, 21412, 21501, 21502, 21503, 21504, 21505, 21520, 21521, 21522, 21523, 21524, 21528, 21529, 21530, 21531, 21532, 21536, 21538, 21539, 21540, 21541, 21542, 21543, 21545, 21550, 21555, 21556, 21557, 21560, 21561, 21562, 21601, 21606, 21607, 21609, 21610, 21612, 21613, 21617, 21619, 21620, 21622, 21623, 21624, 21625, 21626, 21627, 21628, 21629, 21631, 21632, 21634, 21635, 21636, 21638, 21639, 21640, 21641, 21643, 21644, 21645, 21647, 21648, 21649, 21650, 21651, 21652, 21653, 21654, 21655, 21656, 21657, 21658, 21659, 21660, 21661, 21662, 21663, 21664, 21665, 21666, 21667, 21668, 21669, 21670, 21671, 21672, 21673, 21675, 21676, 21677, 21678, 21679, 21681, 21682, 21683, 21684, 21685, 21686, 21687, 21688, 21690, 21701, 21702, 21703, 21704, 21705, 21709, 21710, 21711, 21713, 21714, 21715, 21716, 21717, 21718, 21719, 21720, 21721, 21722, 21723, 21727, 21733, 21734, 21736, 21737, 21738, 21740, 21741, 21742, 21746, 21747, 21748, 21749, 21750, 21754, 21755, 21756, 21757, 21758, 21759, 21762, 21764, 21765, 21766, 21767, 21769, 21770, 21771, 21773, 21774, 21775, 21776, 21777, 21778, 21779, 21780, 21781, 21782, 21783, 21784, 21787, 21788, 21790, 21791, 21792, 21793, 21794, 21795, 21797, 21798, 21801, 21802, 21803, 21804, 21810, 21811, 21813, 21814, 21817, 21821, 21822, 21824, 21826, 21829, 21830, 21831, 21835, 21836, 21837, 21838, 21840, 21841, 21842, 21843, 21849, 21850, 21851, 21852, 21853, 21856, 21857, 21861, 21862, 21863, 21864, 21865, 21866, 21867, 21868, 21869, 21870, 21871, 21872, 21874, 21875, 21890, 21901, 21902, 21903, 21904, 21911, 21912, 21913, 21914, 21915, 21916, 21917, 21918, 21919, 21920, 21921, 21922, 21930, 22002, 22003, 22009, 22015, 22026, 22027, 22030, 22031, 22032, 22033, 22034, 22035, 22036, 22037, 22038, 22039, 22040, 22041, 22042, 22043, 22044, 22046, 22047, 22060, 22066, 22067, 22079, 22081, 22082, 22092, 22093, 22095, 22096, 22101, 22102, 22103, 22106, 22109, 22116, 22118, 22119, 22120, 22121, 22122, 22124, 22125, 22134, 22135, 22150, 22151, 22152, 22153, 22156, 22158, 22159, 22160, 22161, 22172, 22180, 22181, 22182, 22183, 22184, 22185, 22191, 22192, 22193, 22194, 22195, 22199, 22201, 22202, 22203, 22204, 22205, 22206, 22207, 22209, 22210, 22211, 22212, 22213, 22214, 22215, 22216, 22217, 22218, 22219, 22222, 22223, 22225, 22226, 22227, 22229, 22230, 22234, 22240, 22241, 22242, 22243, 22244, 22245, 22246, 22301, 22302, 22303, 22304, 22305, 22306, 22307, 22308, 22309, 22310, 22311, 22312, 22313, 22314, 22315, 22320, 22321, 22331, 22332, 22333, 22334, 22336, 22393, 22401, 22402, 22403, 22404, 22405, 22406, 22407, 22408, 22412, 22427, 22428, 22430, 22432, 22433, 22435, 22436, 22437, 22438, 22442, 22443, 22446, 22448, 22451, 22454, 22456, 22460, 22463, 22469, 22471, 22472, 22473, 22476, 22480, 22481, 22482, 22485, 22486, 22488, 22501, 22503, 22504, 22507, 22508, 22509, 22511, 22513, 22514, 22517, 22520, 22523, 22524, 22526, 22528, 22529, 22530, 22534, 22535, 22538, 22539, 22542, 22544, 22545, 22546, 22547, 22548, 22552, 22553, 22554, 22555, 22558, 22560, 22565, 22567, 22570, 22572, 22576, 22577, 22578, 22579, 22580, 22581, 22601, 22602, 22603, 22604, 22606, 22610, 22611, 22620, 22622, 22623, 22624, 22625, 22626, 22627, 22630, 22637, 22638, 22639, 22640, 22641, 22642, 22643, 22644, 22645, 22646, 22649, 22650, 22651, 22652, 22654, 22655, 22656, 22657, 22660, 22663, 22664, 22701, 22709, 22711, 22712, 22713, 22714, 22715, 22716, 22718, 22719, 22720, 22721, 22722, 22723, 22724, 22725, 22726, 22727, 22728, 22729, 22730, 22731, 22732, 22733, 22734, 22735, 22736, 22737, 22738, 22739, 22740, 22741, 22742, 22743, 22746, 22747, 22748, 22749, 22801, 22802, 22807, 22810, 22811, 22812, 22815, 22820, 22821, 22824, 22827, 22830, 22831, 22832, 22833, 22834, 22835, 22840, 22841, 22842, 22843, 22844, 22845, 22846, 22847, 22848, 22849, 22850, 22851, 22853, 22865, 22875, 22880, 22901, 22902, 22903, 22904, 22905, 22906, 22907, 22908, 22909, 22910, 22911, 22920, 22922, 22923, 22924, 22931, 22932, 22935, 22936, 22937, 22938, 22939, 22940, 22942, 22943, 22945, 22946, 22947, 22948, 22949, 22952, 22953, 22954, 22957, 22958, 22959, 22960, 22963, 22964, 22965, 22967, 22968, 22969, 22971, 22972, 22973, 22974, 22976, 22980, 22987, 22989, 23001, 23002, 23003, 23004, 23005, 23009, 23011, 23014, 23015, 23017, 23018, 23021, 23022, 23023, 23024, 23025, 23027, 23030, 23031, 23032, 23035, 23038, 23039, 23040, 23043, 23045, 23047, 23050, 23054, 23055, 23056, 23058, 23059, 23060, 23061, 23062, 23063, 23064, 23065, 23066, 23067, 23068, 23069, 23070, 23071, 23072, 23075, 23076, 23079, 23081, 23083, 23084, 23085, 23086, 23089, 23090, 23091, 23092, 23093, 23101, 23102, 23103, 23104, 23105, 23106, 23107, 23108, 23109, 23110, 23111, 23112, 23113, 23115, 23116, 23117, 23119, 23120, 23123, 23124, 23125, 23126, 23127, 23128, 23129, 23130, 23131, 23138, 23139, 23140, 23141, 23146, 23147, 23148, 23149, 23150, 23153, 23154, 23155, 23156, 23160, 23161, 23162, 23163, 23168, 23169, 23170, 23173, 23175, 23176, 23177, 23178, 23180, 23181, 23183, 23184, 23185, 23186, 23187, 23188, 23190, 23191, 23192, 23201, 23218, 23219, 23220, 23221, 23222, 23223, 23224, 23225, 23226, 23227, 23228, 23229, 23230, 23231, 23232, 23233, 23234, 23235, 23236, 23237, 23238, 23240, 23241, 23242, 23249, 23250, 23255, 23260, 23261, 23266, 23269, 23270, 23272, 23273, 23274, 23275, 23276, 23278, 23279, 23280, 23282, 23284, 23285, 23286, 23288, 23289, 23290, 23291, 23292, 23293, 23294, 23297, 23298, 23301, 23302, 23303, 23304, 23306, 23307, 23308, 23310, 23313, 23314, 23315, 23316, 23320, 23321, 23322, 23323, 23324, 23325, 23326, 23327, 23328, 23336, 23337, 23341, 23345, 23347, 23350, 23351, 23354, 23356, 23357, 23358, 23359, 23380, 23389, 23395, 23396, 23397, 23398, 23399, 23401, 23404, 23405, 23407, 23408, 23409, 23410, 23412, 23413, 23414, 23415, 23416, 23417, 23418, 23419, 23420, 23421, 23422, 23423, 23424, 23426, 23427, 23429, 23430, 23431, 23432, 23433, 23434, 23435, 23436, 23437, 23438, 23439, 23440, 23441, 23442, 23443, 23450, 23451, 23452, 23453, 23454, 23455, 23456, 23457, 23458, 23459, 23460, 23461, 23462, 23463, 23464, 23465, 23466, 23467, 23468, 23471, 23472, 23479, 23480, 23482, 23483, 23486, 23487, 23488, 23501, 23502, 23503, 23504, 23505, 23506, 23507, 23508, 23509, 23510, 23511, 23512, 23513, 23514, 23515, 23517, 23518, 23519, 23520, 23521, 23523, 23529, 23530, 23541, 23551, 23601, 23602, 23603, 23604, 23605, 23606, 23607, 23608, 23609, 23612, 23620, 23628, 23630, 23631, 23642, 23651, 23653, 23661, 23662, 23663, 23664, 23665, 23666, 23667, 23668, 23669, 23670, 23681, 23690, 23691, 23692, 23693, 23694, 23696, 23701, 23702, 23703, 23704, 23705, 23707, 23708, 23709, 23801, 23803, 23804, 23805, 23806, 23810, 23814, 23821, 23822, 23824, 23827, 23828, 23829, 23830, 23831, 23832, 23833, 23834, 23836, 23837, 23838, 23839, 23840, 23841, 23842, 23843, 23844, 23845, 23846, 23847, 23850, 23851, 23856, 23857, 23860, 23866, 23867, 23868, 23870, 23872, 23873, 23874, 23875, 23876, 23878, 23879, 23881, 23882, 23883, 23884, 23885, 23887, 23888, 23889, 23890, 23891, 23893, 23894, 23897, 23898, 23899, 23901, 23909, 23915, 23917, 23919, 23920, 23921, 23922, 23923, 23924, 23927, 23930, 23934, 23936, 23937, 23938, 23939, 23941, 23942, 23943, 23944, 23947, 23950, 23952, 23954, 23955, 23958, 23959, 23960, 23962, 23963, 23964, 23966, 23967, 23968, 23970, 23974, 23976, 23999, 24001, 24002, 24003, 24004, 24005, 24006, 24007, 24008, 24009, 24010, 24011, 24012, 24013, 24014, 24015, 24016, 24017, 24018, 24019, 24020, 24022, 24023, 24024, 24025, 24026, 24027, 24028, 24029, 24030, 24031, 24032, 24033, 24034, 24035, 24036, 24037, 24038, 24040, 24042, 24043, 24044, 24045, 24048, 24050, 24053, 24054, 24055, 24058, 24059, 24060, 24061, 24062, 24063, 24064, 24065, 24066, 24067, 24068, 24069, 24070, 24072, 24073, 24076, 24077, 24078, 24079, 24082, 24083, 24084, 24085, 24086, 24087, 24088, 24089, 24090, 24091, 24092, 24093, 24094, 24095, 24101, 24102, 24104, 24105, 24111, 24112, 24113, 24114, 24115, 24120, 24121, 24122, 24124, 24126, 24127, 24128, 24129, 24130, 24131, 24132, 24133, 24134, 24136, 24137, 24138, 24139, 24141, 24142, 24143, 24146, 24147, 24148, 24149, 24150, 24151, 24153, 24155, 24156, 24157, 24161, 24162, 24165, 24167, 24168, 24171, 24174, 24175, 24176, 24177, 24178, 24179, 24184, 24185, 24201, 24202, 24203, 24209, 24210, 24211, 24212, 24215, 24216, 24217, 24218, 24219, 24220, 24221, 24224, 24225, 24226, 24228, 24230, 24236, 24237, 24239, 24243, 24244, 24245, 24246, 24248, 24250, 24251, 24256, 24258, 24260, 24263, 24265, 24266, 24269, 24270, 24271, 24272, 24273, 24274, 24277, 24279, 24280, 24281, 24282, 24283, 24285, 24289, 24290, 24292, 24293, 24301, 24311, 24312, 24313, 24314, 24315, 24316, 24317, 24318, 24319, 24322, 24323, 24324, 24325, 24326, 24327, 24328, 24330, 24333, 24338, 24340, 24343, 24347, 24348, 24350, 24351, 24352, 24354, 24360, 24361, 24363, 24366, 24368, 24370, 24373, 24374, 24375, 24377, 24378, 24379, 24380, 24381, 24382, 24401, 24402, 24407, 24411, 24412, 24413, 24415, 24416, 24421, 24422, 24426, 24430, 24431, 24432, 24433, 24435, 24437, 24438, 24439, 24440, 24441, 24442, 24444, 24445, 24448, 24450, 24457, 24458, 24459, 24460, 24463, 24464, 24465, 24467, 24468, 24469, 24471, 24472, 24473, 24474, 24475, 24476, 24477, 24479, 24482, 24483, 24484, 24485, 24486, 24487, 24501, 24502, 24503, 24504, 24505, 24506, 24512, 24513, 24514, 24515, 24517, 24520, 24521, 24522, 24523, 24526, 24527, 24528, 24529, 24530, 24531, 24533, 24534, 24535, 24536, 24538, 24539, 24540, 24541, 24542, 24543, 24544, 24549, 24550, 24551, 24553, 24554, 24555, 24556, 24557, 24558, 24562, 24563, 24565, 24566, 24569, 24570, 24571, 24572, 24574, 24576, 24577, 24578, 24579, 24580, 24581, 24585, 24586, 24588, 24589, 24590, 24592, 24593, 24594, 24595, 24597, 24598, 24599, 24601, 24602, 24603, 24604, 24605, 24606, 24607, 24608, 24609, 24612, 24613, 24614, 24618, 24619, 24620, 24622, 24624, 24627, 24628, 24630, 24631, 24634, 24635, 24637, 24639, 24640, 24641, 24646, 24647, 24649, 24651, 24656, 24657, 24658, 24701, 24704, 24712, 24714, 24715, 24716, 24719, 24724, 24726, 24729, 24731, 24732, 24733, 24736, 24737, 24738, 24739, 24740, 24747, 24751, 24801, 24808, 24811, 24813, 24815, 24816, 24817, 24818, 24820, 24821, 24822, 24823, 24824, 24825, 24826, 24827, 24828, 24829, 24830, 24831, 24832, 24834, 24836, 24839, 24841, 24842, 24843, 24844, 24845, 24846, 24847, 24848, 24849, 24850, 24851, 24852, 24853, 24854, 24855, 24856, 24857, 24859, 24860, 24861, 24862, 24866, 24867, 24868, 24869, 24870, 24871, 24872, 24873, 24874, 24877, 24878, 24879, 24880, 24881, 24882, 24883, 24884, 24887, 24888, 24889, 24892, 24894, 24895, 24896, 24897, 24898, 24899, 24901, 24902, 24910, 24915, 24916, 24917, 24918, 24919, 24920, 24924, 24925, 24927, 24931, 24934, 24935, 24936, 24938, 24941, 24942, 24943, 24944, 24945, 24946, 24950, 24951, 24954, 24957, 24958, 24961, 24962, 24963, 24966, 24970, 24971, 24974, 24976, 24977, 24981, 24983, 24984, 24985, 24986, 24991, 24993, 25002, 25003, 25004, 25005, 25007, 25008, 25009, 25010, 25011, 25015, 25018, 25019, 25021, 25022, 25024, 25025, 25026, 25028, 25030, 25031, 25033, 25035, 25036, 25039, 25040, 25043, 25044, 25045, 25046, 25047, 25048, 25049, 25051, 25053, 25054, 25057, 25059, 25060, 25061, 25062, 25063, 25064, 25067, 25070, 25071, 25075, 25076, 25079, 25081, 25082, 25083, 25085, 25086, 25088, 25090, 25093, 25095, 25102, 25103, 25106, 25107, 25108, 25109, 25110, 25111, 25112, 25113, 25114, 25115, 25118, 25119, 25121, 25122, 25123, 25124, 25125, 25126, 25130, 25132, 25133, 25134, 25136, 25139, 25140, 25141, 25142, 25143, 25147, 25148, 25149, 25150, 25152, 25154, 25156, 25159, 25160, 25161, 25162, 25164, 25165, 25168, 25169, 25173, 25174, 25177, 25180, 25181, 25182, 25183, 25185, 25186, 25187, 25193, 25201, 25202, 25203, 25204, 25205, 25206, 25208, 25209, 25211, 25213, 25214, 25231, 25234, 25235, 25239, 25241, 25243, 25244, 25245, 25247, 25248, 25250, 25251, 25252, 25253, 25256, 25258, 25259, 25260, 25261, 25262, 25264, 25265, 25266, 25267, 25268, 25270, 25271, 25275, 25276, 25279, 25281, 25283, 25285, 25286, 25287, 25301, 25302, 25303, 25304, 25305, 25306, 25309, 25311, 25312, 25313, 25314, 25315, 25317, 25320, 25321, 25322, 25323, 25324, 25325, 25326, 25327, 25328, 25329, 25330, 25331, 25332, 25333, 25334, 25335, 25336, 25337, 25338, 25339, 25350, 25356, 25357, 25358, 25360, 25361, 25362, 25364, 25365, 25375, 25387, 25389, 25392, 25396, 25401, 25402, 25410, 25411, 25413, 25414, 25419, 25420, 25421, 25422, 25423, 25425, 25427, 25428, 25429, 25430, 25431, 25432, 25434, 25437, 25438, 25440, 25441, 25442, 25443, 25444, 25446, 25501, 25502, 25503, 25504, 25505, 25506, 25507, 25508, 25510, 25511, 25512, 25514, 25515, 25517, 25519, 25520, 25521, 25523, 25524, 25526, 25529, 25530, 25534, 25535, 25537, 25540, 25541, 25543, 25544, 25545, 25547, 25550, 25555, 25557, 25559, 25560, 25562, 25564, 25565, 25567, 25569, 25570, 25571, 25572, 25573, 25601, 25606, 25607, 25608, 25611, 25612, 25614, 25617, 25621, 25623, 25624, 25625, 25628, 25630, 25631, 25632, 25634, 25635, 25636, 25637, 25638, 25639, 25644, 25645, 25646, 25647, 25649, 25650, 25651, 25652, 25653, 25654, 25661, 25665, 25666, 25667, 25669, 25670, 25671, 25672, 25674, 25676, 25678, 25682, 25685, 25686, 25687, 25688, 25690, 25691, 25692, 25694, 25696, 25697, 25699, 25701, 25702, 25703, 25704, 25705, 25706, 25707, 25708, 25709, 25710, 25711, 25712, 25713, 25714, 25715, 25716, 25717, 25718, 25719, 25720, 25721, 25722, 25723, 25724, 25725, 25726, 25727, 25728, 25729, 25755, 25770, 25771, 25772, 25773, 25774, 25775, 25776, 25777, 25778, 25779, 25801, 25802, 25810, 25811, 25812, 25813, 25816, 25817, 25818, 25820, 25823, 25825, 25826, 25827, 25831, 25832, 25833, 25836, 25837, 25839, 25840, 25841, 25843, 25844, 25845, 25846, 25847, 25848, 25849, 25851, 25853, 25854, 25855, 25856, 25857, 25859, 25860, 25862, 25864, 25865, 25866, 25868, 25870, 25871, 25873, 25875, 25876, 25878, 25879, 25880, 25882, 25898, 25901, 25902, 25904, 25906, 25907, 25908, 25909, 25911, 25912, 25913, 25914, 25915, 25916, 25917, 25918, 25919, 25920, 25921, 25922, 25926, 25927, 25928, 25931, 25932, 25934, 25936, 25938, 25942, 25943, 25951, 25958, 25961, 25962, 25965, 25966, 25967, 25969, 25971, 25972, 25976, 25977, 25978, 25979, 25981, 25984, 25985, 25986, 25988, 25989, 26003, 26030, 26031, 26032, 26033, 26034, 26035, 26036, 26037, 26038, 26039, 26040, 26041, 26047, 26050, 26055, 26056, 26058, 26059, 26060, 26062, 26070, 26074, 26075, 26101, 26102, 26103, 26104, 26105, 26106, 26120, 26121, 26133, 26134, 26135, 26136, 26137, 26138, 26141, 26142, 26143, 26145, 26146, 26147, 26148, 26149, 26150, 26151, 26152, 26155, 26159, 26160, 26161, 26162, 26164, 26167, 26169, 26170, 26173, 26175, 26178, 26180, 26181, 26184, 26186, 26187, 26201, 26202, 26203, 26205, 26206, 26208, 26209, 26210, 26215, 26217, 26218, 26219, 26222, 26224, 26228, 26229, 26230, 26234, 26236, 26237, 26238, 26241, 26250, 26253, 26254, 26257, 26259, 26260, 26261, 26263, 26264, 26266, 26267, 26268, 26269, 26270, 26271, 26273, 26275, 26276, 26278, 26280, 26282, 26283, 26285, 26287, 26288, 26289, 26291, 26292, 26293, 26294, 26296, 26298, 26301, 26302, 26306, 26320, 26321, 26323, 26325, 26327, 26328, 26330, 26332, 26333, 26334, 26335, 26337, 26338, 26339, 26342, 26343, 26346, 26347, 26348, 26349, 26350, 26351, 26354, 26361, 26362, 26366, 26369, 26372, 26374, 26375, 26376, 26377, 26378, 26384, 26385, 26386, 26404, 26405, 26407, 26408, 26410, 26411, 26412, 26415, 26416, 26419, 26421, 26422, 26424, 26425, 26426, 26430, 26431, 26434, 26435, 26436, 26437, 26438, 26440, 26443, 26444, 26447, 26448, 26451, 26452, 26456, 26461, 26462, 26463, 26501, 26502, 26503, 26504, 26505, 26506, 26507, 26508, 26519, 26520, 26521, 26522, 26524, 26525, 26527, 26529, 26531, 26533, 26534, 26535, 26537, 26541, 26542, 26543, 26544, 26546, 26547, 26554, 26555, 26559, 26560, 26561, 26562, 26563, 26566, 26568, 26570, 26571, 26572, 26574, 26575, 26576, 26578, 26581, 26582, 26585, 26586, 26587, 26588, 26589, 26590, 26591, 26601, 26610, 26611, 26612, 26615, 26617, 26618, 26619, 26621, 26623, 26624, 26627, 26629, 26630, 26631, 26634, 26636, 26638, 26639, 26641, 26651, 26656, 26660, 26662, 26667, 26671, 26674, 26675, 26676, 26678, 26679, 26680, 26681, 26684, 26690, 26691, 26704, 26705, 26707, 26710, 26711, 26714, 26716, 26717, 26719, 26720, 26722, 26726, 26731, 26734, 26739, 26743, 26750, 26753, 26755, 26757, 26761, 26763, 26764, 26767, 26801, 26802, 26804, 26807, 26808, 26810, 26812, 26814, 26815, 26817, 26818, 26823, 26824, 26833, 26836, 26838, 26845, 26847, 26851, 26852, 26855, 26865, 26866, 26884, 26886, 26905, 27006, 27007, 27009, 27010, 27011, 27012, 27013, 27014, 27016, 27017, 27018, 27019, 27020, 27021, 27022, 27023, 27024, 27025, 27027, 27028, 27030, 27031, 27040, 27041, 27042, 27043, 27045, 27046, 27047, 27048, 27049, 27050, 27051, 27052, 27053, 27054, 27055, 27094, 27098, 27099, 27101, 27102, 27103, 27104, 27105, 27106, 27107, 27108, 27109, 27110, 27111, 27113, 27114, 27115, 27116, 27117, 27120, 27127, 27130, 27144, 27150, 27151, 27152, 27155, 27156, 27157, 27198, 27199, 27201, 27202, 27203, 27204, 27205, 27207, 27208, 27209, 27212, 27213, 27214, 27215, 27216, 27217, 27220, 27228, 27229, 27230, 27231, 27233, 27235, 27237, 27239, 27242, 27243, 27244, 27247, 27248, 27249, 27252, 27253, 27256, 27258, 27259, 27260, 27261, 27262, 27263, 27264, 27265, 27278, 27281, 27282, 27283, 27284, 27285, 27288, 27289, 27291, 27292, 27293, 27294, 27295, 27298, 27299, 27301, 27302, 27305, 27306, 27310, 27311, 27312, 27313, 27314, 27315, 27316, 27317, 27320, 27321, 27322, 27323, 27325, 27326, 27330, 27331, 27332, 27340, 27341, 27342, 27343, 27344, 27349, 27350, 27351, 27355, 27356, 27357, 27358, 27359, 27360, 27361, 27370, 27371, 27373, 27374, 27375, 27376, 27377, 27379, 27391, 27397, 27401, 27402, 27403, 27404, 27405, 27406, 27407, 27408, 27409, 27410, 27411, 27412, 27413, 27415, 27416, 27417, 27419, 27420, 27425, 27427, 27429, 27435, 27438, 27455, 27480, 27495, 27498, 27499, 27501, 27502, 27503, 27504, 27505, 27506, 27507, 27508, 27509, 27510, 27511, 27512, 27513, 27514, 27515, 27516, 27517, 27518, 27519, 27520, 27521, 27522, 27523, 27524, 27525, 27526, 27529, 27530, 27531, 27532, 27533, 27534, 27536, 27537, 27539, 27540, 27541, 27542, 27543, 27544, 27545, 27546, 27549, 27551, 27552, 27553, 27555, 27556, 27557, 27559, 27560, 27561, 27562, 27563, 27564, 27565, 27568, 27569, 27570, 27571, 27572, 27573, 27574, 27576, 27577, 27581, 27582, 27583, 27584, 27586, 27587, 27588, 27589, 27591, 27592, 27593, 27594, 27596, 27597, 27599, 27601, 27602, 27603, 27604, 27605, 27606, 27607, 27608, 27609, 27610, 27611, 27612, 27613, 27614, 27615, 27616, 27617, 27619, 27620, 27621, 27622, 27623, 27624, 27625, 27626, 27627, 27628, 27629, 27630, 27634, 27635, 27636, 27640, 27650, 27656, 27658, 27661, 27668, 27675, 27676, 27690, 27695, 27697, 27698, 27699, 27701, 27702, 27703, 27704, 27705, 27706, 27707, 27708, 27709, 27710, 27711, 27712, 27713, 27715, 27717, 27722, 27801, 27802, 27803, 27804, 27805, 27806, 27807, 27808, 27809, 27810, 27811, 27812, 27813, 27814, 27816, 27817, 27818, 27819, 27820, 27821, 27822, 27823, 27824, 27825, 27826, 27827, 27828, 27829, 27830, 27831, 27832, 27833, 27834, 27835, 27836, 27837, 27838, 27839, 27840, 27841, 27842, 27843, 27844, 27845, 27846, 27847, 27849, 27850, 27851, 27852, 27853, 27854, 27855, 27856, 27857, 27858, 27859, 27860, 27861, 27862, 27863, 27864, 27865, 27866, 27867, 27868, 27869, 27870, 27871, 27872, 27873, 27874, 27875, 27876, 27877, 27878, 27879, 27880, 27881, 27882, 27883, 27884, 27885, 27886, 27887, 27888, 27889, 27890, 27891, 27892, 27893, 27894, 27895, 27896, 27897, 27906, 27907, 27909, 27910, 27915, 27916, 27917, 27919, 27920, 27921, 27922, 27923, 27924, 27925, 27926, 27927, 27928, 27929, 27930, 27932, 27935, 27936, 27937, 27938, 27939, 27941, 27942, 27943, 27944, 27946, 27947, 27948, 27949, 27950, 27953, 27954, 27956, 27957, 27958, 27959, 27960, 27962, 27964, 27965, 27966, 27967, 27968, 27969, 27970, 27972, 27973, 27974, 27976, 27978, 27979, 27980, 27981, 27982, 27983, 27985, 27986, 28001, 28002, 28003, 28006, 28007, 28009, 28010, 28012, 28016, 28017, 28018, 28019, 28020, 28021, 28023, 28024, 28025, 28026, 28027, 28031, 28032, 28033, 28034, 28036, 28037, 28038, 28039, 28040, 28041, 28042, 28043, 28051, 28052, 28053, 28054, 28055, 28056, 28070, 28071, 28072, 28073, 28074, 28075, 28076, 28077, 28078, 28079, 28080, 28081, 28082, 28083, 28086, 28088, 28089, 28090, 28091, 28092, 28093, 28097, 28098, 28101, 28102, 28103, 28104, 28105, 28106, 28107, 28108, 28109, 28110, 28111, 28112, 28114, 28115, 28117, 28119, 28120, 28123, 28124, 28125, 28126, 28127, 28128, 28129, 28130, 28133, 28134, 28135, 28136, 28137, 28138, 28139, 28144, 28145, 28146, 28147, 28150, 28151, 28152, 28159, 28160, 28163, 28164, 28166, 28167, 28168, 28169, 28170, 28173, 28174, 28201, 28202, 28203, 28204, 28205, 28206, 28207, 28208, 28209, 28210, 28211, 28212, 28213, 28214, 28215, 28216, 28217, 28218, 28219, 28220, 28221, 28222, 28223, 28224, 28225, 28226, 28227, 28228, 28229, 28230, 28231, 28232, 28233, 28234, 28235, 28236, 28237, 28240, 28241, 28242, 28243, 28244, 28246, 28247, 28250, 28253, 28254, 28255, 28256, 28258, 28260, 28261, 28262, 28265, 28266, 28269, 28270, 28272, 28273, 28274, 28275, 28277, 28278, 28280, 28281, 28282, 28283, 28284, 28285, 28286, 28287, 28288, 28289, 28290, 28296, 28297, 28299, 28301, 28302, 28303, 28304, 28305, 28306, 28307, 28308, 28309, 28310, 28311, 28314, 28315, 28318, 28319, 28320, 28323, 28325, 28326, 28327, 28328, 28329, 28330, 28331, 28332, 28333, 28334, 28335, 28337, 28338, 28339, 28340, 28341, 28342, 28343, 28344, 28345, 28347, 28348, 28349, 28350, 28351, 28352, 28353, 28355, 28356, 28357, 28358, 28359, 28360, 28361, 28362, 28363, 28364, 28365, 28366, 28367, 28368, 28369, 28370, 28371, 28372, 28373, 28374, 28375, 28376, 28377, 28378, 28379, 28380, 28382, 28383, 28384, 28385, 28386, 28387, 28388, 28390, 28391, 28392, 28393, 28394, 28395, 28396, 28397, 28398, 28399, 28401, 28402, 28403, 28404, 28405, 28406, 28407, 28408, 28409, 28410, 28411, 28412, 28420, 28421, 28422, 28423, 28424, 28425, 28428, 28429, 28430, 28431, 28432, 28433, 28434, 28435, 28436, 28438, 28439, 28441, 28442, 28443, 28444, 28445, 28446, 28447, 28448, 28449, 28450, 28451, 28452, 28453, 28454, 28455, 28456, 28457, 28458, 28459, 28460, 28461, 28462, 28463, 28464, 28465, 28466, 28467, 28468, 28469, 28470, 28471, 28472, 28478, 28479, 28480, 28501, 28502, 28503, 28504, 28508, 28509, 28510, 28511, 28512, 28513, 28515, 28516, 28518, 28519, 28520, 28521, 28522, 28523, 28524, 28525, 28526, 28527, 28528, 28529, 28530, 28531, 28532, 28533, 28537, 28538, 28539, 28540, 28541, 28542, 28543, 28544, 28545, 28546, 28547, 28551, 28552, 28553, 28554, 28555, 28556, 28557, 28559, 28560, 28561, 28562, 28563, 28564, 28570, 28571, 28572, 28573, 28574, 28575, 28577, 28578, 28579, 28580, 28581, 28582, 28583, 28584, 28585, 28586, 28587, 28589, 28590, 28594, 28599, 28601, 28602, 28603, 28604, 28605, 28606, 28607, 28608, 28609, 28610, 28611, 28612, 28613, 28615, 28616, 28617, 28618, 28619, 28620, 28621, 28622, 28623, 28624, 28625, 28626, 28627, 28628, 28629, 28630, 28631, 28633, 28634, 28635, 28636, 28637, 28638, 28640, 28641, 28642, 28643, 28644, 28645, 28646, 28647, 28649, 28650, 28651, 28652, 28653, 28654, 28655, 28656, 28657, 28658, 28659, 28660, 28661, 28662, 28663, 28664, 28665, 28666, 28667, 28668, 28669, 28670, 28671, 28672, 28673, 28674, 28675, 28676, 28677, 28678, 28679, 28680, 28681, 28682, 28683, 28684, 28685, 28687, 28688, 28689, 28690, 28691, 28692, 28693, 28694, 28697, 28698, 28699, 28701, 28702, 28704, 28705, 28707, 28708, 28709, 28710, 28711, 28712, 28713, 28714, 28715, 28716, 28717, 28718, 28719, 28720, 28721, 28722, 28723, 28724, 28725, 28726, 28727, 28728, 28729, 28730, 28731, 28732, 28733, 28734, 28735, 28736, 28737, 28738, 28739, 28740, 28741, 28742, 28743, 28744, 28745, 28746, 28747, 28748, 28749, 28750, 28751, 28752, 28753, 28754, 28755, 28756, 28757, 28758, 28760, 28761, 28762, 28763, 28765, 28766, 28767, 28768, 28770, 28771, 28772, 28773, 28774, 28775, 28776, 28777, 28778, 28779, 28781, 28782, 28783, 28784, 28785, 28786, 28787, 28788, 28789, 28790, 28791, 28792, 28793, 28796, 28800, 28801, 28802, 28803, 28804, 28805, 28806, 28808, 28810, 28813, 28814, 28815, 28816, 28818, 28849, 28894, 28901, 28902, 28903, 28904, 28905, 28906, 28909, 28950, 28954, 28971, 28972, 29001, 29002, 29003, 29006, 29009, 29010, 29014, 29015, 29016, 29018, 29020, 29030, 29031, 29032, 29033, 29036, 29037, 29038, 29039, 29040, 29041, 29042, 29044, 29045, 29046, 29047, 29048, 29051, 29052, 29053, 29054, 29055, 29056, 29058, 29059, 29061, 29062, 29063, 29065, 29066, 29067, 29069, 29070, 29071, 29072, 29073, 29074, 29075, 29078, 29079, 29080, 29081, 29082, 29101, 29102, 29103, 29104, 29105, 29106, 29107, 29108, 29111, 29112, 29113, 29114, 29115, 29116, 29117, 29118, 29122, 29123, 29124, 29125, 29126, 29127, 29128, 29129, 29130, 29132, 29133, 29135, 29137, 29138, 29142, 29143, 29145, 29146, 29147, 29148, 29150, 29151, 29152, 29153, 29154, 29160, 29161, 29162, 29163, 29164, 29166, 29168, 29169, 29170, 29171, 29172, 29175, 29176, 29177, 29178, 29180, 29201, 29202, 29203, 29204, 29205, 29206, 29207, 29208, 29209, 29210, 29211, 29212, 29214, 29215, 29216, 29217, 29218, 29219, 29220, 29221, 29222, 29223, 29224, 29225, 29226, 29227, 29228, 29229, 29230, 29233, 29235, 29240, 29250, 29260, 29290, 29292, 29301, 29302, 29303, 29304, 29305, 29306, 29307, 29316, 29318, 29319, 29320, 29321, 29322, 29323, 29324, 29325, 29329, 29330, 29331, 29332, 29333, 29334, 29335, 29336, 29338, 29340, 29341, 29342, 29346, 29348, 29349, 29351, 29353, 29355, 29356, 29360, 29363, 29364, 29365, 29368, 29369, 29370, 29372, 29373, 29374, 29375, 29376, 29377, 29378, 29379, 29384, 29385, 29386, 29388, 29390, 29391, 29401, 29402, 29403, 29404, 29405, 29406, 29407, 29409, 29410, 29412, 29413, 29414, 29415, 29416, 29417, 29418, 29419, 29420, 29422, 29423, 29424, 29425, 29426, 29429, 29430, 29431, 29432, 29433, 29434, 29435, 29436, 29437, 29438, 29439, 29440, 29442, 29445, 29446, 29447, 29448, 29449, 29450, 29451, 29452, 29453, 29455, 29456, 29457, 29458, 29461, 29464, 29465, 29466, 29468, 29469, 29470, 29471, 29472, 29474, 29475, 29476, 29477, 29479, 29481, 29482, 29483, 29484, 29485, 29487, 29488, 29492, 29493, 29494, 29501, 29502, 29503, 29504, 29505, 29506, 29510, 29511, 29512, 29516, 29518, 29519, 29520, 29525, 29526, 29527, 29528, 29530, 29532, 29535, 29536, 29540, 29541, 29542, 29543, 29544, 29545, 29546, 29547, 29549, 29550, 29551, 29554, 29555, 29556, 29560, 29561, 29563, 29564, 29565, 29566, 29567, 29568, 29569, 29570, 29571, 29572, 29573, 29574, 29575, 29576, 29577, 29578, 29579, 29580, 29581, 29582, 29583, 29584, 29585, 29587, 29588, 29589, 29590, 29591, 29592, 29593, 29594, 29596, 29597, 29598, 29599, 29601, 29602, 29603, 29604, 29605, 29606, 29607, 29608, 29609, 29610, 29611, 29612, 29613, 29614, 29615, 29616, 29617, 29620, 29621, 29622, 29623, 29624, 29625, 29626, 29627, 29628, 29630, 29631, 29632, 29633, 29634, 29635, 29636, 29638, 29639, 29640, 29641, 29642, 29643, 29644, 29645, 29646, 29647, 29648, 29649, 29650, 29651, 29652, 29653, 29654, 29655, 29656, 29657, 29658, 29659, 29661, 29662, 29664, 29665, 29666, 29667, 29669, 29670, 29671, 29672, 29673, 29675, 29676, 29677, 29678, 29679, 29680, 29681, 29682, 29683, 29684, 29685, 29686, 29687, 29688, 29689, 29690, 29691, 29692, 29693, 29695, 29696, 29697, 29698, 29702, 29703, 29704, 29706, 29708, 29709, 29710, 29712, 29714, 29715, 29716, 29717, 29718, 29720, 29721, 29722, 29724, 29726, 29727, 29728, 29729, 29730, 29731, 29732, 29733, 29734, 29741, 29742, 29743, 29744, 29745, 29756, 29801, 29802, 29803, 29804, 29805, 29808, 29809, 29810, 29812, 29813, 29816, 29817, 29819, 29821, 29822, 29824, 29826, 29827, 29828, 29829, 29831, 29832, 29834, 29835, 29836, 29838, 29839, 29840, 29841, 29842, 29843, 29844, 29845, 29846, 29847, 29848, 29849, 29850, 29851, 29853, 29856, 29860, 29861, 29875, 29899, 29901, 29902, 29903, 29904, 29905, 29906, 29907, 29909, 29910, 29911, 29912, 29913, 29914, 29915, 29916, 29918, 29920, 29921, 29922, 29923, 29924, 29925, 29926, 29927, 29928, 29929, 29931, 29932, 29933, 29934, 29935, 29936, 29938, 29939, 29940, 29941, 29942, 29943, 29944, 29945, 29982, 30002, 30003, 30004, 30005, 30006, 30007, 30008, 30009, 30010, 30011, 30012, 30013, 30014, 30015, 30016, 30017, 30018, 30019, 30021, 30022, 30023, 30024, 30025, 30026, 30028, 30029, 30030, 30031, 30032, 30033, 30034, 30035, 30036, 30037, 30038, 30039, 30040, 30041, 30042, 30043, 30044, 30045, 30046, 30047, 30048, 30052, 30054, 30055, 30056, 30058, 30060, 30061, 30062, 30063, 30064, 30065, 30066, 30067, 30068, 30069, 30070, 30071, 30072, 30074, 30075, 30076, 30077, 30078, 30079, 30080, 30081, 30082, 30083, 30084, 30085, 30086, 30087, 30088, 30090, 30091, 30092, 30093, 30094, 30095, 30096, 30097, 30098, 30099, 30101, 30102, 30103, 30104, 30105, 30106, 30107, 30108, 30109, 30110, 30111, 30113, 30114, 30115, 30116, 30117, 30118, 30119, 30120, 30121, 30122, 30123, 30124, 30125, 30126, 30127, 30129, 30132, 30133, 30134, 30135, 30137, 30138, 30139, 30140, 30141, 30142, 30143, 30144, 30145, 30146, 30147, 30148, 30149, 30150, 30151, 30152, 30153, 30154, 30157, 30161, 30162, 30163, 30164, 30165, 30166, 30168, 30170, 30171, 30172, 30173, 30175, 30176, 30177, 30178, 30179, 30180, 30182, 30183, 30184, 30185, 30187, 30188, 30189, 30202, 30203, 30204, 30205, 30206, 30212, 30213, 30214, 30215, 30216, 30217, 30218, 30219, 30220, 30222, 30223, 30224, 30228, 30229, 30230, 30232, 30233, 30234, 30236, 30237, 30238, 30240, 30241, 30248, 30250, 30251, 30252, 30253, 30256, 30257, 30258, 30259, 30260, 30261, 30263, 30264, 30265, 30266, 30268, 30269, 30271, 30272, 30273, 30274, 30275, 30276, 30277, 30281, 30283, 30284, 30285, 30286, 30287, 30288, 30289, 30290, 30291, 30292, 30293, 30294, 30295, 30296, 30297, 30298, 30301, 30302, 30303, 30304, 30305, 30306, 30307, 30308, 30309, 30310, 30311, 30312, 30313, 30314, 30315, 30316, 30317, 30318, 30319, 30320, 30321, 30322, 30323, 30324, 30325, 30326, 30327, 30328, 30329, 30330, 30331, 30332, 30333, 30334, 30335, 30336, 30337, 30338, 30339, 30340, 30341, 30342, 30343, 30344, 30345, 30346, 30347, 30348, 30349, 30350, 30351, 30353, 30354, 30355, 30356, 30357, 30358, 30359, 30360, 30361, 30362, 30363, 30364, 30365, 30366, 30367, 30368, 30369, 30370, 30371, 30374, 30375, 30376, 30377, 30378, 30379, 30380, 30381, 30384, 30385, 30386, 30387, 30388, 30389, 30390, 30392, 30394, 30396, 30398, 30399, 30401, 30410, 30411, 30412, 30413, 30414, 30415, 30417, 30420, 30421, 30423, 30424, 30425, 30426, 30427, 30428, 30429, 30434, 30436, 30438, 30439, 30441, 30442, 30444, 30445, 30446, 30447, 30448, 30449, 30450, 30451, 30452, 30453, 30454, 30455, 30456, 30457, 30458, 30459, 30460, 30461, 30464, 30466, 30467, 30470, 30471, 30473, 30474, 30475, 30477, 30499, 30501, 30502, 30503, 30504, 30505, 30506, 30507, 30510, 30511, 30512, 30513, 30514, 30515, 30516, 30517, 30518, 30519, 30520, 30521, 30522, 30523, 30525, 30527, 30528, 30529, 30530, 30531, 30533, 30534, 30535, 30537, 30538, 30539, 30540, 30541, 30542, 30543, 30544, 30545, 30546, 30547, 30548, 30549, 30552, 30553, 30554, 30555, 30557, 30558, 30559, 30560, 30562, 30563, 30564, 30565, 30566, 30567, 30568, 30571, 30572, 30573, 30575, 30576, 30577, 30580, 30581, 30582, 30596, 30597, 30598, 30599, 30601, 30602, 30603, 30604, 30605, 30606, 30607, 30608, 30609, 30610, 30612, 30613, 30619, 30620, 30621, 30622, 30623, 30624, 30625, 30627, 30628, 30629, 30630, 30631, 30633, 30634, 30635, 30638, 30639, 30641, 30642, 30643, 30645, 30646, 30647, 30648, 30650, 30652, 30655, 30656, 30660, 30662, 30663, 30664, 30665, 30666, 30667, 30668, 30669, 30671, 30673, 30677, 30678, 30680, 30683, 30701, 30703, 30705, 30707, 30708, 30710, 30711, 30716, 30719, 30720, 30721, 30722, 30724, 30725, 30726, 30728, 30730, 30731, 30732, 30733, 30734, 30735, 30736, 30738, 30739, 30740, 30741, 30742, 30746, 30747, 30750, 30751, 30752, 30753, 30754, 30755, 30756, 30757, 30802, 30803, 30805, 30806, 30807, 30808, 30809, 30810, 30811, 30812, 30813, 30814, 30815, 30816, 30817, 30818, 30819, 30820, 30821, 30822, 30823, 30824, 30828, 30830, 30833, 30881, 30901, 30903, 30904, 30905, 30906, 30907, 30909, 30910, 30911, 30912, 30913, 30914, 30916, 30917, 30919, 30999, 31001, 31002, 31003, 31004, 31005, 31006, 31007, 31008, 31009, 31010, 31011, 31012, 31013, 31014, 31015, 31016, 31017, 31018, 31019, 31020, 31021, 31022, 31023, 31024, 31025, 31027, 31028, 31029, 31030, 31031, 31032, 31033, 31034, 31035, 31036, 31037, 31038, 31039, 31040, 31041, 31042, 31044, 31045, 31046, 31047, 31049, 31050, 31051, 31052, 31054, 31055, 31057, 31058, 31060, 31061, 31062, 31063, 31064, 31065, 31066, 31067, 31068, 31069, 31070, 31071, 31072, 31073, 31075, 31076, 31077, 31078, 31079, 31081, 31082, 31083, 31084, 31085, 31086, 31087, 31088, 31089, 31090, 31091, 31092, 31093, 31094, 31095, 31096, 31097, 31098, 31099, 31106, 31107, 31119, 31126, 31131, 31139, 31141, 31145, 31146, 31150, 31156, 31191, 31192, 31193, 31195, 31196, 31197, 31198, 31199, 31201, 31202, 31203, 31204, 31205, 31206, 31207, 31208, 31209, 31210, 31211, 31212, 31213, 31216, 31217, 31220, 31221, 31267, 31294, 31295, 31296, 31297, 31298, 31299, 31301, 31302, 31303, 31304, 31305, 31307, 31308, 31309, 31310, 31312, 31313, 31314, 31315, 31316, 31318, 31319, 31320, 31321, 31322, 31323, 31324, 31326, 31327, 31328, 31329, 31331, 31332, 31333, 31337, 31401, 31402, 31403, 31404, 31405, 31406, 31407, 31408, 31409, 31410, 31411, 31412, 31414, 31415, 31416, 31418, 31419, 31420, 31421, 31422, 31424, 31441, 31498, 31499, 31501, 31502, 31503, 31507, 31510, 31512, 31513, 31515, 31516, 31518, 31519, 31520, 31521, 31522, 31523, 31524, 31525, 31527, 31532, 31533, 31534, 31535, 31537, 31539, 31542, 31543, 31544, 31545, 31546, 31547, 31548, 31549, 31550, 31551, 31552, 31553, 31554, 31555, 31556, 31557, 31558, 31560, 31561, 31563, 31564, 31565, 31566, 31567, 31568, 31569, 31598, 31599, 31601, 31602, 31603, 31604, 31605, 31606, 31607, 31610, 31620, 31622, 31623, 31624, 31625, 31626, 31627, 31629, 31630, 31631, 31632, 31634, 31635, 31636, 31637, 31638, 31639, 31641, 31642, 31643, 31645, 31646, 31647, 31648, 31649, 31650, 31659, 31698, 31699, 31700, 31701, 31702, 31703, 31704, 31705, 31706, 31707, 31708, 31709, 31710, 31711, 31712, 31713, 31714, 31715, 31716, 31717, 31718, 31719, 31720, 31721, 31722, 31723, 31724, 31725, 31726, 31727, 31728, 31729, 31730, 31732, 31733, 31734, 31735, 31736, 31737, 31738, 31739, 31740, 31741, 31742, 31743, 31744, 31745, 31746, 31747, 31749, 31750, 31751, 31752, 31753, 31754, 31756, 31757, 31758, 31759, 31760, 31761, 31762, 31763, 31764, 31765, 31766, 31767, 31768, 31769, 31770, 31771, 31772, 31773, 31774, 31775, 31776, 31777, 31778, 31779, 31780, 31781, 31782, 31783, 31784, 31785, 31786, 31787, 31788, 31789, 31790, 31791, 31792, 31793, 31794, 31795, 31796, 31797, 31798, 31799, 31801, 31803, 31804, 31805, 31806, 31807, 31808, 31810, 31811, 31812, 31814, 31815, 31816, 31820, 31821, 31822, 31823, 31824, 31825, 31826, 31827, 31829, 31830, 31831, 31832, 31833, 31836, 31901, 31902, 31903, 31904, 31905, 31906, 31907, 31908, 31909, 31914, 31917, 31993, 31994, 31995, 31997, 31998, 31999, 32004, 32007, 32008, 32009, 32011, 32013, 32024, 32025, 32030, 32033, 32034, 32035, 32038, 32040, 32041, 32042, 32043, 32044, 32046, 32047, 32050, 32052, 32053, 32054, 32055, 32056, 32058, 32059, 32060, 32061, 32062, 32063, 32064, 32065, 32066, 32067, 32068, 32071, 32072, 32073, 32079, 32080, 32081, 32082, 32083, 32084, 32085, 32086, 32087, 32091, 32092, 32094, 32095, 32096, 32097, 32098, 32099, 32102, 32105, 32110, 32111, 32112, 32113, 32114, 32115, 32116, 32117, 32118, 32119, 32120, 32121, 32122, 32123, 32124, 32125, 32126, 32127, 32128, 32129, 32130, 32131, 32132, 32133, 32134, 32135, 32136, 32137, 32138, 32139, 32140, 32141, 32142, 32145, 32147, 32148, 32149, 32151, 32157, 32158, 32159, 32160, 32162, 32164, 32168, 32169, 32170, 32173, 32174, 32175, 32176, 32177, 32178, 32179, 32180, 32181, 32182, 32183, 32185, 32187, 32189, 32190, 32192, 32193, 32195, 32198, 32201, 32202, 32203, 32204, 32205, 32206, 32207, 32208, 32209, 32210, 32211, 32212, 32214, 32215, 32216, 32217, 32218, 32219, 32220, 32221, 32222, 32223, 32224, 32225, 32226, 32227, 32228, 32229, 32230, 32231, 32232, 32233, 32234, 32235, 32236, 32237, 32238, 32239, 32240, 32241, 32244, 32245, 32246, 32247, 32250, 32254, 32255, 32256, 32257, 32258, 32259, 32260, 32266, 32267, 32276, 32277, 32301, 32302, 32303, 32304, 32305, 32306, 32307, 32308, 32309, 32310, 32311, 32312, 32313, 32314, 32315, 32316, 32317, 32320, 32321, 32322, 32323, 32324, 32326, 32327, 32328, 32329, 32330, 32331, 32332, 32333, 32334, 32335, 32336, 32337, 32340, 32341, 32342, 32343, 32344, 32345, 32346, 32347, 32348, 32349, 32350, 32351, 32352, 32353, 32355, 32356, 32357, 32358, 32359, 32360, 32361, 32362, 32395, 32399, 32401, 32402, 32403, 32404, 32405, 32406, 32407, 32408, 32409, 32410, 32411, 32412, 32413, 32417, 32420, 32421, 32422, 32423, 32424, 32425, 32426, 32427, 32428, 32430, 32431, 32432, 32433, 32434, 32435, 32436, 32437, 32438, 32439, 32440, 32442, 32443, 32444, 32445, 32446, 32447, 32448, 32449, 32452, 32454, 32455, 32456, 32457, 32459, 32460, 32461, 32462, 32463, 32464, 32465, 32466, 32476, 32478, 32501, 32502, 32503, 32504, 32505, 32506, 32507, 32508, 32509, 32511, 32512, 32513, 32514, 32516, 32520, 32521, 32522, 32523, 32524, 32526, 32530, 32531, 32533, 32534, 32535, 32536, 32537, 32538, 32539, 32540, 32541, 32542, 32544, 32546, 32547, 32548, 32549, 32550, 32559, 32560, 32561, 32562, 32563, 32564, 32565, 32566, 32567, 32568, 32569, 32570, 32571, 32572, 32573, 32574, 32575, 32576, 32577, 32578, 32579, 32580, 32581, 32582, 32583, 32588, 32589, 32590, 32591, 32592, 32593, 32594, 32595, 32596, 32597, 32598, 32601, 32602, 32603, 32604, 32605, 32606, 32607, 32608, 32609, 32610, 32611, 32612, 32613, 32614, 32615, 32616, 32617, 32618, 32619, 32621, 32622, 32625, 32626, 32627, 32628, 32631, 32633, 32634, 32635, 32638, 32639, 32640, 32641, 32643, 32644, 32648, 32653, 32654, 32655, 32656, 32658, 32662, 32663, 32664, 32666, 32667, 32668, 32669, 32680, 32681, 32683, 32686, 32692, 32693, 32694, 32696, 32697, 32699, 32701, 32702, 32703, 32704, 32706, 32707, 32708, 32709, 32710, 32712, 32713, 32714, 32715, 32716, 32718, 32719, 32720, 32721, 32722, 32724, 32725, 32726, 32727, 32728, 32730, 32732, 32733, 32735, 32736, 32738, 32739, 32744, 32745, 32746, 32747, 32750, 32751, 32752, 32754, 32756, 32757, 32759, 32762, 32763, 32764, 32765, 32766, 32767, 32768, 32769, 32771, 32772, 32773, 32774, 32775, 32776, 32777, 32778, 32779, 32780, 32781, 32782, 32783, 32784, 32789, 32790, 32791, 32792, 32793, 32794, 32795, 32796, 32798, 32799, 32801, 32802, 32803, 32804, 32805, 32806, 32807, 32808, 32809, 32810, 32811, 32812, 32813, 32814, 32815, 32816, 32817, 32818, 32819, 32820, 32821, 32822, 32824, 32825, 32826, 32827, 32828, 32829, 32830, 32831, 32832, 32833, 32834, 32835, 32836, 32837, 32839, 32853, 32854, 32855, 32856, 32857, 32858, 32859, 32860, 32861, 32862, 32867, 32868, 32869, 32872, 32877, 32878, 32886, 32887, 32889, 32890, 32891, 32893, 32897, 32898, 32899, 32901, 32902, 32903, 32904, 32905, 32906, 32907, 32908, 32909, 32910, 32911, 32912, 32919, 32920, 32922, 32923, 32924, 32925, 32926, 32927, 32931, 32932, 32934, 32935, 32936, 32937, 32940, 32941, 32948, 32949, 32950, 32951, 32952, 32953, 32954, 32955, 32956, 32957, 32958, 32959, 32960, 32961, 32962, 32963, 32964, 32965, 32966, 32967, 32968, 32969, 32970, 32971, 32976, 32977, 32978, 33001, 33002, 33003, 33004, 33008, 33009, 33010, 33011, 33012, 33013, 33014, 33015, 33016, 33017, 33018, 33019, 33020, 33021, 33022, 33023, 33024, 33025, 33026, 33027, 33028, 33029, 33030, 33031, 33032, 33033, 33034, 33035, 33036, 33037, 33039, 33040, 33041, 33042, 33043, 33044, 33045, 33047, 33050, 33051, 33052, 33054, 33055, 33056, 33058, 33060, 33061, 33062, 33063, 33064, 33065, 33066, 33067, 33068, 33069, 33070, 33071, 33072, 33073, 33074, 33075, 33076, 33077, 33081, 33082, 33083, 33084, 33090, 33092, 33093, 33097, 33101, 33102, 33107, 33109, 33110, 33111, 33114, 33116, 33119, 33121, 33122, 33124, 33125, 33126, 33127, 33128, 33129, 33130, 33131, 33132, 33133, 33134, 33135, 33136, 33137, 33138, 33139, 33140, 33141, 33142, 33143, 33144, 33145, 33146, 33147, 33148, 33149, 33150, 33151, 33152, 33153, 33154, 33155, 33156, 33157, 33158, 33159, 33160, 33161, 33162, 33163, 33164, 33165, 33166, 33167, 33168, 33169, 33170, 33172, 33173, 33174, 33175, 33176, 33177, 33178, 33179, 33180, 33181, 33182, 33183, 33184, 33185, 33186, 33187, 33188, 33189, 33190, 33192, 33193, 33194, 33195, 33196, 33197, 33199, 33201, 33231, 33233, 33234, 33238, 33239, 33242, 33243, 33245, 33247, 33255, 33256, 33257, 33261, 33265, 33266, 33269, 33280, 33283, 33296, 33299, 33301, 33302, 33303, 33304, 33305, 33306, 33307, 33308, 33309, 33310, 33311, 33312, 33313, 33314, 33315, 33316, 33317, 33318, 33319, 33320, 33321, 33322, 33323, 33324, 33325, 33326, 33327, 33328, 33329, 33330, 33331, 33332, 33334, 33335, 33337, 33338, 33339, 33340, 33345, 33346, 33348, 33349, 33351, 33352, 33355, 33359, 33380, 33388, 33394, 33401, 33402, 33403, 33404, 33405, 33406, 33407, 33408, 33409, 33410, 33411, 33412, 33413, 33414, 33415, 33416, 33417, 33418, 33419, 33420, 33421, 33422, 33424, 33425, 33426, 33427, 33428, 33429, 33430, 33431, 33432, 33433, 33434, 33435, 33436, 33437, 33438, 33439, 33440, 33441, 33442, 33443, 33444, 33445, 33446, 33447, 33448, 33452, 33454, 33455, 33458, 33459, 33460, 33461, 33462, 33463, 33464, 33465, 33466, 33467, 33468, 33469, 33470, 33471, 33474, 33475, 33476, 33477, 33478, 33480, 33481, 33482, 33483, 33484, 33486, 33487, 33488, 33493, 33496, 33497, 33498, 33499, 33501, 33503, 33509, 33510, 33511, 33513, 33514, 33515, 33521, 33523, 33524, 33525, 33526, 33527, 33528, 33530, 33534, 33537, 33538, 33539, 33540, 33541, 33542, 33543, 33544, 33547, 33548, 33549, 33550, 33556, 33558, 33559, 33563, 33564, 33565, 33566, 33567, 33568, 33569, 33570, 33571, 33572, 33573, 33574, 33576, 33578, 33583, 33584, 33585, 33586, 33587, 33592, 33593, 33594, 33595, 33597, 33598, 33599, 33601, 33602, 33603, 33604, 33605, 33606, 33607, 33608, 33609, 33610, 33611, 33612, 33613, 33614, 33615, 33616, 33617, 33618, 33619, 33620, 33621, 33622, 33623, 33624, 33625, 33626, 33629, 33630, 33631, 33633, 33634, 33635, 33637, 33643, 33647, 33650, 33651, 33655, 33659, 33660, 33661, 33662, 33663, 33664, 33672, 33673, 33674, 33675, 33677, 33679, 33680, 33681, 33682, 33684, 33685, 33686, 33687, 33688, 33689, 33690, 33694, 33697, 33701, 33702, 33703, 33704, 33705, 33706, 33707, 33708, 33709, 33710, 33711, 33712, 33713, 33714, 33715, 33716, 33728, 33729, 33730, 33731, 33732, 33733, 33734, 33736, 33737, 33738, 33740, 33741, 33742, 33743, 33744, 33747, 33755, 33756, 33757, 33758, 33759, 33760, 33761, 33762, 33763, 33764, 33765, 33766, 33767, 33769, 33770, 33771, 33772, 33773, 33774, 33775, 33776, 33777, 33778, 33779, 33780, 33781, 33782, 33784, 33785, 33786, 33801, 33802, 33803, 33804, 33805, 33806, 33807, 33809, 33810, 33811, 33813, 33815, 33820, 33823, 33825, 33826, 33827, 33830, 33831, 33834, 33835, 33836, 33837, 33838, 33839, 33840, 33841, 33843, 33844, 33845, 33846, 33847, 33848, 33849, 33850, 33851, 33852, 33853, 33854, 33855, 33856, 33857, 33858, 33859, 33860, 33862, 33863, 33865, 33867, 33868, 33870, 33871, 33872, 33873, 33875, 33876, 33877, 33880, 33881, 33882, 33883, 33884, 33885, 33888, 33890, 33896, 33897, 33898, 33901, 33902, 33903, 33904, 33905, 33906, 33907, 33908, 33909, 33910, 33911, 33912, 33913, 33914, 33915, 33916, 33917, 33918, 33919, 33920, 33921, 33922, 33924, 33927, 33928, 33930, 33931, 33932, 33935, 33936, 33938, 33944, 33945, 33946, 33947, 33948, 33949, 33950, 33951, 33952, 33953, 33954, 33955, 33956, 33957, 33960, 33961, 33965, 33970, 33971, 33972, 33975, 33980, 33981, 33982, 33983, 33990, 33991, 33993, 33994, 34101, 34102, 34103, 34104, 34105, 34106, 34107, 34108, 34109, 34110, 34112, 34113, 34114, 34116, 34117, 34119, 34120, 34133, 34134, 34135, 34136, 34137, 34138, 34139, 34140, 34141, 34142, 34143, 34145, 34146, 34154, 34168, 34201, 34202, 34203, 34204, 34205, 34206, 34207, 34208, 34209, 34210, 34211, 34215, 34216, 34217, 34218, 34219, 34220, 34221, 34222, 34223, 34224, 34228, 34229, 34230, 34231, 34232, 34233, 34234, 34235, 34236, 34237, 34238, 34239, 34240, 34241, 34242, 34243, 34250, 34251, 34260, 34264, 34265, 34266, 34267, 34268, 34270, 34272, 34274, 34275, 34276, 34277, 34278, 34280, 34281, 34282, 34284, 34285, 34286, 34287, 34288, 34289, 34292, 34293, 34295, 34334, 34420, 34421, 34423, 34424, 34426, 34428, 34429, 34430, 34431, 34432, 34433, 34434, 34436, 34442, 34445, 34446, 34447, 34448, 34449, 34450, 34451, 34452, 34453, 34460, 34461, 34464, 34465, 34470, 34471, 34472, 34473, 34474, 34475, 34476, 34477, 34478, 34479, 34480, 34481, 34482, 34483, 34484, 34487, 34488, 34489, 34491, 34492, 34498, 34592, 34601, 34602, 34603, 34604, 34605, 34606, 34607, 34608, 34609, 34610, 34611, 34613, 34614, 34636, 34639, 34652, 34653, 34654, 34655, 34656, 34660, 34661, 34667, 34668, 34669, 34673, 34674, 34677, 34678, 34679, 34680, 34681, 34682, 34683, 34684, 34685, 34688, 34689, 34690, 34691, 34695, 34697, 34698, 34703, 34705, 34711, 34712, 34713, 34729, 34731, 34734, 34736, 34737, 34739, 34740, 34741, 34742, 34743, 34744, 34745, 34746, 34747, 34748, 34749, 34753, 34755, 34756, 34758, 34759, 34760, 34761, 34762, 34769, 34770, 34771, 34772, 34773, 34777, 34778, 34785, 34786, 34787, 34788, 34789, 34797, 34801, 34837, 34869, 34876, 34924, 34945, 34946, 34947, 34948, 34949, 34950, 34951, 34952, 34953, 34954, 34956, 34957, 34958, 34972, 34973, 34974, 34979, 34981, 34982, 34983, 34984, 34985, 34986, 34987, 34988, 34990, 34991, 34992, 34994, 34995, 34996, 34997, 35004, 35005, 35006, 35007, 35010, 35011, 35013, 35014, 35015, 35016, 35019, 35020, 35021, 35022, 35023, 35026, 35031, 35032, 35033, 35034, 35035, 35036, 35038, 35039, 35040, 35041, 35042, 35043, 35044, 35045, 35046, 35048, 35049, 35050, 35051, 35052, 35053, 35054, 35055, 35056, 35057, 35058, 35060, 35061, 35062, 35063, 35064, 35068, 35070, 35071, 35072, 35073, 35074, 35077, 35078, 35079, 35080, 35082, 35083, 35085, 35087, 35089, 35091, 35094, 35096, 35097, 35098, 35111, 35112, 35114, 35115, 35116, 35117, 35118, 35119, 35120, 35121, 35123, 35124, 35125, 35126, 35127, 35128, 35130, 35131, 35133, 35135, 35136, 35137, 35139, 35142, 35143, 35144, 35146, 35147, 35148, 35149, 35150, 35151, 35160, 35161, 35171, 35172, 35173, 35175, 35176, 35178, 35179, 35180, 35181, 35182, 35183, 35184, 35185, 35186, 35187, 35188, 35201, 35202, 35203, 35204, 35205, 35206, 35207, 35208, 35209, 35210, 35211, 35212, 35213, 35214, 35215, 35216, 35217, 35218, 35219, 35220, 35221, 35222, 35223, 35224, 35225, 35226, 35228, 35229, 35230, 35231, 35232, 35233, 35234, 35235, 35236, 35237, 35238, 35240, 35242, 35243, 35244, 35245, 35246, 35249, 35253, 35254, 35255, 35259, 35260, 35261, 35263, 35266, 35277, 35278, 35279, 35280, 35281, 35282, 35283, 35285, 35286, 35287, 35288, 35289, 35290, 35291, 35292, 35293, 35294, 35295, 35296, 35297, 35298, 35299, 35308, 35401, 35402, 35403, 35404, 35405, 35406, 35407, 35440, 35441, 35442, 35443, 35444, 35446, 35447, 35448, 35449, 35452, 35453, 35456, 35457, 35458, 35459, 35460, 35461, 35462, 35463, 35464, 35466, 35468, 35469, 35470, 35471, 35473, 35474, 35475, 35476, 35477, 35478, 35480, 35481, 35482, 35485, 35486, 35487, 35490, 35491, 35501, 35502, 35503, 35504, 35540, 35541, 35542, 35543, 35544, 35545, 35546, 35548, 35549, 35550, 35551, 35552, 35553, 35554, 35555, 35559, 35560, 35563, 35564, 35565, 35570, 35571, 35572, 35573, 35574, 35575, 35576, 35577, 35578, 35579, 35580, 35581, 35582, 35584, 35585, 35586, 35587, 35592, 35593, 35594, 35601, 35602, 35603, 35609, 35610, 35611, 35612, 35613, 35614, 35615, 35616, 35617, 35618, 35619, 35620, 35621, 35622, 35630, 35631, 35632, 35633, 35634, 35640, 35643, 35645, 35646, 35647, 35648, 35649, 35650, 35651, 35652, 35653, 35654, 35659, 35660, 35661, 35662, 35670, 35671, 35672, 35673, 35674, 35677, 35699, 35703, 35715, 35739, 35740, 35741, 35742, 35744, 35745, 35746, 35747, 35748, 35749, 35750, 35751, 35752, 35754, 35755, 35756, 35757, 35758, 35759, 35760, 35761, 35762, 35763, 35764, 35765, 35766, 35767, 35768, 35769, 35771, 35772, 35773, 35774, 35775, 35776, 35801, 35802, 35803, 35804, 35805, 35806, 35807, 35808, 35809, 35810, 35811, 35812, 35813, 35814, 35815, 35816, 35824, 35893, 35894, 35895, 35896, 35897, 35898, 35899, 35901, 35902, 35903, 35904, 35905, 35906, 35907, 35950, 35951, 35952, 35953, 35954, 35956, 35957, 35958, 35959, 35960, 35961, 35962, 35963, 35964, 35966, 35967, 35968, 35969, 35971, 35972, 35973, 35974, 35975, 35976, 35978, 35979, 35980, 35981, 35983, 35984, 35986, 35987, 35988, 35989, 35990, 36003, 36005, 36006, 36008, 36009, 36010, 36013, 36015, 36016, 36017, 36020, 36022, 36023, 36024, 36025, 36026, 36027, 36028, 36029, 36030, 36031, 36032, 36033, 36034, 36035, 36036, 36037, 36038, 36039, 36040, 36041, 36042, 36043, 36045, 36046, 36047, 36048, 36049, 36051, 36052, 36053, 36054, 36057, 36061, 36062, 36064, 36065, 36066, 36067, 36068, 36069, 36071, 36072, 36075, 36078, 36079, 36080, 36081, 36082, 36083, 36087, 36088, 36089, 36091, 36092, 36093, 36101, 36102, 36103, 36104, 36105, 36106, 36107, 36108, 36109, 36110, 36111, 36112, 36113, 36114, 36115, 36116, 36117, 36118, 36119, 36120, 36121, 36123, 36124, 36125, 36130, 36131, 36132, 36133, 36134, 36135, 36140, 36141, 36142, 36177, 36191, 36201, 36202, 36203, 36204, 36205, 36206, 36207, 36250, 36251, 36253, 36254, 36255, 36256, 36257, 36258, 36260, 36261, 36262, 36263, 36264, 36265, 36266, 36267, 36268, 36269, 36270, 36271, 36272, 36273, 36274, 36275, 36276, 36277, 36278, 36279, 36280, 36301, 36302, 36303, 36304, 36305, 36310, 36311, 36312, 36313, 36314, 36316, 36317, 36318, 36319, 36320, 36321, 36322, 36323, 36330, 36331, 36340, 36343, 36344, 36345, 36346, 36349, 36350, 36351, 36352, 36353, 36360, 36361, 36362, 36370, 36371, 36373, 36374, 36375, 36376, 36383, 36395, 36401, 36420, 36422, 36425, 36426, 36427, 36429, 36431, 36432, 36435, 36436, 36439, 36441, 36442, 36444, 36445, 36446, 36449, 36451, 36453, 36454, 36455, 36456, 36457, 36458, 36460, 36461, 36462, 36467, 36470, 36471, 36473, 36474, 36475, 36476, 36477, 36480, 36481, 36482, 36483, 36501, 36502, 36503, 36504, 36505, 36507, 36508, 36509, 36511, 36512, 36513, 36515, 36518, 36521, 36522, 36523, 36524, 36525, 36526, 36527, 36528, 36529, 36530, 36531, 36532, 36533, 36535, 36536, 36538, 36539, 36540, 36541, 36542, 36543, 36544, 36545, 36547, 36548, 36549, 36550, 36551, 36553, 36555, 36556, 36558, 36559, 36560, 36561, 36562, 36564, 36567, 36568, 36569, 36570, 36571, 36572, 36574, 36575, 36576, 36577, 36578, 36579, 36580, 36581, 36582, 36583, 36584, 36585, 36586, 36587, 36590, 36601, 36602, 36603, 36604, 36605, 36606, 36607, 36608, 36609, 36610, 36611, 36612, 36613, 36614, 36615, 36616, 36617, 36618, 36619, 36621, 36622, 36623, 36625, 36626, 36628, 36630, 36631, 36633, 36640, 36641, 36644, 36652, 36660, 36663, 36670, 36671, 36675, 36685, 36688, 36689, 36690, 36691, 36693, 36695, 36701, 36702, 36703, 36720, 36721, 36722, 36723, 36726, 36727, 36728, 36732, 36736, 36738, 36740, 36741, 36742, 36744, 36745, 36748, 36749, 36750, 36751, 36752, 36753, 36754, 36755, 36756, 36758, 36759, 36761, 36762, 36763, 36764, 36765, 36766, 36767, 36768, 36769, 36773, 36775, 36776, 36778, 36779, 36782, 36783, 36784, 36785, 36786, 36790, 36792, 36793, 36801, 36802, 36803, 36804, 36830, 36831, 36832, 36849, 36850, 36851, 36852, 36853, 36854, 36855, 36856, 36858, 36859, 36860, 36861, 36862, 36863, 36865, 36866, 36867, 36868, 36869, 36870, 36871, 36872, 36874, 36875, 36876, 36877, 36879, 36901, 36904, 36906, 36907, 36908, 36910, 36912, 36913, 36915, 36916, 36919, 36921, 36922, 36925, 37010, 37011, 37012, 37013, 37014, 37015, 37016, 37018, 37019, 37020, 37022, 37023, 37024, 37025, 37026, 37027, 37028, 37029, 37030, 37031, 37032, 37033, 37034, 37035, 37036, 37037, 37040, 37041, 37042, 37043, 37044, 37046, 37047, 37048, 37049, 37050, 37051, 37052, 37055, 37056, 37057, 37058, 37059, 37060, 37061, 37062, 37063, 37064, 37065, 37066, 37067, 37068, 37069, 37070, 37071, 37072, 37073, 37074, 37075, 37076, 37077, 37078, 37079, 37080, 37082, 37083, 37085, 37086, 37087, 37088, 37089, 37090, 37091, 37095, 37096, 37097, 37098, 37101, 37110, 37111, 37115, 37116, 37118, 37119, 37121, 37122, 37127, 37128, 37129, 37130, 37131, 37132, 37133, 37134, 37135, 37136, 37137, 37138, 37140, 37141, 37142, 37143, 37144, 37145, 37146, 37147, 37148, 37149, 37150, 37151, 37152, 37153, 37155, 37160, 37161, 37162, 37165, 37166, 37167, 37171, 37172, 37174, 37175, 37178, 37179, 37180, 37181, 37183, 37184, 37185, 37186, 37187, 37188, 37189, 37190, 37191, 37201, 37202, 37203, 37204, 37205, 37206, 37207, 37208, 37209, 37210, 37211, 37212, 37213, 37214, 37215, 37216, 37217, 37218, 37219, 37220, 37221, 37222, 37224, 37227, 37228, 37229, 37230, 37232, 37234, 37235, 37236, 37237, 37238, 37239, 37240, 37241, 37242, 37243, 37244, 37245, 37246, 37247, 37248, 37249, 37250, 37301, 37302, 37303, 37304, 37305, 37306, 37307, 37308, 37309, 37310, 37311, 37312, 37313, 37314, 37315, 37316, 37317, 37318, 37320, 37321, 37322, 37323, 37324, 37325, 37326, 37327, 37328, 37329, 37330, 37331, 37332, 37333, 37334, 37335, 37336, 37337, 37338, 37339, 37340, 37341, 37342, 37343, 37345, 37347, 37348, 37349, 37350, 37351, 37352, 37353, 37354, 37355, 37356, 37357, 37359, 37360, 37361, 37362, 37363, 37364, 37365, 37366, 37367, 37369, 37370, 37371, 37372, 37373, 37374, 37375, 37376, 37377, 37378, 37379, 37380, 37381, 37382, 37383, 37384, 37385, 37387, 37388, 37389, 37391, 37394, 37395, 37396, 37397, 37398, 37401, 37402, 37403, 37404, 37405, 37406, 37407, 37408, 37409, 37410, 37411, 37412, 37414, 37415, 37416, 37419, 37421, 37422, 37424, 37450, 37499, 37501, 37601, 37602, 37604, 37605, 37614, 37615, 37616, 37617, 37618, 37620, 37621, 37625, 37640, 37641, 37642, 37643, 37644, 37645, 37650, 37656, 37657, 37658, 37659, 37660, 37662, 37663, 37664, 37665, 37669, 37680, 37681, 37682, 37683, 37684, 37686, 37687, 37688, 37690, 37691, 37692, 37694, 37699, 37701, 37705, 37707, 37708, 37709, 37710, 37711, 37713, 37714, 37715, 37716, 37717, 37719, 37721, 37722, 37723, 37724, 37725, 37726, 37727, 37729, 37730, 37731, 37732, 37733, 37737, 37738, 37742, 37743, 37744, 37745, 37748, 37752, 37753, 37754, 37755, 37756, 37757, 37760, 37762, 37763, 37764, 37765, 37766, 37769, 37770, 37771, 37772, 37773, 37774, 37777, 37778, 37779, 37801, 37802, 37803, 37804, 37806, 37807, 37809, 37810, 37811, 37813, 37814, 37815, 37816, 37818, 37819, 37820, 37821, 37822, 37824, 37825, 37826, 37828, 37829, 37830, 37831, 37838, 37840, 37841, 37842, 37843, 37845, 37846, 37847, 37848, 37849, 37851, 37852, 37853, 37854, 37857, 37860, 37861, 37862, 37863, 37864, 37865, 37866, 37867, 37868, 37869, 37870, 37871, 37872, 37873, 37874, 37876, 37877, 37878, 37879, 37880, 37881, 37882, 37885, 37886, 37887, 37888, 37890, 37891, 37892, 37893, 37901, 37902, 37909, 37912, 37913, 37914, 37915, 37916, 37917, 37918, 37919, 37920, 37921, 37922, 37923, 37924, 37927, 37928, 37929, 37930, 37931, 37932, 37933, 37937, 37938, 37939, 37940, 37950, 37951, 37990, 37995, 37996, 37997, 37998, 37999, 38001, 38002, 38004, 38006, 38007, 38008, 38010, 38011, 38012, 38014, 38015, 38016, 38017, 38018, 38019, 38021, 38023, 38024, 38025, 38026, 38027, 38028, 38029, 38030, 38034, 38036, 38037, 38039, 38040, 38041, 38042, 38043, 38044, 38045, 38046, 38047, 38048, 38049, 38050, 38052, 38053, 38054, 38055, 38056, 38057, 38058, 38059, 38060, 38061, 38063, 38066, 38067, 38068, 38069, 38070, 38071, 38073, 38074, 38075, 38076, 38077, 38079, 38080, 38083, 38088, 38101, 38103, 38104, 38105, 38106, 38107, 38108, 38109, 38110, 38111, 38112, 38113, 38114, 38115, 38116, 38117, 38118, 38119, 38120, 38122, 38124, 38125, 38126, 38127, 38128, 38130, 38131, 38132, 38133, 38134, 38135, 38136, 38137, 38138, 38139, 38140, 38141, 38142, 38143, 38145, 38146, 38147, 38148, 38150, 38151, 38152, 38157, 38159, 38160, 38161, 38163, 38165, 38166, 38167, 38168, 38173, 38174, 38175, 38177, 38181, 38182, 38183, 38184, 38186, 38187, 38188, 38190, 38193, 38194, 38195, 38197, 38201, 38220, 38221, 38222, 38223, 38224, 38225, 38226, 38229, 38230, 38231, 38232, 38233, 38235, 38236, 38237, 38238, 38240, 38241, 38242, 38251, 38253, 38254, 38255, 38256, 38257, 38258, 38259, 38260, 38261, 38271, 38281, 38301, 38302, 38303, 38305, 38308, 38310, 38311, 38313, 38314, 38315, 38316, 38317, 38318, 38320, 38321, 38324, 38326, 38327, 38328, 38329, 38330, 38331, 38332, 38333, 38334, 38336, 38337, 38338, 38339, 38340, 38341, 38342, 38343, 38344, 38345, 38346, 38347, 38348, 38350, 38351, 38352, 38355, 38356, 38357, 38358, 38359, 38361, 38362, 38363, 38365, 38366, 38367, 38368, 38369, 38370, 38371, 38372, 38374, 38375, 38376, 38377, 38378, 38379, 38380, 38381, 38382, 38384, 38387, 38388, 38389, 38390, 38391, 38392, 38393, 38401, 38402, 38425, 38449, 38450, 38451, 38452, 38453, 38454, 38455, 38456, 38457, 38459, 38460, 38461, 38462, 38463, 38464, 38468, 38469, 38471, 38472, 38473, 38474, 38475, 38476, 38477, 38478, 38481, 38482, 38483, 38485, 38486, 38487, 38488, 38501, 38502, 38503, 38504, 38505, 38506, 38514, 38528, 38541, 38542, 38543, 38544, 38545, 38547, 38548, 38549, 38550, 38551, 38552, 38553, 38554, 38555, 38556, 38557, 38558, 38559, 38560, 38562, 38563, 38564, 38565, 38567, 38568, 38569, 38570, 38571, 38572, 38573, 38574, 38575, 38577, 38578, 38579, 38580, 38581, 38582, 38583, 38585, 38587, 38588, 38589, 38597, 38601, 38602, 38603, 38606, 38609, 38610, 38611, 38614, 38617, 38618, 38619, 38620, 38621, 38622, 38623, 38625, 38626, 38627, 38628, 38629, 38630, 38631, 38632, 38633, 38634, 38635, 38637, 38638, 38639, 38641, 38642, 38643, 38644, 38645, 38646, 38647, 38649, 38650, 38651, 38652, 38654, 38655, 38658, 38659, 38661, 38663, 38664, 38665, 38666, 38668, 38669, 38670, 38671, 38672, 38673, 38674, 38675, 38676, 38677, 38679, 38680, 38683, 38685, 38686, 38695, 38701, 38702, 38703, 38704, 38720, 38721, 38722, 38723, 38725, 38726, 38730, 38731, 38732, 38733, 38736, 38737, 38738, 38739, 38740, 38744, 38745, 38746, 38748, 38749, 38751, 38753, 38754, 38756, 38758, 38759, 38760, 38761, 38762, 38763, 38764, 38765, 38767, 38768, 38769, 38771, 38772, 38773, 38774, 38776, 38778, 38780, 38781, 38782, 38801, 38802, 38803, 38804, 38820, 38821, 38824, 38825, 38826, 38827, 38828, 38829, 38833, 38834, 38835, 38838, 38839, 38841, 38843, 38844, 38846, 38847, 38848, 38849, 38850, 38851, 38852, 38854, 38855, 38856, 38857, 38858, 38859, 38860, 38862, 38863, 38864, 38865, 38866, 38868, 38869, 38870, 38871, 38873, 38874, 38875, 38876, 38877, 38878, 38879, 38880, 38901, 38902, 38912, 38913, 38914, 38915, 38916, 38917, 38920, 38921, 38922, 38923, 38924, 38925, 38926, 38927, 38928, 38929, 38930, 38935, 38940, 38941, 38943, 38944, 38945, 38946, 38947, 38948, 38949, 38950, 38951, 38952, 38953, 38954, 38955, 38957, 38958, 38959, 38960, 38961, 38962, 38963, 38964, 38965, 38966, 38967, 39038, 39039, 39040, 39041, 39042, 39043, 39044, 39045, 39046, 39047, 39048, 39051, 39054, 39056, 39057, 39058, 39059, 39060, 39061, 39062, 39063, 39066, 39067, 39069, 39071, 39072, 39073, 39074, 39077, 39078, 39079, 39080, 39081, 39082, 39083, 39086, 39087, 39088, 39090, 39092, 39094, 39095, 39096, 39097, 39098, 39107, 39108, 39109, 39110, 39111, 39112, 39113, 39114, 39115, 39116, 39117, 39119, 39120, 39121, 39122, 39130, 39140, 39144, 39145, 39146, 39148, 39149, 39150, 39151, 39152, 39153, 39154, 39156, 39157, 39158, 39159, 39160, 39161, 39162, 39163, 39165, 39166, 39167, 39168, 39169, 39170, 39171, 39173, 39174, 39175, 39176, 39177, 39179, 39180, 39181, 39182, 39183, 39189, 39190, 39191, 39192, 39193, 39194, 39201, 39202, 39203, 39204, 39205, 39206, 39207, 39208, 39209, 39210, 39211, 39212, 39213, 39215, 39216, 39217, 39218, 39219, 39225, 39232, 39235, 39236, 39250, 39269, 39271, 39272, 39282, 39283, 39284, 39286, 39288, 39289, 39296, 39298, 39301, 39302, 39303, 39304, 39305, 39307, 39309, 39320, 39322, 39323, 39324, 39325, 39326, 39327, 39328, 39330, 39332, 39335, 39336, 39337, 39338, 39339, 39341, 39342, 39345, 39346, 39347, 39348, 39350, 39352, 39354, 39355, 39356, 39357, 39358, 39359, 39360, 39361, 39362, 39363, 39364, 39365, 39366, 39367, 39401, 39402, 39403, 39404, 39406, 39407, 39421, 39422, 39423, 39425, 39426, 39427, 39428, 39429, 39436, 39437, 39439, 39440, 39441, 39442, 39443, 39451, 39452, 39455, 39456, 39457, 39459, 39460, 39461, 39462, 39463, 39464, 39465, 39466, 39470, 39474, 39475, 39476, 39477, 39478, 39479, 39480, 39481, 39482, 39483, 39501, 39502, 39503, 39505, 39506, 39507, 39520, 39521, 39522, 39525, 39529, 39530, 39531, 39532, 39533, 39534, 39535, 39540, 39552, 39553, 39555, 39556, 39558, 39560, 39561, 39562, 39563, 39564, 39565, 39566, 39567, 39568, 39569, 39571, 39572, 39573, 39574, 39576, 39577, 39579, 39581, 39595, 39601, 39602, 39603, 39629, 39630, 39631, 39632, 39633, 39635, 39638, 39641, 39643, 39645, 39647, 39648, 39649, 39652, 39653, 39654, 39656, 39657, 39660, 39661, 39662, 39663, 39664, 39665, 39666, 39667, 39668, 39669, 39701, 39702, 39703, 39704, 39705, 39710, 39730, 39731, 39735, 39736, 39737, 39739, 39740, 39741, 39743, 39744, 39745, 39746, 39747, 39750, 39751, 39752, 39753, 39754, 39755, 39756, 39758, 39759, 39760, 39762, 39766, 39767, 39769, 39771, 39772, 39773, 39776, 39871, 39901, 39940, 39956, 40003, 40004, 40006, 40007, 40008, 40009, 40010, 40011, 40012, 40013, 40014, 40018, 40019, 40020, 40022, 40023, 40025, 40026, 40027, 40031, 40032, 40033, 40036, 40037, 40040, 40041, 40045, 40046, 40047, 40048, 40049, 40050, 40051, 40052, 40053, 40055, 40056, 40057, 40058, 40059, 40060, 40061, 40062, 40063, 40065, 40066, 40067, 40068, 40069, 40070, 40071, 40075, 40076, 40077, 40078, 40080, 40081, 40104, 40106, 40107, 40108, 40109, 40110, 40111, 40115, 40117, 40118, 40119, 40121, 40140, 40142, 40143, 40144, 40145, 40146, 40150, 40152, 40153, 40155, 40157, 40159, 40160, 40161, 40162, 40164, 40165, 40170, 40171, 40175, 40176, 40177, 40178, 40179, 40201, 40202, 40203, 40204, 40205, 40206, 40207, 40208, 40209, 40210, 40211, 40212, 40213, 40214, 40215, 40216, 40217, 40218, 40219, 40220, 40221, 40222, 40223, 40224, 40225, 40228, 40229, 40231, 40232, 40233, 40241, 40242, 40243, 40245, 40250, 40251, 40252, 40253, 40255, 40256, 40257, 40258, 40259, 40261, 40266, 40268, 40269, 40270, 40272, 40280, 40281, 40282, 40283, 40285, 40287, 40289, 40290, 40291, 40292, 40293, 40294, 40295, 40296, 40297, 40298, 40299, 40310, 40311, 40312, 40313, 40316, 40317, 40319, 40320, 40322, 40324, 40328, 40329, 40330, 40334, 40336, 40337, 40339, 40340, 40342, 40346, 40347, 40348, 40350, 40351, 40353, 40355, 40356, 40357, 40358, 40359, 40360, 40361, 40362, 40363, 40366, 40370, 40371, 40372, 40374, 40376, 40379, 40380, 40383, 40384, 40385, 40386, 40387, 40390, 40391, 40392, 40402, 40403, 40404, 40405, 40409, 40410, 40419, 40421, 40422, 40423, 40434, 40437, 40440, 40442, 40444, 40445, 40446, 40447, 40448, 40452, 40456, 40460, 40461, 40464, 40467, 40468, 40469, 40472, 40473, 40475, 40476, 40481, 40484, 40486, 40488, 40489, 40492, 40495, 40501, 40502, 40503, 40504, 40505, 40506, 40507, 40508, 40509, 40510, 40511, 40512, 40513, 40514, 40515, 40516, 40517, 40522, 40523, 40524, 40526, 40533, 40536, 40544, 40546, 40550, 40555, 40574, 40575, 40576, 40577, 40578, 40579, 40580, 40581, 40582, 40583, 40584, 40585, 40586, 40587, 40588, 40589, 40590, 40591, 40592, 40593, 40594, 40595, 40596, 40601, 40602, 40603, 40604, 40618, 40619, 40620, 40621, 40622, 40695, 40701, 40702, 40724, 40729, 40730, 40734, 40737, 40740, 40741, 40742, 40743, 40744, 40745, 40746, 40747, 40748, 40751, 40754, 40755, 40759, 40763, 40769, 40771, 40801, 40803, 40806, 40807, 40808, 40810, 40813, 40815, 40816, 40818, 40819, 40820, 40823, 40824, 40826, 40827, 40828, 40829, 40830, 40831, 40840, 40843, 40844, 40845, 40847, 40849, 40854, 40855, 40856, 40858, 40862, 40863, 40865, 40867, 40868, 40870, 40873, 40874, 40902, 40903, 40906, 40913, 40914, 40915, 40921, 40923, 40927, 40930, 40931, 40932, 40935, 40939, 40940, 40941, 40943, 40944, 40946, 40949, 40951, 40953, 40955, 40958, 40962, 40964, 40965, 40972, 40977, 40979, 40981, 40982, 40983, 40988, 40995, 40997, 40999, 41e3, 41001, 41002, 41003, 41004, 41005, 41006, 41007, 41008, 41010, 41011, 41012, 41014, 41015, 41016, 41017, 41018, 41019, 41022, 41030, 41031, 41033, 41034, 41035, 41037, 41039, 41040, 41041, 41042, 41043, 41044, 41045, 41046, 41048, 41049, 41051, 41052, 41053, 41054, 41055, 41056, 41059, 41061, 41062, 41063, 41064, 41065, 41071, 41072, 41073, 41074, 41075, 41076, 41080, 41081, 41083, 41085, 41086, 41091, 41092, 41093, 41094, 41095, 41096, 41097, 41098, 41099, 41101, 41102, 41105, 41114, 41121, 41124, 41127, 41128, 41129, 41132, 41135, 41137, 41139, 41141, 41142, 41143, 41144, 41146, 41149, 41150, 41156, 41159, 41160, 41163, 41164, 41166, 41168, 41169, 41170, 41171, 41173, 41174, 41175, 41179, 41180, 41181, 41183, 41189, 41201, 41203, 41204, 41214, 41215, 41216, 41219, 41222, 41224, 41226, 41228, 41230, 41231, 41232, 41234, 41238, 41240, 41250, 41254, 41255, 41256, 41257, 41260, 41262, 41263, 41264, 41265, 41267, 41268, 41271, 41274, 41301, 41307, 41310, 41311, 41313, 41314, 41317, 41332, 41333, 41338, 41339, 41342, 41344, 41347, 41348, 41351, 41352, 41360, 41362, 41364, 41365, 41366, 41367, 41368, 41377, 41385, 41386, 41390, 41397, 41408, 41410, 41413, 41419, 41421, 41422, 41425, 41426, 41433, 41444, 41451, 41459, 41463, 41464, 41465, 41472, 41477, 41501, 41502, 41503, 41512, 41513, 41514, 41517, 41519, 41520, 41522, 41524, 41526, 41527, 41528, 41531, 41534, 41535, 41537, 41538, 41539, 41540, 41542, 41543, 41544, 41546, 41547, 41548, 41549, 41553, 41554, 41555, 41557, 41558, 41559, 41560, 41561, 41562, 41563, 41564, 41566, 41567, 41568, 41569, 41571, 41572, 41601, 41602, 41603, 41604, 41605, 41606, 41607, 41612, 41615, 41616, 41619, 41621, 41622, 41630, 41631, 41632, 41635, 41636, 41640, 41642, 41643, 41645, 41647, 41649, 41650, 41651, 41653, 41655, 41659, 41660, 41663, 41666, 41667, 41668, 41669, 41701, 41702, 41705, 41712, 41713, 41714, 41719, 41721, 41722, 41723, 41725, 41727, 41729, 41730, 41731, 41735, 41736, 41739, 41740, 41743, 41745, 41746, 41747, 41749, 41751, 41754, 41759, 41760, 41762, 41763, 41764, 41766, 41772, 41773, 41774, 41775, 41776, 41777, 41778, 41804, 41810, 41812, 41815, 41817, 41819, 41821, 41822, 41824, 41825, 41826, 41828, 41831, 41832, 41833, 41834, 41835, 41836, 41837, 41838, 41839, 41840, 41843, 41844, 41845, 41847, 41848, 41849, 41855, 41858, 41859, 41861, 41862, 42001, 42002, 42003, 42011, 42020, 42021, 42022, 42023, 42024, 42025, 42027, 42028, 42029, 42031, 42032, 42033, 42035, 42036, 42037, 42038, 42039, 42040, 42041, 42044, 42045, 42046, 42047, 42048, 42049, 42050, 42051, 42053, 42054, 42055, 42056, 42058, 42060, 42061, 42063, 42064, 42066, 42069, 42070, 42071, 42076, 42078, 42079, 42081, 42082, 42083, 42084, 42085, 42086, 42087, 42088, 42101, 42102, 42103, 42104, 42109, 42120, 42122, 42123, 42124, 42127, 42128, 42129, 42130, 42131, 42133, 42134, 42135, 42140, 42141, 42142, 42150, 42151, 42152, 42153, 42154, 42156, 42157, 42159, 42160, 42163, 42164, 42166, 42167, 42170, 42171, 42201, 42202, 42203, 42204, 42206, 42207, 42209, 42210, 42211, 42214, 42215, 42216, 42217, 42219, 42220, 42221, 42223, 42232, 42234, 42235, 42236, 42240, 42241, 42251, 42252, 42253, 42254, 42256, 42257, 42259, 42261, 42262, 42265, 42266, 42267, 42270, 42273, 42274, 42275, 42276, 42280, 42283, 42285, 42286, 42287, 42288, 42301, 42302, 42303, 42304, 42320, 42321, 42322, 42323, 42324, 42325, 42326, 42327, 42328, 42330, 42332, 42333, 42334, 42337, 42338, 42339, 42343, 42344, 42345, 42347, 42348, 42349, 42350, 42351, 42352, 42354, 42355, 42356, 42361, 42364, 42365, 42366, 42367, 42368, 42369, 42370, 42371, 42372, 42374, 42375, 42376, 42377, 42378, 42400, 42402, 42403, 42404, 42406, 42408, 42409, 42410, 42411, 42413, 42419, 42420, 42431, 42436, 42437, 42440, 42441, 42442, 42444, 42445, 42450, 42451, 42452, 42453, 42455, 42456, 42457, 42458, 42459, 42460, 42461, 42462, 42463, 42464, 42501, 42502, 42503, 42516, 42518, 42519, 42528, 42533, 42539, 42541, 42544, 42553, 42558, 42564, 42565, 42566, 42567, 42602, 42603, 42629, 42631, 42632, 42633, 42634, 42635, 42637, 42638, 42642, 42647, 42649, 42653, 42701, 42702, 42711, 42712, 42713, 42715, 42716, 42717, 42718, 42719, 42720, 42721, 42722, 42724, 42726, 42728, 42729, 42731, 42732, 42733, 42735, 42740, 42741, 42742, 42743, 42746, 42748, 42749, 42753, 42754, 42755, 42757, 42758, 42759, 42761, 42762, 42764, 42765, 42776, 42782, 42783, 42784, 42786, 42788, 43001, 43002, 43003, 43004, 43005, 43006, 43007, 43008, 43009, 43010, 43011, 43013, 43014, 43015, 43016, 43017, 43018, 43019, 43021, 43022, 43023, 43025, 43026, 43027, 43028, 43029, 43030, 43031, 43032, 43033, 43035, 43036, 43037, 43040, 43041, 43044, 43045, 43046, 43047, 43048, 43050, 43054, 43055, 43056, 43058, 43060, 43061, 43062, 43064, 43065, 43066, 43067, 43068, 43070, 43071, 43072, 43073, 43074, 43076, 43077, 43078, 43080, 43081, 43082, 43083, 43084, 43085, 43086, 43093, 43098, 43101, 43102, 43103, 43105, 43106, 43107, 43109, 43110, 43111, 43112, 43113, 43115, 43116, 43117, 43119, 43123, 43125, 43126, 43127, 43128, 43130, 43135, 43136, 43137, 43138, 43140, 43142, 43143, 43144, 43145, 43146, 43147, 43148, 43149, 43150, 43151, 43152, 43153, 43154, 43155, 43156, 43157, 43158, 43160, 43162, 43163, 43164, 43187, 43199, 43201, 43202, 43203, 43204, 43205, 43206, 43207, 43209, 43210, 43211, 43212, 43213, 43214, 43215, 43216, 43217, 43218, 43219, 43220, 43221, 43222, 43223, 43224, 43226, 43227, 43228, 43229, 43230, 43231, 43232, 43234, 43235, 43236, 43240, 43251, 43260, 43265, 43266, 43268, 43270, 43271, 43272, 43279, 43284, 43287, 43291, 43299, 43301, 43302, 43306, 43307, 43310, 43311, 43314, 43315, 43316, 43317, 43318, 43319, 43320, 43321, 43322, 43323, 43324, 43325, 43326, 43330, 43331, 43332, 43333, 43334, 43335, 43336, 43337, 43338, 43340, 43341, 43342, 43343, 43344, 43345, 43346, 43347, 43348, 43349, 43350, 43351, 43355, 43356, 43357, 43358, 43359, 43360, 43381, 43400, 43402, 43403, 43406, 43407, 43408, 43410, 43412, 43413, 43414, 43416, 43420, 43430, 43431, 43432, 43433, 43434, 43435, 43436, 43437, 43438, 43439, 43440, 43441, 43442, 43443, 43445, 43446, 43447, 43449, 43450, 43451, 43452, 43456, 43457, 43458, 43460, 43462, 43463, 43464, 43465, 43466, 43467, 43468, 43469, 43501, 43502, 43504, 43505, 43506, 43510, 43511, 43512, 43515, 43516, 43517, 43518, 43519, 43520, 43521, 43522, 43523, 43524, 43525, 43526, 43527, 43528, 43529, 43530, 43531, 43532, 43533, 43534, 43535, 43536, 43537, 43538, 43540, 43541, 43542, 43543, 43545, 43547, 43548, 43549, 43550, 43551, 43552, 43553, 43554, 43555, 43556, 43557, 43558, 43560, 43565, 43566, 43567, 43569, 43570, 43571, 43579, 43601, 43602, 43603, 43604, 43605, 43606, 43607, 43608, 43609, 43610, 43611, 43612, 43613, 43614, 43615, 43616, 43617, 43618, 43619, 43620, 43623, 43624, 43628, 43635, 43652, 43653, 43654, 43655, 43656, 43657, 43659, 43660, 43661, 43666, 43667, 43681, 43682, 43697, 43699, 43701, 43702, 43704, 43708, 43711, 43713, 43716, 43717, 43718, 43719, 43720, 43721, 43722, 43723, 43724, 43725, 43727, 43728, 43730, 43731, 43732, 43733, 43734, 43735, 43736, 43738, 43739, 43740, 43741, 43746, 43747, 43748, 43749, 43750, 43752, 43754, 43755, 43756, 43757, 43758, 43759, 43760, 43761, 43762, 43764, 43766, 43767, 43768, 43771, 43772, 43773, 43777, 43778, 43779, 43780, 43782, 43783, 43786, 43787, 43788, 43789, 43791, 43793, 43799, 43802, 43803, 43804, 43805, 43811, 43812, 43821, 43822, 43824, 43828, 43830, 43832, 43836, 43837, 43840, 43842, 43843, 43844, 43845, 43901, 43902, 43903, 43905, 43906, 43907, 43908, 43909, 43910, 43912, 43913, 43914, 43915, 43916, 43917, 43920, 43924, 43925, 43926, 43927, 43928, 43930, 43931, 43932, 43933, 43934, 43935, 43937, 43938, 43939, 43940, 43941, 43942, 43943, 43944, 43945, 43946, 43947, 43948, 43950, 43951, 43952, 43953, 43960, 43961, 43962, 43963, 43964, 43966, 43967, 43968, 43970, 43971, 43972, 43973, 43974, 43976, 43977, 43981, 43983, 43984, 43985, 43986, 43988, 43989, 44001, 44003, 44004, 44005, 44010, 44011, 44012, 44017, 44021, 44022, 44023, 44024, 44026, 44028, 44030, 44032, 44033, 44035, 44036, 44039, 44040, 44041, 44044, 44045, 44046, 44047, 44048, 44049, 44050, 44052, 44053, 44054, 44055, 44056, 44057, 44060, 44061, 44062, 44064, 44065, 44067, 44068, 44070, 44072, 44073, 44074, 44076, 44077, 44080, 44081, 44082, 44084, 44085, 44086, 44087, 44088, 44089, 44090, 44092, 44093, 44094, 44095, 44096, 44097, 44099, 44101, 44102, 44103, 44104, 44105, 44106, 44107, 44108, 44109, 44110, 44111, 44112, 44113, 44114, 44115, 44116, 44117, 44118, 44119, 44120, 44121, 44122, 44123, 44124, 44125, 44126, 44127, 44128, 44129, 44130, 44131, 44132, 44133, 44134, 44135, 44136, 44137, 44138, 44139, 44140, 44141, 44142, 44143, 44144, 44145, 44146, 44147, 44149, 44168, 44177, 44178, 44179, 44181, 44184, 44185, 44186, 44188, 44189, 44190, 44191, 44192, 44193, 44194, 44195, 44197, 44198, 44199, 44201, 44202, 44203, 44210, 44211, 44212, 44214, 44215, 44216, 44217, 44221, 44222, 44223, 44224, 44230, 44231, 44232, 44233, 44234, 44235, 44236, 44237, 44238, 44240, 44241, 44242, 44243, 44250, 44251, 44253, 44254, 44255, 44256, 44258, 44260, 44262, 44264, 44265, 44266, 44270, 44272, 44273, 44274, 44275, 44276, 44278, 44280, 44281, 44282, 44285, 44286, 44287, 44288, 44301, 44302, 44303, 44304, 44305, 44306, 44307, 44308, 44309, 44310, 44311, 44312, 44313, 44314, 44315, 44316, 44317, 44319, 44320, 44321, 44322, 44325, 44326, 44328, 44331, 44333, 44334, 44372, 44393, 44396, 44397, 44398, 44399, 44401, 44402, 44403, 44404, 44405, 44406, 44408, 44410, 44411, 44412, 44413, 44415, 44416, 44417, 44418, 44420, 44422, 44423, 44424, 44425, 44427, 44428, 44429, 44430, 44431, 44432, 44436, 44437, 44438, 44439, 44440, 44441, 44442, 44443, 44444, 44445, 44446, 44449, 44450, 44451, 44452, 44453, 44454, 44455, 44460, 44470, 44471, 44473, 44481, 44482, 44483, 44484, 44485, 44486, 44487, 44488, 44490, 44491, 44492, 44493, 44501, 44502, 44503, 44504, 44505, 44506, 44507, 44509, 44510, 44511, 44512, 44513, 44514, 44515, 44555, 44598, 44599, 44601, 44606, 44607, 44608, 44609, 44610, 44611, 44612, 44613, 44614, 44615, 44617, 44618, 44619, 44620, 44621, 44622, 44624, 44625, 44626, 44627, 44628, 44629, 44630, 44631, 44632, 44633, 44634, 44636, 44637, 44638, 44639, 44640, 44641, 44643, 44644, 44645, 44646, 44647, 44648, 44650, 44651, 44652, 44653, 44654, 44656, 44657, 44659, 44660, 44661, 44662, 44663, 44665, 44666, 44667, 44669, 44670, 44671, 44672, 44675, 44676, 44677, 44678, 44679, 44680, 44681, 44682, 44683, 44684, 44685, 44687, 44688, 44689, 44690, 44691, 44692, 44693, 44695, 44697, 44699, 44701, 44702, 44703, 44704, 44705, 44706, 44707, 44708, 44709, 44710, 44711, 44712, 44714, 44718, 44720, 44721, 44730, 44735, 44750, 44760, 44767, 44798, 44799, 44801, 44802, 44803, 44804, 44805, 44807, 44809, 44811, 44813, 44814, 44815, 44816, 44817, 44818, 44820, 44822, 44824, 44825, 44826, 44827, 44828, 44830, 44833, 44836, 44837, 44838, 44839, 44840, 44841, 44842, 44843, 44844, 44845, 44846, 44847, 44848, 44849, 44850, 44851, 44853, 44854, 44855, 44856, 44857, 44858, 44859, 44860, 44861, 44862, 44864, 44865, 44866, 44867, 44870, 44871, 44874, 44875, 44878, 44880, 44881, 44882, 44883, 44887, 44888, 44889, 44890, 44901, 44902, 44903, 44904, 44905, 44906, 44907, 44999, 45e3, 45001, 45002, 45003, 45004, 45005, 45010, 45011, 45012, 45013, 45014, 45015, 45018, 45020, 45023, 45025, 45026, 45030, 45032, 45033, 45034, 45036, 45039, 45040, 45041, 45042, 45043, 45044, 45050, 45051, 45052, 45053, 45054, 45055, 45056, 45061, 45062, 45063, 45064, 45065, 45066, 45067, 45068, 45069, 45070, 45071, 45073, 45099, 45101, 45102, 45103, 45105, 45106, 45107, 45110, 45111, 45112, 45113, 45114, 45115, 45118, 45119, 45120, 45121, 45122, 45123, 45125, 45127, 45130, 45131, 45132, 45133, 45135, 45138, 45140, 45142, 45144, 45145, 45146, 45147, 45148, 45150, 45152, 45153, 45154, 45155, 45156, 45157, 45158, 45159, 45160, 45162, 45164, 45165, 45166, 45167, 45168, 45169, 45171, 45172, 45174, 45176, 45177, 45201, 45202, 45203, 45204, 45205, 45206, 45207, 45208, 45209, 45210, 45211, 45212, 45213, 45214, 45215, 45216, 45217, 45218, 45219, 45220, 45221, 45222, 45223, 45224, 45225, 45226, 45227, 45228, 45229, 45230, 45231, 45232, 45233, 45234, 45235, 45236, 45237, 45238, 45239, 45240, 45241, 45242, 45243, 45244, 45245, 45246, 45247, 45248, 45249, 45250, 45251, 45252, 45253, 45254, 45255, 45258, 45262, 45263, 45264, 45267, 45268, 45269, 45270, 45271, 45273, 45274, 45275, 45277, 45296, 45298, 45299, 45301, 45302, 45303, 45304, 45305, 45306, 45307, 45308, 45309, 45310, 45311, 45312, 45314, 45315, 45316, 45317, 45318, 45319, 45320, 45321, 45322, 45323, 45324, 45325, 45326, 45327, 45328, 45329, 45330, 45331, 45332, 45333, 45334, 45335, 45336, 45337, 45338, 45339, 45340, 45341, 45342, 45343, 45344, 45345, 45346, 45347, 45348, 45349, 45350, 45351, 45352, 45353, 45354, 45356, 45358, 45359, 45360, 45361, 45362, 45363, 45365, 45367, 45368, 45369, 45370, 45371, 45372, 45373, 45374, 45377, 45378, 45380, 45381, 45382, 45383, 45384, 45385, 45387, 45388, 45389, 45390, 45401, 45402, 45403, 45404, 45405, 45406, 45407, 45408, 45409, 45410, 45412, 45413, 45414, 45415, 45416, 45417, 45418, 45419, 45420, 45422, 45423, 45424, 45426, 45427, 45428, 45429, 45430, 45431, 45432, 45433, 45434, 45435, 45437, 45439, 45440, 45441, 45448, 45449, 45454, 45458, 45459, 45463, 45469, 45470, 45475, 45479, 45481, 45482, 45490, 45501, 45502, 45503, 45504, 45505, 45506, 45553, 45601, 45612, 45613, 45614, 45616, 45617, 45618, 45619, 45620, 45621, 45622, 45623, 45624, 45628, 45629, 45630, 45631, 45633, 45634, 45636, 45638, 45640, 45641, 45642, 45643, 45644, 45645, 45646, 45647, 45648, 45650, 45651, 45652, 45653, 45654, 45656, 45657, 45658, 45659, 45660, 45661, 45662, 45663, 45669, 45670, 45671, 45672, 45673, 45674, 45675, 45677, 45678, 45679, 45680, 45681, 45682, 45683, 45684, 45685, 45686, 45687, 45688, 45690, 45692, 45693, 45694, 45695, 45696, 45697, 45698, 45699, 45701, 45710, 45711, 45712, 45713, 45714, 45715, 45716, 45717, 45719, 45720, 45721, 45723, 45724, 45727, 45729, 45732, 45734, 45735, 45739, 45740, 45741, 45742, 45743, 45744, 45745, 45746, 45750, 45757, 45760, 45761, 45764, 45766, 45767, 45768, 45769, 45770, 45771, 45772, 45773, 45775, 45776, 45777, 45778, 45779, 45780, 45781, 45782, 45783, 45784, 45786, 45787, 45788, 45789, 45801, 45802, 45804, 45805, 45806, 45807, 45808, 45809, 45810, 45812, 45813, 45814, 45815, 45816, 45817, 45819, 45820, 45821, 45822, 45826, 45827, 45828, 45829, 45830, 45831, 45832, 45833, 45835, 45836, 45837, 45838, 45839, 45840, 45841, 45843, 45844, 45845, 45846, 45848, 45849, 45850, 45851, 45853, 45854, 45855, 45856, 45858, 45859, 45860, 45861, 45862, 45863, 45864, 45865, 45866, 45867, 45868, 45869, 45870, 45871, 45872, 45873, 45874, 45875, 45876, 45877, 45879, 45880, 45881, 45882, 45883, 45884, 45885, 45886, 45887, 45888, 45889, 45890, 45891, 45893, 45894, 45895, 45896, 45897, 45898, 45899, 45944, 45999, 46001, 46011, 46012, 46013, 46014, 46015, 46016, 46017, 46018, 46030, 46031, 46032, 46033, 46034, 46035, 46036, 46038, 46039, 46040, 46041, 46044, 46045, 46046, 46047, 46048, 46049, 46050, 46051, 46052, 46055, 46056, 46057, 46058, 46060, 46061, 46063, 46064, 46065, 46067, 46068, 46069, 46070, 46071, 46072, 46074, 46075, 46076, 46077, 46082, 46102, 46103, 46104, 46105, 46106, 46107, 46110, 46111, 46112, 46113, 46114, 46115, 46117, 46118, 46120, 46121, 46122, 46123, 46124, 46125, 46126, 46127, 46128, 46129, 46130, 46131, 46133, 46135, 46140, 46142, 46143, 46144, 46145, 46146, 46147, 46148, 46149, 46150, 46151, 46154, 46155, 46156, 46157, 46158, 46160, 46161, 46162, 46163, 46164, 46165, 46166, 46167, 46168, 46170, 46171, 46172, 46173, 46175, 46176, 46180, 46181, 46182, 46183, 46184, 46186, 46201, 46202, 46203, 46204, 46205, 46206, 46207, 46208, 46209, 46211, 46214, 46216, 46217, 46218, 46219, 46220, 46221, 46222, 46223, 46224, 46225, 46226, 46227, 46228, 46229, 46230, 46231, 46234, 46235, 46236, 46237, 46239, 46240, 46241, 46242, 46243, 46244, 46247, 46249, 46250, 46251, 46253, 46254, 46255, 46256, 46259, 46260, 46266, 46268, 46274, 46275, 46277, 46278, 46280, 46282, 46283, 46285, 46290, 46291, 46295, 46298, 46301, 46302, 46303, 46304, 46305, 46307, 46308, 46310, 46311, 46312, 46319, 46320, 46321, 46322, 46323, 46324, 46325, 46327, 46332, 46340, 46341, 46342, 46345, 46346, 46347, 46348, 46349, 46350, 46352, 46355, 46356, 46360, 46361, 46365, 46366, 46368, 46369, 46371, 46372, 46373, 46374, 46375, 46376, 46377, 46379, 46380, 46381, 46382, 46383, 46384, 46385, 46386, 46390, 46391, 46392, 46393, 46394, 46401, 46402, 46403, 46404, 46405, 46406, 46407, 46408, 46409, 46410, 46411, 46415, 46501, 46502, 46504, 46506, 46507, 46508, 46510, 46511, 46513, 46514, 46515, 46516, 46517, 46518, 46524, 46526, 46527, 46528, 46530, 46531, 46532, 46534, 46535, 46536, 46537, 46538, 46539, 46540, 46542, 46543, 46544, 46545, 46546, 46550, 46552, 46553, 46554, 46555, 46556, 46561, 46562, 46563, 46565, 46566, 46567, 46570, 46571, 46572, 46573, 46574, 46580, 46581, 46582, 46590, 46595, 46601, 46604, 46612, 46613, 46614, 46615, 46616, 46617, 46619, 46620, 46624, 46626, 46628, 46629, 46634, 46635, 46637, 46660, 46671, 46680, 46692, 46696, 46699, 46701, 46702, 46703, 46704, 46705, 46706, 46710, 46711, 46713, 46714, 46720, 46721, 46723, 46725, 46730, 46731, 46732, 46733, 46737, 46738, 46740, 46741, 46742, 46743, 46745, 46746, 46747, 46748, 46750, 46755, 46759, 46760, 46761, 46763, 46764, 46765, 46766, 46767, 46768, 46769, 46770, 46771, 46772, 46773, 46774, 46776, 46777, 46778, 46779, 46780, 46781, 46782, 46783, 46784, 46785, 46786, 46787, 46788, 46789, 46791, 46792, 46793, 46794, 46795, 46796, 46797, 46798, 46799, 46801, 46802, 46803, 46804, 46805, 46806, 46807, 46808, 46809, 46814, 46815, 46816, 46818, 46819, 46825, 46835, 46845, 46848, 46850, 46851, 46852, 46853, 46854, 46855, 46856, 46857, 46858, 46859, 46860, 46861, 46862, 46863, 46864, 46865, 46866, 46867, 46868, 46869, 46885, 46891, 46895, 46896, 46897, 46898, 46899, 46901, 46902, 46903, 46904, 46910, 46911, 46912, 46913, 46914, 46915, 46916, 46917, 46919, 46920, 46921, 46922, 46923, 46926, 46928, 46929, 46930, 46931, 46932, 46933, 46935, 46936, 46937, 46938, 46939, 46940, 46941, 46942, 46943, 46945, 46946, 46947, 46950, 46951, 46952, 46953, 46957, 46958, 46959, 46960, 46961, 46962, 46965, 46966, 46967, 46968, 46970, 46971, 46974, 46975, 46977, 46978, 46979, 46980, 46982, 46984, 46985, 46986, 46987, 46988, 46989, 46990, 46991, 46992, 46994, 46995, 46996, 46998, 47001, 47003, 47006, 47010, 47011, 47012, 47016, 47017, 47018, 47019, 47020, 47021, 47022, 47023, 47024, 47025, 47030, 47031, 47032, 47033, 47034, 47035, 47036, 47037, 47038, 47039, 47040, 47041, 47042, 47043, 47045, 47048, 47060, 47070, 47093, 47102, 47104, 47106, 47107, 47108, 47110, 47111, 47112, 47114, 47115, 47116, 47117, 47118, 47119, 47120, 47122, 47123, 47124, 47125, 47126, 47128, 47129, 47130, 47131, 47132, 47133, 47134, 47135, 47136, 47137, 47138, 47139, 47140, 47141, 47142, 47143, 47144, 47145, 47146, 47147, 47150, 47151, 47160, 47161, 47162, 47163, 47164, 47165, 47166, 47167, 47169, 47170, 47172, 47174, 47175, 47177, 47190, 47199, 47201, 47202, 47203, 47220, 47223, 47224, 47225, 47226, 47227, 47228, 47229, 47230, 47231, 47232, 47234, 47235, 47236, 47240, 47241, 47243, 47244, 47245, 47246, 47247, 47249, 47250, 47256, 47257, 47260, 47261, 47262, 47263, 47264, 47265, 47270, 47272, 47273, 47274, 47280, 47281, 47282, 47283, 47288, 47302, 47303, 47304, 47305, 47306, 47307, 47308, 47317, 47320, 47322, 47324, 47325, 47326, 47327, 47330, 47331, 47334, 47335, 47336, 47337, 47338, 47339, 47340, 47341, 47342, 47344, 47345, 47346, 47348, 47351, 47352, 47353, 47354, 47355, 47356, 47357, 47358, 47359, 47360, 47361, 47362, 47366, 47367, 47368, 47369, 47370, 47371, 47373, 47374, 47375, 47380, 47381, 47382, 47383, 47384, 47385, 47386, 47387, 47388, 47390, 47392, 47393, 47394, 47395, 47396, 47398, 47401, 47402, 47403, 47404, 47405, 47406, 47407, 47408, 47412, 47420, 47421, 47424, 47426, 47427, 47429, 47430, 47431, 47432, 47433, 47434, 47435, 47436, 47437, 47438, 47439, 47441, 47443, 47445, 47446, 47448, 47449, 47451, 47452, 47453, 47454, 47455, 47456, 47457, 47458, 47459, 47460, 47462, 47463, 47464, 47465, 47467, 47468, 47469, 47470, 47471, 47485, 47488, 47490, 47501, 47512, 47513, 47514, 47515, 47516, 47519, 47520, 47521, 47522, 47523, 47524, 47525, 47527, 47528, 47529, 47531, 47532, 47535, 47536, 47537, 47541, 47542, 47545, 47546, 47547, 47549, 47550, 47551, 47552, 47553, 47556, 47557, 47558, 47561, 47562, 47564, 47567, 47568, 47573, 47574, 47575, 47576, 47577, 47578, 47579, 47580, 47581, 47584, 47585, 47586, 47588, 47590, 47591, 47596, 47597, 47598, 47601, 47610, 47611, 47612, 47613, 47614, 47615, 47616, 47617, 47618, 47619, 47620, 47625, 47629, 47630, 47631, 47633, 47634, 47635, 47637, 47638, 47639, 47640, 47647, 47648, 47649, 47654, 47660, 47665, 47666, 47667, 47670, 47671, 47672, 47683, 47701, 47702, 47703, 47704, 47705, 47706, 47708, 47710, 47711, 47712, 47713, 47714, 47715, 47716, 47718, 47719, 47720, 47721, 47722, 47724, 47725, 47727, 47728, 47729, 47730, 47731, 47732, 47733, 47734, 47735, 47736, 47737, 47739, 47740, 47741, 47744, 47747, 47750, 47765, 47801, 47802, 47803, 47804, 47805, 47807, 47808, 47809, 47811, 47812, 47813, 47814, 47830, 47831, 47832, 47833, 47834, 47836, 47837, 47838, 47840, 47841, 47842, 47845, 47846, 47847, 47848, 47849, 47850, 47851, 47852, 47853, 47854, 47855, 47856, 47857, 47858, 47859, 47860, 47861, 47862, 47863, 47864, 47865, 47866, 47868, 47869, 47870, 47871, 47872, 47874, 47875, 47876, 47878, 47879, 47880, 47881, 47882, 47884, 47885, 47895, 47901, 47902, 47903, 47904, 47905, 47906, 47907, 47909, 47916, 47917, 47918, 47920, 47921, 47922, 47923, 47924, 47925, 47926, 47928, 47929, 47930, 47932, 47933, 47934, 47935, 47936, 47937, 47938, 47939, 47940, 47941, 47942, 47943, 47944, 47946, 47948, 47949, 47950, 47951, 47952, 47954, 47955, 47957, 47958, 47959, 47960, 47962, 47963, 47964, 47965, 47966, 47967, 47968, 47969, 47970, 47971, 47974, 47975, 47976, 47977, 47978, 47980, 47981, 47982, 47983, 47984, 47986, 47987, 47988, 47989, 47990, 47991, 47992, 47993, 47994, 47995, 47996, 47997, 48001, 48002, 48003, 48004, 48005, 48006, 48007, 48009, 48012, 48014, 48015, 48017, 48019, 48021, 48022, 48023, 48025, 48026, 48027, 48028, 48030, 48032, 48034, 48035, 48036, 48037, 48038, 48039, 48040, 48041, 48042, 48043, 48044, 48045, 48046, 48047, 48048, 48049, 48050, 48051, 48054, 48059, 48060, 48061, 48062, 48063, 48064, 48065, 48066, 48067, 48068, 48069, 48070, 48071, 48072, 48073, 48074, 48075, 48076, 48079, 48080, 48081, 48082, 48083, 48084, 48085, 48086, 48088, 48089, 48090, 48091, 48092, 48093, 48094, 48095, 48096, 48097, 48098, 48099, 48101, 48103, 48104, 48105, 48106, 48107, 48108, 48109, 48110, 48111, 48112, 48113, 48114, 48115, 48116, 48117, 48118, 48120, 48121, 48122, 48123, 48124, 48125, 48126, 48127, 48128, 48130, 48131, 48133, 48134, 48135, 48136, 48137, 48138, 48139, 48140, 48141, 48143, 48144, 48145, 48146, 48150, 48151, 48152, 48153, 48154, 48157, 48158, 48159, 48160, 48161, 48162, 48164, 48165, 48166, 48167, 48168, 48169, 48170, 48173, 48174, 48175, 48176, 48177, 48178, 48179, 48180, 48182, 48183, 48184, 48185, 48186, 48187, 48188, 48189, 48190, 48191, 48192, 48195, 48197, 48198, 48201, 48202, 48203, 48204, 48205, 48206, 48207, 48208, 48209, 48210, 48211, 48212, 48213, 48214, 48215, 48216, 48217, 48218, 48219, 48220, 48221, 48222, 48223, 48224, 48225, 48226, 48227, 48228, 48229, 48230, 48231, 48232, 48233, 48234, 48235, 48236, 48237, 48238, 48239, 48240, 48242, 48243, 48244, 48246, 48254, 48255, 48258, 48260, 48264, 48265, 48266, 48267, 48268, 48269, 48272, 48274, 48275, 48277, 48278, 48279, 48288, 48295, 48297, 48299, 48301, 48302, 48303, 48304, 48305, 48306, 48307, 48308, 48309, 48310, 48311, 48312, 48313, 48314, 48315, 48316, 48317, 48318, 48320, 48321, 48322, 48323, 48324, 48325, 48326, 48327, 48328, 48329, 48330, 48331, 48332, 48333, 48334, 48335, 48336, 48340, 48341, 48342, 48343, 48346, 48347, 48348, 48350, 48353, 48356, 48357, 48359, 48360, 48361, 48362, 48363, 48366, 48367, 48370, 48371, 48374, 48375, 48376, 48377, 48380, 48381, 48382, 48383, 48386, 48387, 48390, 48391, 48393, 48396, 48397, 48398, 48401, 48410, 48411, 48412, 48413, 48414, 48415, 48416, 48417, 48418, 48419, 48420, 48421, 48422, 48423, 48426, 48427, 48428, 48429, 48430, 48432, 48433, 48434, 48435, 48436, 48437, 48438, 48439, 48440, 48441, 48442, 48444, 48445, 48446, 48448, 48449, 48450, 48451, 48453, 48454, 48455, 48456, 48457, 48458, 48460, 48461, 48462, 48463, 48464, 48465, 48466, 48467, 48468, 48469, 48470, 48471, 48472, 48473, 48475, 48476, 48501, 48502, 48503, 48504, 48505, 48506, 48507, 48509, 48519, 48529, 48531, 48532, 48550, 48551, 48552, 48553, 48554, 48555, 48556, 48557, 48559, 48563, 48567, 48601, 48602, 48603, 48604, 48605, 48606, 48607, 48608, 48609, 48610, 48611, 48612, 48613, 48614, 48615, 48616, 48617, 48618, 48619, 48620, 48621, 48622, 48623, 48624, 48625, 48626, 48627, 48628, 48629, 48630, 48631, 48632, 48633, 48634, 48635, 48636, 48637, 48640, 48641, 48642, 48647, 48649, 48650, 48651, 48652, 48653, 48654, 48655, 48656, 48657, 48658, 48659, 48661, 48662, 48663, 48667, 48670, 48674, 48686, 48701, 48703, 48705, 48706, 48707, 48708, 48710, 48720, 48721, 48722, 48723, 48724, 48725, 48726, 48727, 48728, 48729, 48730, 48731, 48732, 48733, 48734, 48735, 48736, 48737, 48738, 48739, 48740, 48741, 48742, 48743, 48744, 48745, 48746, 48747, 48748, 48749, 48750, 48754, 48755, 48756, 48757, 48758, 48759, 48760, 48761, 48762, 48763, 48764, 48765, 48766, 48767, 48768, 48769, 48770, 48787, 48801, 48802, 48803, 48804, 48805, 48806, 48807, 48808, 48809, 48811, 48812, 48813, 48815, 48816, 48817, 48818, 48819, 48820, 48821, 48822, 48823, 48824, 48825, 48826, 48827, 48829, 48830, 48831, 48832, 48833, 48834, 48835, 48836, 48837, 48838, 48840, 48841, 48842, 48843, 48844, 48845, 48846, 48847, 48848, 48849, 48850, 48851, 48852, 48853, 48854, 48855, 48856, 48857, 48858, 48859, 48860, 48861, 48862, 48863, 48864, 48865, 48866, 48867, 48870, 48871, 48872, 48873, 48874, 48875, 48876, 48877, 48878, 48879, 48880, 48881, 48882, 48883, 48884, 48885, 48886, 48887, 48888, 48889, 48890, 48891, 48892, 48893, 48894, 48895, 48896, 48897, 48901, 48906, 48907, 48908, 48909, 48910, 48911, 48912, 48913, 48915, 48916, 48917, 48918, 48919, 48921, 48922, 48924, 48929, 48930, 48933, 48937, 48950, 48956, 48980, 49001, 49002, 49003, 49004, 49005, 49006, 49007, 49008, 49009, 49010, 49011, 49012, 49013, 49014, 49015, 49016, 49017, 49018, 49019, 49020, 49021, 49022, 49023, 49024, 49026, 49027, 49028, 49029, 49030, 49031, 49032, 49033, 49034, 49035, 49036, 49038, 49039, 49040, 49041, 49042, 49043, 49045, 49046, 49047, 49048, 49050, 49051, 49052, 49053, 49055, 49056, 49057, 49058, 49060, 49061, 49062, 49063, 49064, 49065, 49066, 49067, 49068, 49069, 49070, 49071, 49072, 49073, 49074, 49075, 49076, 49077, 49078, 49079, 49080, 49081, 49082, 49083, 49084, 49085, 49087, 49088, 49089, 49090, 49091, 49092, 49093, 49094, 49095, 49096, 49097, 49098, 49099, 49101, 49102, 49103, 49104, 49106, 49107, 49111, 49112, 49113, 49115, 49116, 49117, 49119, 49120, 49121, 49125, 49126, 49127, 49128, 49129, 49130, 49137, 49157, 49169, 49201, 49202, 49203, 49204, 49220, 49221, 49224, 49226, 49227, 49228, 49229, 49230, 49232, 49233, 49234, 49235, 49236, 49237, 49238, 49239, 49240, 49241, 49242, 49245, 49246, 49247, 49248, 49249, 49250, 49251, 49252, 49253, 49254, 49255, 49256, 49257, 49258, 49259, 49261, 49262, 49263, 49264, 49265, 49266, 49267, 49268, 49269, 49270, 49271, 49272, 49274, 49275, 49276, 49277, 49278, 49279, 49280, 49281, 49282, 49283, 49284, 49285, 49286, 49287, 49288, 49289, 49301, 49302, 49303, 49304, 49305, 49306, 49307, 49309, 49310, 49311, 49312, 49314, 49315, 49316, 49317, 49318, 49319, 49320, 49321, 49322, 49323, 49325, 49326, 49327, 49328, 49329, 49330, 49331, 49332, 49333, 49335, 49336, 49337, 49338, 49339, 49340, 49341, 49342, 49343, 49344, 49345, 49346, 49347, 49348, 49349, 49351, 49355, 49356, 49357, 49368, 49394, 49401, 49402, 49403, 49404, 49405, 49406, 49408, 49409, 49410, 49411, 49412, 49413, 49415, 49416, 49417, 49418, 49419, 49420, 49421, 49422, 49423, 49424, 49425, 49426, 49427, 49428, 49429, 49430, 49431, 49434, 49435, 49436, 49437, 49440, 49441, 49442, 49443, 49444, 49445, 49446, 49448, 49449, 49450, 49451, 49452, 49453, 49454, 49455, 49456, 49457, 49458, 49459, 49460, 49461, 49463, 49464, 49468, 49501, 49502, 49503, 49504, 49505, 49506, 49507, 49508, 49509, 49510, 49512, 49514, 49515, 49516, 49518, 49523, 49525, 49530, 49544, 49546, 49548, 49550, 49555, 49560, 49564, 49565, 49582, 49588, 49590, 49599, 49601, 49610, 49611, 49612, 49613, 49614, 49615, 49616, 49617, 49618, 49619, 49620, 49621, 49622, 49623, 49625, 49626, 49627, 49628, 49629, 49630, 49631, 49632, 49633, 49634, 49635, 49636, 49637, 49638, 49639, 49640, 49642, 49643, 49644, 49645, 49646, 49647, 49648, 49649, 49650, 49651, 49652, 49653, 49654, 49655, 49656, 49657, 49659, 49660, 49663, 49664, 49665, 49666, 49667, 49668, 49670, 49673, 49674, 49675, 49676, 49677, 49679, 49680, 49682, 49683, 49684, 49685, 49686, 49688, 49689, 49690, 49695, 49696, 49701, 49705, 49706, 49707, 49709, 49710, 49711, 49712, 49713, 49715, 49716, 49717, 49718, 49719, 49720, 49721, 49722, 49723, 49724, 49725, 49726, 49727, 49728, 49729, 49730, 49732, 49733, 49734, 49735, 49736, 49737, 49738, 49739, 49740, 49743, 49744, 49745, 49746, 49747, 49748, 49749, 49750, 49751, 49752, 49753, 49755, 49756, 49757, 49758, 49759, 49760, 49761, 49762, 49764, 49765, 49766, 49768, 49769, 49770, 49774, 49775, 49776, 49777, 49778, 49779, 49780, 49781, 49782, 49783, 49784, 49785, 49786, 49788, 49790, 49791, 49792, 49793, 49795, 49796, 49797, 49799, 49801, 49802, 49805, 49806, 49807, 49808, 49812, 49813, 49814, 49815, 49816, 49817, 49818, 49819, 49820, 49821, 49822, 49825, 49826, 49827, 49829, 49831, 49833, 49834, 49835, 49836, 49837, 49838, 49839, 49840, 49841, 49845, 49847, 49848, 49849, 49852, 49853, 49854, 49855, 49858, 49861, 49862, 49863, 49864, 49865, 49866, 49868, 49869, 49870, 49871, 49872, 49873, 49874, 49876, 49877, 49878, 49879, 49880, 49881, 49883, 49884, 49885, 49886, 49887, 49891, 49892, 49893, 49894, 49895, 49896, 49901, 49902, 49903, 49905, 49908, 49910, 49911, 49912, 49913, 49915, 49916, 49917, 49918, 49919, 49920, 49921, 49922, 49924, 49925, 49927, 49929, 49930, 49931, 49934, 49935, 49938, 49942, 49943, 49945, 49946, 49947, 49948, 49950, 49952, 49953, 49955, 49958, 49959, 49960, 49961, 49962, 49963, 49964, 49965, 49967, 49968, 49969, 49970, 49971, 49974, 49990, 50001, 50002, 50003, 50005, 50006, 50007, 50008, 50009, 50010, 50011, 50012, 50013, 50014, 50015, 50020, 50021, 50022, 50025, 50026, 50027, 50028, 50029, 50031, 50032, 50033, 50034, 50035, 50036, 50037, 50038, 50039, 50040, 50041, 50042, 50043, 50044, 50046, 50047, 50048, 50049, 50050, 50051, 50052, 50054, 50055, 50056, 50057, 50058, 50059, 50060, 50061, 50062, 50063, 50064, 50065, 50066, 50067, 50068, 50069, 50070, 50071, 50072, 50073, 50074, 50075, 50076, 50078, 50101, 50102, 50103, 50104, 50105, 50106, 50107, 50108, 50109, 50110, 50111, 50112, 50115, 50116, 50117, 50118, 50119, 50120, 50122, 50123, 50124, 50125, 50126, 50127, 50128, 50129, 50130, 50131, 50132, 50133, 50134, 50135, 50136, 50137, 50138, 50139, 50140, 50141, 50142, 50143, 50144, 50145, 50146, 50147, 50148, 50149, 50150, 50151, 50152, 50153, 50154, 50155, 50156, 50157, 50158, 50160, 50161, 50162, 50163, 50164, 50165, 50166, 50167, 50168, 50169, 50170, 50171, 50173, 50174, 50177, 50197, 50198, 50201, 50206, 50207, 50208, 50210, 50211, 50212, 50213, 50214, 50216, 50217, 50218, 50219, 50220, 50222, 50223, 50225, 50226, 50227, 50228, 50229, 50230, 50231, 50232, 50233, 50234, 50235, 50236, 50237, 50238, 50239, 50240, 50241, 50242, 50243, 50244, 50246, 50247, 50248, 50249, 50250, 50251, 50252, 50254, 50255, 50256, 50257, 50258, 50259, 50261, 50262, 50263, 50264, 50265, 50266, 50268, 50269, 50271, 50272, 50273, 50274, 50275, 50276, 50277, 50278, 50294, 50301, 50302, 50303, 50304, 50305, 50306, 50307, 50308, 50309, 50310, 50311, 50312, 50313, 50314, 50315, 50316, 50317, 50318, 50319, 50320, 50321, 50322, 50323, 50325, 50327, 50328, 50329, 50330, 50331, 50332, 50333, 50334, 50335, 50336, 50338, 50339, 50340, 50347, 50350, 50359, 50360, 50361, 50362, 50363, 50364, 50367, 50368, 50369, 50380, 50381, 50391, 50392, 50393, 50394, 50395, 50396, 50397, 50398, 50401, 50402, 50405, 50420, 50421, 50423, 50424, 50426, 50427, 50428, 50430, 50431, 50432, 50433, 50434, 50435, 50436, 50438, 50439, 50440, 50441, 50444, 50446, 50447, 50448, 50449, 50450, 50451, 50452, 50453, 50454, 50455, 50456, 50457, 50458, 50459, 50460, 50461, 50464, 50465, 50466, 50467, 50468, 50469, 50470, 50471, 50472, 50473, 50475, 50476, 50477, 50478, 50479, 50480, 50481, 50482, 50483, 50484, 50501, 50510, 50511, 50514, 50515, 50516, 50517, 50518, 50519, 50520, 50521, 50522, 50523, 50524, 50525, 50526, 50527, 50528, 50529, 50530, 50531, 50532, 50533, 50535, 50536, 50538, 50539, 50540, 50541, 50542, 50543, 50544, 50545, 50546, 50548, 50551, 50552, 50554, 50556, 50557, 50558, 50559, 50560, 50561, 50562, 50563, 50565, 50566, 50567, 50568, 50569, 50570, 50571, 50573, 50574, 50575, 50576, 50577, 50578, 50579, 50581, 50582, 50583, 50585, 50586, 50587, 50588, 50590, 50591, 50592, 50593, 50594, 50595, 50597, 50598, 50599, 50601, 50602, 50603, 50604, 50605, 50606, 50607, 50608, 50609, 50611, 50612, 50613, 50614, 50616, 50619, 50620, 50621, 50622, 50623, 50624, 50625, 50626, 50627, 50628, 50629, 50630, 50631, 50632, 50633, 50634, 50635, 50636, 50638, 50641, 50642, 50643, 50644, 50645, 50647, 50648, 50649, 50650, 50651, 50652, 50653, 50654, 50655, 50657, 50658, 50659, 50660, 50661, 50662, 50664, 50665, 50666, 50667, 50668, 50669, 50670, 50671, 50672, 50673, 50674, 50675, 50676, 50677, 50680, 50681, 50682, 50701, 50702, 50703, 50704, 50706, 50707, 50799, 50801, 50830, 50831, 50833, 50835, 50836, 50837, 50839, 50840, 50841, 50842, 50843, 50845, 50846, 50847, 50848, 50849, 50851, 50853, 50854, 50857, 50858, 50859, 50860, 50861, 50862, 50863, 50864, 50936, 50940, 50947, 50950, 50980, 50981, 51001, 51002, 51003, 51004, 51005, 51006, 51007, 51008, 51009, 51010, 51011, 51012, 51014, 51015, 51016, 51017, 51018, 51019, 51020, 51022, 51023, 51024, 51025, 51026, 51027, 51028, 51029, 51030, 51031, 51033, 51034, 51035, 51036, 51037, 51038, 51039, 51040, 51041, 51044, 51045, 51046, 51047, 51048, 51049, 51050, 51051, 51052, 51053, 51054, 51055, 51056, 51057, 51058, 51059, 51060, 51061, 51062, 51063, 51101, 51102, 51103, 51104, 51105, 51106, 51107, 51108, 51109, 51111, 51201, 51230, 51231, 51232, 51234, 51235, 51237, 51238, 51239, 51240, 51241, 51242, 51243, 51244, 51245, 51246, 51247, 51248, 51249, 51250, 51301, 51330, 51331, 51333, 51334, 51338, 51340, 51341, 51342, 51343, 51344, 51345, 51346, 51347, 51349, 51350, 51351, 51354, 51355, 51357, 51358, 51360, 51363, 51364, 51365, 51366, 51401, 51430, 51431, 51432, 51433, 51436, 51439, 51440, 51441, 51442, 51443, 51444, 51445, 51446, 51447, 51448, 51449, 51450, 51451, 51452, 51453, 51454, 51455, 51458, 51459, 51460, 51461, 51462, 51463, 51465, 51466, 51467, 51496, 51501, 51502, 51503, 51510, 51515, 51520, 51521, 51523, 51525, 51526, 51527, 51528, 51529, 51530, 51531, 51532, 51533, 51534, 51535, 51536, 51537, 51540, 51541, 51542, 51543, 51544, 51545, 51546, 51547, 51548, 51549, 51550, 51551, 51552, 51553, 51554, 51555, 51556, 51557, 51558, 51559, 51560, 51561, 51562, 51563, 51564, 51565, 51566, 51570, 51571, 51572, 51573, 51574, 51575, 51576, 51577, 51578, 51579, 51591, 51593, 51601, 51602, 51603, 51630, 51631, 51632, 51636, 51637, 51638, 51639, 51640, 51645, 51646, 51647, 51648, 51649, 51650, 51651, 51652, 51653, 51654, 51656, 52001, 52002, 52003, 52004, 52030, 52031, 52032, 52033, 52035, 52036, 52037, 52038, 52039, 52040, 52041, 52042, 52043, 52044, 52045, 52046, 52047, 52048, 52049, 52050, 52052, 52053, 52054, 52055, 52056, 52057, 52060, 52064, 52065, 52066, 52068, 52069, 52070, 52071, 52072, 52073, 52074, 52075, 52076, 52077, 52078, 52079, 52099, 52101, 52131, 52132, 52133, 52134, 52135, 52136, 52140, 52141, 52142, 52144, 52146, 52147, 52149, 52151, 52154, 52155, 52156, 52157, 52158, 52159, 52160, 52161, 52162, 52163, 52164, 52165, 52166, 52168, 52169, 52170, 52171, 52172, 52175, 52201, 52202, 52203, 52204, 52205, 52206, 52207, 52208, 52209, 52210, 52211, 52212, 52213, 52214, 52215, 52216, 52217, 52218, 52219, 52220, 52221, 52222, 52223, 52224, 52225, 52226, 52227, 52228, 52229, 52231, 52232, 52233, 52235, 52236, 52237, 52239, 52240, 52241, 52242, 52243, 52244, 52245, 52246, 52247, 52248, 52249, 52251, 52252, 52253, 52254, 52255, 52257, 52301, 52302, 52305, 52306, 52307, 52308, 52309, 52310, 52312, 52313, 52314, 52315, 52316, 52317, 52318, 52319, 52320, 52321, 52322, 52323, 52324, 52325, 52326, 52327, 52328, 52329, 52330, 52332, 52333, 52334, 52335, 52336, 52337, 52338, 52339, 52340, 52341, 52342, 52344, 52345, 52346, 52347, 52348, 52349, 52350, 52351, 52352, 52353, 52354, 52355, 52356, 52358, 52359, 52361, 52362, 52401, 52402, 52403, 52404, 52405, 52406, 52407, 52408, 52409, 52410, 52411, 52497, 52498, 52499, 52501, 52530, 52531, 52533, 52534, 52535, 52536, 52537, 52538, 52540, 52542, 52543, 52544, 52548, 52549, 52550, 52551, 52552, 52553, 52554, 52555, 52556, 52557, 52560, 52561, 52562, 52563, 52565, 52566, 52567, 52568, 52569, 52570, 52571, 52572, 52573, 52574, 52576, 52577, 52580, 52581, 52583, 52584, 52585, 52586, 52588, 52590, 52591, 52593, 52594, 52595, 52601, 52619, 52620, 52621, 52623, 52624, 52625, 52626, 52627, 52630, 52631, 52632, 52635, 52637, 52638, 52639, 52640, 52641, 52642, 52644, 52645, 52646, 52647, 52648, 52649, 52650, 52651, 52652, 52653, 52654, 52655, 52656, 52657, 52658, 52659, 52660, 52701, 52706, 52720, 52721, 52722, 52726, 52727, 52728, 52729, 52730, 52731, 52732, 52733, 52736, 52737, 52738, 52739, 52742, 52745, 52746, 52747, 52748, 52749, 52750, 52751, 52752, 52753, 52754, 52755, 52756, 52757, 52758, 52759, 52760, 52761, 52765, 52766, 52767, 52768, 52769, 52771, 52772, 52773, 52774, 52776, 52777, 52778, 52801, 52802, 52803, 52804, 52805, 52806, 52807, 52808, 52809, 52820, 53001, 53002, 53003, 53004, 53005, 53006, 53007, 53008, 53009, 53010, 53011, 53012, 53013, 53014, 53015, 53016, 53017, 53018, 53019, 53020, 53021, 53022, 53023, 53024, 53026, 53027, 53029, 53031, 53032, 53033, 53034, 53035, 53036, 53037, 53038, 53039, 53040, 53042, 53044, 53045, 53046, 53047, 53048, 53049, 53050, 53051, 53052, 53056, 53057, 53058, 53059, 53060, 53061, 53062, 53063, 53064, 53065, 53066, 53069, 53070, 53072, 53073, 53074, 53075, 53076, 53078, 53079, 53080, 53081, 53082, 53083, 53085, 53086, 53088, 53089, 53090, 53091, 53092, 53093, 53094, 53095, 53097, 53098, 53099, 53101, 53102, 53103, 53104, 53105, 53108, 53109, 53110, 53114, 53115, 53118, 53119, 53120, 53121, 53122, 53125, 53126, 53127, 53128, 53129, 53130, 53132, 53134, 53137, 53138, 53139, 53140, 53141, 53142, 53143, 53144, 53146, 53147, 53148, 53149, 53150, 53151, 53152, 53153, 53154, 53156, 53157, 53158, 53159, 53167, 53168, 53170, 53171, 53172, 53176, 53177, 53178, 53179, 53181, 53182, 53183, 53184, 53185, 53186, 53187, 53188, 53189, 53190, 53191, 53192, 53194, 53195, 53197, 53201, 53202, 53203, 53204, 53205, 53206, 53207, 53208, 53209, 53210, 53211, 53212, 53213, 53214, 53215, 53216, 53217, 53218, 53219, 53220, 53221, 53222, 53223, 53224, 53225, 53226, 53227, 53228, 53233, 53234, 53235, 53237, 53245, 53259, 53263, 53267, 53268, 53270, 53274, 53277, 53278, 53280, 53281, 53284, 53285, 53288, 53290, 53293, 53295, 53401, 53402, 53403, 53404, 53405, 53406, 53407, 53408, 53449, 53490, 53501, 53502, 53503, 53504, 53505, 53506, 53507, 53508, 53510, 53511, 53512, 53515, 53516, 53517, 53518, 53520, 53521, 53522, 53523, 53525, 53526, 53527, 53528, 53529, 53530, 53531, 53532, 53533, 53534, 53535, 53536, 53537, 53538, 53540, 53541, 53542, 53543, 53544, 53545, 53546, 53547, 53549, 53550, 53551, 53553, 53554, 53555, 53556, 53557, 53558, 53559, 53560, 53561, 53562, 53563, 53565, 53566, 53569, 53570, 53571, 53572, 53573, 53574, 53575, 53576, 53577, 53578, 53579, 53580, 53581, 53582, 53583, 53584, 53585, 53586, 53587, 53588, 53589, 53590, 53591, 53593, 53594, 53595, 53596, 53597, 53598, 53599, 53648, 53698, 53701, 53702, 53703, 53704, 53705, 53706, 53707, 53708, 53709, 53710, 53711, 53713, 53714, 53715, 53716, 53717, 53718, 53719, 53725, 53726, 53744, 53777, 53778, 53779, 53780, 53782, 53783, 53784, 53785, 53786, 53787, 53788, 53789, 53790, 53791, 53792, 53793, 53794, 53801, 53802, 53803, 53804, 53805, 53806, 53807, 53808, 53809, 53810, 53811, 53812, 53813, 53816, 53817, 53818, 53820, 53821, 53824, 53825, 53826, 53827, 53886, 53901, 53910, 53911, 53913, 53916, 53917, 53919, 53920, 53922, 53923, 53924, 53925, 53926, 53927, 53928, 53929, 53930, 53931, 53932, 53933, 53934, 53935, 53936, 53937, 53939, 53940, 53941, 53942, 53943, 53944, 53946, 53947, 53948, 53949, 53950, 53951, 53952, 53953, 53954, 53955, 53956, 53957, 53958, 53959, 53960, 53961, 53962, 53963, 53964, 53965, 53968, 53969, 53981, 53995, 54001, 54002, 54003, 54004, 54005, 54006, 54007, 54009, 54010, 54011, 54012, 54013, 54014, 54015, 54016, 54017, 54020, 54021, 54022, 54023, 54024, 54025, 54026, 54027, 54028, 54034, 54035, 54052, 54061, 54082, 54101, 54102, 54103, 54104, 54106, 54107, 54110, 54111, 54112, 54113, 54114, 54115, 54119, 54120, 54121, 54123, 54124, 54125, 54126, 54127, 54128, 54129, 54130, 54131, 54135, 54136, 54137, 54138, 54139, 54140, 54141, 54143, 54149, 54150, 54151, 54152, 54153, 54154, 54155, 54156, 54157, 54159, 54160, 54161, 54162, 54165, 54166, 54169, 54170, 54171, 54173, 54174, 54175, 54177, 54180, 54182, 54201, 54202, 54203, 54204, 54205, 54206, 54207, 54208, 54209, 54210, 54211, 54212, 54213, 54214, 54215, 54216, 54217, 54220, 54221, 54226, 54227, 54228, 54229, 54230, 54232, 54234, 54235, 54240, 54241, 54242, 54245, 54246, 54247, 54301, 54302, 54303, 54304, 54305, 54306, 54307, 54308, 54310, 54311, 54313, 54324, 54337, 54344, 54353, 54383, 54401, 54402, 54403, 54404, 54405, 54406, 54407, 54408, 54409, 54410, 54411, 54412, 54413, 54414, 54415, 54416, 54417, 54418, 54419, 54420, 54421, 54422, 54423, 54424, 54425, 54426, 54427, 54428, 54429, 54430, 54431, 54432, 54433, 54434, 54435, 54436, 54437, 54439, 54440, 54441, 54442, 54443, 54444, 54446, 54447, 54448, 54449, 54450, 54451, 54452, 54454, 54455, 54456, 54457, 54458, 54459, 54460, 54462, 54463, 54464, 54465, 54466, 54467, 54469, 54470, 54471, 54472, 54473, 54474, 54475, 54476, 54479, 54480, 54481, 54484, 54485, 54486, 54487, 54488, 54489, 54490, 54491, 54492, 54493, 54494, 54495, 54498, 54499, 54501, 54511, 54512, 54513, 54514, 54515, 54517, 54519, 54520, 54521, 54524, 54525, 54526, 54527, 54529, 54530, 54531, 54532, 54534, 54536, 54537, 54538, 54539, 54540, 54541, 54542, 54543, 54545, 54546, 54547, 54548, 54550, 54551, 54552, 54554, 54555, 54556, 54557, 54558, 54559, 54560, 54561, 54562, 54563, 54564, 54565, 54566, 54568, 54601, 54602, 54603, 54610, 54611, 54612, 54613, 54614, 54615, 54616, 54618, 54619, 54620, 54621, 54622, 54623, 54624, 54625, 54626, 54627, 54628, 54629, 54630, 54631, 54632, 54634, 54635, 54636, 54637, 54638, 54639, 54640, 54641, 54642, 54643, 54644, 54645, 54646, 54648, 54649, 54650, 54651, 54652, 54653, 54654, 54655, 54656, 54657, 54658, 54659, 54660, 54661, 54662, 54664, 54665, 54666, 54667, 54669, 54670, 54699, 54701, 54702, 54703, 54720, 54721, 54722, 54723, 54724, 54725, 54726, 54727, 54728, 54729, 54730, 54731, 54732, 54733, 54734, 54735, 54736, 54737, 54738, 54739, 54740, 54741, 54742, 54743, 54744, 54745, 54746, 54747, 54748, 54749, 54750, 54751, 54754, 54755, 54756, 54757, 54758, 54759, 54760, 54761, 54762, 54763, 54764, 54765, 54766, 54767, 54768, 54769, 54770, 54771, 54772, 54773, 54774, 54801, 54805, 54806, 54810, 54812, 54813, 54814, 54816, 54817, 54818, 54819, 54820, 54821, 54822, 54824, 54826, 54827, 54828, 54829, 54830, 54832, 54834, 54835, 54836, 54837, 54838, 54839, 54840, 54841, 54842, 54843, 54844, 54845, 54846, 54847, 54848, 54849, 54850, 54851, 54853, 54854, 54855, 54856, 54857, 54858, 54859, 54861, 54862, 54863, 54864, 54865, 54867, 54868, 54870, 54871, 54872, 54873, 54874, 54875, 54876, 54880, 54886, 54888, 54889, 54890, 54891, 54893, 54895, 54896, 54901, 54902, 54903, 54904, 54906, 54909, 54911, 54912, 54913, 54914, 54915, 54919, 54921, 54922, 54923, 54926, 54927, 54928, 54929, 54930, 54931, 54932, 54933, 54934, 54935, 54936, 54937, 54940, 54941, 54942, 54943, 54944, 54945, 54946, 54947, 54948, 54949, 54950, 54951, 54952, 54956, 54957, 54960, 54961, 54962, 54963, 54964, 54965, 54966, 54967, 54968, 54969, 54970, 54971, 54974, 54975, 54976, 54977, 54978, 54979, 54980, 54981, 54982, 54983, 54984, 54985, 54986, 54990, 55001, 55002, 55003, 55005, 55006, 55007, 55008, 55009, 55010, 55011, 55012, 55013, 55014, 55016, 55017, 55018, 55019, 55020, 55021, 55024, 55025, 55026, 55027, 55029, 55030, 55031, 55032, 55033, 55036, 55037, 55038, 55040, 55041, 55042, 55043, 55044, 55045, 55046, 55047, 55049, 55051, 55052, 55053, 55054, 55055, 55056, 55057, 55060, 55063, 55065, 55066, 55067, 55068, 55069, 55070, 55071, 55072, 55073, 55074, 55075, 55076, 55077, 55078, 55079, 55080, 55082, 55083, 55084, 55085, 55087, 55088, 55089, 55090, 55092, 55101, 55102, 55103, 55104, 55105, 55106, 55107, 55108, 55109, 55110, 55111, 55112, 55113, 55114, 55115, 55116, 55117, 55118, 55119, 55120, 55121, 55122, 55123, 55124, 55125, 55126, 55127, 55128, 55129, 55133, 55144, 55145, 55146, 55150, 55155, 55161, 55164, 55165, 55166, 55168, 55169, 55170, 55171, 55172, 55175, 55177, 55182, 55184, 55187, 55188, 55189, 55190, 55191, 55272, 55301, 55302, 55303, 55304, 55305, 55306, 55307, 55308, 55309, 55310, 55311, 55312, 55313, 55314, 55315, 55316, 55317, 55318, 55319, 55320, 55321, 55322, 55323, 55324, 55325, 55327, 55328, 55329, 55330, 55331, 55332, 55333, 55334, 55335, 55336, 55337, 55338, 55339, 55340, 55341, 55342, 55343, 55344, 55345, 55346, 55347, 55348, 55349, 55350, 55352, 55353, 55354, 55355, 55356, 55357, 55358, 55359, 55360, 55361, 55362, 55363, 55364, 55365, 55366, 55367, 55368, 55369, 55370, 55371, 55372, 55373, 55374, 55375, 55376, 55377, 55378, 55379, 55380, 55381, 55382, 55383, 55384, 55385, 55386, 55387, 55388, 55389, 55390, 55391, 55392, 55393, 55394, 55395, 55396, 55397, 55398, 55399, 55401, 55402, 55403, 55404, 55405, 55406, 55407, 55408, 55409, 55410, 55411, 55412, 55413, 55414, 55415, 55416, 55417, 55418, 55419, 55420, 55421, 55422, 55423, 55424, 55425, 55426, 55427, 55428, 55429, 55430, 55431, 55432, 55433, 55434, 55435, 55436, 55437, 55438, 55439, 55440, 55441, 55442, 55443, 55444, 55445, 55446, 55447, 55448, 55449, 55450, 55454, 55455, 55458, 55459, 55460, 55468, 55470, 55472, 55473, 55474, 55478, 55479, 55480, 55483, 55484, 55485, 55486, 55487, 55488, 55530, 55550, 55551, 55552, 55553, 55554, 55555, 55556, 55557, 55558, 55559, 55560, 55561, 55562, 55563, 55564, 55565, 55566, 55567, 55568, 55569, 55570, 55571, 55572, 55573, 55574, 55575, 55576, 55577, 55578, 55579, 55580, 55581, 55582, 55583, 55584, 55585, 55586, 55587, 55588, 55589, 55590, 55591, 55592, 55593, 55594, 55595, 55596, 55597, 55598, 55599, 55601, 55602, 55603, 55604, 55605, 55606, 55607, 55608, 55609, 55612, 55613, 55614, 55615, 55616, 55676, 55701, 55702, 55703, 55704, 55705, 55706, 55707, 55708, 55709, 55710, 55711, 55712, 55713, 55715, 55716, 55717, 55718, 55719, 55720, 55721, 55722, 55723, 55724, 55725, 55726, 55728, 55730, 55731, 55732, 55733, 55734, 55735, 55736, 55738, 55741, 55742, 55744, 55745, 55746, 55747, 55748, 55749, 55750, 55751, 55752, 55753, 55756, 55757, 55758, 55760, 55761, 55763, 55764, 55765, 55766, 55767, 55768, 55769, 55771, 55772, 55775, 55777, 55778, 55779, 55780, 55781, 55782, 55783, 55784, 55785, 55786, 55787, 55790, 55791, 55792, 55793, 55795, 55796, 55797, 55798, 55801, 55802, 55803, 55804, 55805, 55806, 55807, 55808, 55810, 55811, 55812, 55814, 55815, 55816, 55901, 55902, 55903, 55904, 55905, 55906, 55909, 55910, 55912, 55917, 55918, 55919, 55920, 55921, 55922, 55923, 55924, 55925, 55926, 55927, 55929, 55931, 55932, 55933, 55934, 55935, 55936, 55939, 55940, 55941, 55942, 55943, 55944, 55945, 55946, 55947, 55949, 55950, 55951, 55952, 55953, 55954, 55955, 55956, 55957, 55959, 55960, 55961, 55962, 55963, 55964, 55965, 55967, 55968, 55969, 55970, 55971, 55972, 55973, 55974, 55975, 55976, 55977, 55978, 55979, 55981, 55982, 55983, 55985, 55987, 55988, 55990, 55991, 55992, 56001, 56002, 56003, 56006, 56007, 56009, 56010, 56011, 56013, 56014, 56016, 56017, 56019, 56020, 56021, 56022, 56023, 56024, 56025, 56026, 56027, 56028, 56029, 56030, 56031, 56032, 56033, 56034, 56035, 56036, 56037, 56039, 56041, 56042, 56043, 56044, 56045, 56046, 56047, 56048, 56050, 56051, 56052, 56054, 56055, 56056, 56057, 56058, 56060, 56062, 56063, 56064, 56065, 56068, 56069, 56071, 56072, 56073, 56074, 56075, 56076, 56078, 56080, 56081, 56082, 56083, 56084, 56085, 56087, 56088, 56089, 56090, 56091, 56093, 56096, 56097, 56098, 56101, 56110, 56111, 56113, 56114, 56115, 56116, 56117, 56118, 56119, 56120, 56121, 56122, 56123, 56125, 56126, 56127, 56128, 56129, 56130, 56131, 56132, 56134, 56135, 56136, 56137, 56138, 56139, 56140, 56141, 56142, 56143, 56144, 56145, 56146, 56147, 56149, 56150, 56151, 56152, 56153, 56155, 56156, 56157, 56158, 56159, 56160, 56161, 56162, 56164, 56165, 56166, 56167, 56168, 56169, 56170, 56171, 56172, 56173, 56174, 56175, 56176, 56177, 56178, 56180, 56181, 56183, 56185, 56186, 56187, 56201, 56207, 56208, 56209, 56210, 56211, 56212, 56214, 56215, 56216, 56218, 56219, 56220, 56221, 56222, 56223, 56224, 56225, 56226, 56227, 56228, 56229, 56230, 56231, 56232, 56235, 56236, 56237, 56239, 56240, 56241, 56243, 56244, 56245, 56246, 56248, 56249, 56251, 56252, 56253, 56255, 56256, 56257, 56258, 56260, 56262, 56263, 56264, 56265, 56266, 56267, 56270, 56271, 56273, 56274, 56276, 56277, 56278, 56279, 56280, 56281, 56282, 56283, 56284, 56285, 56286, 56287, 56288, 56289, 56291, 56292, 56293, 56294, 56295, 56296, 56297, 56301, 56302, 56303, 56304, 56307, 56308, 56309, 56310, 56311, 56312, 56313, 56314, 56315, 56316, 56317, 56318, 56319, 56320, 56321, 56323, 56324, 56325, 56326, 56327, 56328, 56329, 56330, 56331, 56332, 56333, 56334, 56335, 56336, 56338, 56339, 56340, 56341, 56342, 56343, 56344, 56345, 56347, 56349, 56350, 56352, 56353, 56354, 56355, 56356, 56357, 56358, 56359, 56360, 56361, 56362, 56363, 56364, 56366, 56367, 56368, 56369, 56371, 56372, 56373, 56374, 56375, 56376, 56377, 56378, 56379, 56381, 56382, 56384, 56385, 56386, 56387, 56388, 56389, 56393, 56395, 56396, 56397, 56398, 56399, 56401, 56425, 56430, 56431, 56432, 56433, 56434, 56435, 56436, 56437, 56438, 56440, 56441, 56442, 56443, 56444, 56446, 56447, 56448, 56449, 56450, 56452, 56453, 56455, 56456, 56458, 56459, 56460, 56461, 56464, 56465, 56466, 56467, 56468, 56469, 56470, 56472, 56473, 56474, 56475, 56477, 56478, 56479, 56481, 56482, 56483, 56484, 56501, 56502, 56508, 56510, 56511, 56513, 56514, 56515, 56516, 56517, 56518, 56519, 56520, 56521, 56522, 56523, 56524, 56525, 56527, 56528, 56529, 56531, 56533, 56534, 56535, 56536, 56537, 56538, 56540, 56541, 56542, 56543, 56544, 56545, 56546, 56547, 56548, 56549, 56550, 56551, 56552, 56553, 56554, 56556, 56557, 56560, 56561, 56562, 56563, 56565, 56566, 56567, 56568, 56569, 56570, 56571, 56572, 56573, 56574, 56575, 56576, 56577, 56578, 56579, 56580, 56581, 56583, 56584, 56585, 56586, 56587, 56588, 56589, 56590, 56591, 56592, 56593, 56594, 56601, 56619, 56621, 56623, 56626, 56627, 56628, 56629, 56630, 56631, 56633, 56634, 56636, 56637, 56639, 56641, 56643, 56644, 56646, 56647, 56649, 56650, 56651, 56652, 56653, 56654, 56655, 56657, 56658, 56659, 56660, 56661, 56662, 56663, 56666, 56667, 56668, 56669, 56670, 56671, 56672, 56673, 56676, 56678, 56679, 56680, 56681, 56682, 56683, 56684, 56685, 56686, 56687, 56688, 56701, 56710, 56711, 56712, 56713, 56714, 56715, 56716, 56720, 56721, 56722, 56723, 56724, 56725, 56726, 56727, 56728, 56729, 56731, 56732, 56733, 56734, 56735, 56736, 56737, 56738, 56740, 56741, 56742, 56744, 56748, 56750, 56751, 56754, 56755, 56756, 56757, 56758, 56759, 56760, 56761, 56762, 56763, 57001, 57002, 57003, 57004, 57005, 57006, 57007, 57010, 57012, 57013, 57014, 57015, 57016, 57017, 57018, 57020, 57021, 57022, 57024, 57025, 57026, 57027, 57028, 57029, 57030, 57031, 57032, 57033, 57034, 57035, 57036, 57037, 57038, 57039, 57040, 57041, 57042, 57043, 57044, 57045, 57046, 57047, 57048, 57049, 57050, 57051, 57052, 57053, 57054, 57055, 57056, 57057, 57058, 57059, 57061, 57062, 57063, 57064, 57065, 57066, 57067, 57068, 57069, 57070, 57071, 57072, 57073, 57074, 57075, 57076, 57077, 57078, 57079, 57101, 57103, 57104, 57105, 57106, 57107, 57108, 57109, 57110, 57115, 57117, 57118, 57188, 57189, 57192, 57193, 57194, 57195, 57196, 57197, 57198, 57201, 57202, 57211, 57212, 57213, 57214, 57216, 57217, 57218, 57219, 57220, 57221, 57223, 57224, 57225, 57226, 57227, 57230, 57231, 57232, 57233, 57234, 57235, 57236, 57237, 57238, 57239, 57241, 57242, 57243, 57244, 57245, 57246, 57247, 57248, 57249, 57251, 57252, 57253, 57255, 57256, 57257, 57258, 57259, 57260, 57261, 57262, 57263, 57264, 57265, 57266, 57268, 57269, 57270, 57271, 57272, 57273, 57274, 57276, 57278, 57279, 57301, 57309, 57311, 57312, 57313, 57314, 57315, 57317, 57319, 57321, 57322, 57323, 57324, 57325, 57326, 57328, 57329, 57330, 57331, 57332, 57334, 57335, 57337, 57339, 57340, 57341, 57342, 57344, 57345, 57346, 57347, 57348, 57349, 57350, 57353, 57354, 57355, 57356, 57357, 57358, 57359, 57361, 57362, 57363, 57364, 57365, 57366, 57367, 57368, 57369, 57370, 57371, 57373, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57399, 57401, 57402, 57411, 57420, 57421, 57422, 57424, 57426, 57427, 57428, 57429, 57430, 57432, 57433, 57434, 57435, 57436, 57437, 57438, 57439, 57440, 57441, 57442, 57443, 57445, 57446, 57448, 57449, 57450, 57451, 57452, 57454, 57455, 57456, 57457, 57460, 57461, 57462, 57465, 57466, 57467, 57468, 57469, 57470, 57471, 57472, 57473, 57474, 57475, 57476, 57477, 57479, 57481, 57501, 57520, 57521, 57522, 57523, 57526, 57528, 57529, 57531, 57532, 57533, 57534, 57536, 57537, 57538, 57540, 57541, 57542, 57543, 57544, 57547, 57548, 57551, 57552, 57553, 57555, 57557, 57559, 57560, 57562, 57563, 57564, 57565, 57566, 57567, 57568, 57569, 57570, 57571, 57572, 57574, 57576, 57577, 57578, 57579, 57580, 57584, 57585, 57601, 57620, 57621, 57622, 57623, 57625, 57626, 57628, 57629, 57630, 57631, 57632, 57633, 57634, 57636, 57638, 57639, 57640, 57641, 57642, 57643, 57644, 57645, 57646, 57647, 57648, 57649, 57650, 57651, 57652, 57653, 57656, 57657, 57658, 57659, 57660, 57661, 57671, 57673, 57683, 57700, 57701, 57702, 57703, 57706, 57708, 57709, 57714, 57716, 57717, 57718, 57719, 57720, 57722, 57724, 57725, 57729, 57730, 57732, 57735, 57736, 57737, 57738, 57741, 57742, 57744, 57745, 57747, 57748, 57750, 57751, 57752, 57754, 57755, 57756, 57758, 57759, 57760, 57761, 57762, 57763, 57764, 57765, 57766, 57767, 57769, 57770, 57772, 57773, 57774, 57775, 57776, 57777, 57778, 57779, 57780, 57782, 57783, 57785, 57787, 57788, 57790, 57791, 57792, 57793, 57794, 57796, 57799, 57840, 57841, 57949, 58e3, 58001, 58002, 58004, 58005, 58006, 58007, 58008, 58009, 58011, 58012, 58013, 58014, 58015, 58016, 58017, 58018, 58021, 58027, 58029, 58030, 58031, 58032, 58033, 58035, 58036, 58038, 58039, 58040, 58041, 58042, 58043, 58045, 58046, 58047, 58048, 58049, 58051, 58052, 58053, 58054, 58056, 58057, 58058, 58059, 58060, 58061, 58062, 58063, 58064, 58065, 58067, 58068, 58069, 58071, 58072, 58074, 58075, 58076, 58077, 58078, 58079, 58081, 58102, 58103, 58104, 58105, 58106, 58107, 58108, 58109, 58121, 58122, 58123, 58124, 58125, 58126, 58201, 58202, 58203, 58204, 58205, 58206, 58207, 58208, 58210, 58212, 58213, 58214, 58216, 58218, 58219, 58220, 58222, 58223, 58224, 58225, 58227, 58228, 58229, 58230, 58231, 58233, 58234, 58235, 58236, 58237, 58238, 58239, 58240, 58241, 58243, 58244, 58249, 58250, 58251, 58254, 58255, 58256, 58257, 58258, 58259, 58260, 58261, 58262, 58265, 58266, 58267, 58269, 58270, 58271, 58272, 58273, 58274, 58275, 58276, 58277, 58278, 58281, 58282, 58293, 58300, 58301, 58310, 58311, 58313, 58316, 58317, 58318, 58319, 58320, 58321, 58323, 58324, 58325, 58327, 58329, 58330, 58331, 58332, 58333, 58335, 58337, 58338, 58339, 58341, 58343, 58344, 58345, 58346, 58348, 58351, 58352, 58353, 58355, 58356, 58357, 58358, 58359, 58361, 58362, 58363, 58365, 58366, 58367, 58368, 58369, 58370, 58371, 58372, 58374, 58377, 58379, 58380, 58381, 58382, 58384, 58385, 58386, 58401, 58402, 58405, 58413, 58415, 58416, 58418, 58420, 58421, 58422, 58423, 58424, 58425, 58426, 58428, 58429, 58430, 58431, 58432, 58433, 58436, 58438, 58439, 58440, 58441, 58442, 58443, 58444, 58445, 58448, 58451, 58452, 58454, 58455, 58456, 58458, 58460, 58461, 58463, 58464, 58466, 58467, 58472, 58474, 58475, 58476, 58477, 58478, 58479, 58480, 58481, 58482, 58483, 58484, 58486, 58487, 58488, 58489, 58490, 58492, 58494, 58495, 58496, 58497, 58501, 58502, 58503, 58504, 58505, 58506, 58507, 58520, 58521, 58523, 58524, 58528, 58529, 58530, 58531, 58532, 58533, 58535, 58538, 58540, 58541, 58542, 58544, 58545, 58549, 58552, 58553, 58554, 58558, 58559, 58560, 58561, 58562, 58563, 58564, 58565, 58566, 58568, 58569, 58570, 58571, 58572, 58573, 58575, 58576, 58577, 58579, 58580, 58581, 58601, 58602, 58620, 58621, 58622, 58623, 58625, 58626, 58627, 58630, 58631, 58632, 58634, 58636, 58638, 58639, 58640, 58641, 58642, 58643, 58644, 58645, 58646, 58647, 58649, 58650, 58651, 58652, 58653, 58654, 58655, 58656, 58673, 58701, 58702, 58703, 58704, 58705, 58707, 58710, 58711, 58712, 58713, 58716, 58718, 58721, 58722, 58723, 58725, 58727, 58730, 58731, 58733, 58734, 58735, 58736, 58737, 58740, 58741, 58744, 58746, 58747, 58748, 58750, 58752, 58755, 58756, 58757, 58758, 58759, 58760, 58761, 58762, 58763, 58764, 58765, 58768, 58769, 58770, 58771, 58772, 58773, 58775, 58776, 58778, 58779, 58781, 58782, 58783, 58784, 58785, 58787, 58788, 58789, 58790, 58792, 58793, 58794, 58795, 58801, 58802, 58830, 58831, 58832, 58833, 58835, 58838, 58843, 58844, 58845, 58847, 58849, 58852, 58853, 58854, 58856, 58888, 58982, 59e3, 59001, 59002, 59003, 59004, 59006, 59007, 59008, 59010, 59011, 59012, 59013, 59014, 59015, 59016, 59018, 59019, 59020, 59022, 59024, 59025, 59026, 59027, 59028, 59029, 59030, 59031, 59032, 59033, 59034, 59035, 59036, 59037, 59038, 59039, 59041, 59043, 59044, 59046, 59047, 59050, 59052, 59053, 59054, 59055, 59057, 59058, 59059, 59061, 59062, 59063, 59064, 59065, 59066, 59067, 59068, 59069, 59070, 59071, 59072, 59073, 59074, 59075, 59076, 59077, 59078, 59079, 59081, 59082, 59083, 59084, 59085, 59086, 59087, 59088, 59089, 59101, 59102, 59103, 59104, 59105, 59106, 59107, 59108, 59111, 59112, 59114, 59115, 59116, 59117, 59201, 59211, 59212, 59213, 59214, 59215, 59217, 59218, 59219, 59221, 59222, 59223, 59225, 59226, 59230, 59231, 59240, 59241, 59242, 59243, 59244, 59245, 59247, 59248, 59250, 59252, 59253, 59254, 59255, 59256, 59257, 59258, 59259, 59260, 59261, 59262, 59263, 59270, 59273, 59274, 59275, 59276, 59301, 59311, 59312, 59313, 59314, 59315, 59316, 59317, 59318, 59319, 59322, 59323, 59324, 59326, 59327, 59330, 59332, 59333, 59336, 59337, 59338, 59339, 59341, 59343, 59344, 59345, 59347, 59348, 59349, 59351, 59353, 59354, 59400, 59401, 59402, 59403, 59404, 59405, 59406, 59410, 59411, 59412, 59414, 59416, 59417, 59418, 59419, 59420, 59421, 59422, 59424, 59425, 59427, 59430, 59432, 59433, 59434, 59435, 59436, 59440, 59441, 59442, 59443, 59444, 59445, 59446, 59447, 59448, 59450, 59451, 59452, 59453, 59454, 59456, 59457, 59460, 59461, 59462, 59463, 59464, 59465, 59466, 59467, 59468, 59469, 59471, 59472, 59473, 59474, 59477, 59479, 59480, 59482, 59483, 59484, 59485, 59486, 59487, 59489, 59500, 59501, 59520, 59521, 59522, 59523, 59524, 59525, 59526, 59527, 59528, 59529, 59530, 59531, 59532, 59535, 59537, 59538, 59540, 59542, 59544, 59545, 59546, 59547, 59601, 59602, 59604, 59620, 59623, 59624, 59625, 59626, 59631, 59632, 59633, 59634, 59635, 59636, 59638, 59639, 59640, 59641, 59642, 59643, 59644, 59645, 59647, 59648, 59701, 59702, 59703, 59707, 59710, 59711, 59713, 59714, 59715, 59716, 59717, 59718, 59719, 59720, 59721, 59722, 59724, 59725, 59727, 59728, 59729, 59730, 59731, 59732, 59733, 59735, 59736, 59739, 59740, 59741, 59743, 59745, 59746, 59747, 59748, 59749, 59750, 59751, 59752, 59754, 59755, 59756, 59758, 59759, 59760, 59761, 59762, 59771, 59772, 59773, 59795, 59798, 59801, 59802, 59803, 59804, 59806, 59807, 59808, 59812, 59817, 59820, 59821, 59823, 59824, 59825, 59826, 59827, 59828, 59829, 59830, 59831, 59832, 59833, 59834, 59835, 59836, 59837, 59840, 59841, 59842, 59843, 59844, 59845, 59846, 59847, 59848, 59851, 59853, 59854, 59855, 59856, 59858, 59859, 59860, 59863, 59864, 59865, 59866, 59867, 59868, 59870, 59871, 59872, 59873, 59874, 59875, 59901, 59902, 59903, 59904, 59910, 59911, 59912, 59913, 59914, 59915, 59916, 59917, 59918, 59919, 59920, 59921, 59922, 59923, 59925, 59926, 59927, 59928, 59929, 59930, 59931, 59932, 59933, 59934, 59935, 59936, 59937, 60001, 60002, 60004, 60005, 60006, 60007, 60008, 60009, 60010, 60011, 60012, 60013, 60014, 60015, 60016, 60017, 60018, 60019, 60020, 60021, 60022, 60025, 60026, 60029, 60030, 60031, 60033, 60034, 60035, 60037, 60038, 60039, 60040, 60041, 60042, 60043, 60044, 60045, 60046, 60047, 60048, 60049, 60050, 60051, 60053, 60054, 60055, 60056, 60060, 60061, 60062, 60064, 60065, 60067, 60068, 60069, 60070, 60071, 60072, 60073, 60074, 60075, 60076, 60077, 60078, 60079, 60080, 60081, 60082, 60083, 60084, 60085, 60086, 60087, 60088, 60089, 60090, 60091, 60092, 60093, 60094, 60095, 60096, 60097, 60098, 60099, 60101, 60102, 60103, 60104, 60105, 60106, 60107, 60108, 60109, 60110, 60111, 60112, 60113, 60114, 60115, 60116, 60117, 60118, 60119, 60120, 60121, 60122, 60123, 60125, 60126, 60127, 60128, 60129, 60130, 60131, 60132, 60133, 60134, 60135, 60136, 60137, 60138, 60139, 60140, 60141, 60142, 60143, 60144, 60145, 60146, 60147, 60148, 60149, 60150, 60151, 60152, 60153, 60154, 60155, 60156, 60157, 60159, 60160, 60161, 60162, 60163, 60164, 60165, 60168, 60170, 60171, 60172, 60173, 60174, 60175, 60176, 60177, 60178, 60179, 60180, 60181, 60182, 60183, 60184, 60185, 60186, 60187, 60188, 60189, 60190, 60191, 60192, 60193, 60194, 60195, 60196, 60197, 60198, 60199, 60201, 60202, 60203, 60204, 60208, 60209, 60301, 60302, 60303, 60304, 60305, 60330, 60401, 60402, 60406, 60407, 60408, 60409, 60410, 60411, 60412, 60415, 60416, 60417, 60419, 60420, 60421, 60422, 60423, 60424, 60425, 60426, 60429, 60430, 60431, 60432, 60433, 60434, 60435, 60436, 60437, 60438, 60439, 60440, 60441, 60442, 60443, 60444, 60445, 60446, 60447, 60448, 60449, 60450, 60451, 60452, 60453, 60454, 60455, 60456, 60457, 60458, 60459, 60460, 60461, 60462, 60463, 60464, 60465, 60466, 60467, 60468, 60469, 60470, 60471, 60472, 60473, 60474, 60475, 60476, 60477, 60478, 60479, 60480, 60481, 60482, 60490, 60499, 60501, 60504, 60505, 60506, 60507, 60510, 60511, 60512, 60513, 60514, 60515, 60516, 60517, 60518, 60519, 60520, 60521, 60522, 60523, 60525, 60526, 60527, 60530, 60531, 60532, 60534, 60536, 60537, 60538, 60539, 60540, 60541, 60542, 60543, 60544, 60545, 60546, 60548, 60549, 60550, 60551, 60552, 60553, 60554, 60555, 60556, 60557, 60558, 60559, 60560, 60561, 60563, 60564, 60565, 60566, 60567, 60568, 60570, 60572, 60597, 60598, 60599, 60601, 60602, 60603, 60604, 60605, 60606, 60607, 60608, 60609, 60610, 60611, 60612, 60613, 60614, 60615, 60616, 60617, 60618, 60619, 60620, 60621, 60622, 60623, 60624, 60625, 60626, 60628, 60629, 60630, 60631, 60632, 60633, 60634, 60636, 60637, 60638, 60639, 60640, 60641, 60643, 60644, 60645, 60646, 60647, 60648, 60649, 60650, 60651, 60652, 60653, 60654, 60655, 60656, 60657, 60659, 60660, 60661, 60663, 60664, 60665, 60666, 60667, 60668, 60669, 60670, 60671, 60672, 60673, 60674, 60675, 60677, 60678, 60679, 60680, 60681, 60683, 60684, 60685, 60687, 60690, 60691, 60692, 60693, 60694, 60697, 60699, 60701, 60706, 60707, 60712, 60714, 60803, 60804, 60805, 60827, 60901, 60902, 60910, 60911, 60912, 60913, 60914, 60915, 60917, 60918, 60919, 60920, 60921, 60922, 60924, 60926, 60927, 60928, 60929, 60930, 60931, 60932, 60933, 60934, 60935, 60936, 60938, 60939, 60940, 60941, 60942, 60944, 60945, 60946, 60948, 60949, 60950, 60951, 60952, 60953, 60954, 60955, 60956, 60957, 60959, 60960, 60961, 60962, 60963, 60964, 60966, 60967, 60968, 60969, 60970, 60973, 60974, 61001, 61006, 61007, 61008, 61010, 61011, 61012, 61013, 61014, 61015, 61016, 61017, 61018, 61019, 61020, 61021, 61024, 61025, 61027, 61028, 61030, 61031, 61032, 61036, 61037, 61038, 61039, 61041, 61042, 61043, 61044, 61046, 61047, 61048, 61049, 61050, 61051, 61052, 61053, 61054, 61057, 61058, 61059, 61060, 61061, 61062, 61063, 61064, 61065, 61067, 61068, 61070, 61071, 61072, 61073, 61074, 61075, 61076, 61077, 61078, 61079, 61080, 61081, 61084, 61085, 61087, 61088, 61089, 61091, 61101, 61102, 61103, 61104, 61105, 61106, 61107, 61108, 61109, 61110, 61111, 61112, 61114, 61115, 61125, 61126, 61130, 61131, 61132, 61201, 61202, 61204, 61206, 61230, 61231, 61232, 61233, 61234, 61235, 61236, 61237, 61238, 61239, 61240, 61241, 61242, 61243, 61244, 61250, 61251, 61252, 61254, 61256, 61257, 61258, 61259, 61260, 61261, 61262, 61263, 61264, 61265, 61266, 61270, 61272, 61273, 61274, 61275, 61276, 61277, 61278, 61279, 61281, 61282, 61283, 61284, 61285, 61299, 61301, 61310, 61311, 61312, 61313, 61314, 61315, 61316, 61317, 61318, 61319, 61320, 61321, 61322, 61323, 61324, 61325, 61326, 61327, 61328, 61329, 61330, 61331, 61332, 61333, 61334, 61335, 61336, 61337, 61338, 61340, 61341, 61342, 61344, 61345, 61346, 61348, 61349, 61350, 61353, 61354, 61356, 61358, 61359, 61360, 61361, 61362, 61363, 61364, 61367, 61368, 61369, 61370, 61371, 61372, 61373, 61374, 61375, 61376, 61377, 61378, 61379, 61401, 61402, 61410, 61411, 61412, 61413, 61414, 61415, 61416, 61417, 61418, 61419, 61420, 61421, 61422, 61423, 61424, 61425, 61426, 61427, 61428, 61430, 61431, 61432, 61433, 61434, 61435, 61436, 61437, 61438, 61439, 61440, 61441, 61442, 61443, 61447, 61448, 61449, 61450, 61451, 61452, 61453, 61454, 61455, 61457, 61458, 61459, 61460, 61462, 61465, 61466, 61467, 61468, 61469, 61470, 61471, 61472, 61473, 61474, 61475, 61476, 61477, 61478, 61479, 61480, 61482, 61483, 61484, 61485, 61486, 61488, 61489, 61490, 61491, 61501, 61516, 61517, 61518, 61519, 61520, 61523, 61524, 61525, 61526, 61528, 61529, 61530, 61531, 61532, 61533, 61534, 61535, 61536, 61537, 61539, 61540, 61541, 61542, 61543, 61544, 61545, 61546, 61547, 61548, 61550, 61552, 61553, 61554, 61555, 61558, 61559, 61560, 61561, 61562, 61563, 61564, 61565, 61567, 61568, 61569, 61570, 61571, 61572, 61576, 61584, 61593, 61601, 61602, 61603, 61604, 61605, 61606, 61607, 61610, 61611, 61612, 61613, 61614, 61615, 61616, 61625, 61628, 61629, 61630, 61632, 61633, 61634, 61635, 61636, 61637, 61638, 61639, 61640, 61641, 61643, 61644, 61650, 61651, 61652, 61653, 61654, 61655, 61656, 61675, 61701, 61702, 61704, 61709, 61710, 61720, 61721, 61722, 61723, 61724, 61725, 61726, 61727, 61728, 61729, 61730, 61731, 61732, 61733, 61734, 61735, 61736, 61737, 61738, 61739, 61740, 61741, 61742, 61743, 61744, 61745, 61747, 61748, 61749, 61750, 61751, 61752, 61753, 61754, 61755, 61756, 61758, 61759, 61760, 61761, 61764, 61766, 61769, 61770, 61771, 61772, 61773, 61774, 61775, 61776, 61777, 61778, 61790, 61791, 61799, 61801, 61802, 61803, 61810, 61811, 61812, 61813, 61814, 61815, 61816, 61817, 61818, 61819, 61820, 61821, 61822, 61824, 61825, 61826, 61830, 61831, 61832, 61833, 61834, 61839, 61840, 61841, 61842, 61843, 61844, 61845, 61846, 61847, 61848, 61849, 61850, 61851, 61852, 61853, 61854, 61855, 61856, 61857, 61858, 61859, 61862, 61863, 61864, 61865, 61866, 61870, 61871, 61872, 61873, 61874, 61875, 61876, 61877, 61878, 61880, 61882, 61883, 61884, 61901, 61910, 61911, 61912, 61913, 61914, 61917, 61919, 61920, 61924, 61925, 61928, 61929, 61930, 61931, 61932, 61933, 61936, 61937, 61938, 61940, 61941, 61942, 61943, 61944, 61949, 61951, 61953, 61955, 61956, 61957, 62001, 62002, 62003, 62006, 62009, 62010, 62011, 62012, 62013, 62014, 62015, 62016, 62017, 62018, 62019, 62021, 62022, 62023, 62024, 62025, 62026, 62027, 62028, 62030, 62031, 62032, 62033, 62034, 62035, 62036, 62037, 62040, 62043, 62044, 62045, 62046, 62047, 62048, 62049, 62050, 62051, 62052, 62053, 62054, 62056, 62058, 62059, 62060, 62061, 62062, 62063, 62065, 62067, 62069, 62070, 62071, 62074, 62075, 62076, 62077, 62078, 62079, 62080, 62081, 62082, 62083, 62084, 62085, 62086, 62087, 62088, 62089, 62090, 62091, 62092, 62093, 62094, 62095, 62097, 62098, 62201, 62202, 62203, 62204, 62205, 62206, 62207, 62208, 62214, 62215, 62216, 62217, 62218, 62219, 62220, 62221, 62222, 62223, 62224, 62225, 62226, 62230, 62231, 62232, 62233, 62234, 62236, 62237, 62238, 62239, 62240, 62241, 62242, 62243, 62244, 62245, 62246, 62247, 62248, 62249, 62250, 62252, 62253, 62254, 62255, 62256, 62257, 62258, 62259, 62260, 62261, 62262, 62263, 62264, 62265, 62266, 62268, 62269, 62270, 62271, 62272, 62273, 62274, 62275, 62277, 62278, 62279, 62280, 62281, 62282, 62283, 62284, 62285, 62286, 62288, 62289, 62292, 62293, 62294, 62295, 62297, 62298, 62301, 62305, 62306, 62310, 62311, 62312, 62313, 62314, 62316, 62318, 62319, 62320, 62321, 62323, 62324, 62325, 62326, 62329, 62330, 62334, 62336, 62338, 62339, 62340, 62341, 62343, 62344, 62345, 62346, 62347, 62348, 62349, 62351, 62352, 62353, 62354, 62355, 62356, 62357, 62358, 62359, 62360, 62361, 62362, 62363, 62365, 62366, 62367, 62370, 62373, 62374, 62375, 62376, 62378, 62379, 62380, 62394, 62401, 62407, 62410, 62411, 62413, 62414, 62415, 62417, 62418, 62419, 62420, 62421, 62422, 62423, 62424, 62425, 62426, 62427, 62428, 62431, 62432, 62433, 62434, 62435, 62436, 62438, 62439, 62440, 62441, 62442, 62443, 62444, 62445, 62446, 62447, 62448, 62449, 62450, 62451, 62452, 62454, 62458, 62459, 62460, 62461, 62462, 62463, 62464, 62465, 62466, 62467, 62468, 62469, 62471, 62473, 62474, 62475, 62476, 62477, 62478, 62479, 62480, 62481, 62501, 62510, 62511, 62512, 62513, 62514, 62515, 62517, 62518, 62519, 62520, 62521, 62522, 62523, 62524, 62525, 62526, 62527, 62530, 62531, 62532, 62533, 62534, 62535, 62536, 62537, 62538, 62539, 62540, 62541, 62543, 62544, 62545, 62546, 62547, 62548, 62549, 62550, 62551, 62552, 62553, 62554, 62555, 62556, 62557, 62558, 62560, 62561, 62563, 62565, 62567, 62568, 62570, 62571, 62572, 62573, 62601, 62605, 62610, 62611, 62612, 62613, 62615, 62616, 62617, 62618, 62621, 62622, 62623, 62624, 62625, 62626, 62627, 62628, 62629, 62630, 62631, 62633, 62634, 62635, 62638, 62639, 62640, 62642, 62643, 62644, 62648, 62649, 62650, 62651, 62652, 62655, 62656, 62659, 62660, 62661, 62662, 62663, 62664, 62665, 62666, 62667, 62668, 62670, 62671, 62672, 62673, 62674, 62675, 62676, 62677, 62681, 62682, 62683, 62684, 62685, 62686, 62688, 62689, 62690, 62691, 62692, 62693, 62694, 62695, 62701, 62702, 62703, 62704, 62705, 62706, 62707, 62708, 62709, 62713, 62715, 62716, 62718, 62719, 62720, 62721, 62722, 62723, 62726, 62736, 62739, 62746, 62756, 62757, 62761, 62762, 62763, 62764, 62765, 62766, 62767, 62769, 62776, 62777, 62781, 62786, 62791, 62792, 62794, 62796, 62801, 62803, 62805, 62806, 62807, 62808, 62809, 62810, 62811, 62812, 62814, 62815, 62816, 62817, 62818, 62819, 62820, 62821, 62822, 62823, 62824, 62825, 62827, 62828, 62829, 62830, 62831, 62832, 62833, 62834, 62835, 62836, 62837, 62838, 62839, 62840, 62841, 62842, 62843, 62844, 62845, 62846, 62847, 62848, 62849, 62850, 62851, 62852, 62853, 62854, 62855, 62856, 62857, 62858, 62859, 62860, 62861, 62862, 62863, 62864, 62865, 62866, 62867, 62868, 62869, 62870, 62871, 62872, 62874, 62875, 62876, 62877, 62878, 62879, 62880, 62881, 62882, 62883, 62884, 62885, 62886, 62887, 62888, 62889, 62890, 62891, 62892, 62893, 62894, 62895, 62896, 62897, 62898, 62899, 62901, 62902, 62903, 62905, 62906, 62907, 62908, 62909, 62910, 62912, 62913, 62914, 62915, 62916, 62917, 62918, 62919, 62920, 62921, 62922, 62923, 62924, 62926, 62927, 62928, 62930, 62931, 62932, 62933, 62934, 62935, 62938, 62939, 62940, 62941, 62942, 62943, 62944, 62946, 62947, 62948, 62949, 62950, 62951, 62952, 62953, 62954, 62955, 62956, 62957, 62958, 62959, 62960, 62961, 62962, 62963, 62964, 62965, 62966, 62967, 62969, 62970, 62971, 62972, 62973, 62974, 62975, 62976, 62977, 62979, 62982, 62983, 62984, 62985, 62987, 62988, 62990, 62991, 62992, 62993, 62994, 62995, 62996, 62997, 62998, 62999, 63001, 63005, 63006, 63010, 63011, 63012, 63013, 63014, 63015, 63016, 63017, 63019, 63020, 63021, 63022, 63023, 63024, 63025, 63026, 63028, 63030, 63031, 63032, 63033, 63034, 63036, 63037, 63038, 63039, 63040, 63041, 63042, 63043, 63044, 63045, 63047, 63048, 63049, 63050, 63051, 63052, 63053, 63055, 63056, 63057, 63060, 63061, 63065, 63066, 63068, 63069, 63070, 63071, 63072, 63073, 63074, 63077, 63079, 63080, 63084, 63087, 63088, 63089, 63090, 63091, 63099, 63101, 63102, 63103, 63104, 63105, 63106, 63107, 63108, 63109, 63110, 63111, 63112, 63113, 63114, 63115, 63116, 63117, 63118, 63119, 63120, 63121, 63122, 63123, 63124, 63125, 63126, 63127, 63128, 63129, 63130, 63131, 63132, 63133, 63134, 63135, 63136, 63137, 63138, 63139, 63140, 63141, 63143, 63144, 63145, 63146, 63147, 63150, 63151, 63153, 63155, 63156, 63157, 63158, 63160, 63163, 63164, 63166, 63167, 63169, 63171, 63177, 63178, 63179, 63180, 63182, 63188, 63195, 63196, 63197, 63198, 63199, 63301, 63302, 63303, 63304, 63330, 63332, 63333, 63334, 63336, 63338, 63339, 63341, 63342, 63343, 63344, 63345, 63346, 63347, 63348, 63349, 63350, 63351, 63352, 63353, 63357, 63359, 63361, 63362, 63363, 63365, 63366, 63367, 63369, 63370, 63371, 63373, 63375, 63376, 63377, 63378, 63379, 63381, 63382, 63383, 63384, 63385, 63386, 63387, 63388, 63389, 63390, 63401, 63430, 63431, 63432, 63433, 63434, 63435, 63436, 63437, 63438, 63439, 63440, 63441, 63442, 63443, 63445, 63446, 63447, 63448, 63450, 63451, 63452, 63453, 63454, 63456, 63457, 63458, 63459, 63460, 63461, 63462, 63463, 63464, 63465, 63466, 63467, 63468, 63469, 63471, 63472, 63473, 63474, 63477, 63501, 63530, 63531, 63532, 63533, 63534, 63535, 63536, 63537, 63538, 63539, 63540, 63541, 63543, 63544, 63545, 63546, 63547, 63548, 63549, 63551, 63552, 63555, 63556, 63557, 63558, 63559, 63560, 63561, 63563, 63565, 63566, 63567, 63588, 63601, 63620, 63621, 63622, 63623, 63624, 63625, 63626, 63627, 63628, 63629, 63630, 63631, 63632, 63633, 63636, 63637, 63638, 63640, 63645, 63646, 63648, 63650, 63651, 63653, 63654, 63655, 63656, 63660, 63661, 63662, 63663, 63664, 63665, 63666, 63670, 63673, 63674, 63675, 63701, 63702, 63703, 63705, 63730, 63732, 63735, 63736, 63737, 63738, 63739, 63740, 63742, 63743, 63744, 63745, 63746, 63747, 63748, 63750, 63751, 63752, 63753, 63755, 63758, 63760, 63763, 63764, 63766, 63767, 63769, 63770, 63771, 63772, 63774, 63775, 63776, 63779, 63780, 63781, 63782, 63783, 63784, 63785, 63787, 63801, 63804, 63820, 63821, 63822, 63823, 63824, 63825, 63826, 63827, 63828, 63829, 63830, 63832, 63833, 63834, 63837, 63838, 63839, 63840, 63841, 63845, 63846, 63847, 63848, 63849, 63850, 63851, 63852, 63853, 63855, 63857, 63859, 63860, 63862, 63863, 63866, 63867, 63868, 63869, 63870, 63871, 63872, 63873, 63874, 63875, 63876, 63877, 63878, 63879, 63880, 63881, 63882, 63901, 63902, 63931, 63932, 63933, 63934, 63935, 63936, 63937, 63938, 63939, 63940, 63941, 63942, 63943, 63944, 63945, 63947, 63950, 63951, 63952, 63953, 63954, 63955, 63956, 63957, 63960, 63961, 63962, 63963, 63964, 63965, 63966, 63967, 64001, 64011, 64012, 64013, 64014, 64015, 64016, 64017, 64018, 64019, 64020, 64021, 64022, 64024, 64028, 64029, 64030, 64034, 64035, 64036, 64037, 64040, 64048, 64050, 64051, 64052, 64053, 64054, 64055, 64056, 64057, 64058, 64060, 64061, 64062, 64063, 64064, 64065, 64066, 64067, 64068, 64069, 64070, 64071, 64072, 64073, 64074, 64075, 64076, 64077, 64078, 64079, 64080, 64081, 64082, 64083, 64084, 64085, 64086, 64087, 64088, 64089, 64090, 64092, 64093, 64096, 64097, 64098, 64101, 64102, 64105, 64106, 64108, 64109, 64110, 64111, 64112, 64113, 64114, 64116, 64117, 64118, 64119, 64120, 64121, 64123, 64124, 64125, 64126, 64127, 64128, 64129, 64130, 64131, 64132, 64133, 64134, 64136, 64137, 64138, 64139, 64141, 64142, 64144, 64145, 64146, 64147, 64148, 64149, 64150, 64151, 64152, 64153, 64154, 64155, 64156, 64157, 64158, 64160, 64161, 64163, 64164, 64165, 64166, 64167, 64168, 64170, 64171, 64172, 64173, 64179, 64180, 64183, 64184, 64185, 64187, 64188, 64189, 64190, 64191, 64192, 64193, 64194, 64195, 64196, 64197, 64198, 64199, 64401, 64402, 64420, 64421, 64422, 64423, 64424, 64426, 64427, 64428, 64429, 64430, 64431, 64432, 64433, 64434, 64436, 64437, 64438, 64439, 64440, 64441, 64442, 64443, 64444, 64445, 64446, 64447, 64448, 64449, 64451, 64453, 64454, 64455, 64456, 64457, 64458, 64459, 64461, 64463, 64464, 64465, 64466, 64467, 64468, 64469, 64470, 64471, 64473, 64474, 64475, 64476, 64477, 64478, 64479, 64480, 64481, 64482, 64483, 64484, 64485, 64486, 64487, 64489, 64490, 64491, 64492, 64493, 64494, 64496, 64497, 64498, 64499, 64501, 64502, 64503, 64504, 64505, 64506, 64507, 64508, 64600, 64601, 64620, 64621, 64622, 64623, 64624, 64625, 64628, 64629, 64630, 64631, 64632, 64633, 64635, 64636, 64637, 64638, 64639, 64640, 64641, 64642, 64643, 64644, 64645, 64646, 64647, 64648, 64649, 64650, 64651, 64652, 64653, 64654, 64655, 64656, 64657, 64658, 64659, 64660, 64661, 64664, 64665, 64667, 64668, 64670, 64671, 64672, 64673, 64674, 64676, 64677, 64679, 64680, 64681, 64682, 64683, 64686, 64687, 64688, 64689, 64701, 64720, 64722, 64723, 64724, 64725, 64726, 64728, 64730, 64733, 64734, 64735, 64738, 64739, 64740, 64741, 64742, 64743, 64744, 64745, 64746, 64747, 64748, 64750, 64751, 64752, 64755, 64756, 64759, 64761, 64762, 64763, 64765, 64766, 64767, 64769, 64770, 64771, 64772, 64776, 64777, 64778, 64779, 64780, 64781, 64783, 64784, 64788, 64789, 64790, 64801, 64802, 64803, 64804, 64810, 64830, 64831, 64832, 64833, 64834, 64835, 64836, 64840, 64841, 64842, 64843, 64844, 64847, 64848, 64849, 64850, 64853, 64854, 64855, 64856, 64857, 64858, 64859, 64861, 64862, 64863, 64864, 64865, 64866, 64867, 64868, 64869, 64870, 64873, 64874, 64930, 64944, 64999, 65001, 65010, 65011, 65013, 65014, 65016, 65017, 65018, 65020, 65022, 65023, 65024, 65025, 65026, 65031, 65032, 65034, 65035, 65036, 65037, 65038, 65039, 65040, 65041, 65042, 65043, 65046, 65047, 65048, 65049, 65050, 65051, 65052, 65053, 65054, 65055, 65058, 65059, 65061, 65062, 65063, 65064, 65065, 65066, 65067, 65068, 65069, 65072, 65074, 65075, 65076, 65077, 65078, 65079, 65080, 65081, 65082, 65083, 65084, 65085, 65101, 65102, 65103, 65104, 65105, 65106, 65107, 65108, 65109, 65110, 65111, 65201, 65202, 65203, 65205, 65211, 65212, 65215, 65216, 65217, 65218, 65230, 65231, 65232, 65233, 65236, 65237, 65239, 65240, 65243, 65244, 65246, 65247, 65248, 65250, 65251, 65254, 65255, 65256, 65257, 65258, 65259, 65260, 65261, 65262, 65263, 65264, 65265, 65270, 65274, 65275, 65276, 65278, 65279, 65280, 65281, 65282, 65283, 65284, 65285, 65286, 65287, 65299, 65301, 65302, 65305, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65329, 65330, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65339, 65340, 65344, 65345, 65347, 65348, 65349, 65350, 65351, 65354, 65355, 65360, 65401, 65402, 65409, 65432, 65433, 65436, 65438, 65439, 65440, 65441, 65443, 65444, 65446, 65449, 65452, 65453, 65456, 65457, 65459, 65461, 65462, 65463, 65464, 65466, 65468, 65470, 65473, 65479, 65483, 65484, 65486, 65495, 65501, 65529, 65530, 65532, 65534, 65535, 65536, 65540, 65541, 65542, 65543, 65546, 65548, 65550, 65552, 65555, 65556, 65557, 65559, 65560, 65564, 65565, 65566, 65567, 65570, 65571, 65572, 65573, 65575, 65580, 65582, 65583, 65584, 65586, 65587, 65588, 65589, 65590, 65591, 65601, 65602, 65603, 65604, 65605, 65606, 65607, 65608, 65609, 65610, 65611, 65612, 65613, 65614, 65615, 65616, 65617, 65618, 65619, 65620, 65622, 65623, 65624, 65625, 65626, 65627, 65629, 65630, 65631, 65632, 65633, 65634, 65635, 65636, 65637, 65638, 65640, 65641, 65644, 65645, 65646, 65647, 65648, 65649, 65650, 65652, 65653, 65654, 65655, 65656, 65657, 65658, 65659, 65660, 65661, 65662, 65663, 65664, 65666, 65667, 65668, 65669, 65672, 65673, 65674, 65675, 65676, 65679, 65680, 65681, 65682, 65684, 65685, 65686, 65688, 65689, 65690, 65692, 65701, 65702, 65704, 65705, 65706, 65707, 65708, 65710, 65711, 65712, 65713, 65714, 65715, 65717, 65720, 65721, 65722, 65723, 65724, 65725, 65726, 65727, 65728, 65729, 65730, 65731, 65732, 65733, 65734, 65735, 65737, 65738, 65739, 65740, 65741, 65742, 65744, 65745, 65746, 65747, 65752, 65753, 65754, 65755, 65756, 65757, 65759, 65760, 65761, 65762, 65764, 65765, 65766, 65767, 65768, 65769, 65770, 65771, 65772, 65773, 65774, 65775, 65776, 65777, 65778, 65779, 65781, 65783, 65784, 65785, 65786, 65787, 65788, 65789, 65790, 65791, 65793, 65801, 65802, 65803, 65804, 65805, 65806, 65807, 65808, 65809, 65810, 65814, 65817, 65890, 65898, 65899, 66002, 66006, 66007, 66008, 66010, 66012, 66013, 66014, 66015, 66016, 66017, 66018, 66019, 66020, 66021, 66023, 66024, 66025, 66026, 66027, 66030, 66031, 66032, 66033, 66035, 66036, 66039, 66040, 66041, 66042, 66043, 66044, 66045, 66046, 66047, 66048, 66049, 66050, 66051, 66052, 66053, 66054, 66056, 66058, 66060, 66061, 66062, 66063, 66064, 66066, 66067, 66070, 66071, 66072, 66073, 66075, 66076, 66077, 66078, 66079, 66080, 66081, 66083, 66085, 66086, 66087, 66088, 66090, 66091, 66092, 66093, 66094, 66095, 66097, 66101, 66102, 66103, 66104, 66105, 66106, 66109, 66110, 66111, 66112, 66113, 66115, 66117, 66118, 66119, 66145, 66151, 66160, 66201, 66202, 66203, 66204, 66205, 66206, 66207, 66208, 66209, 66210, 66211, 66212, 66213, 66214, 66215, 66216, 66217, 66218, 66219, 66220, 66221, 66222, 66223, 66224, 66225, 66226, 66227, 66250, 66251, 66276, 66279, 66282, 66283, 66285, 66286, 66352, 66356, 66401, 66402, 66403, 66404, 66406, 66407, 66408, 66409, 66411, 66412, 66413, 66414, 66415, 66416, 66417, 66418, 66419, 66420, 66422, 66423, 66424, 66425, 66426, 66427, 66428, 66429, 66431, 66432, 66434, 66436, 66438, 66439, 66440, 66441, 66442, 66449, 66450, 66451, 66481, 66501, 66502, 66503, 66505, 66506, 66507, 66508, 66509, 66510, 66512, 66514, 66515, 66516, 66517, 66518, 66520, 66521, 66522, 66523, 66524, 66526, 66527, 66528, 66531, 66532, 66533, 66534, 66535, 66536, 66537, 66538, 66539, 66540, 66541, 66542, 66543, 66544, 66546, 66547, 66548, 66549, 66550, 66551, 66552, 66554, 66555, 66601, 66603, 66604, 66605, 66606, 66607, 66608, 66609, 66610, 66611, 66612, 66614, 66615, 66616, 66617, 66618, 66619, 66620, 66621, 66622, 66624, 66625, 66626, 66628, 66629, 66634, 66635, 66636, 66637, 66638, 66642, 66647, 66650, 66652, 66653, 66658, 66667, 66675, 66683, 66686, 66692, 66699, 66701, 66710, 66711, 66712, 66713, 66714, 66716, 66717, 66720, 66721, 66724, 66725, 66727, 66728, 66732, 66733, 66734, 66735, 66736, 66738, 66739, 66740, 66741, 66742, 66743, 66746, 66747, 66748, 66749, 66751, 66752, 66753, 66754, 66755, 66756, 66757, 66758, 66759, 66760, 66761, 66762, 66763, 66767, 66769, 66770, 66771, 66772, 66773, 66775, 66776, 66777, 66778, 66779, 66780, 66781, 66782, 66783, 66801, 66804, 66830, 66833, 66834, 66835, 66838, 66839, 66840, 66842, 66843, 66845, 66846, 66849, 66850, 66851, 66852, 66853, 66854, 66855, 66856, 66857, 66858, 66859, 66860, 66861, 66862, 66863, 66864, 66865, 66866, 66868, 66869, 66870, 66871, 66872, 66873, 66901, 66930, 66932, 66933, 66935, 66936, 66937, 66938, 66939, 66940, 66941, 66942, 66943, 66944, 66945, 66946, 66948, 66949, 66951, 66952, 66953, 66955, 66956, 66958, 66959, 66960, 66961, 66962, 66963, 66964, 66966, 66967, 66968, 66969, 66970, 66998, 67001, 67002, 67003, 67004, 67005, 67008, 67009, 67010, 67012, 67013, 67016, 67017, 67018, 67019, 67020, 67021, 67022, 67023, 67024, 67025, 67026, 67028, 67029, 67030, 67031, 67033, 67035, 67036, 67037, 67038, 67039, 67041, 67042, 67045, 67047, 67049, 67050, 67051, 67052, 67053, 67054, 67055, 67056, 67057, 67058, 67059, 67060, 67061, 67062, 67063, 67065, 67066, 67067, 67068, 67069, 67070, 67071, 67072, 67073, 67074, 67101, 67102, 67103, 67104, 67105, 67106, 67107, 67108, 67109, 67110, 67111, 67112, 67114, 67117, 67118, 67119, 67120, 67122, 67123, 67124, 67127, 67128, 67131, 67132, 67133, 67134, 67135, 67137, 67138, 67140, 67142, 67143, 67144, 67146, 67147, 67149, 67150, 67151, 67152, 67154, 67155, 67156, 67159, 67201, 67202, 67203, 67204, 67205, 67206, 67207, 67208, 67209, 67210, 67211, 67212, 67213, 67214, 67215, 67216, 67217, 67218, 67219, 67220, 67221, 67222, 67223, 67226, 67227, 67228, 67230, 67231, 67232, 67233, 67235, 67236, 67251, 67256, 67257, 67259, 67260, 67275, 67276, 67277, 67278, 67301, 67330, 67332, 67333, 67334, 67335, 67336, 67337, 67339, 67340, 67341, 67342, 67344, 67345, 67346, 67347, 67349, 67351, 67352, 67353, 67354, 67355, 67356, 67357, 67360, 67361, 67363, 67364, 67401, 67402, 67410, 67411, 67416, 67417, 67418, 67419, 67420, 67422, 67423, 67425, 67427, 67428, 67430, 67431, 67432, 67435, 67436, 67437, 67438, 67439, 67441, 67442, 67443, 67444, 67445, 67446, 67447, 67448, 67449, 67450, 67451, 67452, 67454, 67455, 67456, 67457, 67458, 67459, 67460, 67464, 67466, 67467, 67468, 67470, 67472, 67473, 67474, 67475, 67476, 67478, 67479, 67480, 67481, 67482, 67483, 67484, 67485, 67487, 67488, 67490, 67491, 67492, 67495, 67501, 67502, 67504, 67505, 67510, 67511, 67512, 67513, 67514, 67515, 67516, 67518, 67519, 67520, 67521, 67522, 67523, 67524, 67525, 67526, 67529, 67530, 67543, 67544, 67545, 67546, 67547, 67548, 67550, 67552, 67553, 67554, 67556, 67557, 67559, 67560, 67561, 67563, 67564, 67565, 67566, 67567, 67568, 67570, 67572, 67573, 67574, 67575, 67576, 67578, 67579, 67581, 67583, 67584, 67585, 67601, 67621, 67622, 67623, 67625, 67626, 67627, 67628, 67629, 67630, 67631, 67632, 67634, 67635, 67637, 67638, 67639, 67640, 67642, 67643, 67644, 67645, 67646, 67647, 67648, 67649, 67650, 67651, 67653, 67654, 67656, 67657, 67658, 67659, 67660, 67661, 67663, 67664, 67665, 67666, 67667, 67669, 67670, 67671, 67672, 67673, 67674, 67675, 67701, 67730, 67731, 67732, 67733, 67734, 67735, 67736, 67737, 67738, 67739, 67740, 67741, 67743, 67744, 67745, 67747, 67748, 67749, 67751, 67752, 67753, 67756, 67757, 67758, 67761, 67762, 67764, 67801, 67831, 67834, 67835, 67836, 67837, 67838, 67839, 67840, 67841, 67842, 67844, 67845, 67846, 67849, 67850, 67851, 67852, 67853, 67854, 67855, 67856, 67857, 67858, 67859, 67860, 67861, 67862, 67863, 67864, 67865, 67867, 67868, 67869, 67870, 67871, 67876, 67877, 67878, 67879, 67880, 67882, 67901, 67905, 67938, 67950, 67951, 67952, 67953, 67954, 68001, 68002, 68003, 68004, 68005, 68007, 68008, 68009, 68010, 68014, 68015, 68016, 68017, 68018, 68019, 68020, 68022, 68023, 68025, 68026, 68028, 68029, 68030, 68031, 68032, 68033, 68034, 68035, 68036, 68037, 68038, 68039, 68040, 68041, 68042, 68044, 68045, 68046, 68047, 68048, 68050, 68054, 68055, 68056, 68057, 68058, 68059, 68061, 68062, 68063, 68064, 68065, 68066, 68067, 68068, 68069, 68070, 68071, 68072, 68073, 68101, 68102, 68103, 68104, 68105, 68106, 68107, 68108, 68109, 68110, 68111, 68112, 68113, 68114, 68116, 68117, 68118, 68119, 68120, 68122, 68123, 68124, 68127, 68128, 68130, 68131, 68132, 68133, 68134, 68135, 68136, 68137, 68138, 68139, 68142, 68144, 68145, 68147, 68152, 68154, 68155, 68157, 68164, 68172, 68175, 68176, 68178, 68179, 68180, 68181, 68182, 68183, 68198, 68226, 68278, 68301, 68303, 68304, 68305, 68307, 68309, 68310, 68313, 68314, 68315, 68316, 68317, 68318, 68319, 68320, 68321, 68322, 68323, 68324, 68325, 68326, 68327, 68328, 68329, 68330, 68331, 68332, 68333, 68335, 68336, 68337, 68338, 68339, 68340, 68341, 68342, 68343, 68344, 68345, 68346, 68347, 68348, 68349, 68350, 68351, 68352, 68354, 68355, 68357, 68358, 68359, 68360, 68361, 68362, 68364, 68365, 68366, 68367, 68368, 68370, 68371, 68372, 68374, 68375, 68376, 68377, 68378, 68380, 68381, 68382, 68401, 68402, 68403, 68404, 68405, 68406, 68407, 68409, 68410, 68413, 68414, 68415, 68416, 68417, 68418, 68419, 68420, 68421, 68422, 68423, 68424, 68428, 68429, 68430, 68431, 68433, 68434, 68436, 68437, 68438, 68439, 68440, 68441, 68442, 68443, 68444, 68445, 68446, 68447, 68448, 68450, 68452, 68453, 68454, 68455, 68456, 68457, 68458, 68460, 68461, 68462, 68463, 68464, 68465, 68466, 68467, 68501, 68502, 68503, 68504, 68505, 68506, 68507, 68508, 68509, 68510, 68512, 68514, 68516, 68517, 68520, 68521, 68522, 68523, 68524, 68526, 68527, 68528, 68529, 68531, 68532, 68542, 68544, 68572, 68583, 68588, 68601, 68602, 68620, 68621, 68622, 68623, 68624, 68626, 68627, 68628, 68629, 68631, 68632, 68633, 68634, 68635, 68636, 68637, 68638, 68640, 68641, 68642, 68643, 68644, 68647, 68648, 68649, 68651, 68652, 68653, 68654, 68655, 68658, 68659, 68660, 68661, 68662, 68663, 68664, 68665, 68666, 68667, 68669, 68701, 68702, 68710, 68711, 68713, 68714, 68715, 68716, 68717, 68718, 68719, 68720, 68722, 68723, 68724, 68725, 68726, 68727, 68728, 68729, 68730, 68731, 68732, 68733, 68734, 68735, 68736, 68737, 68738, 68739, 68740, 68741, 68742, 68743, 68745, 68746, 68747, 68748, 68749, 68751, 68752, 68753, 68755, 68756, 68757, 68758, 68759, 68760, 68761, 68763, 68764, 68765, 68766, 68767, 68768, 68769, 68770, 68771, 68772, 68773, 68774, 68776, 68777, 68778, 68779, 68780, 68781, 68782, 68783, 68784, 68785, 68786, 68787, 68788, 68789, 68790, 68791, 68792, 68797, 68801, 68802, 68803, 68810, 68812, 68813, 68814, 68815, 68816, 68817, 68818, 68819, 68820, 68821, 68822, 68823, 68824, 68825, 68826, 68827, 68828, 68831, 68832, 68833, 68834, 68835, 68836, 68837, 68838, 68840, 68841, 68842, 68843, 68844, 68845, 68846, 68847, 68848, 68849, 68850, 68852, 68853, 68854, 68855, 68856, 68858, 68859, 68860, 68861, 68862, 68863, 68864, 68865, 68866, 68868, 68869, 68870, 68871, 68872, 68873, 68874, 68875, 68876, 68878, 68879, 68880, 68881, 68882, 68883, 68901, 68902, 68920, 68922, 68923, 68924, 68925, 68926, 68927, 68928, 68929, 68930, 68932, 68933, 68934, 68935, 68936, 68937, 68938, 68939, 68940, 68941, 68942, 68943, 68944, 68945, 68946, 68947, 68948, 68949, 68950, 68952, 68954, 68955, 68956, 68957, 68958, 68959, 68960, 68961, 68963, 68964, 68966, 68967, 68969, 68970, 68971, 68972, 68973, 68974, 68975, 68976, 68977, 68978, 68979, 68980, 68981, 68982, 69001, 69020, 69021, 69022, 69023, 69024, 69025, 69026, 69027, 69028, 69029, 69030, 69031, 69032, 69033, 69034, 69036, 69037, 69038, 69039, 69040, 69041, 69042, 69043, 69044, 69045, 69046, 69101, 69103, 69120, 69121, 69122, 69123, 69125, 69127, 69128, 69129, 69130, 69131, 69132, 69133, 69134, 69135, 69138, 69140, 69141, 69142, 69143, 69144, 69145, 69146, 69147, 69148, 69149, 69150, 69151, 69152, 69153, 69154, 69155, 69156, 69157, 69160, 69161, 69162, 69163, 69165, 69166, 69167, 69168, 69169, 69170, 69171, 69190, 69201, 69210, 69211, 69212, 69214, 69216, 69217, 69218, 69219, 69220, 69221, 69301, 69331, 69333, 69334, 69335, 69336, 69337, 69339, 69340, 69341, 69343, 69345, 69346, 69347, 69348, 69349, 69350, 69351, 69352, 69353, 69354, 69355, 69356, 69357, 69358, 69360, 69361, 69363, 69365, 69366, 69367, 7e4, 70001, 70002, 70003, 70004, 70005, 70006, 70009, 70010, 70011, 70021, 70030, 70031, 70032, 70033, 70036, 70037, 70038, 70039, 70040, 70041, 70042, 70043, 70044, 70046, 70047, 70048, 70049, 70050, 70051, 70052, 70053, 70054, 70055, 70056, 70057, 70058, 70059, 70060, 70062, 70063, 70064, 70065, 70066, 70067, 70068, 70069, 70070, 70071, 70072, 70073, 70075, 70076, 70078, 70079, 70080, 70081, 70082, 70083, 70084, 70085, 70086, 70087, 70090, 70091, 70092, 70093, 70094, 70096, 70112, 70113, 70114, 70115, 70116, 70117, 70118, 70119, 70121, 70122, 70123, 70124, 70125, 70126, 70127, 70128, 70129, 70130, 70131, 70139, 70140, 70141, 70142, 70143, 70144, 70145, 70146, 70148, 70149, 70150, 70151, 70152, 70153, 70154, 70155, 70156, 70157, 70158, 70159, 70160, 70161, 70162, 70163, 70164, 70165, 70166, 70167, 70170, 70172, 70174, 70175, 70176, 70177, 70178, 70179, 70181, 70182, 70183, 70184, 70185, 70186, 70187, 70189, 70190, 70195, 70199, 70301, 70302, 70310, 70339, 70340, 70341, 70342, 70343, 70344, 70345, 70346, 70352, 70353, 70354, 70355, 70356, 70357, 70358, 70359, 70360, 70361, 70363, 70364, 70369, 70371, 70372, 70373, 70374, 70375, 70376, 70377, 70380, 70381, 70384, 70390, 70391, 70392, 70393, 70394, 70395, 70397, 70401, 70402, 70403, 70404, 70420, 70421, 70422, 70426, 70427, 70428, 70429, 70431, 70432, 70433, 70434, 70435, 70436, 70437, 70438, 70440, 70441, 70442, 70443, 70444, 70445, 70446, 70447, 70448, 70449, 70450, 70451, 70452, 70453, 70454, 70455, 70456, 70457, 70458, 70459, 70460, 70461, 70462, 70463, 70464, 70465, 70466, 70467, 70469, 70470, 70471, 70494, 70499, 70501, 70502, 70503, 70504, 70505, 70506, 70507, 70508, 70509, 70510, 70511, 70512, 70513, 70514, 70515, 70516, 70517, 70518, 70519, 70520, 70521, 70522, 70523, 70524, 70525, 70526, 70527, 70528, 70529, 70531, 70532, 70533, 70534, 70535, 70537, 70538, 70540, 70541, 70542, 70543, 70544, 70546, 70548, 70549, 70550, 70551, 70552, 70554, 70555, 70556, 70558, 70559, 70560, 70562, 70563, 70569, 70570, 70571, 70575, 70576, 70577, 70578, 70580, 70581, 70582, 70583, 70584, 70585, 70586, 70589, 70591, 70592, 70593, 70594, 70596, 70598, 70601, 70602, 70605, 70606, 70607, 70609, 70611, 70612, 70615, 70616, 70629, 70630, 70631, 70632, 70633, 70634, 70637, 70638, 70639, 70640, 70642, 70643, 70644, 70645, 70646, 70647, 70648, 70650, 70651, 70652, 70653, 70654, 70655, 70656, 70657, 70658, 70659, 70660, 70661, 70662, 70663, 70664, 70665, 70668, 70669, 70704, 70706, 70707, 70710, 70711, 70712, 70714, 70715, 70716, 70717, 70718, 70719, 70720, 70721, 70722, 70723, 70725, 70726, 70727, 70728, 70729, 70730, 70732, 70733, 70734, 70736, 70737, 70738, 70739, 70740, 70743, 70744, 70747, 70748, 70749, 70750, 70751, 70752, 70753, 70754, 70755, 70756, 70757, 70759, 70760, 70761, 70762, 70763, 70764, 70765, 70767, 70769, 70770, 70772, 70773, 70774, 70775, 70776, 70777, 70778, 70780, 70781, 70782, 70783, 70784, 70785, 70786, 70787, 70788, 70789, 70791, 70792, 70801, 70802, 70803, 70804, 70805, 70806, 70807, 70808, 70809, 70810, 70811, 70812, 70813, 70814, 70815, 70816, 70817, 70818, 70819, 70820, 70821, 70822, 70823, 70825, 70826, 70827, 70831, 70832, 70833, 70835, 70836, 70837, 70848, 70874, 70879, 70883, 70884, 70892, 70893, 70894, 70895, 70896, 70898, 70952, 71001, 71002, 71003, 71004, 71006, 71007, 71008, 71009, 71016, 71018, 71019, 71021, 71023, 71024, 71025, 71027, 71028, 71029, 71030, 71031, 71032, 71033, 71034, 71036, 71037, 71038, 71039, 71040, 71043, 71044, 71045, 71046, 71047, 71048, 71049, 71050, 71051, 71052, 71053, 71055, 71058, 71059, 71060, 71061, 71063, 71064, 71065, 71066, 71067, 71068, 71069, 71070, 71071, 71072, 71073, 71075, 71076, 71078, 71079, 71080, 71082, 71095, 71101, 71102, 71103, 71104, 71105, 71106, 71107, 71108, 71109, 71110, 71111, 71112, 71113, 71115, 71118, 71119, 71120, 71129, 71130, 71133, 71134, 71135, 71136, 71137, 71138, 71148, 71149, 71151, 71152, 71153, 71154, 71156, 71161, 71162, 71163, 71164, 71165, 71166, 71171, 71172, 71201, 71202, 71203, 71207, 71208, 71209, 71210, 71211, 71212, 71213, 71218, 71219, 71220, 71221, 71222, 71223, 71225, 71226, 71227, 71229, 71230, 71232, 71233, 71234, 71235, 71237, 71238, 71240, 71241, 71242, 71243, 71245, 71247, 71249, 71250, 71251, 71253, 71254, 71256, 71259, 71260, 71261, 71263, 71264, 71266, 71268, 71269, 71270, 71272, 71273, 71275, 71276, 71277, 71279, 71280, 71281, 71282, 71284, 71286, 71291, 71292, 71294, 71295, 71301, 71302, 71303, 71306, 71307, 71309, 71315, 71316, 71320, 71322, 71323, 71324, 71325, 71326, 71327, 71328, 71329, 71330, 71331, 71333, 71334, 71336, 71339, 71340, 71341, 71342, 71343, 71345, 71346, 71348, 71350, 71351, 71353, 71354, 71355, 71356, 71357, 71358, 71359, 71360, 71361, 71362, 71363, 71365, 71366, 71367, 71368, 71369, 71371, 71373, 71375, 71377, 71378, 71401, 71403, 71404, 71405, 71406, 71407, 71409, 71410, 71411, 71414, 71415, 71416, 71417, 71418, 71419, 71422, 71423, 71424, 71425, 71426, 71427, 71428, 71429, 71430, 71431, 71432, 71433, 71434, 71435, 71436, 71438, 71439, 71440, 71441, 71443, 71444, 71446, 71447, 71448, 71449, 71450, 71452, 71454, 71455, 71456, 71457, 71458, 71459, 71460, 71461, 71462, 71463, 71465, 71466, 71467, 71468, 71469, 71471, 71472, 71473, 71474, 71475, 71477, 71479, 71480, 71481, 71483, 71485, 71486, 71496, 71497, 71545, 71601, 71602, 71603, 71611, 71612, 71613, 71630, 71631, 71635, 71638, 71639, 71640, 71642, 71643, 71644, 71646, 71647, 71649, 71650, 71651, 71652, 71653, 71654, 71655, 71656, 71657, 71658, 71659, 71660, 71661, 71662, 71663, 71665, 71666, 71667, 71670, 71671, 71674, 71675, 71676, 71677, 71678, 71691, 71701, 71711, 71720, 71721, 71722, 71724, 71725, 71726, 71728, 71730, 71731, 71740, 71742, 71743, 71744, 71745, 71747, 71748, 71749, 71750, 71751, 71752, 71753, 71754, 71758, 71759, 71762, 71763, 71764, 71765, 71766, 71767, 71768, 71769, 71770, 71772, 71801, 71802, 71820, 71822, 71823, 71825, 71826, 71827, 71828, 71831, 71832, 71833, 71834, 71835, 71836, 71837, 71838, 71839, 71840, 71841, 71842, 71844, 71845, 71846, 71847, 71851, 71852, 71853, 71854, 71855, 71857, 71858, 71859, 71860, 71861, 71862, 71864, 71865, 71866, 71901, 71902, 71903, 71907, 71909, 71910, 71913, 71914, 71920, 71921, 71922, 71923, 71929, 71932, 71933, 71935, 71937, 71940, 71941, 71942, 71943, 71944, 71945, 71946, 71949, 71950, 71951, 71952, 71953, 71956, 71957, 71958, 71959, 71960, 71961, 71962, 71964, 71965, 71966, 71968, 71969, 71970, 71971, 71972, 71973, 71998, 71999, 72001, 72002, 72003, 72004, 72005, 72006, 72007, 72010, 72011, 72012, 72013, 72014, 72015, 72016, 72017, 72018, 72019, 72020, 72021, 72022, 72023, 72024, 72025, 72026, 72027, 72028, 72029, 72030, 72031, 72032, 72033, 72034, 72035, 72036, 72037, 72038, 72039, 72040, 72041, 72042, 72043, 72044, 72045, 72046, 72047, 72048, 72051, 72052, 72053, 72055, 72057, 72058, 72059, 72060, 72061, 72063, 72064, 72065, 72066, 72067, 72068, 72069, 72070, 72071, 72072, 72073, 72074, 72075, 72076, 72078, 72079, 72080, 72081, 72082, 72083, 72084, 72085, 72086, 72087, 72088, 72089, 72098, 72099, 72101, 72102, 72103, 72104, 72105, 72106, 72107, 72108, 72110, 72111, 72112, 72113, 72114, 72115, 72116, 72117, 72118, 72119, 72120, 72121, 72122, 72123, 72124, 72125, 72126, 72127, 72128, 72129, 72130, 72131, 72132, 72133, 72134, 72135, 72136, 72137, 72139, 72140, 72141, 72142, 72143, 72145, 72149, 72150, 72152, 72153, 72156, 72157, 72158, 72160, 72164, 72165, 72166, 72167, 72168, 72169, 72170, 72173, 72175, 72176, 72178, 72179, 72180, 72181, 72182, 72183, 72189, 72190, 72199, 72201, 72202, 72203, 72204, 72205, 72206, 72207, 72209, 72210, 72211, 72212, 72214, 72215, 72216, 72217, 72219, 72221, 72222, 72223, 72225, 72227, 72231, 72259, 72295, 72301, 72303, 72310, 72311, 72312, 72313, 72314, 72315, 72316, 72319, 72320, 72321, 72322, 72324, 72325, 72326, 72327, 72328, 72329, 72330, 72331, 72332, 72333, 72335, 72336, 72338, 72339, 72340, 72341, 72342, 72345, 72346, 72347, 72348, 72350, 72351, 72352, 72353, 72354, 72355, 72358, 72359, 72360, 72364, 72365, 72366, 72367, 72368, 72369, 72370, 72372, 72373, 72374, 72376, 72377, 72379, 72381, 72383, 72384, 72385, 72386, 72387, 72389, 72390, 72391, 72392, 72394, 72395, 72396, 72397, 72401, 72402, 72403, 72404, 72410, 72411, 72412, 72413, 72414, 72415, 72416, 72417, 72419, 72421, 72422, 72423, 72424, 72425, 72426, 72427, 72428, 72429, 72430, 72431, 72432, 72433, 72434, 72435, 72436, 72437, 72438, 72439, 72440, 72441, 72442, 72443, 72444, 72445, 72447, 72448, 72449, 72450, 72451, 72452, 72453, 72454, 72455, 72456, 72457, 72458, 72459, 72460, 72461, 72462, 72464, 72465, 72466, 72467, 72469, 72470, 72471, 72472, 72473, 72474, 72475, 72476, 72477, 72478, 72479, 72482, 72501, 72503, 72512, 72513, 72515, 72516, 72517, 72519, 72520, 72521, 72522, 72523, 72524, 72525, 72526, 72527, 72528, 72529, 72530, 72531, 72532, 72533, 72534, 72536, 72537, 72538, 72539, 72540, 72542, 72543, 72544, 72545, 72546, 72550, 72553, 72554, 72555, 72556, 72557, 72559, 72560, 72561, 72562, 72564, 72565, 72566, 72567, 72568, 72569, 72571, 72572, 72573, 72575, 72576, 72577, 72578, 72579, 72581, 72583, 72584, 72585, 72587, 72601, 72602, 72610, 72611, 72613, 72615, 72616, 72617, 72619, 72623, 72624, 72626, 72628, 72629, 72630, 72631, 72632, 72633, 72634, 72635, 72636, 72638, 72639, 72640, 72641, 72642, 72644, 72645, 72648, 72650, 72651, 72653, 72654, 72655, 72657, 72658, 72659, 72660, 72661, 72662, 72663, 72666, 72668, 72669, 72670, 72672, 72675, 72677, 72679, 72680, 72682, 72683, 72685, 72686, 72687, 72701, 72702, 72703, 72704, 72711, 72712, 72714, 72715, 72716, 72717, 72718, 72719, 72721, 72722, 72727, 72728, 72729, 72730, 72732, 72733, 72734, 72735, 72736, 72737, 72738, 72739, 72740, 72741, 72742, 72744, 72745, 72747, 72749, 72751, 72752, 72753, 72756, 72757, 72758, 72760, 72761, 72762, 72764, 72765, 72766, 72768, 72769, 72770, 72773, 72774, 72776, 72801, 72802, 72811, 72812, 72820, 72821, 72822, 72823, 72824, 72826, 72827, 72828, 72829, 72830, 72832, 72833, 72834, 72835, 72837, 72838, 72839, 72840, 72841, 72842, 72843, 72845, 72846, 72847, 72851, 72852, 72853, 72854, 72855, 72856, 72857, 72858, 72860, 72863, 72865, 72901, 72902, 72903, 72904, 72905, 72906, 72908, 72913, 72914, 72916, 72917, 72918, 72919, 72921, 72923, 72924, 72926, 72927, 72928, 72930, 72932, 72933, 72934, 72935, 72936, 72937, 72938, 72940, 72941, 72943, 72944, 72945, 72946, 72947, 72948, 72949, 72950, 72951, 72952, 72955, 72956, 72957, 72958, 72959, 73001, 73002, 73003, 73004, 73005, 73006, 73007, 73008, 73009, 73010, 73011, 73012, 73013, 73014, 73015, 73016, 73017, 73018, 73019, 73020, 73021, 73022, 73023, 73024, 73026, 73027, 73028, 73029, 73030, 73031, 73032, 73033, 73034, 73036, 73038, 73040, 73041, 73042, 73043, 73044, 73045, 73047, 73048, 73049, 73050, 73051, 73052, 73053, 73054, 73055, 73056, 73057, 73058, 73059, 73061, 73062, 73063, 73064, 73065, 73066, 73067, 73068, 73069, 73070, 73071, 73072, 73073, 73074, 73075, 73077, 73078, 73079, 73080, 73082, 73083, 73084, 73085, 73086, 73089, 73090, 73092, 73093, 73094, 73095, 73096, 73097, 73098, 73099, 73101, 73102, 73103, 73104, 73105, 73106, 73107, 73108, 73109, 73110, 73111, 73112, 73113, 73114, 73115, 73116, 73117, 73118, 73119, 73120, 73121, 73122, 73123, 73124, 73125, 73126, 73127, 73128, 73129, 73130, 73131, 73132, 73134, 73135, 73136, 73137, 73139, 73140, 73141, 73142, 73143, 73144, 73145, 73146, 73147, 73148, 73149, 73150, 73151, 73152, 73153, 73154, 73155, 73156, 73157, 73159, 73160, 73162, 73163, 73164, 73165, 73167, 73169, 73170, 73172, 73173, 73177, 73178, 73179, 73180, 73184, 73185, 73189, 73190, 73193, 73194, 73196, 73197, 73198, 73199, 73301, 73344, 73367, 73371, 73401, 73402, 73403, 73425, 73430, 73432, 73433, 73434, 73435, 73436, 73437, 73438, 73439, 73440, 73441, 73442, 73443, 73444, 73445, 73446, 73447, 73448, 73449, 73450, 73453, 73455, 73456, 73458, 73459, 73460, 73461, 73463, 73476, 73481, 73487, 73488, 73491, 73501, 73502, 73503, 73505, 73506, 73507, 73520, 73521, 73522, 73523, 73526, 73527, 73528, 73529, 73530, 73531, 73532, 73533, 73534, 73536, 73537, 73538, 73539, 73540, 73541, 73542, 73543, 73544, 73546, 73547, 73548, 73549, 73550, 73551, 73552, 73553, 73554, 73555, 73556, 73557, 73558, 73559, 73560, 73561, 73562, 73564, 73565, 73566, 73567, 73568, 73569, 73570, 73571, 73572, 73573, 73575, 73601, 73620, 73622, 73624, 73625, 73626, 73627, 73628, 73632, 73638, 73639, 73641, 73642, 73644, 73645, 73646, 73647, 73648, 73650, 73651, 73654, 73655, 73656, 73658, 73659, 73660, 73661, 73662, 73663, 73664, 73666, 73667, 73668, 73669, 73673, 73701, 73702, 73703, 73705, 73706, 73716, 73717, 73718, 73719, 73720, 73722, 73724, 73726, 73727, 73728, 73729, 73730, 73731, 73733, 73734, 73735, 73736, 73737, 73738, 73739, 73741, 73742, 73743, 73744, 73746, 73747, 73749, 73750, 73753, 73754, 73755, 73756, 73757, 73758, 73759, 73760, 73761, 73762, 73763, 73764, 73766, 73768, 73770, 73771, 73772, 73773, 73801, 73802, 73832, 73834, 73835, 73838, 73840, 73841, 73842, 73843, 73844, 73847, 73848, 73851, 73852, 73853, 73855, 73857, 73858, 73859, 73860, 73901, 73931, 73932, 73933, 73937, 73938, 73939, 73942, 73944, 73945, 73946, 73947, 73949, 73950, 73951, 74001, 74002, 74003, 74004, 74005, 74006, 74008, 74009, 74010, 74011, 74012, 74013, 74014, 74015, 74016, 74017, 74018, 74020, 74021, 74022, 74023, 74026, 74027, 74028, 74029, 74030, 74031, 74032, 74033, 74034, 74035, 74036, 74037, 74038, 74039, 74041, 74042, 74043, 74044, 74045, 74046, 74047, 74048, 74050, 74051, 74052, 74053, 74054, 74055, 74056, 74058, 74059, 74060, 74061, 74062, 74063, 74064, 74066, 74067, 74068, 74070, 74071, 74072, 74073, 74074, 74075, 74076, 74077, 74078, 74079, 74080, 74081, 74082, 74083, 74084, 74085, 74101, 74102, 74103, 74104, 74105, 74106, 74107, 74108, 74110, 74112, 74114, 74115, 74116, 74117, 74119, 74120, 74121, 74126, 74127, 74128, 74129, 74130, 74131, 74132, 74133, 74134, 74135, 74136, 74137, 74141, 74145, 74146, 74147, 74148, 74149, 74150, 74152, 74153, 74155, 74156, 74157, 74158, 74159, 74169, 74170, 74171, 74172, 74177, 74182, 74183, 74184, 74186, 74187, 74189, 74192, 74193, 74194, 74301, 74328, 74330, 74331, 74332, 74333, 74334, 74335, 74336, 74337, 74338, 74339, 74340, 74342, 74343, 74344, 74345, 74346, 74347, 74349, 74350, 74352, 74353, 74354, 74355, 74358, 74359, 74360, 74361, 74362, 74363, 74364, 74365, 74366, 74367, 74368, 74369, 74370, 74399, 74401, 74402, 74403, 74421, 74422, 74423, 74425, 74426, 74427, 74428, 74429, 74430, 74431, 74432, 74434, 74435, 74436, 74437, 74438, 74440, 74441, 74442, 74444, 74445, 74446, 74447, 74450, 74451, 74452, 74454, 74455, 74456, 74457, 74458, 74459, 74460, 74461, 74462, 74463, 74464, 74465, 74466, 74467, 74468, 74469, 74470, 74471, 74472, 74477, 74501, 74502, 74520, 74521, 74522, 74523, 74525, 74528, 74529, 74530, 74531, 74533, 74534, 74535, 74536, 74538, 74540, 74542, 74543, 74545, 74546, 74547, 74549, 74552, 74553, 74554, 74555, 74556, 74557, 74558, 74559, 74560, 74561, 74562, 74563, 74565, 74567, 74569, 74570, 74571, 74572, 74574, 74576, 74577, 74578, 74601, 74602, 74603, 74604, 74630, 74631, 74632, 74633, 74636, 74637, 74640, 74641, 74643, 74644, 74646, 74647, 74650, 74651, 74652, 74653, 74701, 74702, 74720, 74721, 74722, 74723, 74724, 74726, 74727, 74728, 74729, 74730, 74731, 74733, 74734, 74735, 74736, 74737, 74738, 74740, 74741, 74743, 74745, 74747, 74748, 74750, 74752, 74753, 74754, 74755, 74756, 74759, 74760, 74761, 74764, 74766, 74801, 74802, 74804, 74807, 74818, 74820, 74821, 74824, 74825, 74826, 74827, 74829, 74830, 74831, 74832, 74833, 74834, 74836, 74837, 74839, 74840, 74842, 74843, 74844, 74845, 74848, 74849, 74850, 74851, 74852, 74853, 74854, 74855, 74856, 74857, 74859, 74860, 74864, 74865, 74866, 74867, 74868, 74869, 74871, 74872, 74873, 74875, 74878, 74880, 74881, 74883, 74884, 74894, 74901, 74902, 74930, 74931, 74932, 74935, 74936, 74937, 74939, 74940, 74941, 74942, 74943, 74944, 74945, 74946, 74947, 74948, 74949, 74951, 74953, 74954, 74955, 74956, 74957, 74959, 74960, 74962, 74963, 74964, 74965, 74966, 74968, 75001, 75002, 75006, 75007, 75008, 75009, 75010, 75011, 75013, 75014, 75015, 75016, 75017, 75019, 75020, 75021, 75022, 75023, 75024, 75025, 75026, 75027, 75028, 75029, 75030, 75032, 75034, 75035, 75037, 75038, 75039, 75040, 75041, 75042, 75043, 75044, 75045, 75046, 75047, 75048, 75049, 75050, 75051, 75052, 75053, 75054, 75056, 75057, 75058, 75059, 75060, 75061, 75062, 75063, 75065, 75066, 75067, 75068, 75069, 75070, 75071, 75074, 75075, 75076, 75077, 75078, 75080, 75081, 75082, 75083, 75085, 75086, 75087, 75088, 75089, 75090, 75091, 75092, 75093, 75094, 75097, 75098, 75099, 75101, 75102, 75103, 75104, 75105, 75106, 75109, 75110, 75114, 75115, 75116, 75117, 75118, 75119, 75120, 75121, 75123, 75124, 75125, 75126, 75127, 75132, 75134, 75135, 75137, 75138, 75140, 75141, 75142, 75143, 75144, 75146, 75147, 75148, 75149, 75150, 75151, 75152, 75153, 75154, 75155, 75156, 75157, 75158, 75159, 75160, 75161, 75163, 75164, 75165, 75166, 75167, 75168, 75169, 75172, 75173, 75180, 75181, 75182, 75185, 75187, 75189, 75201, 75202, 75203, 75204, 75205, 75206, 75207, 75208, 75209, 75210, 75211, 75212, 75214, 75215, 75216, 75217, 75218, 75219, 75220, 75221, 75222, 75223, 75224, 75225, 75226, 75227, 75228, 75229, 75230, 75231, 75232, 75233, 75234, 75235, 75236, 75237, 75238, 75239, 75240, 75241, 75242, 75243, 75244, 75245, 75246, 75247, 75248, 75249, 75250, 75251, 75252, 75253, 75254, 75255, 75258, 75260, 75261, 75262, 75263, 75264, 75265, 75266, 75267, 75270, 75275, 75277, 75283, 75284, 75285, 75286, 75287, 75294, 75295, 75301, 75303, 75310, 75312, 75313, 75315, 75320, 75323, 75326, 75336, 75339, 75342, 75346, 75350, 75353, 75354, 75355, 75356, 75357, 75359, 75360, 75363, 75364, 75367, 75368, 75370, 75371, 75372, 75373, 75374, 75376, 75378, 75379, 75380, 75381, 75382, 75386, 75387, 75388, 75389, 75390, 75391, 75392, 75393, 75394, 75395, 75396, 75397, 75398, 75401, 75402, 75403, 75404, 75407, 75408, 75409, 75410, 75411, 75412, 75413, 75414, 75415, 75416, 75417, 75418, 75420, 75421, 75422, 75423, 75424, 75425, 75426, 75428, 75429, 75431, 75432, 75433, 75434, 75435, 75436, 75437, 75438, 75439, 75440, 75441, 75442, 75443, 75444, 75446, 75447, 75448, 75449, 75450, 75451, 75452, 75453, 75454, 75455, 75456, 75457, 75458, 75459, 75460, 75461, 75462, 75468, 75469, 75470, 75471, 75472, 75473, 75474, 75475, 75476, 75477, 75478, 75479, 75480, 75481, 75482, 75483, 75485, 75486, 75487, 75488, 75489, 75490, 75491, 75492, 75493, 75494, 75495, 75496, 75497, 75499, 75501, 75502, 75503, 75504, 75505, 75507, 75550, 75551, 75554, 75555, 75556, 75558, 75559, 75560, 75561, 75562, 75563, 75564, 75565, 75566, 75567, 75568, 75569, 75570, 75571, 75572, 75573, 75574, 75599, 75601, 75602, 75603, 75604, 75605, 75606, 75607, 75608, 75615, 75630, 75631, 75633, 75636, 75637, 75638, 75639, 75640, 75641, 75642, 75643, 75644, 75645, 75647, 75650, 75651, 75652, 75653, 75654, 75656, 75657, 75658, 75659, 75660, 75661, 75662, 75663, 75666, 75667, 75668, 75669, 75670, 75671, 75672, 75680, 75681, 75682, 75683, 75684, 75685, 75686, 75687, 75688, 75689, 75691, 75692, 75693, 75694, 75701, 75702, 75703, 75704, 75705, 75706, 75707, 75708, 75709, 75710, 75711, 75712, 75713, 75750, 75751, 75752, 75754, 75755, 75756, 75757, 75758, 75759, 75760, 75762, 75763, 75764, 75765, 75766, 75770, 75771, 75772, 75773, 75778, 75779, 75780, 75782, 75783, 75784, 75785, 75788, 75789, 75790, 75791, 75792, 75798, 75799, 75801, 75802, 75803, 75806, 75825, 75831, 75832, 75833, 75834, 75835, 75838, 75839, 75840, 75844, 75845, 75846, 75847, 75848, 75849, 75850, 75851, 75852, 75853, 75855, 75856, 75858, 75859, 75860, 75861, 75862, 75865, 75875, 75880, 75882, 75884, 75886, 75901, 75902, 75903, 75904, 75915, 75925, 75926, 75928, 75929, 75930, 75931, 75932, 75933, 75934, 75935, 75936, 75937, 75938, 75939, 75941, 75942, 75943, 75944, 75946, 75947, 75948, 75949, 75951, 75954, 75956, 75957, 75958, 75959, 75960, 75961, 75962, 75963, 75964, 75965, 75966, 75968, 75969, 75972, 75973, 75974, 75975, 75976, 75977, 75978, 75979, 75980, 75990, 76001, 76002, 76003, 76004, 76005, 76006, 76007, 76008, 76009, 76010, 76011, 76012, 76013, 76014, 76015, 76016, 76017, 76018, 76019, 76020, 76021, 76022, 76023, 76025, 76028, 76031, 76033, 76034, 76035, 76036, 76039, 76040, 76041, 76043, 76044, 76048, 76049, 76050, 76051, 76052, 76053, 76054, 76055, 76058, 76059, 76060, 76061, 76063, 76064, 76065, 76066, 76067, 76068, 76070, 76071, 76073, 76077, 76078, 76082, 76084, 76085, 76086, 76087, 76088, 76092, 76093, 76094, 76095, 76096, 76097, 76098, 76099, 76101, 76102, 76103, 76104, 76105, 76106, 76107, 76108, 76109, 76110, 76111, 76112, 76113, 76114, 76115, 76116, 76117, 76118, 76119, 76120, 76121, 76122, 76123, 76124, 76126, 76127, 76129, 76130, 76131, 76132, 76133, 76134, 76135, 76136, 76137, 76140, 76147, 76148, 76150, 76153, 76155, 76161, 76162, 76163, 76164, 76177, 76178, 76179, 76180, 76181, 76182, 76185, 76191, 76192, 76193, 76195, 76196, 76197, 76198, 76199, 76201, 76202, 76203, 76204, 76205, 76206, 76207, 76208, 76209, 76210, 76225, 76226, 76227, 76228, 76230, 76233, 76234, 76238, 76239, 76240, 76241, 76244, 76245, 76246, 76247, 76248, 76249, 76250, 76251, 76252, 76253, 76255, 76258, 76259, 76261, 76262, 76263, 76264, 76265, 76266, 76267, 76268, 76270, 76271, 76272, 76273, 76299, 76301, 76302, 76303, 76304, 76305, 76306, 76307, 76308, 76309, 76310, 76311, 76345, 76351, 76352, 76354, 76356, 76357, 76360, 76363, 76364, 76365, 76366, 76367, 76369, 76370, 76371, 76372, 76373, 76374, 76377, 76379, 76380, 76384, 76385, 76388, 76389, 76401, 76402, 76420, 76424, 76426, 76427, 76429, 76430, 76431, 76432, 76433, 76435, 76436, 76437, 76439, 76442, 76443, 76444, 76445, 76446, 76448, 76449, 76450, 76452, 76453, 76454, 76455, 76457, 76458, 76459, 76460, 76461, 76462, 76463, 76464, 76465, 76466, 76467, 76468, 76469, 76470, 76471, 76472, 76474, 76475, 76476, 76481, 76483, 76484, 76485, 76486, 76487, 76490, 76491, 76501, 76502, 76503, 76504, 76505, 76508, 76511, 76513, 76518, 76519, 76520, 76522, 76523, 76524, 76525, 76526, 76527, 76528, 76530, 76531, 76533, 76534, 76537, 76538, 76539, 76540, 76541, 76542, 76543, 76544, 76545, 76546, 76547, 76548, 76549, 76550, 76552, 76554, 76555, 76556, 76557, 76558, 76559, 76561, 76564, 76565, 76566, 76567, 76569, 76570, 76571, 76573, 76574, 76576, 76577, 76578, 76579, 76596, 76597, 76598, 76599, 76607, 76618, 76621, 76622, 76623, 76624, 76626, 76627, 76628, 76629, 76630, 76631, 76632, 76633, 76634, 76635, 76636, 76637, 76638, 76639, 76640, 76641, 76642, 76643, 76644, 76645, 76648, 76649, 76650, 76651, 76652, 76653, 76654, 76655, 76656, 76657, 76660, 76661, 76664, 76665, 76666, 76667, 76670, 76671, 76673, 76675, 76676, 76677, 76678, 76679, 76680, 76681, 76682, 76683, 76684, 76685, 76686, 76687, 76689, 76690, 76691, 76692, 76693, 76701, 76702, 76703, 76704, 76705, 76706, 76707, 76708, 76710, 76711, 76712, 76714, 76715, 76716, 76795, 76797, 76798, 76799, 76801, 76802, 76803, 76804, 76820, 76821, 76823, 76824, 76825, 76827, 76828, 76831, 76832, 76834, 76836, 76837, 76841, 76842, 76844, 76845, 76848, 76849, 76852, 76853, 76854, 76855, 76856, 76857, 76858, 76859, 76861, 76862, 76864, 76865, 76866, 76867, 76869, 76870, 76871, 76872, 76873, 76874, 76875, 76877, 76878, 76880, 76882, 76883, 76884, 76885, 76886, 76887, 76888, 76890, 76901, 76902, 76903, 76904, 76905, 76906, 76908, 76909, 76930, 76932, 76933, 76934, 76935, 76936, 76937, 76939, 76940, 76941, 76943, 76945, 76949, 76950, 76951, 76953, 76955, 76957, 76958, 77e3, 77001, 77002, 77003, 77004, 77005, 77006, 77007, 77008, 77009, 77010, 77011, 77012, 77013, 77014, 77015, 77016, 77017, 77018, 77019, 77020, 77021, 77022, 77023, 77024, 77025, 77026, 77027, 77028, 77029, 77030, 77031, 77032, 77033, 77034, 77035, 77036, 77037, 77038, 77039, 77040, 77041, 77042, 77043, 77044, 77045, 77046, 77047, 77048, 77049, 77050, 77051, 77052, 77053, 77054, 77055, 77056, 77057, 77058, 77059, 77060, 77061, 77062, 77063, 77064, 77065, 77066, 77067, 77068, 77069, 77070, 77071, 77072, 77073, 77074, 77075, 77076, 77077, 77078, 77079, 77080, 77081, 77082, 77083, 77084, 77085, 77086, 77087, 77088, 77089, 77090, 77091, 77092, 77093, 77094, 77095, 77096, 77097, 77098, 77099, 77201, 77202, 77203, 77204, 77205, 77206, 77207, 77208, 77209, 77210, 77212, 77213, 77215, 77216, 77217, 77218, 77219, 77220, 77221, 77222, 77223, 77224, 77225, 77226, 77227, 77228, 77229, 77230, 77231, 77233, 77234, 77235, 77236, 77237, 77238, 77240, 77241, 77242, 77243, 77244, 77245, 77248, 77249, 77251, 77252, 77253, 77254, 77255, 77256, 77257, 77258, 77259, 77261, 77262, 77263, 77265, 77266, 77267, 77268, 77269, 77270, 77271, 77272, 77273, 77274, 77275, 77277, 77279, 77280, 77281, 77282, 77284, 77287, 77288, 77289, 77290, 77291, 77292, 77293, 77297, 77298, 77299, 77301, 77302, 77303, 77304, 77305, 77306, 77315, 77316, 77318, 77320, 77325, 77326, 77327, 77328, 77331, 77332, 77333, 77334, 77335, 77336, 77337, 77338, 77339, 77340, 77341, 77342, 77343, 77344, 77345, 77346, 77347, 77348, 77349, 77350, 77351, 77353, 77354, 77355, 77356, 77357, 77358, 77359, 77360, 77362, 77363, 77364, 77365, 77367, 77368, 77369, 77371, 77372, 77373, 77374, 77375, 77376, 77377, 77378, 77379, 77380, 77381, 77382, 77383, 77384, 77385, 77386, 77387, 77388, 77389, 77391, 77393, 77396, 77399, 77401, 77402, 77404, 77406, 77410, 77411, 77412, 77413, 77414, 77415, 77417, 77418, 77419, 77420, 77422, 77423, 77426, 77428, 77429, 77430, 77431, 77432, 77433, 77434, 77435, 77436, 77437, 77439, 77440, 77441, 77442, 77443, 77444, 77445, 77446, 77447, 77448, 77449, 77450, 77451, 77452, 77453, 77454, 77455, 77456, 77457, 77458, 77459, 77460, 77461, 77462, 77463, 77464, 77465, 77466, 77467, 77468, 77469, 77470, 77471, 77473, 77474, 77475, 77476, 77477, 77478, 77479, 77480, 77481, 77482, 77483, 77484, 77485, 77486, 77487, 77488, 77489, 77491, 77492, 77493, 77494, 77496, 77497, 77501, 77502, 77503, 77504, 77505, 77506, 77507, 77508, 77510, 77511, 77512, 77514, 77515, 77516, 77517, 77518, 77519, 77520, 77521, 77522, 77530, 77531, 77532, 77533, 77534, 77535, 77536, 77537, 77538, 77539, 77541, 77542, 77545, 77546, 77547, 77549, 77550, 77551, 77552, 77553, 77554, 77555, 77560, 77561, 77562, 77563, 77564, 77565, 77566, 77567, 77568, 77571, 77572, 77573, 77574, 77575, 77577, 77578, 77580, 77581, 77582, 77583, 77584, 77585, 77586, 77587, 77588, 77590, 77591, 77592, 77593, 77597, 77598, 77611, 77612, 77613, 77614, 77615, 77616, 77617, 77619, 77622, 77623, 77624, 77625, 77626, 77627, 77629, 77630, 77631, 77632, 77633, 77639, 77640, 77641, 77642, 77643, 77650, 77651, 77655, 77656, 77657, 77659, 77660, 77661, 77662, 77663, 77664, 77665, 77670, 77701, 77702, 77703, 77704, 77705, 77706, 77707, 77708, 77709, 77710, 77713, 77720, 77725, 77726, 77735, 77801, 77802, 77803, 77805, 77806, 77807, 77808, 77830, 77831, 77833, 77834, 77835, 77836, 77837, 77838, 77839, 77840, 77841, 77842, 77843, 77844, 77845, 77850, 77852, 77853, 77855, 77856, 77857, 77859, 77861, 77862, 77863, 77864, 77865, 77866, 77867, 77868, 77869, 77870, 77871, 77872, 77873, 77874, 77875, 77876, 77878, 77879, 77880, 77881, 77882, 77889, 77901, 77902, 77903, 77904, 77905, 77950, 77951, 77954, 77957, 77960, 77961, 77962, 77963, 77964, 77965, 77967, 77968, 77969, 77970, 77971, 77972, 77973, 77974, 77975, 77976, 77977, 77978, 77979, 77982, 77983, 77984, 77985, 77986, 77987, 77988, 77989, 77990, 77991, 77993, 77994, 77995, 77999, 78001, 78002, 78003, 78004, 78005, 78006, 78007, 78008, 78009, 78010, 78011, 78012, 78013, 78014, 78015, 78016, 78017, 78019, 78021, 78022, 78023, 78024, 78025, 78026, 78027, 78028, 78029, 78039, 78040, 78041, 78042, 78043, 78044, 78045, 78046, 78047, 78049, 78050, 78052, 78053, 78054, 78055, 78056, 78057, 78058, 78059, 78060, 78061, 78062, 78063, 78064, 78065, 78066, 78067, 78069, 78070, 78071, 78072, 78073, 78074, 78075, 78076, 78081, 78093, 78101, 78102, 78104, 78107, 78108, 78109, 78111, 78112, 78113, 78114, 78115, 78116, 78117, 78118, 78119, 78121, 78122, 78123, 78124, 78125, 78126, 78130, 78131, 78132, 78133, 78134, 78135, 78136, 78140, 78141, 78142, 78143, 78144, 78145, 78146, 78147, 78148, 78150, 78151, 78152, 78154, 78155, 78156, 78159, 78160, 78161, 78162, 78163, 78164, 78201, 78202, 78203, 78204, 78205, 78206, 78207, 78208, 78209, 78210, 78211, 78212, 78213, 78214, 78215, 78216, 78217, 78218, 78219, 78220, 78221, 78222, 78223, 78224, 78225, 78226, 78227, 78228, 78229, 78230, 78231, 78232, 78233, 78234, 78235, 78236, 78237, 78238, 78239, 78240, 78241, 78242, 78243, 78244, 78245, 78246, 78247, 78248, 78249, 78250, 78251, 78252, 78253, 78254, 78255, 78256, 78257, 78258, 78259, 78260, 78261, 78262, 78263, 78264, 78265, 78266, 78268, 78269, 78270, 78275, 78278, 78279, 78280, 78283, 78284, 78285, 78286, 78287, 78288, 78289, 78291, 78292, 78293, 78294, 78295, 78296, 78297, 78298, 78299, 78301, 78330, 78331, 78332, 78333, 78335, 78336, 78337, 78338, 78339, 78340, 78341, 78342, 78343, 78344, 78347, 78349, 78350, 78351, 78352, 78353, 78355, 78357, 78358, 78359, 78360, 78361, 78362, 78363, 78364, 78368, 78369, 78370, 78371, 78372, 78373, 78374, 78375, 78376, 78377, 78379, 78380, 78381, 78382, 78383, 78384, 78385, 78387, 78389, 78390, 78391, 78393, 78401, 78402, 78403, 78404, 78405, 78406, 78407, 78408, 78409, 78410, 78411, 78412, 78413, 78414, 78415, 78416, 78417, 78418, 78419, 78426, 78427, 78460, 78461, 78463, 78465, 78466, 78467, 78468, 78469, 78470, 78471, 78472, 78473, 78474, 78475, 78476, 78477, 78478, 78480, 78501, 78502, 78503, 78504, 78505, 78512, 78516, 78520, 78521, 78522, 78523, 78526, 78535, 78536, 78537, 78538, 78539, 78540, 78541, 78543, 78545, 78547, 78548, 78549, 78550, 78551, 78552, 78553, 78555, 78557, 78558, 78559, 78560, 78561, 78562, 78563, 78564, 78565, 78566, 78567, 78568, 78569, 78570, 78571, 78572, 78573, 78574, 78575, 78576, 78577, 78578, 78579, 78580, 78582, 78583, 78584, 78585, 78586, 78587, 78588, 78589, 78590, 78591, 78592, 78593, 78594, 78595, 78596, 78597, 78598, 78599, 78602, 78603, 78604, 78605, 78606, 78607, 78608, 78609, 78610, 78611, 78612, 78613, 78614, 78615, 78616, 78617, 78618, 78619, 78620, 78621, 78622, 78623, 78624, 78626, 78627, 78628, 78629, 78630, 78631, 78632, 78634, 78635, 78636, 78638, 78639, 78640, 78641, 78642, 78643, 78644, 78645, 78646, 78648, 78650, 78651, 78652, 78653, 78654, 78655, 78656, 78657, 78658, 78659, 78660, 78661, 78662, 78663, 78664, 78665, 78666, 78667, 78669, 78670, 78671, 78672, 78673, 78674, 78675, 78676, 78677, 78680, 78681, 78682, 78683, 78691, 78701, 78702, 78703, 78704, 78705, 78708, 78709, 78710, 78711, 78712, 78713, 78714, 78715, 78716, 78717, 78718, 78719, 78720, 78721, 78722, 78723, 78724, 78725, 78726, 78727, 78728, 78729, 78730, 78731, 78732, 78733, 78734, 78735, 78736, 78737, 78738, 78739, 78741, 78742, 78744, 78745, 78746, 78747, 78748, 78749, 78750, 78751, 78752, 78753, 78754, 78755, 78756, 78757, 78758, 78759, 78760, 78761, 78762, 78763, 78764, 78765, 78766, 78767, 78768, 78769, 78771, 78772, 78773, 78774, 78778, 78779, 78780, 78781, 78782, 78783, 78785, 78786, 78787, 78788, 78789, 78801, 78802, 78827, 78828, 78829, 78830, 78832, 78833, 78834, 78835, 78836, 78837, 78838, 78839, 78840, 78841, 78842, 78843, 78847, 78850, 78851, 78852, 78853, 78860, 78861, 78870, 78871, 78872, 78873, 78877, 78879, 78880, 78881, 78883, 78884, 78885, 78886, 78931, 78932, 78933, 78934, 78935, 78938, 78940, 78941, 78942, 78943, 78944, 78945, 78946, 78947, 78948, 78949, 78950, 78951, 78952, 78953, 78954, 78956, 78957, 78959, 78960, 78961, 78962, 78963, 78972, 79001, 79002, 79003, 79005, 79007, 79008, 79009, 79010, 79011, 79012, 79013, 79014, 79015, 79016, 79018, 79019, 79021, 79022, 79024, 79025, 79027, 79029, 79031, 79032, 79033, 79034, 79035, 79036, 79039, 79040, 79041, 79042, 79043, 79044, 79045, 79046, 79051, 79052, 79053, 79054, 79056, 79057, 79058, 79059, 79061, 79062, 79063, 79064, 79065, 79066, 79068, 79070, 79072, 79073, 79077, 79078, 79079, 79080, 79081, 79082, 79083, 79084, 79085, 79086, 79087, 79088, 79091, 79092, 79093, 79094, 79095, 79096, 79097, 79098, 79101, 79102, 79103, 79104, 79105, 79106, 79107, 79108, 79109, 79110, 79111, 79114, 79116, 79117, 79118, 79119, 79120, 79121, 79123, 79124, 79159, 79160, 79163, 79164, 79165, 79166, 79167, 79168, 79170, 79171, 79172, 79174, 79175, 79178, 79180, 79181, 79182, 79184, 79185, 79186, 79187, 79189, 79201, 79220, 79221, 79222, 79223, 79224, 79225, 79226, 79227, 79229, 79230, 79231, 79232, 79233, 79234, 79235, 79236, 79237, 79238, 79239, 79240, 79241, 79243, 79244, 79245, 79247, 79248, 79250, 79251, 79252, 79255, 79256, 79257, 79258, 79259, 79261, 79301, 79311, 79312, 79313, 79314, 79316, 79320, 79321, 79322, 79323, 79324, 79325, 79326, 79329, 79330, 79331, 79336, 79338, 79339, 79342, 79343, 79344, 79345, 79346, 79347, 79350, 79351, 79353, 79355, 79356, 79357, 79358, 79359, 79360, 79363, 79364, 79366, 79367, 79368, 79369, 79370, 79371, 79372, 79373, 79376, 79377, 79378, 79379, 79380, 79381, 79382, 79383, 79401, 79402, 79403, 79404, 79405, 79406, 79407, 79408, 79409, 79410, 79411, 79412, 79413, 79414, 79415, 79416, 79423, 79424, 79430, 79452, 79453, 79457, 79464, 79490, 79491, 79493, 79499, 79501, 79502, 79503, 79504, 79505, 79506, 79508, 79510, 79511, 79512, 79516, 79517, 79518, 79519, 79520, 79521, 79525, 79526, 79527, 79528, 79529, 79530, 79532, 79533, 79534, 79535, 79536, 79537, 79538, 79539, 79540, 79541, 79543, 79544, 79545, 79546, 79547, 79548, 79549, 79550, 79552, 79553, 79556, 79560, 79561, 79562, 79563, 79565, 79566, 79567, 79571, 79601, 79602, 79603, 79604, 79605, 79606, 79607, 79608, 79643, 79697, 79698, 79699, 79701, 79702, 79703, 79704, 79705, 79706, 79707, 79708, 79710, 79711, 79712, 79713, 79714, 79718, 79719, 79720, 79721, 79730, 79731, 79733, 79734, 79735, 79738, 79739, 79740, 79741, 79742, 79743, 79744, 79745, 79748, 79749, 79752, 79754, 79755, 79756, 79757, 79758, 79759, 79760, 79761, 79762, 79763, 79764, 79765, 79766, 79768, 79769, 79770, 79772, 79776, 79777, 79778, 79779, 79780, 79781, 79782, 79783, 79785, 79786, 79788, 79789, 79821, 79830, 79831, 79832, 79834, 79835, 79836, 79837, 79838, 79839, 79841, 79842, 79843, 79845, 79846, 79847, 79848, 79849, 79850, 79851, 79852, 79853, 79854, 79855, 79858, 79870, 79901, 79902, 79903, 79904, 79905, 79906, 79907, 79908, 79910, 79911, 79912, 79913, 79914, 79915, 79916, 79917, 79918, 79920, 79922, 79923, 79924, 79925, 79926, 79927, 79928, 79929, 79930, 79931, 79932, 79934, 79935, 79936, 79937, 79938, 79940, 79941, 79942, 79943, 79944, 79945, 79946, 79947, 79948, 79949, 79950, 79951, 79952, 79953, 79954, 79955, 79958, 79960, 79961, 79966, 79968, 79973, 79974, 79975, 79976, 79977, 79978, 79980, 79982, 79983, 79984, 79985, 79986, 79987, 79988, 79989, 79990, 79991, 79992, 79993, 79994, 79995, 79996, 79997, 79998, 79999, 8e4, 80001, 80002, 80003, 80004, 80005, 80006, 80007, 80010, 80011, 80012, 80013, 80014, 80015, 80016, 80017, 80018, 80019, 80020, 80021, 80022, 80024, 80025, 80026, 80027, 80028, 80030, 80031, 80033, 80034, 80035, 80036, 80037, 80038, 80040, 80041, 80042, 80044, 80045, 80046, 80047, 80061, 80101, 80102, 80103, 80104, 80105, 80106, 80107, 80108, 80109, 80110, 80111, 80112, 80115, 80116, 80117, 80118, 80120, 80121, 80122, 80123, 80124, 80125, 80126, 80127, 80128, 80129, 80130, 80131, 80132, 80133, 80134, 80135, 80136, 80137, 80138, 80139, 80150, 80151, 80154, 80155, 80160, 80161, 80162, 80163, 80165, 80166, 80201, 80202, 80203, 80204, 80205, 80206, 80207, 80208, 80209, 80210, 80211, 80212, 80214, 80215, 80216, 80217, 80218, 80219, 80220, 80221, 80222, 80223, 80224, 80225, 80226, 80227, 80228, 80229, 80230, 80231, 80232, 80233, 80234, 80235, 80236, 80237, 80238, 80239, 80241, 80243, 80244, 80246, 80247, 80248, 80249, 80250, 80251, 80252, 80254, 80255, 80256, 80257, 80259, 80260, 80261, 80262, 80263, 80264, 80265, 80266, 80270, 80271, 80273, 80274, 80275, 80279, 80280, 80281, 80290, 80291, 80292, 80293, 80294, 80295, 80296, 80299, 80301, 80302, 80303, 80304, 80305, 80306, 80307, 80308, 80309, 80310, 80314, 80321, 80322, 80323, 80328, 80329, 80401, 80402, 80403, 80419, 80420, 80421, 80422, 80423, 80424, 80425, 80426, 80427, 80428, 80429, 80430, 80432, 80433, 80434, 80435, 80436, 80437, 80438, 80439, 80440, 80442, 80443, 80444, 80446, 80447, 80448, 80449, 80451, 80452, 80453, 80454, 80455, 80456, 80457, 80459, 80461, 80463, 80465, 80466, 80467, 80468, 80469, 80470, 80471, 80473, 80474, 80475, 80476, 80477, 80478, 80479, 80480, 80481, 80482, 80483, 80487, 80488, 80497, 80498, 80501, 80502, 80503, 80504, 80509, 80510, 80511, 80512, 80513, 80514, 80515, 80516, 80517, 80520, 80521, 80522, 80523, 80524, 80525, 80526, 80527, 80528, 80530, 80532, 80533, 80534, 80535, 80536, 80537, 80538, 80539, 80540, 80541, 80542, 80543, 80544, 80545, 80546, 80547, 80549, 80550, 80551, 80553, 80601, 80602, 80603, 80610, 80611, 80612, 80614, 80615, 80620, 80621, 80622, 80623, 80624, 80630, 80631, 80632, 80633, 80634, 80638, 80639, 80640, 80642, 80643, 80644, 80645, 80646, 80648, 80649, 80650, 80651, 80652, 80653, 80654, 80701, 80705, 80720, 80721, 80722, 80723, 80726, 80727, 80728, 80729, 80731, 80732, 80733, 80734, 80735, 80736, 80737, 80740, 80741, 80742, 80743, 80744, 80745, 80746, 80747, 80749, 80750, 80751, 80754, 80755, 80757, 80758, 80759, 80801, 80802, 80804, 80805, 80807, 80808, 80809, 80810, 80812, 80813, 80814, 80815, 80816, 80817, 80818, 80819, 80820, 80821, 80822, 80823, 80824, 80825, 80826, 80827, 80828, 80829, 80830, 80831, 80832, 80833, 80834, 80835, 80836, 80840, 80841, 80860, 80861, 80862, 80863, 80864, 80866, 80901, 80902, 80903, 80904, 80905, 80906, 80907, 80908, 80909, 80910, 80911, 80912, 80913, 80914, 80915, 80916, 80917, 80918, 80919, 80920, 80921, 80922, 80924, 80925, 80926, 80928, 80929, 80930, 80931, 80932, 80933, 80934, 80935, 80936, 80937, 80940, 80941, 80942, 80943, 80944, 80945, 80946, 80947, 80949, 80950, 80960, 80962, 80970, 80977, 80995, 80997, 81001, 81002, 81003, 81004, 81005, 81006, 81007, 81008, 81009, 81010, 81011, 81012, 81013, 81014, 81015, 81019, 81020, 81021, 81022, 81023, 81024, 81025, 81027, 81029, 81030, 81033, 81034, 81036, 81038, 81039, 81040, 81041, 81042, 81043, 81044, 81045, 81046, 81047, 81049, 81050, 81052, 81054, 81055, 81057, 81058, 81059, 81062, 81063, 81064, 81066, 81067, 81069, 81071, 81073, 81074, 81076, 81077, 81079, 81081, 81082, 81084, 81087, 81089, 81090, 81091, 81092, 81101, 81102, 81120, 81121, 81122, 81123, 81124, 81125, 81126, 81127, 81128, 81129, 81130, 81131, 81132, 81133, 81134, 81135, 81136, 81137, 81138, 81140, 81141, 81143, 81144, 81146, 81147, 81148, 81149, 81151, 81152, 81153, 81154, 81155, 81157, 81201, 81210, 81211, 81212, 81215, 81220, 81221, 81222, 81223, 81224, 81225, 81226, 81227, 81228, 81230, 81231, 81232, 81233, 81235, 81236, 81237, 81239, 81240, 81241, 81242, 81243, 81244, 81246, 81247, 81248, 81251, 81252, 81253, 81260, 81290, 81301, 81302, 81303, 81310, 81320, 81321, 81323, 81324, 81325, 81326, 81327, 81328, 81329, 81330, 81331, 81332, 81334, 81335, 81401, 81402, 81410, 81411, 81413, 81414, 81415, 81416, 81418, 81419, 81420, 81421, 81422, 81423, 81424, 81425, 81426, 81427, 81428, 81429, 81430, 81431, 81432, 81433, 81434, 81435, 81501, 81502, 81503, 81504, 81505, 81506, 81516, 81520, 81521, 81522, 81523, 81524, 81525, 81526, 81527, 81601, 81602, 81610, 81611, 81612, 81613, 81615, 81620, 81621, 81623, 81624, 81625, 81626, 81628, 81630, 81631, 81632, 81633, 81635, 81636, 81637, 81638, 81639, 81640, 81641, 81642, 81643, 81645, 81646, 81647, 81648, 81649, 81650, 81652, 81653, 81654, 81655, 81656, 81657, 81658, 82001, 82002, 82003, 82005, 82006, 82007, 82008, 82009, 82010, 82050, 82051, 82052, 82053, 82054, 82055, 82058, 82059, 82060, 82061, 82063, 82070, 82071, 82072, 82073, 82081, 82082, 82083, 82084, 82190, 82201, 82210, 82212, 82213, 82214, 82215, 82217, 82218, 82219, 82221, 82222, 82223, 82224, 82225, 82226, 82227, 82229, 82240, 82242, 82243, 82244, 82301, 82310, 82321, 82322, 82323, 82324, 82325, 82327, 82329, 82331, 82332, 82334, 82335, 82336, 82354, 82401, 82410, 82411, 82412, 82414, 82420, 82421, 82422, 82423, 82426, 82427, 82428, 82430, 82431, 82432, 82433, 82434, 82435, 82440, 82441, 82442, 82443, 82450, 82501, 82504, 82510, 82512, 82513, 82514, 82515, 82516, 82520, 82523, 82524, 82601, 82602, 82604, 82605, 82609, 82615, 82620, 82630, 82631, 82633, 82635, 82636, 82637, 82638, 82639, 82640, 82642, 82643, 82644, 82646, 82648, 82649, 82701, 82703, 82710, 82711, 82712, 82713, 82714, 82715, 82716, 82717, 82718, 82720, 82721, 82723, 82725, 82727, 82729, 82730, 82731, 82732, 82779, 82801, 82831, 82832, 82833, 82834, 82835, 82836, 82837, 82838, 82839, 82840, 82842, 82844, 82845, 82901, 82902, 82922, 82923, 82925, 82929, 82930, 82931, 82932, 82933, 82934, 82935, 82936, 82937, 82938, 82939, 82941, 82942, 82943, 82944, 82945, 83001, 83002, 83011, 83012, 83013, 83014, 83025, 83101, 83110, 83111, 83112, 83113, 83114, 83115, 83116, 83118, 83119, 83120, 83121, 83122, 83123, 83124, 83126, 83127, 83128, 83201, 83202, 83203, 83204, 83205, 83206, 83209, 83210, 83211, 83212, 83213, 83214, 83215, 83217, 83218, 83220, 83221, 83223, 83226, 83227, 83228, 83229, 83230, 83232, 83233, 83234, 83235, 83236, 83237, 83238, 83239, 83241, 83243, 83244, 83245, 83246, 83250, 83251, 83252, 83253, 83254, 83255, 83256, 83261, 83262, 83263, 83271, 83272, 83274, 83276, 83277, 83278, 83281, 83283, 83285, 83286, 83287, 83301, 83302, 83303, 83311, 83312, 83313, 83314, 83316, 83318, 83320, 83321, 83322, 83323, 83324, 83325, 83327, 83328, 83330, 83332, 83333, 83334, 83335, 83336, 83337, 83338, 83340, 83341, 83342, 83343, 83344, 83346, 83347, 83348, 83349, 83350, 83352, 83353, 83354, 83355, 83401, 83402, 83403, 83404, 83405, 83406, 83415, 83420, 83421, 83422, 83423, 83424, 83425, 83427, 83428, 83429, 83431, 83433, 83434, 83435, 83436, 83438, 83440, 83441, 83442, 83443, 83444, 83445, 83446, 83447, 83448, 83449, 83450, 83451, 83452, 83454, 83455, 83460, 83462, 83463, 83464, 83465, 83466, 83467, 83468, 83469, 83501, 83520, 83522, 83523, 83524, 83525, 83526, 83530, 83531, 83533, 83534, 83535, 83536, 83537, 83539, 83540, 83541, 83542, 83543, 83544, 83545, 83546, 83547, 83548, 83549, 83551, 83552, 83553, 83554, 83555, 83601, 83602, 83604, 83605, 83606, 83607, 83610, 83611, 83612, 83615, 83616, 83617, 83619, 83620, 83622, 83623, 83624, 83626, 83627, 83628, 83629, 83630, 83631, 83632, 83633, 83634, 83635, 83636, 83637, 83638, 83639, 83641, 83642, 83643, 83644, 83645, 83647, 83648, 83650, 83651, 83652, 83653, 83654, 83655, 83656, 83657, 83660, 83661, 83666, 83669, 83670, 83671, 83672, 83676, 83677, 83680, 83686, 83687, 83701, 83702, 83703, 83704, 83705, 83706, 83707, 83708, 83709, 83711, 83712, 83713, 83714, 83715, 83716, 83717, 83719, 83720, 83721, 83722, 83723, 83724, 83725, 83726, 83727, 83728, 83729, 83730, 83731, 83732, 83733, 83735, 83744, 83756, 83757, 83788, 83799, 83801, 83802, 83803, 83804, 83805, 83806, 83808, 83809, 83810, 83811, 83812, 83813, 83814, 83815, 83816, 83821, 83822, 83823, 83824, 83825, 83826, 83827, 83830, 83832, 83833, 83834, 83835, 83836, 83837, 83839, 83840, 83841, 83842, 83843, 83844, 83845, 83846, 83847, 83848, 83849, 83850, 83851, 83852, 83853, 83854, 83855, 83856, 83857, 83858, 83860, 83861, 83862, 83864, 83865, 83866, 83867, 83868, 83869, 83870, 83871, 83872, 83873, 83874, 83876, 83877, 83888, 84001, 84002, 84003, 84004, 84006, 84007, 84008, 84010, 84011, 84013, 84014, 84015, 84016, 84017, 84018, 84020, 84021, 84022, 84023, 84024, 84025, 84026, 84027, 84028, 84029, 84030, 84031, 84032, 84033, 84034, 84035, 84036, 84037, 84038, 84039, 84040, 84041, 84042, 84043, 84044, 84046, 84047, 84049, 84050, 84051, 84052, 84053, 84054, 84055, 84056, 84057, 84058, 84059, 84060, 84061, 84062, 84063, 84064, 84065, 84066, 84067, 84068, 84069, 84070, 84071, 84072, 84073, 84074, 84075, 84076, 84078, 84079, 84080, 84082, 84083, 84084, 84085, 84086, 84087, 84088, 84089, 84090, 84091, 84092, 84093, 84094, 84095, 84097, 84098, 84101, 84102, 84103, 84104, 84105, 84106, 84107, 84108, 84109, 84110, 84111, 84112, 84113, 84114, 84115, 84116, 84117, 84118, 84119, 84120, 84121, 84122, 84123, 84124, 84125, 84126, 84127, 84128, 84130, 84131, 84132, 84133, 84134, 84135, 84136, 84137, 84138, 84139, 84140, 84141, 84142, 84143, 84144, 84145, 84147, 84148, 84150, 84151, 84152, 84153, 84157, 84158, 84165, 84170, 84171, 84180, 84184, 84185, 84189, 84190, 84199, 84201, 84244, 84252, 84301, 84302, 84304, 84305, 84306, 84307, 84308, 84309, 84310, 84311, 84312, 84313, 84314, 84315, 84316, 84317, 84318, 84319, 84320, 84321, 84322, 84323, 84324, 84325, 84326, 84327, 84328, 84329, 84330, 84331, 84332, 84333, 84334, 84335, 84336, 84337, 84338, 84339, 84340, 84341, 84346, 84401, 84402, 84403, 84404, 84405, 84407, 84408, 84409, 84412, 84414, 84415, 84501, 84510, 84511, 84512, 84513, 84515, 84516, 84518, 84520, 84521, 84522, 84523, 84525, 84526, 84527, 84528, 84529, 84530, 84531, 84532, 84533, 84534, 84535, 84536, 84537, 84539, 84540, 84542, 84601, 84602, 84603, 84604, 84605, 84606, 84620, 84621, 84622, 84623, 84624, 84626, 84627, 84628, 84629, 84630, 84631, 84632, 84633, 84634, 84635, 84636, 84637, 84638, 84639, 84640, 84642, 84643, 84644, 84645, 84646, 84647, 84648, 84649, 84650, 84651, 84652, 84653, 84654, 84655, 84656, 84657, 84660, 84662, 84663, 84664, 84665, 84667, 84701, 84710, 84711, 84712, 84713, 84714, 84715, 84716, 84717, 84718, 84719, 84720, 84721, 84722, 84723, 84724, 84725, 84726, 84728, 84729, 84730, 84731, 84732, 84733, 84734, 84735, 84736, 84737, 84738, 84739, 84740, 84741, 84742, 84743, 84744, 84745, 84746, 84747, 84749, 84750, 84751, 84752, 84753, 84754, 84755, 84756, 84757, 84758, 84759, 84760, 84761, 84762, 84763, 84764, 84765, 84766, 84767, 84770, 84771, 84772, 84773, 84774, 84775, 84776, 84779, 84780, 84781, 84782, 84783, 84784, 84790, 84791, 84821, 84910, 84915, 84947, 85001, 85002, 85003, 85004, 85005, 85006, 85007, 85008, 85009, 85010, 85011, 85012, 85013, 85014, 85015, 85016, 85017, 85018, 85019, 85020, 85021, 85022, 85023, 85024, 85025, 85026, 85027, 85028, 85029, 85030, 85031, 85032, 85033, 85034, 85035, 85036, 85037, 85038, 85039, 85040, 85041, 85042, 85043, 85044, 85045, 85046, 85048, 85050, 85051, 85053, 85054, 85055, 85060, 85061, 85062, 85063, 85064, 85065, 85066, 85067, 85068, 85069, 85070, 85071, 85072, 85073, 85074, 85075, 85076, 85077, 85078, 85079, 85080, 85082, 85085, 85086, 85087, 85089, 85097, 85098, 85099, 85123, 85200, 85201, 85202, 85203, 85204, 85205, 85206, 85207, 85208, 85210, 85211, 85212, 85213, 85214, 85215, 85216, 85217, 85218, 85219, 85220, 85221, 85222, 85223, 85224, 85225, 85226, 85227, 85228, 85230, 85231, 85232, 85233, 85234, 85235, 85236, 85237, 85239, 85240, 85241, 85242, 85244, 85245, 85246, 85247, 85248, 85249, 85250, 85251, 85252, 85253, 85254, 85255, 85256, 85257, 85258, 85259, 85260, 85261, 85262, 85263, 85264, 85266, 85267, 85268, 85269, 85271, 85272, 85273, 85274, 85275, 85277, 85278, 85279, 85280, 85281, 85282, 85283, 85284, 85285, 85286, 85287, 85288, 85289, 85290, 85291, 85292, 85296, 85297, 85299, 85301, 85302, 85303, 85304, 85305, 85306, 85307, 85308, 85309, 85310, 85311, 85312, 85313, 85317, 85318, 85320, 85321, 85322, 85323, 85324, 85325, 85326, 85327, 85328, 85329, 85330, 85331, 85332, 85333, 85334, 85335, 85336, 85337, 85338, 85339, 85340, 85341, 85342, 85343, 85344, 85345, 85346, 85347, 85348, 85349, 85350, 85351, 85352, 85353, 85354, 85355, 85356, 85357, 85358, 85359, 85360, 85361, 85362, 85363, 85364, 85365, 85366, 85367, 85369, 85371, 85372, 85373, 85374, 85375, 85376, 85377, 85378, 85379, 85380, 85381, 85382, 85383, 85385, 85387, 85390, 85395, 85439, 85501, 85502, 85522, 85530, 85531, 85532, 85533, 85534, 85535, 85536, 85539, 85540, 85541, 85542, 85543, 85544, 85545, 85546, 85547, 85548, 85550, 85551, 85552, 85553, 85554, 85601, 85602, 85603, 85605, 85606, 85607, 85608, 85609, 85610, 85611, 85613, 85614, 85615, 85616, 85617, 85618, 85619, 85620, 85621, 85622, 85623, 85624, 85625, 85626, 85627, 85628, 85629, 85630, 85631, 85632, 85633, 85634, 85635, 85636, 85637, 85638, 85639, 85640, 85641, 85643, 85644, 85645, 85646, 85648, 85650, 85652, 85653, 85654, 85655, 85662, 85670, 85671, 85701, 85702, 85703, 85704, 85705, 85706, 85707, 85708, 85709, 85710, 85711, 85712, 85713, 85714, 85715, 85716, 85717, 85718, 85719, 85720, 85721, 85722, 85723, 85724, 85725, 85726, 85728, 85730, 85731, 85732, 85733, 85734, 85735, 85736, 85737, 85738, 85739, 85740, 85741, 85742, 85743, 85744, 85745, 85746, 85747, 85748, 85749, 85750, 85751, 85752, 85754, 85775, 85777, 85807, 85901, 85902, 85911, 85912, 85920, 85922, 85923, 85924, 85925, 85926, 85927, 85928, 85929, 85930, 85931, 85932, 85933, 85934, 85935, 85936, 85937, 85938, 85939, 85940, 85941, 85942, 86001, 86002, 86003, 86004, 86011, 86015, 86016, 86017, 86018, 86020, 86021, 86022, 86023, 86024, 86025, 86028, 86029, 86030, 86031, 86032, 86033, 86034, 86035, 86036, 86038, 86039, 86040, 86042, 86043, 86044, 86045, 86046, 86047, 86052, 86053, 86054, 86231, 86301, 86302, 86303, 86304, 86305, 86312, 86313, 86314, 86320, 86321, 86322, 86323, 86324, 86325, 86326, 86327, 86329, 86330, 86331, 86332, 86333, 86334, 86335, 86336, 86337, 86338, 86339, 86340, 86341, 86342, 86343, 86344, 86351, 86361, 86366, 86401, 86402, 86403, 86404, 86405, 86406, 86411, 86412, 86413, 86422, 86426, 86427, 86429, 86430, 86431, 86432, 86433, 86434, 86435, 86436, 86437, 86438, 86439, 86440, 86441, 86442, 86443, 86444, 86445, 86446, 86502, 86503, 86504, 86505, 86506, 86507, 86508, 86510, 86511, 86512, 86514, 86515, 86520, 86535, 86538, 86540, 86544, 86545, 86547, 86549, 86551, 86556, 86631, 87001, 87002, 87004, 87005, 87006, 87007, 87008, 87009, 87010, 87011, 87012, 87013, 87014, 87015, 87016, 87017, 87018, 87020, 87021, 87022, 87023, 87024, 87025, 87026, 87027, 87028, 87029, 87031, 87032, 87034, 87035, 87036, 87037, 87038, 87040, 87041, 87042, 87043, 87044, 87045, 87046, 87047, 87048, 87049, 87051, 87052, 87053, 87056, 87057, 87059, 87060, 87061, 87062, 87063, 87064, 87068, 87070, 87072, 87083, 87101, 87102, 87103, 87104, 87105, 87106, 87107, 87108, 87109, 87110, 87111, 87112, 87113, 87114, 87115, 87116, 87117, 87118, 87119, 87120, 87121, 87122, 87123, 87124, 87125, 87131, 87140, 87144, 87153, 87154, 87158, 87174, 87176, 87180, 87181, 87184, 87185, 87187, 87190, 87191, 87192, 87193, 87194, 87195, 87196, 87197, 87198, 87199, 87201, 87301, 87302, 87305, 87310, 87311, 87312, 87313, 87315, 87316, 87317, 87319, 87320, 87321, 87322, 87323, 87325, 87326, 87327, 87328, 87347, 87357, 87364, 87365, 87375, 87378, 87401, 87402, 87410, 87412, 87413, 87415, 87416, 87417, 87418, 87419, 87420, 87421, 87455, 87461, 87499, 87501, 87502, 87503, 87504, 87505, 87506, 87507, 87508, 87509, 87510, 87511, 87512, 87513, 87514, 87515, 87516, 87517, 87518, 87519, 87520, 87521, 87522, 87523, 87524, 87525, 87527, 87528, 87529, 87530, 87531, 87532, 87533, 87535, 87537, 87538, 87539, 87540, 87543, 87544, 87545, 87548, 87549, 87551, 87552, 87553, 87554, 87556, 87557, 87558, 87560, 87562, 87564, 87565, 87566, 87567, 87569, 87571, 87573, 87574, 87575, 87576, 87577, 87578, 87579, 87580, 87581, 87582, 87583, 87585, 87592, 87594, 87701, 87710, 87711, 87712, 87713, 87714, 87715, 87718, 87722, 87723, 87724, 87728, 87729, 87730, 87731, 87732, 87733, 87734, 87735, 87736, 87740, 87742, 87743, 87745, 87746, 87747, 87749, 87750, 87752, 87753, 87801, 87820, 87821, 87823, 87824, 87825, 87827, 87828, 87829, 87830, 87831, 87832, 87901, 87910, 87930, 87931, 87933, 87935, 87936, 87937, 87939, 87940, 87941, 87942, 87943, 87945, 88001, 88002, 88003, 88004, 88005, 88006, 88007, 88008, 88009, 88011, 88012, 88018, 88020, 88021, 88022, 88023, 88024, 88025, 88026, 88027, 88028, 88029, 88030, 88031, 88032, 88033, 88034, 88036, 88038, 88039, 88040, 88041, 88042, 88043, 88044, 88045, 88046, 88047, 88048, 88049, 88051, 88052, 88053, 88054, 88055, 88056, 88058, 88061, 88062, 88063, 88065, 88072, 88081, 88085, 88100, 88101, 88102, 88103, 88112, 88113, 88114, 88115, 88116, 88118, 88119, 88120, 88121, 88122, 88123, 88124, 88125, 88126, 88130, 88132, 88133, 88134, 88135, 88136, 88201, 88202, 88203, 88210, 88211, 88213, 88220, 88221, 88230, 88231, 88232, 88240, 88241, 88242, 88244, 88250, 88252, 88253, 88254, 88255, 88256, 88260, 88262, 88263, 88264, 88265, 88267, 88268, 88301, 88310, 88311, 88312, 88314, 88315, 88316, 88317, 88318, 88321, 88323, 88324, 88325, 88330, 88332, 88336, 88337, 88338, 88339, 88340, 88341, 88342, 88343, 88344, 88345, 88346, 88347, 88348, 88349, 88350, 88351, 88352, 88353, 88354, 88355, 88401, 88410, 88411, 88414, 88415, 88416, 88417, 88418, 88419, 88421, 88422, 88424, 88426, 88427, 88429, 88430, 88431, 88433, 88434, 88435, 88436, 88437, 88439, 88441, 88510, 88511, 88512, 88513, 88514, 88515, 88516, 88517, 88518, 88519, 88520, 88521, 88523, 88524, 88525, 88526, 88527, 88528, 88529, 88530, 88531, 88532, 88533, 88534, 88535, 88536, 88538, 88539, 88540, 88541, 88542, 88543, 88544, 88545, 88546, 88547, 88548, 88549, 88550, 88553, 88554, 88555, 88556, 88557, 88558, 88559, 88560, 88561, 88562, 88563, 88565, 88566, 88567, 88568, 88569, 88570, 88571, 88572, 88573, 88574, 88575, 88576, 88577, 88578, 88579, 88580, 88581, 88582, 88583, 88584, 88585, 88586, 88587, 88588, 88589, 88590, 88595, 88603, 88901, 88905, 89001, 89003, 89004, 89005, 89006, 89007, 89008, 89009, 89010, 89011, 89012, 89013, 89014, 89015, 89016, 89017, 89018, 89019, 89020, 89021, 89022, 89023, 89024, 89025, 89026, 89027, 89028, 89029, 89030, 89031, 89032, 89033, 89036, 89039, 89040, 89041, 89042, 89043, 89045, 89046, 89047, 89048, 89049, 89052, 89053, 89060, 89061, 89070, 89074, 89081, 89084, 89086, 89101, 89102, 89103, 89104, 89106, 89107, 89108, 89109, 89110, 89111, 89112, 89113, 89114, 89115, 89116, 89117, 89118, 89119, 89120, 89121, 89122, 89123, 89124, 89125, 89126, 89127, 89128, 89129, 89130, 89131, 89132, 89133, 89134, 89135, 89136, 89137, 89138, 89139, 89141, 89142, 89143, 89144, 89145, 89146, 89147, 89148, 89149, 89150, 89151, 89152, 89153, 89154, 89155, 89156, 89158, 89159, 89160, 89163, 89164, 89170, 89173, 89177, 89180, 89185, 89191, 89193, 89195, 89199, 89301, 89310, 89311, 89314, 89315, 89316, 89317, 89318, 89319, 89402, 89403, 89404, 89405, 89406, 89407, 89408, 89409, 89410, 89411, 89412, 89413, 89414, 89415, 89418, 89419, 89420, 89421, 89422, 89423, 89424, 89425, 89426, 89427, 89428, 89429, 89430, 89431, 89432, 89433, 89434, 89435, 89436, 89438, 89439, 89440, 89442, 89444, 89445, 89446, 89447, 89448, 89449, 89450, 89451, 89452, 89460, 89496, 89501, 89502, 89503, 89504, 89505, 89506, 89507, 89509, 89510, 89511, 89512, 89513, 89515, 89520, 89521, 89523, 89533, 89557, 89564, 89570, 89595, 89599, 89701, 89702, 89703, 89704, 89705, 89706, 89710, 89711, 89712, 89713, 89714, 89721, 89779, 89801, 89802, 89803, 89815, 89820, 89821, 89822, 89823, 89824, 89825, 89826, 89828, 89830, 89831, 89832, 89833, 89834, 89835, 89883, 89912, 90001, 90002, 90003, 90004, 90005, 90006, 90007, 90008, 90009, 90010, 90011, 90012, 90013, 90014, 90015, 90016, 90017, 90018, 90019, 90020, 90021, 90022, 90023, 90024, 90025, 90026, 90027, 90028, 90029, 90030, 90031, 90032, 90033, 90034, 90035, 90036, 90037, 90038, 90039, 90040, 90041, 90042, 90043, 90044, 90045, 90046, 90047, 90048, 90049, 90050, 90051, 90052, 90053, 90054, 90055, 90056, 90057, 90058, 90059, 90060, 90061, 90062, 90063, 90064, 90065, 90066, 90067, 90068, 90069, 90070, 90071, 90072, 90073, 90074, 90075, 90076, 90077, 90078, 90079, 90080, 90081, 90082, 90083, 90084, 90086, 90087, 90088, 90089, 90091, 90093, 90094, 90095, 90096, 90097, 90099, 90101, 90102, 90103, 90174, 90185, 90201, 90202, 90204, 90209, 90210, 90211, 90212, 90213, 90220, 90221, 90222, 90223, 90224, 90230, 90231, 90232, 90233, 90239, 90240, 90241, 90242, 90245, 90247, 90248, 90249, 90250, 90251, 90254, 90255, 90260, 90261, 90262, 90263, 90264, 90265, 90266, 90267, 90270, 90272, 90274, 90275, 90276, 90277, 90278, 90280, 90290, 90291, 90292, 90293, 90294, 90295, 90296, 90301, 90302, 90303, 90304, 90305, 90306, 90307, 90308, 90309, 90310, 90311, 90312, 90313, 90397, 90398, 90401, 90402, 90403, 90404, 90405, 90406, 90407, 90408, 90409, 90410, 90411, 90421, 90501, 90502, 90503, 90504, 90505, 90506, 90507, 90508, 90509, 90510, 90601, 90602, 90603, 90604, 90605, 90606, 90607, 90608, 90609, 90610, 90612, 90620, 90621, 90622, 90623, 90624, 90630, 90631, 90632, 90633, 90637, 90638, 90639, 90640, 90650, 90651, 90652, 90659, 90660, 90661, 90662, 90665, 90670, 90671, 90680, 90701, 90702, 90703, 90704, 90706, 90707, 90710, 90711, 90712, 90713, 90714, 90715, 90716, 90717, 90720, 90721, 90723, 90731, 90732, 90733, 90734, 90740, 90742, 90743, 90744, 90745, 90746, 90747, 90748, 90749, 90755, 90774, 90801, 90802, 90803, 90804, 90805, 90806, 90807, 90808, 90809, 90810, 90813, 90814, 90815, 90822, 90831, 90832, 90833, 90834, 90835, 90840, 90842, 90844, 90845, 90846, 90847, 90848, 90853, 90879, 90888, 91001, 91003, 91006, 91007, 91009, 91010, 91011, 91012, 91016, 91017, 91020, 91021, 91023, 91024, 91025, 91030, 91031, 91040, 91041, 91042, 91043, 91046, 91050, 91051, 91066, 91077, 91101, 91102, 91103, 91104, 91105, 91106, 91107, 91108, 91109, 91110, 91114, 91115, 91116, 91117, 91118, 91121, 91123, 91124, 91125, 91126, 91129, 91131, 91175, 91182, 91184, 91185, 91186, 91187, 91188, 91189, 91191, 91201, 91202, 91203, 91204, 91205, 91206, 91207, 91208, 91209, 91210, 91214, 91221, 91222, 91224, 91225, 91226, 91301, 91302, 91303, 91304, 91305, 91306, 91307, 91308, 91309, 91310, 91311, 91312, 91313, 91316, 91319, 91320, 91321, 91322, 91324, 91325, 91326, 91327, 91328, 91329, 91330, 91331, 91333, 91334, 91335, 91337, 91340, 91341, 91342, 91343, 91344, 91345, 91346, 91350, 91351, 91352, 91353, 91354, 91355, 91356, 91357, 91358, 91359, 91360, 91361, 91362, 91363, 91364, 91365, 91367, 91371, 91372, 91376, 91377, 91380, 91381, 91382, 91383, 91384, 91385, 91386, 91387, 91388, 91390, 91392, 91393, 91394, 91395, 91396, 91399, 91401, 91402, 91403, 91404, 91405, 91406, 91407, 91408, 91409, 91410, 91411, 91412, 91413, 91416, 91423, 91426, 91436, 91470, 91482, 91495, 91496, 91497, 91499, 91501, 91502, 91503, 91504, 91505, 91506, 91507, 91508, 91510, 91521, 91522, 91523, 91526, 91601, 91602, 91603, 91604, 91605, 91606, 91607, 91608, 91609, 91610, 91611, 91612, 91614, 91615, 91616, 91617, 91618, 91671, 91701, 91702, 91706, 91708, 91709, 91710, 91711, 91714, 91715, 91716, 91718, 91719, 91720, 91722, 91723, 91724, 91729, 91730, 91731, 91732, 91733, 91734, 91735, 91737, 91739, 91740, 91741, 91743, 91744, 91745, 91746, 91747, 91748, 91749, 91750, 91752, 91754, 91755, 91756, 91758, 91759, 91760, 91761, 91762, 91763, 91764, 91765, 91766, 91767, 91768, 91769, 91770, 91771, 91772, 91773, 91775, 91776, 91778, 91780, 91784, 91785, 91786, 91788, 91789, 91790, 91791, 91792, 91793, 91795, 91797, 91798, 91799, 91801, 91802, 91803, 91804, 91841, 91896, 91899, 91901, 91902, 91903, 91905, 91906, 91908, 91909, 91910, 91911, 91912, 91913, 91914, 91915, 91916, 91917, 91921, 91927, 91931, 91932, 91933, 91934, 91935, 91941, 91942, 91943, 91944, 91945, 91946, 91947, 91948, 91950, 91951, 91962, 91963, 91976, 91977, 91978, 91979, 91980, 91987, 91990, 92002, 92003, 92004, 92007, 92008, 92009, 92013, 92014, 92018, 92019, 92020, 92021, 92022, 92023, 92024, 92025, 92026, 92027, 92028, 92029, 92030, 92031, 92033, 92036, 92037, 92038, 92039, 92040, 92046, 92049, 92051, 92052, 92054, 92055, 92056, 92057, 92058, 92059, 92060, 92061, 92064, 92065, 92066, 92067, 92068, 92069, 92070, 92071, 92072, 92074, 92075, 92078, 92079, 92082, 92083, 92084, 92085, 92086, 92088, 92090, 92091, 92092, 92093, 92096, 92101, 92102, 92103, 92104, 92105, 92106, 92107, 92108, 92109, 92110, 92111, 92112, 92113, 92114, 92115, 92116, 92117, 92118, 92119, 92120, 92121, 92122, 92123, 92124, 92126, 92127, 92128, 92129, 92130, 92131, 92132, 92133, 92134, 92135, 92136, 92137, 92138, 92139, 92140, 92142, 92143, 92145, 92147, 92149, 92150, 92152, 92153, 92154, 92155, 92158, 92159, 92160, 92161, 92162, 92163, 92164, 92165, 92166, 92167, 92168, 92169, 92170, 92171, 92172, 92173, 92174, 92175, 92176, 92177, 92178, 92179, 92182, 92184, 92186, 92187, 92190, 92191, 92192, 92193, 92194, 92195, 92196, 92197, 92198, 92199, 92201, 92202, 92203, 92210, 92211, 92220, 92222, 92223, 92225, 92226, 92227, 92230, 92231, 92232, 92233, 92234, 92235, 92236, 92239, 92240, 92241, 92242, 92243, 92244, 92249, 92250, 92251, 92252, 92253, 92254, 92255, 92256, 92257, 92258, 92259, 92260, 92261, 92262, 92263, 92264, 92266, 92267, 92268, 92270, 92271, 92273, 92274, 92275, 92276, 92277, 92278, 92280, 92281, 92282, 92283, 92284, 92285, 92286, 92292, 92301, 92304, 92305, 92307, 92308, 92309, 92310, 92311, 92312, 92313, 92314, 92315, 92316, 92317, 92318, 92320, 92321, 92322, 92323, 92324, 92325, 92326, 92327, 92328, 92329, 92332, 92333, 92334, 92335, 92336, 92337, 92338, 92339, 92340, 92341, 92342, 92345, 92346, 92347, 92350, 92352, 92354, 92356, 92357, 92358, 92359, 92363, 92364, 92365, 92366, 92368, 92369, 92371, 92372, 92373, 92374, 92375, 92376, 92377, 92378, 92382, 92384, 92385, 92386, 92389, 92391, 92392, 92393, 92394, 92396, 92397, 92398, 92399, 92401, 92402, 92403, 92404, 92405, 92406, 92407, 92408, 92410, 92411, 92412, 92413, 92414, 92415, 92416, 92418, 92420, 92423, 92424, 92427, 92501, 92502, 92503, 92504, 92505, 92506, 92507, 92508, 92509, 92513, 92514, 92515, 92516, 92517, 92518, 92519, 92521, 92522, 92530, 92531, 92532, 92536, 92539, 92543, 92544, 92545, 92546, 92548, 92549, 92551, 92552, 92553, 92554, 92555, 92556, 92557, 92561, 92562, 92563, 92564, 92567, 92570, 92571, 92572, 92581, 92582, 92583, 92584, 92585, 92586, 92587, 92589, 92590, 92591, 92592, 92593, 92595, 92596, 92599, 92602, 92603, 92604, 92605, 92606, 92607, 92610, 92612, 92614, 92615, 92616, 92618, 92619, 92620, 92623, 92624, 92625, 92626, 92627, 92628, 92629, 92630, 92635, 92646, 92647, 92648, 92649, 92650, 92651, 92652, 92653, 92654, 92655, 92656, 92657, 92658, 92659, 92660, 92661, 92662, 92663, 92670, 92672, 92673, 92674, 92675, 92676, 92677, 92678, 92679, 92680, 92683, 92684, 92685, 92688, 92690, 92691, 92692, 92693, 92694, 92697, 92698, 92701, 92702, 92703, 92704, 92705, 92706, 92707, 92708, 92709, 92710, 92711, 92712, 92728, 92735, 92780, 92781, 92782, 92799, 92801, 92802, 92803, 92804, 92805, 92806, 92807, 92808, 92811, 92812, 92814, 92815, 92816, 92817, 92821, 92822, 92823, 92825, 92831, 92832, 92833, 92834, 92835, 92836, 92837, 92838, 92840, 92841, 92842, 92843, 92844, 92845, 92846, 92850, 92856, 92857, 92859, 92860, 92861, 92862, 92863, 92864, 92865, 92866, 92867, 92868, 92869, 92870, 92871, 92877, 92878, 92879, 92880, 92881, 92882, 92883, 92885, 92886, 92887, 92899, 93001, 93002, 93003, 93004, 93005, 93006, 93007, 93009, 93010, 93011, 93012, 93013, 93014, 93015, 93016, 93020, 93021, 93022, 93023, 93024, 93030, 93031, 93032, 93033, 93034, 93035, 93036, 93040, 93041, 93042, 93043, 93044, 93060, 93061, 93062, 93063, 93064, 93065, 93066, 93067, 93093, 93094, 93099, 93101, 93102, 93103, 93105, 93106, 93107, 93108, 93109, 93110, 93111, 93116, 93117, 93118, 93120, 93121, 93130, 93140, 93150, 93160, 93190, 93199, 93201, 93202, 93203, 93204, 93205, 93206, 93207, 93208, 93210, 93212, 93215, 93216, 93217, 93218, 93219, 93220, 93221, 93222, 93223, 93224, 93225, 93226, 93227, 93230, 93231, 93232, 93234, 93235, 93237, 93238, 93239, 93240, 93241, 93242, 93243, 93244, 93245, 93246, 93247, 93249, 93250, 93251, 93252, 93254, 93255, 93256, 93257, 93258, 93260, 93261, 93262, 93263, 93265, 93266, 93267, 93268, 93270, 93271, 93272, 93274, 93275, 93276, 93277, 93278, 93279, 93280, 93282, 93283, 93285, 93286, 93287, 93291, 93292, 93301, 93302, 93303, 93304, 93305, 93306, 93307, 93308, 93309, 93311, 93312, 93313, 93325, 93380, 93381, 93382, 93383, 93384, 93385, 93386, 93387, 93388, 93389, 93390, 93401, 93402, 93403, 93405, 93406, 93407, 93408, 93409, 93410, 93412, 93420, 93421, 93422, 93423, 93424, 93426, 93427, 93428, 93429, 93430, 93432, 93433, 93434, 93435, 93436, 93437, 93438, 93440, 93441, 93442, 93443, 93444, 93445, 93446, 93447, 93448, 93449, 93450, 93451, 93452, 93453, 93454, 93455, 93456, 93457, 93458, 93460, 93461, 93463, 93464, 93465, 93483, 93492, 93501, 93502, 93504, 93505, 93510, 93512, 93513, 93514, 93515, 93516, 93517, 93518, 93519, 93522, 93523, 93524, 93526, 93527, 93528, 93529, 93530, 93531, 93532, 93534, 93535, 93536, 93539, 93540, 93541, 93542, 93543, 93544, 93545, 93546, 93549, 93550, 93551, 93552, 93553, 93554, 93555, 93556, 93558, 93560, 93561, 93562, 93563, 93564, 93581, 93584, 93586, 93590, 93591, 93592, 93596, 93599, 93601, 93602, 93603, 93604, 93605, 93606, 93607, 93608, 93609, 93610, 93611, 93612, 93613, 93614, 93615, 93616, 93618, 93620, 93621, 93622, 93623, 93624, 93625, 93626, 93627, 93628, 93630, 93631, 93633, 93634, 93635, 93637, 93638, 93639, 93640, 93641, 93642, 93643, 93644, 93645, 93646, 93647, 93648, 93649, 93650, 93651, 93652, 93653, 93654, 93656, 93657, 93660, 93661, 93662, 93664, 93665, 93666, 93667, 93668, 93669, 93670, 93673, 93675, 93688, 93701, 93702, 93703, 93704, 93705, 93706, 93707, 93708, 93709, 93710, 93711, 93712, 93714, 93715, 93716, 93717, 93718, 93720, 93721, 93722, 93724, 93725, 93726, 93727, 93728, 93729, 93740, 93741, 93744, 93745, 93747, 93750, 93755, 93759, 93760, 93761, 93762, 93764, 93765, 93771, 93772, 93773, 93774, 93775, 93776, 93777, 93778, 93779, 93780, 93782, 93784, 93786, 93790, 93791, 93792, 93793, 93794, 93825, 93844, 93888, 93901, 93902, 93905, 93906, 93907, 93908, 93912, 93915, 93920, 93921, 93922, 93923, 93924, 93925, 93926, 93927, 93928, 93930, 93932, 93933, 93940, 93942, 93943, 93944, 93950, 93953, 93954, 93955, 93960, 93962, 94002, 94003, 94005, 94010, 94011, 94012, 94014, 94015, 94016, 94017, 94018, 94019, 94020, 94021, 94022, 94023, 94024, 94025, 94026, 94027, 94028, 94029, 94030, 94031, 94035, 94037, 94038, 94039, 94040, 94041, 94042, 94043, 94044, 94045, 94059, 94060, 94061, 94062, 94063, 94064, 94065, 94066, 94067, 94070, 94071, 94074, 94080, 94083, 94085, 94086, 94087, 94088, 94089, 94090, 94096, 94098, 94099, 94101, 94102, 94103, 94104, 94105, 94106, 94107, 94108, 94109, 94110, 94111, 94112, 94114, 94115, 94116, 94117, 94118, 94119, 94120, 94121, 94122, 94123, 94124, 94125, 94126, 94127, 94128, 94129, 94130, 94131, 94132, 94133, 94134, 94135, 94136, 94137, 94138, 94139, 94140, 94141, 94142, 94143, 94144, 94145, 94146, 94147, 94150, 94151, 94152, 94153, 94154, 94155, 94156, 94157, 94159, 94160, 94161, 94162, 94163, 94164, 94165, 94166, 94167, 94168, 94169, 94170, 94171, 94172, 94175, 94177, 94188, 94203, 94204, 94205, 94206, 94207, 94208, 94209, 94211, 94229, 94230, 94232, 94234, 94235, 94236, 94237, 94239, 94240, 94243, 94244, 94245, 94246, 94247, 94248, 94249, 94250, 94252, 94253, 94254, 94256, 94257, 94258, 94259, 94261, 94262, 94263, 94267, 94268, 94269, 94271, 94273, 94274, 94277, 94278, 94279, 94280, 94282, 94283, 94284, 94285, 94286, 94287, 94288, 94289, 94290, 94291, 94293, 94294, 94295, 94296, 94297, 94298, 94299, 94301, 94302, 94303, 94304, 94305, 94306, 94307, 94308, 94309, 94310, 94401, 94402, 94403, 94404, 94405, 94406, 94407, 94408, 94409, 94420, 94497, 94501, 94502, 94503, 94506, 94507, 94508, 94509, 94510, 94511, 94512, 94513, 94514, 94515, 94516, 94517, 94518, 94519, 94520, 94521, 94522, 94523, 94524, 94525, 94526, 94527, 94528, 94529, 94530, 94531, 94533, 94534, 94535, 94536, 94537, 94538, 94539, 94540, 94541, 94542, 94543, 94544, 94545, 94546, 94547, 94548, 94549, 94550, 94551, 94552, 94553, 94555, 94556, 94557, 94558, 94559, 94560, 94561, 94562, 94563, 94564, 94565, 94566, 94567, 94568, 94569, 94570, 94571, 94572, 94573, 94574, 94575, 94576, 94577, 94578, 94579, 94580, 94581, 94583, 94585, 94586, 94587, 94588, 94589, 94590, 94591, 94592, 94595, 94596, 94597, 94598, 94599, 94601, 94602, 94603, 94604, 94605, 94606, 94607, 94608, 94609, 94610, 94611, 94612, 94613, 94614, 94615, 94617, 94618, 94619, 94620, 94621, 94623, 94624, 94625, 94626, 94627, 94643, 94649, 94659, 94660, 94661, 94662, 94666, 94701, 94702, 94703, 94704, 94705, 94706, 94707, 94708, 94709, 94710, 94712, 94720, 94801, 94802, 94803, 94804, 94805, 94806, 94807, 94808, 94820, 94850, 94901, 94903, 94904, 94912, 94913, 94914, 94915, 94920, 94922, 94923, 94924, 94925, 94926, 94927, 94928, 94929, 94930, 94931, 94933, 94937, 94938, 94939, 94940, 94941, 94942, 94945, 94946, 94947, 94948, 94949, 94950, 94951, 94952, 94953, 94954, 94955, 94956, 94957, 94960, 94963, 94964, 94965, 94966, 94970, 94971, 94972, 94973, 94974, 94975, 94976, 94977, 94978, 94979, 94991, 94998, 94999, 95001, 95002, 95003, 95004, 95005, 95006, 95007, 95008, 95009, 95010, 95011, 95012, 95013, 95014, 95015, 95017, 95018, 95019, 95020, 95021, 95022, 95023, 95024, 95026, 95030, 95031, 95032, 95033, 95035, 95036, 95037, 95038, 95039, 95041, 95042, 95043, 95044, 95045, 95046, 95050, 95051, 95052, 95053, 95054, 95055, 95056, 95060, 95061, 95062, 95063, 95064, 95065, 95066, 95067, 95070, 95071, 95073, 95075, 95076, 95077, 95101, 95102, 95103, 95106, 95108, 95109, 95110, 95111, 95112, 95113, 95114, 95115, 95116, 95117, 95118, 95119, 95120, 95121, 95122, 95123, 95124, 95125, 95126, 95127, 95128, 95129, 95130, 95131, 95132, 95133, 95134, 95135, 95136, 95137, 95138, 95139, 95140, 95141, 95142, 95148, 95150, 95151, 95152, 95153, 95154, 95155, 95156, 95157, 95158, 95159, 95160, 95161, 95164, 95170, 95171, 95172, 95173, 95190, 95191, 95192, 95193, 95194, 95196, 95201, 95202, 95203, 95204, 95205, 95206, 95207, 95208, 95209, 95210, 95211, 95212, 95213, 95215, 95219, 95220, 95221, 95222, 95223, 95224, 95225, 95226, 95227, 95228, 95229, 95230, 95231, 95232, 95233, 95234, 95236, 95237, 95240, 95241, 95242, 95245, 95246, 95247, 95248, 95249, 95250, 95251, 95252, 95253, 95254, 95255, 95257, 95258, 95267, 95269, 95290, 95296, 95297, 95298, 95301, 95303, 95304, 95305, 95306, 95307, 95309, 95310, 95311, 95312, 95313, 95314, 95315, 95316, 95317, 95318, 95319, 95320, 95321, 95322, 95323, 95324, 95325, 95326, 95327, 95328, 95329, 95330, 95333, 95334, 95335, 95336, 95337, 95338, 95340, 95341, 95342, 95343, 95344, 95345, 95346, 95347, 95348, 95350, 95351, 95352, 95353, 95354, 95355, 95356, 95357, 95358, 95360, 95361, 95363, 95364, 95365, 95366, 95367, 95368, 95369, 95370, 95372, 95373, 95374, 95375, 95376, 95377, 95378, 95379, 95380, 95381, 95382, 95383, 95385, 95386, 95387, 95388, 95389, 95390, 95397, 95401, 95402, 95403, 95404, 95405, 95406, 95407, 95408, 95409, 95410, 95412, 95415, 95416, 95417, 95418, 95419, 95420, 95421, 95422, 95423, 95424, 95425, 95426, 95427, 95428, 95429, 95430, 95431, 95432, 95433, 95435, 95436, 95437, 95439, 95441, 95442, 95443, 95444, 95445, 95446, 95448, 95449, 95450, 95451, 95452, 95453, 95454, 95456, 95457, 95458, 95459, 95460, 95461, 95462, 95463, 95464, 95465, 95466, 95468, 95469, 95470, 95471, 95472, 95473, 95476, 95480, 95481, 95482, 95485, 95486, 95487, 95488, 95490, 95492, 95493, 95494, 95497, 95501, 95502, 95503, 95511, 95514, 95517, 95518, 95519, 95521, 95522, 95524, 95525, 95526, 95527, 95528, 95531, 95532, 95534, 95536, 95537, 95538, 95540, 95542, 95543, 95545, 95546, 95547, 95548, 95549, 95550, 95551, 95552, 95553, 95554, 95555, 95556, 95558, 95559, 95560, 95562, 95563, 95564, 95565, 95567, 95568, 95569, 95570, 95571, 95573, 95585, 95587, 95589, 95592, 95595, 95601, 95602, 95603, 95604, 95605, 95606, 95607, 95608, 95609, 95610, 95611, 95612, 95613, 95614, 95615, 95616, 95617, 95618, 95619, 95620, 95621, 95623, 95624, 95625, 95626, 95627, 95628, 95629, 95630, 95631, 95632, 95633, 95634, 95635, 95636, 95637, 95638, 95639, 95640, 95641, 95642, 95644, 95645, 95646, 95648, 95650, 95651, 95652, 95653, 95654, 95655, 95656, 95658, 95659, 95660, 95661, 95662, 95663, 95664, 95665, 95666, 95667, 95668, 95669, 95670, 95671, 95672, 95673, 95674, 95675, 95676, 95677, 95678, 95679, 95680, 95681, 95682, 95683, 95684, 95685, 95686, 95687, 95688, 95689, 95690, 95691, 95692, 95693, 95694, 95695, 95696, 95697, 95698, 95699, 95701, 95703, 95709, 95712, 95713, 95714, 95715, 95717, 95720, 95721, 95722, 95724, 95726, 95728, 95735, 95736, 95741, 95742, 95743, 95746, 95747, 95749, 95758, 95759, 95762, 95763, 95765, 95771, 95776, 95798, 95799, 95812, 95813, 95814, 95815, 95816, 95817, 95818, 95819, 95820, 95821, 95822, 95823, 95824, 95825, 95826, 95827, 95828, 95829, 95830, 95831, 95832, 95833, 95834, 95835, 95836, 95837, 95838, 95840, 95841, 95842, 95843, 95851, 95852, 95853, 95857, 95860, 95864, 95865, 95866, 95867, 95873, 95887, 95894, 95899, 95901, 95903, 95910, 95912, 95913, 95914, 95915, 95916, 95917, 95918, 95919, 95920, 95922, 95923, 95924, 95925, 95926, 95927, 95928, 95929, 95930, 95931, 95932, 95934, 95935, 95936, 95937, 95938, 95939, 95940, 95941, 95942, 95943, 95944, 95945, 95946, 95947, 95948, 95949, 95950, 95951, 95953, 95954, 95955, 95956, 95957, 95958, 95959, 95960, 95961, 95962, 95963, 95965, 95966, 95967, 95968, 95969, 95970, 95971, 95972, 95973, 95974, 95975, 95976, 95977, 95978, 95979, 95980, 95981, 95982, 95983, 95984, 95986, 95987, 95988, 95991, 95992, 95993, 96001, 96002, 96003, 96006, 96007, 96008, 96009, 96010, 96011, 96013, 96014, 96015, 96016, 96017, 96019, 96020, 96021, 96022, 96023, 96024, 96025, 96027, 96028, 96029, 96031, 96032, 96033, 96034, 96035, 96037, 96038, 96039, 96040, 96041, 96044, 96046, 96047, 96048, 96049, 96050, 96051, 96052, 96053, 96054, 96055, 96056, 96057, 96058, 96059, 96061, 96062, 96063, 96064, 96065, 96067, 96068, 96069, 96070, 96071, 96073, 96074, 96075, 96076, 96078, 96079, 96080, 96084, 96085, 96086, 96087, 96088, 96089, 96090, 96091, 96092, 96093, 96094, 96095, 96096, 96097, 96099, 96101, 96103, 96104, 96105, 96106, 96107, 96108, 96109, 96110, 96111, 96112, 96113, 96114, 96115, 96116, 96117, 96118, 96119, 96120, 96121, 96122, 96123, 96124, 96125, 96126, 96127, 96128, 96129, 96130, 96132, 96133, 96134, 96135, 96136, 96137, 96140, 96141, 96142, 96143, 96145, 96146, 96148, 96150, 96151, 96152, 96154, 96155, 96156, 96157, 96158, 96160, 96161, 96162, 96163, 96222, 96371, 96373, 96385, 96477, 96701, 96703, 96704, 96705, 96706, 96707, 96708, 96709, 96710, 96712, 96713, 96714, 96715, 96716, 96717, 96718, 96719, 96720, 96721, 96722, 96725, 96726, 96727, 96728, 96729, 96730, 96731, 96732, 96733, 96734, 96737, 96738, 96739, 96740, 96741, 96742, 96743, 96744, 96745, 96746, 96747, 96748, 96749, 96750, 96751, 96752, 96753, 96754, 96755, 96756, 96757, 96759, 96760, 96761, 96762, 96763, 96764, 96765, 96766, 96767, 96768, 96769, 96770, 96771, 96772, 96773, 96774, 96775, 96776, 96777, 96778, 96779, 96780, 96781, 96782, 96783, 96784, 96785, 96786, 96788, 96789, 96790, 96791, 96792, 96793, 96795, 96796, 96797, 96799, 96801, 96802, 96803, 96804, 96805, 96806, 96807, 96808, 96809, 96810, 96811, 96812, 96813, 96814, 96815, 96816, 96817, 96818, 96819, 96820, 96821, 96822, 96823, 96824, 96825, 96826, 96827, 96828, 96830, 96835, 96836, 96837, 96838, 96839, 96840, 96841, 96842, 96843, 96844, 96845, 96846, 96847, 96848, 96849, 96850, 96853, 96854, 96857, 96858, 96859, 96860, 96861, 96862, 96863, 96885, 96898, 97001, 97002, 97004, 97005, 97006, 97007, 97008, 97009, 97010, 97011, 97013, 97014, 97015, 97016, 97017, 97018, 97019, 97020, 97021, 97022, 97023, 97024, 97026, 97027, 97028, 97029, 97030, 97031, 97032, 97033, 97034, 97035, 97036, 97037, 97038, 97039, 97040, 97041, 97042, 97044, 97045, 97048, 97049, 97050, 97051, 97053, 97054, 97055, 97056, 97057, 97058, 97060, 97062, 97063, 97064, 97065, 97067, 97068, 97070, 97071, 97075, 97076, 97077, 97078, 97080, 97101, 97102, 97103, 97104, 97106, 97107, 97108, 97109, 97110, 97111, 97112, 97113, 97114, 97115, 97116, 97117, 97118, 97119, 97121, 97122, 97123, 97124, 97125, 97127, 97128, 97130, 97131, 97132, 97133, 97134, 97135, 97136, 97137, 97138, 97140, 97141, 97143, 97144, 97145, 97146, 97147, 97148, 97149, 97180, 97201, 97202, 97203, 97204, 97205, 97206, 97207, 97208, 97209, 97210, 97211, 97212, 97213, 97214, 97215, 97216, 97217, 97218, 97219, 97220, 97221, 97222, 97223, 97224, 97225, 97226, 97227, 97228, 97229, 97230, 97231, 97232, 97233, 97236, 97238, 97239, 97240, 97242, 97251, 97253, 97254, 97255, 97256, 97257, 97258, 97259, 97264, 97266, 97267, 97268, 97269, 97271, 97272, 97280, 97281, 97282, 97283, 97286, 97290, 97291, 97292, 97293, 97294, 97296, 97298, 97299, 97301, 97302, 97303, 97304, 97305, 97306, 97307, 97308, 97309, 97310, 97311, 97312, 97313, 97314, 97321, 97322, 97324, 97325, 97326, 97327, 97329, 97330, 97331, 97333, 97335, 97336, 97338, 97339, 97341, 97342, 97343, 97344, 97345, 97346, 97347, 97348, 97350, 97351, 97352, 97355, 97357, 97358, 97359, 97360, 97361, 97362, 97364, 97365, 97366, 97367, 97368, 97369, 97370, 97371, 97372, 97373, 97374, 97375, 97376, 97377, 97378, 97380, 97381, 97383, 97384, 97385, 97386, 97388, 97389, 97390, 97391, 97392, 97394, 97396, 97401, 97402, 97403, 97404, 97405, 97406, 97407, 97408, 97409, 97410, 97411, 97412, 97413, 97414, 97415, 97416, 97417, 97419, 97420, 97423, 97424, 97425, 97426, 97427, 97428, 97429, 97430, 97431, 97432, 97434, 97435, 97436, 97437, 97438, 97439, 97440, 97441, 97442, 97443, 97444, 97446, 97447, 97448, 97449, 97450, 97451, 97452, 97453, 97454, 97455, 97456, 97457, 97458, 97459, 97460, 97461, 97462, 97463, 97464, 97465, 97466, 97467, 97468, 97469, 97470, 97472, 97473, 97476, 97477, 97478, 97479, 97480, 97481, 97482, 97484, 97486, 97487, 97488, 97489, 97490, 97491, 97492, 97493, 97494, 97495, 97496, 97497, 97498, 97499, 97501, 97502, 97503, 97504, 97520, 97522, 97523, 97524, 97525, 97526, 97527, 97528, 97530, 97531, 97532, 97533, 97534, 97535, 97536, 97537, 97538, 97539, 97540, 97541, 97543, 97544, 97567, 97587, 97601, 97602, 97603, 97604, 97620, 97621, 97622, 97623, 97624, 97625, 97626, 97627, 97630, 97631, 97632, 97633, 97634, 97635, 97636, 97637, 97638, 97639, 97640, 97641, 97701, 97702, 97707, 97708, 97709, 97710, 97711, 97712, 97720, 97721, 97722, 97730, 97731, 97732, 97733, 97734, 97735, 97736, 97737, 97738, 97739, 97740, 97741, 97750, 97751, 97752, 97753, 97754, 97756, 97758, 97759, 97760, 97761, 97795, 97801, 97810, 97812, 97813, 97814, 97817, 97818, 97819, 97820, 97821, 97823, 97824, 97825, 97826, 97827, 97828, 97830, 97831, 97833, 97834, 97835, 97836, 97837, 97838, 97839, 97840, 97841, 97842, 97843, 97844, 97845, 97846, 97848, 97850, 97856, 97857, 97859, 97861, 97862, 97864, 97865, 97867, 97868, 97869, 97870, 97872, 97873, 97874, 97875, 97876, 97877, 97880, 97882, 97883, 97884, 97885, 97886, 97901, 97902, 97903, 97904, 97905, 97906, 97907, 97908, 97909, 97910, 97911, 97913, 97914, 97917, 97918, 97920, 98001, 98002, 98003, 98004, 98005, 98006, 98007, 98008, 98009, 98010, 98011, 98012, 98013, 98014, 98015, 98019, 98020, 98021, 98022, 98023, 98024, 98025, 98026, 98027, 98028, 98029, 98030, 98031, 98032, 98033, 98034, 98035, 98036, 98037, 98038, 98039, 98040, 98041, 98042, 98043, 98045, 98046, 98047, 98050, 98051, 98052, 98053, 98054, 98055, 98056, 98057, 98058, 98059, 98060, 98061, 98062, 98063, 98064, 98065, 98067, 98068, 98070, 98071, 98072, 98073, 98074, 98075, 98082, 98083, 98092, 98093, 98101, 98102, 98103, 98104, 98105, 98106, 98107, 98108, 98109, 98110, 98111, 98112, 98113, 98114, 98115, 98116, 98117, 98118, 98119, 98121, 98122, 98124, 98125, 98126, 98129, 98130, 98131, 98132, 98133, 98134, 98136, 98138, 98140, 98144, 98145, 98146, 98148, 98150, 98151, 98154, 98155, 98158, 98160, 98161, 98164, 98166, 98168, 98171, 98174, 98177, 98178, 98181, 98184, 98185, 98188, 98190, 98191, 98195, 98198, 98199, 98201, 98203, 98204, 98205, 98206, 98207, 98208, 98220, 98221, 98222, 98223, 98224, 98225, 98226, 98227, 98228, 98229, 98230, 98231, 98232, 98233, 98235, 98236, 98237, 98238, 98239, 98240, 98241, 98243, 98244, 98245, 98246, 98247, 98248, 98249, 98250, 98251, 98252, 98253, 98255, 98256, 98257, 98258, 98259, 98260, 98261, 98262, 98263, 98264, 98266, 98267, 98270, 98271, 98272, 98273, 98274, 98275, 98276, 98277, 98278, 98279, 98280, 98281, 98282, 98283, 98284, 98286, 98287, 98288, 98290, 98291, 98292, 98293, 98294, 98295, 98296, 98297, 98303, 98304, 98305, 98310, 98311, 98312, 98314, 98315, 98319, 98320, 98321, 98322, 98323, 98324, 98325, 98326, 98327, 98328, 98329, 98330, 98331, 98332, 98333, 98335, 98336, 98337, 98338, 98339, 98340, 98342, 98343, 98344, 98345, 98346, 98348, 98349, 98350, 98351, 98352, 98353, 98354, 98355, 98356, 98357, 98358, 98359, 98360, 98361, 98362, 98363, 98364, 98365, 98366, 98367, 98368, 98370, 98371, 98372, 98373, 98374, 98375, 98376, 98377, 98378, 98380, 98381, 98382, 98383, 98384, 98385, 98386, 98387, 98388, 98389, 98390, 98392, 98393, 98394, 98395, 98396, 98397, 98398, 98401, 98402, 98403, 98404, 98405, 98406, 98407, 98408, 98409, 98411, 98412, 98413, 98415, 98416, 98418, 98421, 98422, 98424, 98430, 98431, 98433, 98434, 98438, 98439, 98442, 98443, 98444, 98445, 98446, 98447, 98448, 98450, 98455, 98460, 98464, 98465, 98466, 98467, 98468, 98471, 98477, 98481, 98485, 98492, 98493, 98494, 98497, 98498, 98499, 98500, 98501, 98502, 98503, 98504, 98505, 98506, 98507, 98508, 98509, 98512, 98513, 98516, 98520, 98522, 98524, 98526, 98527, 98528, 98530, 98531, 98532, 98533, 98535, 98536, 98537, 98538, 98539, 98540, 98541, 98542, 98544, 98546, 98547, 98548, 98550, 98552, 98554, 98555, 98556, 98557, 98558, 98559, 98560, 98561, 98562, 98563, 98564, 98565, 98566, 98568, 98569, 98570, 98571, 98572, 98575, 98576, 98577, 98579, 98580, 98581, 98582, 98583, 98584, 98585, 98586, 98587, 98588, 98589, 98590, 98591, 98592, 98593, 98595, 98596, 98597, 98599, 98601, 98602, 98603, 98604, 98605, 98606, 98607, 98609, 98610, 98611, 98612, 98613, 98614, 98616, 98617, 98619, 98620, 98621, 98622, 98623, 98624, 98625, 98626, 98628, 98629, 98631, 98632, 98635, 98637, 98638, 98639, 98640, 98641, 98642, 98643, 98644, 98645, 98647, 98648, 98649, 98650, 98651, 98653, 98655, 98660, 98661, 98662, 98663, 98664, 98665, 98666, 98667, 98668, 98670, 98671, 98672, 98673, 98674, 98675, 98682, 98683, 98684, 98685, 98686, 98687, 98731, 98801, 98802, 98807, 98811, 98812, 98813, 98814, 98815, 98816, 98817, 98819, 98821, 98822, 98823, 98824, 98826, 98827, 98828, 98829, 98830, 98831, 98832, 98833, 98834, 98836, 98837, 98840, 98841, 98843, 98844, 98845, 98846, 98847, 98848, 98849, 98850, 98851, 98852, 98853, 98855, 98856, 98857, 98858, 98859, 98860, 98862, 98901, 98902, 98903, 98904, 98907, 98908, 98909, 98920, 98921, 98922, 98923, 98925, 98926, 98929, 98930, 98932, 98933, 98934, 98935, 98936, 98937, 98938, 98939, 98940, 98941, 98942, 98943, 98944, 98946, 98947, 98948, 98950, 98951, 98952, 98953, 98991, 99001, 99003, 99004, 99005, 99006, 99008, 99009, 99011, 99012, 99013, 99014, 99015, 99016, 99017, 99018, 99019, 99020, 99021, 99022, 99023, 99025, 99026, 99027, 99029, 99030, 99031, 99032, 99033, 99034, 99036, 99037, 99039, 99040, 99066, 99101, 99102, 99103, 99104, 99105, 99107, 99109, 99110, 99111, 99113, 99114, 99115, 99116, 99117, 99118, 99119, 99121, 99122, 99123, 99124, 99125, 99126, 99127, 99128, 99129, 99130, 99131, 99133, 99134, 99135, 99136, 99137, 99138, 99139, 99140, 99141, 99143, 99144, 99146, 99147, 99148, 99149, 99150, 99151, 99152, 99153, 99154, 99155, 99156, 99157, 99158, 99159, 99160, 99161, 99163, 99164, 99165, 99166, 99167, 99169, 99170, 99171, 99173, 99174, 99176, 99179, 99180, 99181, 99185, 99201, 99202, 99203, 99204, 99205, 99206, 99207, 99208, 99209, 99210, 99211, 99212, 99213, 99214, 99215, 99216, 99217, 99218, 99219, 99220, 99223, 99224, 99228, 99251, 99252, 99256, 99258, 99260, 99299, 99301, 99302, 99309, 99319, 99320, 99321, 99322, 99323, 99324, 99326, 99327, 99328, 99329, 99330, 99332, 99333, 99335, 99336, 99337, 99338, 99341, 99343, 99344, 99345, 99346, 99347, 99348, 99349, 99350, 99352, 99353, 99356, 99357, 99359, 99360, 99361, 99362, 99363, 99371, 99401, 99402, 99403, 99501, 99502, 99503, 99504, 99505, 99506, 99507, 99508, 99509, 99510, 99511, 99512, 99513, 99514, 99515, 99516, 99517, 99518, 99519, 99520, 99521, 99522, 99523, 99524, 99536, 99540, 99546, 99547, 99548, 99549, 99550, 99551, 99552, 99553, 99554, 99555, 99556, 99557, 99558, 99559, 99561, 99563, 99564, 99565, 99566, 99567, 99568, 99569, 99571, 99572, 99573, 99574, 99575, 99576, 99577, 99578, 99579, 99580, 99581, 99583, 99584, 99585, 99586, 99587, 99588, 99589, 99590, 99591, 99599, 99602, 99603, 99604, 99605, 99606, 99607, 99608, 99609, 99610, 99611, 99612, 99613, 99614, 99615, 99619, 99620, 99621, 99622, 99624, 99625, 99626, 99627, 99628, 99630, 99631, 99632, 99633, 99634, 99635, 99636, 99637, 99638, 99639, 99640, 99641, 99643, 99644, 99645, 99646, 99647, 99648, 99649, 99650, 99651, 99652, 99653, 99654, 99655, 99656, 99657, 99658, 99659, 99660, 99661, 99662, 99663, 99664, 99665, 99666, 99667, 99668, 99669, 99670, 99671, 99672, 99674, 99675, 99676, 99677, 99678, 99679, 99680, 99681, 99682, 99683, 99684, 99685, 99686, 99687, 99688, 99689, 99690, 99691, 99692, 99693, 99694, 99695, 99697, 99699, 99701, 99702, 99703, 99704, 99705, 99706, 99707, 99708, 99709, 99710, 99711, 99712, 99714, 99716, 99720, 99721, 99722, 99723, 99724, 99725, 99726, 99727, 99729, 99730, 99732, 99733, 99734, 99736, 99737, 99738, 99739, 99740, 99741, 99742, 99743, 99744, 99745, 99746, 99747, 99748, 99749, 99750, 99751, 99752, 99753, 99754, 99755, 99756, 99757, 99758, 99759, 99760, 99761, 99762, 99763, 99764, 99765, 99766, 99767, 99768, 99769, 99770, 99771, 99772, 99773, 99774, 99775, 99776, 99777, 99778, 99779, 99780, 99781, 99782, 99783, 99784, 99785, 99786, 99788, 99789, 99790, 99791, 99801, 99802, 99803, 99811, 99820, 99821, 99824, 99825, 99826, 99827, 99829, 99830, 99832, 99833, 99835, 99836, 99840, 99841, 99850, 99901, 99903, 99918, 99919, 99921, 99922, 99923, 99925, 99926, 99927, 99928, 99929, 99950],
                timezone: [-5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -6, -6, -6, -5, -6, -6, -6, -6, -5, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -5, -5, -6, -6, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -6, -5, -5, -5, -5, -6, -5, -5, -6, -6, -5, -6, -5, -5, -5, -6, -6, -5, -6, -6, -6, -6, -5, -6, -5, -6, -6, -6, -6, -5, -5, -6, -5, -5, -6, -6, -6, -6, -6, -5, -5, -5, -5, -6, -6, -6, -5, -5, -5, -6, -5, -6, -6, -6, -5, -6, -5, -6, -5, -6, -6, -5, -5, -6, -6, -6, -5, -6, -5, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -6, -6, -5, -5, -6, -5, -6, -5, -6, -6, -6, -6, -5, -6, -6, -5, -5, -5, -5, -5, -5, -6, -5, -6, -6, -5, -6, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -6, -5, -6, -6, -5, -6, -5, -5, -6, -6, -6, -5, -6, -6, -6, -6, -5, -5, -6, -5, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -5, -6, -6, -6, -5, -6, -5, -6, -5, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -5, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -6, -5, -5, -6, -6, -5, -5, -5, -5, -5, -5, -6, -5, -6, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -6, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -5, -5, -6, -5, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -6, -5, -5, -6, -5, -6, -6, -5, -6, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -6, -5, -6, -5, -5, -5, -5, -5, -5, -5, -6, -6, -6, -5, -6, -5, -5, -5, -6, -5, -5, -6, -5, -5, -5, -5, -5, -6, -5, -5, -6, -6, -6, -6, -5, -5, -5, -6, -5, -5, -5, -6, -6, -5, -6, -6, -5, -5, -6, -5, -6, -6, -5, -5, -5, -6, -5, -5, -6, -5, -5, -5, -5, -6, -5, -5, -5, -5, -6, -5, -5, -5, -5, -6, -6, -5, -5, -5, -5, -6, -5, -5, -5, -5, -5, -5, -6, -5, -5, -5, -5, -6, -5, -5, -6, -6, -5, -5, -5, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -7, -6, -6, -6, -6, -6, -6, -7, -6, -6, -6, -7, -6, -6, -6, -6, -7, -6, -7, -6, -7, -7, -7, -6, -6, -6, -6, -6, -6, -6, -7, -6, -7, -6, -6, -6, -6, -6, -7, -6, -7, -6, -6, -6, -6, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -6, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -6, -7, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -7, -6, -6, -6, -7, -6, -6, -6, -7, -6, -6, -7, -6, -6, -6, -6, -6, -6, -6, -6, -7, -6, -7, -6, -6, -6, -7, -6, -7, -6, -6, -6, -6, -6, -6, -7, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -6, -7, -7, -7, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -7, -6, -7, -6, -6, -6, -6, -6, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -7, -7, -7, -6, -6, -6, -6, -6, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -7, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -7, -6, -7, -6, -6, -6, -7, -6, -6, -7, -6, -6, -7, -6, -6, -7, -6, -6, -6, -7, -6, -6, -6, -7, -6, -6, -6, -6, -7, -7, -6, -7, -7, -7, -7, -6, -7, -6, -7, -7, -6, -6, -7, -7, -6, -6, -7, -7, -7, -7, -7, -7, -7, -6, -7, -7, -7, -7, -7, -6, -7, -6, -7, -6, -6, -6, -6, -7, -6, -6, -6, -7, -6, -6, -7, -6, -6, -7, -6, -7, -7, -6, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -7, -6, -6, -6, -6, -7, -7, -7, -7, -7, -7, -6, -6, -6, -6, -7, -6, -7, -6, -7, -6, -7, -6, -6, -7, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -8, -7, -8, -8, -8, -8, -8, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -7, -7, -8, -8, -7, -8, -7, -7, -7, -7, -7, -7, -7, -7, -7, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -8, -9, -10, -10, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -10, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -10, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -10, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -10, -9, -9, -9, -9, -9, -9, -10, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9]
            }
        }), define("rdust!templates/childviews/faq", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="faq-search"><div class="search-wrapper"><span class="page-title">FAQs</span><div class="search"><span class="expand-wrapper"><span class="search-glass"></span><input name="query" type="text" placeholder="Search FAQs" class="query" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" needsclick/><span class="clear"></span></span></div></div></div><div class="faq-container overflow-scroll" id="faqs"><div class="faq-list overflow-scroll-inner">').section(b.get("FAQs"), b, {
                        block: c
                    }, null).write("</div></div>")
                }

                function c(a, b) {
                    return a.write('<div class="list-item" data-href="faq-').reference(b.get("id"), b, "h").write('"><span class="taparea"></span><h1>').exists(b.get("shortTitle"), b, {
                        "else": d,
                        block: e
                    }, null).write('</h1><p class="faq-content">').reference(b.get("content"), b, "h", ["s"]).write('</p><span class="caret-wrap"><span class="drilldown-caret"><i class="siqfont">▶</i></span></span></div>')
                }

                function d(a, b) {
                    return a.reference(b.get("title"), b, "h", ["s"])
                }

                function e(a, b) {
                    return a.reference(b.get("shortTitle"), b, "h", ["s"])
                }
                return a.register("templates/childviews/faq", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/faq", b, c)
                }
            }
        }), define("app/ui/views/childviews/FAQView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/faq", "$"], function(a) {
            function b() {
                var a = this.el.find("#faqs");
                g(a).scroll(function() {
                    var a = this.el.find(".list-item");
                    if (a && a[0]) {
                        var b = a[0];
                        if (b) {
                            var c = g(b).offset().top,
                                d = this.el.find(".faq-search");
                            d.toggleClass("border", 90 > c)
                        }
                    }
                }.bind(this))
            }

            function c(a) {
                var b = this.el.find(".list-item"),
                    c = this.model.get("FAQs"),
                    d = g(a.currentTarget).val();
                d = d.toLowerCase(), d = d.split(" "), b.each(function(a, b) {
                    var e = c[a].title.toLowerCase();
                    e = e.replaceAll("<sup>&reg;</sup>", ""), e = e.replaceAll("?", ""), e = e.split(" ");
                    for (var f = !1, h = 0; h < d.length; h++)
                        for (var i = 0; i < e.length; i++) {
                            var j = e[i].indexOf(d[h]);
                            j >= 0 && "" != d[h] && (f = !0)
                        }
                    f && g(b).is(":hidden") || 1 == d.length && "" == d[0] ? g(b).show("slow") : f || g(b).slideUp("fast")
                }.bind(this))
            }

            function d(a) {
                try {
                    var b = g(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var d = b.prev();
                    d.val(""), d.removeClass("invalid valid"), d.focus(), c.call(this, a)
                } catch (e) {
                    console.log(e)
                }
            }
            var e = a("lavaca/mvc/View"),
                f = a("rdust!templates/childviews/faq"),
                g = a("$"),
                h = e.extend(function() {
                    e.apply(this, arguments), this.mapEvent({
                        input: {
                            keyup: c
                        },
                        "span.clear": {
                            tap: d
                        },
                        ext: {
                            SupportViewModel: {
                                object: this.model,
                                events: {
                                    setFAQs: this.renderFaqList.bind(this)
                                }
                            }
                        }
                    })
                }, {
                    className: "faq-view",
                    autoRender: !0,
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            f.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        var a = this.el.find(".list-item");
                        a.length > 0 && b.call(this), e.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        e.prototype.dispose.apply(this, arguments)
                    },
                    renderFaqList: function() {
                        this.render(".faq-container").then(function() {
                            b.call(this)
                        }.bind(this))
                    }
                });
            return h
        }), define("rdust!templates/childviews/faq-content", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="faq-content-container"><div class="page-title">').reference(b.getPath(!1, ["currentFAQ", "title"]), b, "h", ["s"]).write('</div><div class="current">').reference(b.getPath(!1, ["currentFAQ", "content"]), b, "h", ["s"]).write("</div></div>")
                }
                return a.register("templates/childviews/faq-content", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/faq-content", b, c)
                }
            }
        }), define("app/ui/views/childviews/FAQContentView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/faq-content"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("rdust!templates/childviews/faq-content"),
                d = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    className: "faq-content-view",
                    autoRender: !0,
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            c.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        b.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        b.prototype.dispose.apply(this, arguments)
                    }
                });
            return d
        }), define("app/service/MiscService", ["require", "lavaca/util/Disposable", "app/service/DemoData", "app/service/Service", "app/models/StateModel"], function(a) {
            var b = a("lavaca/util/Disposable"),
                c = a("app/service/DemoData"),
                d = a("app/service/Service"),
                e = a("app/models/StateModel"),
                f = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    getCustomerFaq: function() {
                        return e.get("demoMode") ? Promise.resolve(c.getCustomerFaqs) : d.makeRequest("faqs/", null, "GET")
                    },
                    searchCustomerFaq: function(a) {
                        return e.get("demoMode") ? Promise.resolve() : d.makeRequest("faqs?search=" + a, null, "GET")
                    }
                });
            return new f
        }), define("app/models/FAQModel", ["require", "lavaca/mvc/Model", "app/models/StateModel", "app/service/MiscService"], function(a) {
            var b = a("lavaca/mvc/Model"),
                c = a("app/models/StateModel"),
                d = a("app/service/MiscService"),
                e = b.extend(function() {
                    b.call(this, arguments), c.on("authenticationSuccessful", this.init.bind(this))
                }, {
                    init: function() {
                        var a = $.Deferred();
                        return d.getCustomerFaq().then(function(b) {
                            if (b.posts && b.posts.length > 0) {
                                var c = b.posts;
                                c.forEach(function(a) {
                                    Modernizr.desktop || Modernizr.tablet || (a.title.length > 75 && (a.shortTitle = a.title.slice(0, 72) + "..."), a.content = a.content.replace(/1-888-484-9263/g, '<a href="tel:+18884849263">1-888-484-9263</a>')), a.content = $("<p>" + a.content + "</p>").text(), a.content = a.content.replace(/SleepNumber.com/g, '<a href="http://www.sleepnumber.com/chat" target="_blank">SleepNumber.com</a>'), a.content = a.content.replace(/®/g, "<sup>&reg;</sup>"), a.title = a.title.replace(/®/g, "<sup>&reg;</sup>")
                                }.bind(this)), this.set("FAQs", c), this.trigger("setFAQs"), a.resolve(c)
                            } else this.set("FAQs", []), this.trigger("setFAQs"), a.resolve([])
                        }.bind(this), function(b) {
                            b && console.warn(b), this.set("FAQs", []), this.trigger("setFAQs"), a.resolve([])
                        }.bind(this)), a
                    },
                    getNetworkTroubleshooting: function() {
                        var a = this.get("FAQs") || [],
                            b = {
                                title: "Troubleshooting Network Setup of Your Bed",
                                content: "Document not found..."
                            };
                        return a.forEach(function(a) {
                            var c = a.title.toLowerCase();
                            c.indexOf("troubleshoot") >= 0 && c.indexOf("network") > 0 && (b = a)
                        }), b
                    }
                });
            return new e
        }), define("rdust!templates/headers/back-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header registration"><button class="back-arrow back left" tabindex="-1">Back</button><div class="title">').exists(b.get("pageTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write("</div></header>")
                }

                function c(a) {
                    return a.write("SleepIQ<sup>&reg;</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("pageTitle"), b, "h", ["s"])
                }
                return a.register("templates/headers/back-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/back-header", b, c)
                }
            }
        }), define("app/ui/views/pageviews/BedSettingsView", ["require", "./BaseView", "app/models/FamilyModel", "app/ui/widgets/FormValidator", "app/models/validations/setup-bed", "app/models/BindingStateModel", "rdust!templates/pageviews/BedSettingsView", "app/models/BedCollection", "app/models/AuthModel", "app/models/StateModel", "app/utils/ZipCodes", "mout/object/get", "app/ui/views/childviews/FAQView", "app/ui/views/childviews/FAQContentView", "app/models/FAQModel", "lavaca/mvc/Router", "app/utils/MixPanelManager", "rdust!templates/headers/back-header", "rdust!templates/headers/header"], function(a) {
            function b(a) {
                H.prototype.trackBedTroubleShooting(a, this.model.toObject()), this.model.set("currentTitle", "FAQs"), this.model.set("currentFAQ", F.getNetworkTroubleshooting()), c.call(this, E)
            }

            function c(a) {
                this.mapChildView({
                    ".child-wrapper": {
                        TView: a,
                        model: this.model
                    }
                }), this.render(".selected-child"), setTimeout(function() {
                    this.el.addClass("show-child")
                }.bind(this), 100)
            }

            function d() {
                this.el.hasClass("show-child") ? this.el.removeClass("show-child") : navigator && navigator.app && navigator.app.backHistory()
            }

            function e() {
                this.model.requestUpdate().then(function() {
                    this.render(".overflow-scroll-inner"), m.call(this)
                }.bind(this))
            }

            function f() {
                setTimeout(function() {
                    this.el.find('[name="bedName"]').hasClass("invalid") || this.model.set("bedName", this.el.find('[name="bedName"]').val()), this.el.find('[name="zipCode"]').hasClass("invalid") || this.model.set("zipCode", this.el.find('[name="zipCode"]').val()), this.el.find('[name="timeZone"]').hasClass("invalid") || this.model.set("timeZone", this.el.find('[name="timeZone"]').val())
                }.bind(this), 500)
            }

            function g(a) {
                "networkName" === a.attribute && this.render(".network")
            }

            function h() {
                this.model.requestUpdate().then(function() {
                    this.render(".network")
                }.bind(this))
            }

            function i() {
                this.model.get("canEdit") && (Modernizr.hasble ? Modernizr.isbleon ? (z.prepConnectionDetailsForCurrentBed(), G.exec("/binding/onlywifi")) : window.customAlert.alert("This functionality requires Bluetooth to be turned ON and for you to be within 8ft of your bed", null, "SleepIQ®", "OK") : G.exec("/binding/wifidesktop", null, {
                    macAddress: this.model.get("macAddress") || null
                }))
            }

            function j(a) {
                H.prototype.trackBedTroubleShooting(a, this.model.toObject());
                var b = this.el.find(a.currentTarget).attr("data-href"),
                    c = this.el.find(a.currentTarget).hasClass("requires-ble");
                c && !Modernizr.isbleon ? window.customAlert.alert("This functionality requires Bluetooth to be turned ON and for you to be within 8ft of your bed", null, "SleepIQ®", "OK") : (z.prepConnectionDetailsForCurrentBed(), G.exec(b))
            }

            function k() {
                var a = this.el.find(".switch").hasClass("on");
                r.call(this, a)
            }

            function l() {
                m.call(this), z.getPauseModeForCurrentBed().then(function(a) {
                    if (a && a.pauseMode) {
                        var b = "on" == a.pauseMode;
                        r.call(this, b, !0)
                    }
                }.bind(this))
            }

            function m() {
                setTimeout(function() {
                    this.el.removeClass("no-touchy");
                    var a = q.call(this);
                    if (a) {
                        var b = this.el.find(".zip-code input");
                        b.val(a), b.siblings().closest("label").addClass("reveal")
                    }
                    if (this.model.get("timezone")) {
                        var c = this.el.find(".time-zone option");
                        for (var d in c) {
                            var e = c[d];
                            e && e.value === this.model.get("timezone") && (this.el.find("select.time").val(e.dataset.value).siblings("label").addClass("reveal"), $(e).attr("selected", "selected"), this.el.find(".time")[0].selectedIndex = parseInt(d))
                        }
                    }
                }.bind(this), 400)
            }

            function n(a) {
                try {
                    var b = D(a, "currentTarget.value");
                    5 === b.length && "number" == typeof parseInt(b) && o.call(this, parseInt(b))
                } catch (c) {
                    return console.error(c), void 0
                }
            }

            function o(a) {
                var b = p(a);
                if ("number" == typeof b) {
                    var c = this.el.find(".time-zone option"),
                        d = !1;
                    for (var e in c) {
                        var f = c[e],
                            g = parseInt(f.dataset.utcOffset);
                        if (d) return;
                        "number" == typeof g && g === b && (d = !0, this.el.find("select.time").val(f.dataset.value).siblings("label").addClass("reveal"), $(f).attr("selected", !0).attr("selected", !1), this.el.find(".time")[0].selectedIndex = parseInt(e))
                    }
                }
            }

            function p(a) {
                try {
                    var b = C.zip.indexOf(parseInt(a)),
                        c = C.timezone[b];
                    return c
                } catch (d) {
                    return !1
                }
            }

            function q() {
                var a = !1;
                if (this.model.get("zipcode")) {
                    var b = this.model.get("zipcode");
                    if (5 === b.length) try {
                        a = "00000" + parseInt(b, 10), a = a.substr(a.length - 5)
                    } catch (c) {
                        return !1
                    } else if (b.length >= 5) try {
                        a = "00000" + parseInt(b.slice(0, 5), 10), a = a.substr(a.length - 5)
                    } catch (c) {
                        return !1
                    }
                }
                return a
            }

            function r(a, b) {
                var c = this.el.find(".sleepiq-toggle");
                c.find(".switch").toggleClass("on", !a), this.el.find(".bed-settings-wrapper").toggleClass("show-banner", a);
                var d = z.getCurrentBedModel();
                d.setPauseMode(a ? "on" : "off").then(function() {
                    b || H.prototype.trackSleepIQ(this.model.toObject(), !a), z.fetchAllPauseMode(), z.trigger("reset")
                }.bind(this), function() {
                    c.find(".switch").toggleClass("on", a), this.el.find(".bed-settings-wrapper").toggleClass("show-banner", !a)
                }.bind(this))
            }

            function s(a) {
                try {
                    var b = $(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var c = b.prev();
                    c.val(""), c.removeClass("invalid valid"), c.focus()
                } catch (d) {
                    console.log(d)
                }
            }
            var t = a("./BaseView"),
                u = a("app/models/FamilyModel"),
                v = a("app/ui/widgets/FormValidator"),
                w = a("app/models/validations/setup-bed"),
                x = a("app/models/BindingStateModel"),
                y = a("rdust!templates/pageviews/BedSettingsView"),
                z = a("app/models/BedCollection"),
                A = a("app/models/AuthModel"),
                B = a("app/models/StateModel"),
                C = a("app/utils/ZipCodes"),
                D = a("mout/object/get"),
                E = (a("app/ui/views/childviews/FAQView"), a("app/ui/views/childviews/FAQContentView")),
                F = a("app/models/FAQModel"),
                G = a("lavaca/mvc/Router"),
                H = a("app/utils/MixPanelManager");
            a("rdust!templates/headers/back-header"), a("rdust!templates/headers/header");
            var I = t.extend(function() {
                t.apply(this, arguments), B.on("refreshNetwork", h.bind(this)), this.mapEvent({
                    ".link": {
                        tap: j
                    },
                    ".subpage-link": {
                        tap: b
                    },
                    ".sleepiq-toggle": {
                        tap: k
                    },
                    ".network-link": {
                        tap: i
                    },
                    ".clear": {
                        tap: s
                    },
                    "[data-save-on-blur]": {
                        blur: f
                    },
                    ".zip-code input": {
                        keyup: n
                    },
                    model: {
                        change: g
                    },
                    ext: {
                        bindingState: {
                            object: x,
                            events: {
                                exit: e.bind(this)
                            }
                        },
                        stateModel: {
                            object: B,
                            events: {
                                backButton: d.bind(this)
                            }
                        }
                    }
                }), this.mapWidget({
                    ".form": {
                        TWidget: v
                    }
                })
            }, {
                className: "bedsettings no-touchy",
                generateHtml: function(a) {
                    return a && (a.validations = w, a.canEdit = u.hasPermission()), new Promise(function(b) {
                        y.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onTapBack: function(a) {
                    a.preventDefault(), this.el.removeClass("show-child")
                },
                onRenderSuccess: function() {
                    l.call(this), this.model.set("canEdit", u.hasPermission()), setTimeout(function() {
                        B.set("ignoreBack", !0)
                    }.bind(this), 300), t.prototype.onRenderSuccess.apply(this, arguments)
                },
                beforeExit: function() {
                    return B.set("ignoreBack", !1), A && A.get("userId") && this.model ? this.model.save() : Promise.resolve()
                }
            });
            return I
        }), define("rdust!templates/pageviews/user-settings", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/header", b, {
                        pageTitle: c
                    }).write('<div class="content overflow-scroll"><div class="overflow-scroll-inner"><form class="settings-form form" data-animate-labels="true"><div class="link-item section-link" data-section="sleeper-profile"><span class="name">Sleeper Profile</span><span class="align child-caret caret"><i class="siqfont">▶</i></span></div><div class="section-collapsable" data-section="sleeper-profile">').notexists(b.get("isOnlyAccountOwner"), b, {
                        "else": d,
                        block: e
                    }, null).write('<div class="bed-notification-users ').exists(b.get("renderBedNotifications"), b, {
                        block: K
                    }, null).write('"><div class="section-header">out-of-bed notifications</div><div class="section"><div class="input-wrapper"><div class="child-notification"><div class="display-child-names"><span class="notifications-text">Notifications</span><span class="child-first-names">').reference(b.get("childrenFirstNames"), b, "h").write('</span></div><span class="child-notification-settings"><div class="switch notifications-toggle ').exists(b.getPath(!1, ["userNotifications", "enabled"]), b, {
                        "else": L,
                        block: M
                    }, null).write('"><div class="rocker"></div><div class="label on">On</div><div class="label off">Off</div></div></span><span class="align child-caret caret"><i class="siqfont">▶</i></span></div></div></div></div></div><div class="link-item section-link" data-section="account-settings"><span class="name">Account Settings</span><span class="align child-caret caret"><i class="siqfont">▶</i></span></div><div class="section-collapsable" data-section="account-settings"><div class="account-area">').exists(b.getPath(!1, ["user", "email"]), b, {
                        "else": N,
                        block: O
                    }, null).write("</div></div>").exists(b.getPath(!1, ["user", "isLoggedIn"]), b, {
                        block: X
                    }, null).write("</form></div></div>")
                }

                function c(a, b) {
                    return a.reference(b.get("firstName"), b, "h").write("&rsquo;s Settings")
                }

                function d(a, b) {
                    return a.write('<div class="section-header">Profile</div><div class="section clearfix"><div class="input-wrapper first-name"><label for="firstName">First Name</label><input name="firstName" class="first-name" type="text" data-validation="').reference(b.getPath(!1, ["validations", "firstName"]), b, "h").write('" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" maxlength="30" value="').reference(b.getPath(!1, ["user", "firstName"]), b, "h").write('" needsclick/><span class="clear"></span><p class="error-message"></p></div></div>')
                }

                function e(a, b) {
                    return a.write('<div class="section-header">Profile</div><div class="section clearfix"><div class="input-wrapper"><label for="sleepGoal">Sleep Goal</label><select name="sleepGoal" ').exists(b.get("isLoggedInChild"), b, {
                        block: f
                    }, null).write(' needsclick><option value="" disabled selected></option>').notexists(b.getPath(!1, ["user", "isChild"]), b, {
                        block: g
                    }, null).write('<option value="420">7:00 hrs</option><option value="450">7:30 hrs</option><option value="480">8:00 hrs</option><option value="510">8:30 hrs</option><option value="540">9:00 hrs</option>').exists(b.getPath(!1, ["user", "isChild"]), b, {
                        block: h
                    }, null).write('</select></div><div class="input-wrapper first-name"><label for="firstName">First Name</label><input name="firstName" class="first-name" type="text" data-validation="').reference(b.getPath(!1, ["validations", "firstName"]), b, "h").write('"autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" maxlength="30" value="').reference(b.getPath(!1, ["user", "firstName"]), b, "h").write('" ').exists(b.get("isLoggedInChild"), b, {
                        block: i
                    }, null).write(' needsclick /><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper"><label for="birthYear">Birth Year</label>').exists(b.getPath(!1, ["user", "isChild"]), b, {
                        "else": j,
                        block: m
                    }, null).write("</div>").exists(b.getPath(!1, ["user", "isChild"]), b, {
                        block: p
                    }, null).write('<div class="input-wrapper radio-inputs"><h4 class="isMale">Gender</h4><input id="male" name="isMale" type="radio" value="Male" ').exists(b.get("isLoggedInChild"), b, {
                        block: t
                    }, null).write(' /><label for="male">Male</label><input id="female" name="isMale" type="radio" value="Female" ').exists(b.get("isLoggedInChild"), b, {
                        block: u
                    }, null).write(' /><label for="female">Female</label></div><div class="clearfix"><div class="input-wrapper half left"><label for="height">Height</label>').exists(b.getPath(!1, ["user", "isChild"]), b, {
                        "else": v,
                        block: x
                    }, null).write('</div><div class="input-wrapper half right"><label for="weight">Weight</label>').exists(b.getPath(!1, ["user", "isChild"]), b, {
                        "else": z,
                        block: B
                    }, null).write("</div></div>").notexists(b.getPath(!1, ["user", "isChild"]), b, {
                        block: D
                    }, null).exists(b.get("canAddSecondSleeper"), b, {
                        block: J
                    }, null).write("</div>")
                }

                function f(a) {
                    return a.write(" disabled ")
                }

                function g(a) {
                    return a.write('<option value="390">6:30 hrs</option>')
                }

                function h(a) {
                    return a.write('<option value="570">9:30 hrs</option><option value="600">10:00 hrs</option><option value="630">10:30 hrs</option><option value="660">11:00 hrs</option><option value="690">11:30 hrs</option><option value="720">12:00 hrs</option><option value="750">12:30 hrs</option><option value="780">13:00 hrs</option><option value="810">13:30 hrs</option><option value="840">14:00 hrs</option>')
                }

                function i(a) {
                    return a.write(" disabled ")
                }

                function j(a, b) {
                    return a.partial("templates/formoptions/birthyear", b, {
                        value: k,
                        isLoggedInChild: l
                    })
                }

                function k(a, b) {
                    return a.reference(b.getPath(!1, ["user", "birthYear"]), b, "h")
                }

                function l(a, b) {
                    return a.reference(b.get("isLoggedInChild"), b, "h")
                }

                function m(a, b) {
                    return a.partial("templates/formoptions/birthyear-child", b, {
                        value: n,
                        isLoggedInChild: o
                    })
                }

                function n(a, b) {
                    return a.reference(b.getPath(!1, ["user", "birthYear"]), b, "h")
                }

                function o(a, b) {
                    return a.reference(b.get("isLoggedInChild"), b, "h")
                }

                function p(a, b) {
                    return a.exists(b.getPath(!1, ["user", "birthMonth"]), b, {
                        block: q
                    }, null)
                }

                function q(a, b) {
                    return a.write('<div class="input-wrapper"><label for="birthMonth">Birth Month</label>').partial("templates/formoptions/birthmonth", b, {
                        birthMonth: r,
                        isLoggedInChild: s
                    }).write("</div>")
                }

                function r(a, b) {
                    return a.reference(b.getPath(!1, ["user", "birthMonth"]), b, "h")
                }

                function s(a, b) {
                    return a.reference(b.get("isLoggedInChild"), b, "h")
                }

                function t(a) {
                    return a.write(" disabled ")
                }

                function u(a) {
                    return a.write(" disabled ")
                }

                function v(a, b) {
                    return a.partial("templates/formoptions/height", b, {
                        isLoggedInChild: w
                    })
                }

                function w(a, b) {
                    return a.reference(b.get("isLoggedInChild"), b, "h")
                }

                function x(a, b) {
                    return a.partial("templates/formoptions/height-child", b, {
                        isLoggedInChild: y
                    })
                }

                function y(a, b) {
                    return a.reference(b.get("isLoggedInChild"), b, "h")
                }

                function z(a, b) {
                    return a.partial("templates/formoptions/weight", b, {
                        isLoggedInChild: A
                    })
                }

                function A(a, b) {
                    return a.reference(b.get("isLoggedInChild"), b, "h")
                }

                function B(a, b) {
                    return a.partial("templates/formoptions/weight-child", b, {
                        isLoggedInChild: C
                    })
                }

                function C(a, b) {
                    return a.reference(b.get("isLoggedInChild"), b, "h")
                }

                function D(a, b) {
                    return a.exists(b.get("canSwapSleeper"), b, {
                        block: E
                    }, null)
                }

                function E(a, b) {
                    return a.write('<div class="input-wrapper bed-side"><label for="bedSide" class="reveal">Bed Side</label><select name="bedSide" needsclick>').helper("select", b, {
                        block: F
                    }, {
                        key: I
                    }).write('</select><p class="error-message"></p></div><div class="switch-bed-side half left"><div class="switch-arrows"></div><button>Switch Bed Side</button></div>')
                }

                function F(a, b) {
                    return a.write('<option value="0" ').helper("eq", b, {
                        block: G
                    }, {
                        value: "0"
                    }).write('>Left</option><option value="1" ').helper("eq", b, {
                        block: H
                    }, {
                        value: "1"
                    }).write(">Right</option>")
                }

                function G(a) {
                    return a.write("selected")
                }

                function H(a) {
                    return a.write("selected")
                }

                function I(a, b) {
                    return a.reference(b.getPath(!1, ["user", "side"]), b, "h")
                }

                function J(a) {
                    return a.write('<div class="input-wrapper half right"><div class="add-sleeper">Add Second Sleeper <span class="align caret add-sleeper-caret"> <i class="siqfont">▶</i> </span> </div></div>')
                }

                function K(a) {
                    return a.write("has-notifications")
                }

                function L(a) {
                    return a.write("off")
                }

                function M(a) {
                    return a.write("on")
                }

                function N(a) {
                    return a.write('<div class="setup-account-credentials"><button class="create-account">Set up an account for this user</button></div>')
                }

                function O(a, b) {
                    return a.write('<div class="section-header">Account').exists(b.getPath(!1, ["user", "emailValidated"]), b, {
                        "else": P,
                        block: Q
                    }, null).exists(b.getPath(!1, ["user", "isAccountOwner"]), b, {
                        block: R
                    }, null).write('</div><div class="section credentials"><div class="input-wrapper"><label for="email" class="reveal">Email</label><input name="email" type="email" ').exists(b.getPath(!1, ["user", "email"]), b, {
                        block: S
                    }, null).write(' data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" maxlength="256" value="').reference(b.getPath(!1, ["user", "email"]), b, "h").write('" readonly="true" /></div>').exists(b.getPath(!1, ["user", "emailValidated"]), b, {
                        "else": T,
                        block: U
                    }, null).write("</div>")
                }

                function P(a) {
                    return a.write('<p class="email-pending">PENDING EMAIL VALIDATION</p>')
                }

                function Q(a) {
                    return a.write(" ")
                }

                function R(a, b) {
                    return a.write('<span class="account-owner">').reference(b.getPath(!1, ["user", "firstName"]), b, "h").write(" is the primary account owner for the family</span>")
                }

                function S(a) {
                    return a.write('data-validate-onload="true"')
                }

                function T(a) {
                    return a.write('<div class="setup-account-credentials cancel-email"><button>Cancel</button></div>')
                }

                function U(a, b) {
                    return a.write('<div class="setup-account-credentials modify-account"><button>Change Login Credentials</button></div>').exists(b.getPath(!1, ["user", "isLoggedIn"]), b, {
                        "else": V,
                        block: W
                    }, null)
                }

                function V(a) {
                    return a.write('<div class="setup-account-credentials remove-login"><button>Remove Login</button></div>')
                }

                function W(a) {
                    return a
                }

                function X(a, b) {
                    return a.notexists(b.getPath(!1, ["user", "isChild"]), b, {
                        block: Y
                    }, null)
                }

                function Y(a) {
                    return a.write('<div class="link-item link" data-href="/marketplace"><span class="name">Device Connections</span><span class="align child-caret caret"><i class="siqfont">▶</i></span></div>')
                }
                return a.register("templates/pageviews/user-settings", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/user-settings", b, c)
                }
            }
        }), define("rdust!templates/formoptions/weight", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<select name="weight" data-validation="').reference(b.get("validation"), b, "h").write('" ').exists(b.get("isLoggedInChild"), b, {
                        block: c
                    }, null).write(' needsclick><option value="" disabled selected></option><option value="75">75 lbs</option><option value="76">76 lbs</option><option value="77">77 lbs</option><option value="78">78 lbs</option><option value="79">79 lbs</option><option value="80">80 lbs</option><option value="81">81 lbs</option><option value="82">82 lbs</option><option value="83">83 lbs</option><option value="84">84 lbs</option><option value="85">85 lbs</option><option value="86">86 lbs</option><option value="87">87 lbs</option><option value="88">88 lbs</option><option value="89">89 lbs</option><option value="90">90 lbs</option><option value="91">91 lbs</option><option value="92">92 lbs</option><option value="93">93 lbs</option><option value="94">94 lbs</option><option value="95">95 lbs</option><option value="96">96 lbs</option><option value="97">97 lbs</option><option value="98">98 lbs</option><option value="99">99 lbs</option><option value="100">100 lbs</option><option value="101">101 lbs</option><option value="102">102 lbs</option><option value="103">103 lbs</option><option value="104">104 lbs</option><option value="105">105 lbs</option><option value="106">106 lbs</option><option value="107">107 lbs</option><option value="108">108 lbs</option><option value="109">109 lbs</option><option value="110">110 lbs</option><option value="111">111 lbs</option><option value="112">112 lbs</option><option value="113">113 lbs</option><option value="114">114 lbs</option><option value="115">115 lbs</option><option value="116">116 lbs</option><option value="117">117 lbs</option><option value="118">118 lbs</option><option value="119">119 lbs</option><option value="120">120 lbs</option><option value="121">121 lbs</option><option value="122">122 lbs</option><option value="123">123 lbs</option><option value="124">124 lbs</option><option value="125">125 lbs</option><option value="126">126 lbs</option><option value="127">127 lbs</option><option value="128">128 lbs</option><option value="129">129 lbs</option><option value="130">130 lbs</option><option value="131">131 lbs</option><option value="132">132 lbs</option><option value="133">133 lbs</option><option value="134">134 lbs</option><option value="135">135 lbs</option><option value="136">136 lbs</option><option value="137">137 lbs</option><option value="138">138 lbs</option><option value="139">139 lbs</option><option value="140">140 lbs</option><option value="141">141 lbs</option><option value="142">142 lbs</option><option value="143">143 lbs</option><option value="144">144 lbs</option><option value="145">145 lbs</option><option value="146">146 lbs</option><option value="147">147 lbs</option><option value="148">148 lbs</option><option value="149">149 lbs</option><option value="150">150 lbs</option><option value="151">151 lbs</option><option value="152">152 lbs</option><option value="153">153 lbs</option><option value="154">154 lbs</option><option value="155">155 lbs</option><option value="156">156 lbs</option><option value="157">157 lbs</option><option value="158">158 lbs</option><option value="159">159 lbs</option><option value="160">160 lbs</option><option value="161">161 lbs</option><option value="162">162 lbs</option><option value="163">163 lbs</option><option value="164">164 lbs</option><option value="165">165 lbs</option><option value="166">166 lbs</option><option value="167">167 lbs</option><option value="168">168 lbs</option><option value="169">169 lbs</option><option value="170">170 lbs</option><option value="171">171 lbs</option><option value="172">172 lbs</option><option value="173">173 lbs</option><option value="174">174 lbs</option><option value="175">175 lbs</option><option value="176">176 lbs</option><option value="177">177 lbs</option><option value="178">178 lbs</option><option value="179">179 lbs</option><option value="180">180 lbs</option><option value="181">181 lbs</option><option value="182">182 lbs</option><option value="183">183 lbs</option><option value="184">184 lbs</option><option value="185">185 lbs</option><option value="186">186 lbs</option><option value="187">187 lbs</option><option value="188">188 lbs</option><option value="189">189 lbs</option><option value="190">190 lbs</option><option value="191">191 lbs</option><option value="192">192 lbs</option><option value="193">193 lbs</option><option value="194">194 lbs</option><option value="195">195 lbs</option><option value="196">196 lbs</option><option value="197">197 lbs</option><option value="198">198 lbs</option><option value="199">199 lbs</option><option value="200">200 lbs</option><option value="201">201 lbs</option><option value="202">202 lbs</option><option value="203">203 lbs</option><option value="204">204 lbs</option><option value="205">205 lbs</option><option value="206">206 lbs</option><option value="207">207 lbs</option><option value="208">208 lbs</option><option value="209">209 lbs</option><option value="210">210 lbs</option><option value="211">211 lbs</option><option value="212">212 lbs</option><option value="213">213 lbs</option><option value="214">214 lbs</option><option value="215">215 lbs</option><option value="216">216 lbs</option><option value="217">217 lbs</option><option value="218">218 lbs</option><option value="219">219 lbs</option><option value="220">220 lbs</option><option value="221">221 lbs</option><option value="222">222 lbs</option><option value="223">223 lbs</option><option value="224">224 lbs</option><option value="225">225 lbs</option><option value="226">226 lbs</option><option value="227">227 lbs</option><option value="228">228 lbs</option><option value="229">229 lbs</option><option value="230">230 lbs</option><option value="231">231 lbs</option><option value="232">232 lbs</option><option value="233">233 lbs</option><option value="234">234 lbs</option><option value="235">235 lbs</option><option value="236">236 lbs</option><option value="237">237 lbs</option><option value="238">238 lbs</option><option value="239">239 lbs</option><option value="240">240 lbs</option><option value="241">241 lbs</option><option value="242">242 lbs</option><option value="243">243 lbs</option><option value="244">244 lbs</option><option value="245">245 lbs</option><option value="246">246 lbs</option><option value="247">247 lbs</option><option value="248">248 lbs</option><option value="249">249 lbs</option><option value="250">250 lbs</option><option value="251">251 lbs</option><option value="252">252 lbs</option><option value="253">253 lbs</option><option value="254">254 lbs</option><option value="255">255 lbs</option><option value="256">256 lbs</option><option value="257">257 lbs</option><option value="258">258 lbs</option><option value="259">259 lbs</option><option value="260">260 lbs</option><option value="261">261 lbs</option><option value="262">262 lbs</option><option value="263">263 lbs</option><option value="264">264 lbs</option><option value="265">265 lbs</option><option value="266">266 lbs</option><option value="267">267 lbs</option><option value="268">268 lbs</option><option value="269">269 lbs</option><option value="270">270 lbs</option><option value="271">271 lbs</option><option value="272">272 lbs</option><option value="273">273 lbs</option><option value="274">274 lbs</option><option value="275">275 lbs</option><option value="276">276 lbs</option><option value="277">277 lbs</option><option value="278">278 lbs</option><option value="279">279 lbs</option><option value="280">280 lbs</option><option value="281">281 lbs</option><option value="282">282 lbs</option><option value="283">283 lbs</option><option value="284">284 lbs</option><option value="285">285 lbs</option><option value="286">286 lbs</option><option value="287">287 lbs</option><option value="288">288 lbs</option><option value="289">289 lbs</option><option value="290">290 lbs</option><option value="291">291 lbs</option><option value="292">292 lbs</option><option value="293">293 lbs</option><option value="294">294 lbs</option><option value="295">295 lbs</option><option value="296">296 lbs</option><option value="297">297 lbs</option><option value="298">298 lbs</option><option value="299">299 lbs</option><option value="300">300 lbs</option><option value="301">301 lbs</option><option value="302">302 lbs</option><option value="303">303 lbs</option><option value="304">304 lbs</option><option value="305">305 lbs</option><option value="306">306 lbs</option><option value="307">307 lbs</option><option value="308">308 lbs</option><option value="309">309 lbs</option><option value="310">310 lbs</option><option value="311">311 lbs</option><option value="312">312 lbs</option><option value="313">313 lbs</option><option value="314">314 lbs</option><option value="315">315 lbs</option><option value="316">316 lbs</option><option value="317">317 lbs</option><option value="318">318 lbs</option><option value="319">319 lbs</option><option value="320">320 lbs</option><option value="321">321 lbs</option><option value="322">322 lbs</option><option value="323">323 lbs</option><option value="324">324 lbs</option><option value="325">325 lbs</option><option value="326">326 lbs</option><option value="327">327 lbs</option><option value="328">328 lbs</option><option value="329">329 lbs</option><option value="330">330 lbs</option><option value="331">331 lbs</option><option value="332">332 lbs</option><option value="333">333 lbs</option><option value="334">334 lbs</option><option value="335">335 lbs</option><option value="336">336 lbs</option><option value="337">337 lbs</option><option value="338">338 lbs</option><option value="339">339 lbs</option><option value="340">340 lbs</option><option value="341">341 lbs</option><option value="342">342 lbs</option><option value="343">343 lbs</option><option value="344">344 lbs</option><option value="345">345 lbs</option><option value="346">346 lbs</option><option value="347">347 lbs</option><option value="348">348 lbs</option><option value="349">349 lbs</option></select>')
                }

                function c(a) {
                    return a.write(" disabled ")
                }
                return a.register("templates/formoptions/weight", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/formoptions/weight", b, c)
                }
            }
        }), define("rdust!templates/formoptions/weight-child", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<select name="weight" data-validation="').reference(b.get("validation"), b, "h").write('" ').exists(b.get("isLoggedInChild"), b, {
                        block: c
                    }, null).write(' needsclick><option value="" disabled selected></option><option value="40">40 lbs or less</option><option value="41">41 lbs</option><option value="42">42 lbs</option><option value="43">43 lbs</option><option value="44">44 lbs</option><option value="45">45 lbs</option><option value="46">46 lbs</option><option value="47">47 lbs</option><option value="48">48 lbs</option><option value="49">49 lbs</option><option value="50">50 lbs</option><option value="51">51 lbs</option><option value="52">52 lbs</option><option value="53">53 lbs</option><option value="54">54 lbs</option><option value="55">55 lbs</option><option value="56">56 lbs</option><option value="57">57 lbs</option><option value="58">58 lbs</option><option value="59">59 lbs</option><option value="60">60 lbs</option><option value="61">61 lbs</option><option value="62">62 lbs</option><option value="63">63 lbs</option><option value="64">64 lbs</option><option value="65">65 lbs</option><option value="66">66 lbs</option><option value="67">67 lbs</option><option value="68">68 lbs</option><option value="69">69 lbs</option><option value="70">70 lbs</option><option value="71">71 lbs</option><option value="72">72 lbs</option><option value="73">73 lbs</option><option value="74">74 lbs</option><option value="75">75 lbs</option><option value="76">76 lbs</option><option value="77">77 lbs</option><option value="78">78 lbs</option><option value="79">79 lbs</option><option value="80">80 lbs</option><option value="81">81 lbs</option><option value="82">82 lbs</option><option value="83">83 lbs</option><option value="84">84 lbs</option><option value="85">85 lbs</option><option value="86">86 lbs</option><option value="87">87 lbs</option><option value="88">88 lbs</option><option value="89">89 lbs</option><option value="90">90 lbs</option><option value="91">91 lbs</option><option value="92">92 lbs</option><option value="93">93 lbs</option><option value="94">94 lbs</option><option value="95">95 lbs</option><option value="96">96 lbs</option><option value="97">97 lbs</option><option value="98">98 lbs</option><option value="99">99 lbs</option><option value="100">100 lbs</option><option value="101">101 lbs</option><option value="102">102 lbs</option><option value="103">103 lbs</option><option value="104">104 lbs</option><option value="105">105 lbs</option><option value="106">106 lbs</option><option value="107">107 lbs</option><option value="108">108 lbs</option><option value="109">109 lbs</option><option value="110">110 lbs</option><option value="111">111 lbs</option><option value="112">112 lbs</option><option value="113">113 lbs</option><option value="114">114 lbs</option><option value="115">115 lbs</option><option value="116">116 lbs</option><option value="117">117 lbs</option><option value="118">118 lbs</option><option value="119">119 lbs</option><option value="120">120 lbs</option><option value="121">121 lbs</option><option value="122">122 lbs</option><option value="123">123 lbs</option><option value="124">124 lbs</option><option value="125">125 lbs</option><option value="126">126 lbs</option><option value="127">127 lbs</option><option value="128">128 lbs</option><option value="129">129 lbs</option><option value="130">130 lbs</option><option value="131">131 lbs</option><option value="132">132 lbs</option><option value="133">133 lbs</option><option value="134">134 lbs</option><option value="135">135 lbs</option><option value="136">136 lbs</option><option value="137">137 lbs</option><option value="138">138 lbs</option><option value="139">139 lbs</option><option value="140">140 lbs</option><option value="141">141 lbs</option><option value="142">142 lbs</option><option value="143">143 lbs</option><option value="144">144 lbs</option><option value="145">145 lbs</option><option value="146">146 lbs</option><option value="147">147 lbs</option><option value="148">148 lbs</option><option value="149">149 lbs</option><option value="150">150 lbs</option><option value="151">151 lbs</option><option value="152">152 lbs</option><option value="153">153 lbs</option><option value="154">154 lbs</option><option value="155">155 lbs</option><option value="156">156 lbs</option><option value="157">157 lbs</option><option value="158">158 lbs</option><option value="159">159 lbs</option><option value="160">160 lbs</option><option value="161">161 lbs</option><option value="162">162 lbs</option><option value="163">163 lbs</option><option value="164">164 lbs</option><option value="165">165 lbs</option><option value="166">166 lbs</option><option value="167">167 lbs</option><option value="168">168 lbs</option><option value="169">169 lbs</option><option value="170">170 lbs</option><option value="171">171 lbs</option><option value="172">172 lbs</option><option value="173">173 lbs</option><option value="174">174 lbs</option><option value="175">175 lbs</option><option value="176">176 lbs</option><option value="177">177 lbs</option><option value="178">178 lbs</option><option value="179">179 lbs</option><option value="180">180 lbs</option><option value="181">181 lbs</option><option value="182">182 lbs</option><option value="183">183 lbs</option><option value="184">184 lbs</option><option value="185">185 lbs</option><option value="186">186 lbs</option><option value="187">187 lbs</option><option value="188">188 lbs</option><option value="189">189 lbs</option><option value="190">190 lbs</option><option value="191">191 lbs</option><option value="192">192 lbs</option><option value="193">193 lbs</option><option value="194">194 lbs</option><option value="195">195 lbs</option><option value="196">196 lbs</option><option value="197">197 lbs</option><option value="198">198 lbs</option><option value="199">199 lbs</option><option value="200">200 lbs</option><option value="201">201 lbs</option><option value="202">202 lbs</option><option value="203">203 lbs</option><option value="204">204 lbs</option><option value="205">205 lbs</option><option value="206">206 lbs</option><option value="207">207 lbs</option><option value="208">208 lbs</option><option value="209">209 lbs</option><option value="210">210 lbs</option><option value="211">211 lbs</option><option value="212">212 lbs</option><option value="213">213 lbs</option><option value="214">214 lbs</option><option value="215">215 lbs</option><option value="216">216 lbs</option><option value="217">217 lbs</option><option value="218">218 lbs</option><option value="219">219 lbs</option><option value="220">220 lbs</option><option value="221">221 lbs</option><option value="222">222 lbs</option><option value="223">223 lbs</option><option value="224">224 lbs</option><option value="225">225 lbs</option><option value="226">226 lbs</option><option value="227">227 lbs</option><option value="228">228 lbs</option><option value="229">229 lbs</option><option value="230">230 lbs</option><option value="231">231 lbs</option><option value="232">232 lbs</option><option value="233">233 lbs</option><option value="234">234 lbs</option><option value="235">235 lbs</option><option value="236">236 lbs</option><option value="237">237 lbs</option><option value="238">238 lbs</option><option value="239">239 lbs</option><option value="240">240 lbs</option><option value="241">241 lbs</option><option value="242">242 lbs</option><option value="243">243 lbs</option><option value="244">244 lbs</option><option value="245">245 lbs</option><option value="246">246 lbs</option><option value="247">247 lbs</option><option value="248">248 lbs</option><option value="249">249 lbs</option><option value="250">250 lbs</option><option value="251">251 lbs</option><option value="252">252 lbs</option><option value="253">253 lbs</option><option value="254">254 lbs</option><option value="255">255 lbs</option><option value="256">256 lbs</option><option value="257">257 lbs</option><option value="258">258 lbs</option><option value="259">259 lbs</option><option value="260">260 lbs</option><option value="261">261 lbs</option><option value="262">262 lbs</option><option value="263">263 lbs</option><option value="264">264 lbs</option><option value="265">265 lbs</option><option value="266">266 lbs</option><option value="267">267 lbs</option><option value="268">268 lbs</option><option value="269">269 lbs</option><option value="270">270 lbs</option><option value="271">271 lbs</option><option value="272">272 lbs</option><option value="273">273 lbs</option><option value="274">274 lbs</option><option value="275">275 lbs</option><option value="276">276 lbs</option><option value="277">277 lbs</option><option value="278">278 lbs</option><option value="279">279 lbs</option><option value="280">280 lbs</option><option value="281">281 lbs</option><option value="282">282 lbs</option><option value="283">283 lbs</option><option value="284">284 lbs</option><option value="285">285 lbs</option><option value="286">286 lbs</option><option value="287">287 lbs</option><option value="288">288 lbs</option><option value="289">289 lbs</option><option value="290">290 lbs</option><option value="291">291 lbs</option><option value="292">292 lbs</option><option value="293">293 lbs</option><option value="294">294 lbs</option><option value="295">295 lbs</option><option value="296">296 lbs</option><option value="297">297 lbs</option><option value="298">298 lbs</option><option value="299">299 lbs</option><option value="300">300 lbs</option><option value="301">301 lbs</option><option value="302">302 lbs</option><option value="303">303 lbs</option><option value="304">304 lbs</option><option value="305">305 lbs</option><option value="306">306 lbs</option><option value="307">307 lbs</option><option value="308">308 lbs</option><option value="309">309 lbs</option><option value="310">310 lbs</option><option value="311">311 lbs</option><option value="312">312 lbs</option><option value="313">313 lbs</option><option value="314">314 lbs</option><option value="315">315 lbs</option><option value="316">316 lbs</option><option value="317">317 lbs</option><option value="318">318 lbs</option><option value="319">319 lbs</option><option value="320">320 lbs</option><option value="321">321 lbs</option><option value="322">322 lbs</option><option value="323">323 lbs</option><option value="324">324 lbs</option><option value="325">325 lbs</option><option value="326">326 lbs</option><option value="327">327 lbs</option><option value="328">328 lbs</option><option value="329">329 lbs</option><option value="330">330 lbs</option><option value="331">331 lbs</option><option value="332">332 lbs</option><option value="333">333 lbs</option><option value="334">334 lbs</option><option value="335">335 lbs</option><option value="336">336 lbs</option><option value="337">337 lbs</option><option value="338">338 lbs</option><option value="339">339 lbs</option><option value="340">340 lbs</option><option value="341">341 lbs</option><option value="342">342 lbs</option><option value="343">343 lbs</option><option value="344">344 lbs</option><option value="345">345 lbs</option><option value="346">346 lbs</option><option value="347">347 lbs</option><option value="348">348 lbs</option><option value="349">349 lbs</option></select>')
                }

                function c(a) {
                    return a.write(" disabled ")
                }
                return a.register("templates/formoptions/weight-child", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/formoptions/weight-child", b, c)
                }
            }
        }), define("rdust!templates/formoptions/height", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<select name="height" data-validation="').reference(b.get("validation"), b, "h").write('" ').exists(b.get("isLoggedInChild"), b, {
                        block: c
                    }, null).write(' needsclick><option value="" disabled selected></option><option value="30">2\' 6"</option><option value="31">2\' 7"</option><option value="32">2\' 8"</option><option value="33">2\' 9"</option><option value="34">2\' 10"</option><option value="35">2\' 11"</option><option value="36">3\' 0"</option><option value="37">3\' 1"</option><option value="38">3\' 2"</option><option value="39">3\' 3"</option><option value="40">3\' 4"</option><option value="41">3\' 5"</option><option value="42">3\' 6"</option><option value="43">3\' 7"</option><option value="44">3\' 8"</option><option value="45">3\' 9"</option><option value="46">3\' 10"</option><option value="47">3\' 11"</option><option value="48">4\' 0"</option><option value="49">4\' 1"</option><option value="50">4\' 2"</option><option value="51">4\' 3"</option><option value="52">4\' 4"</option><option value="53">4\' 5"</option><option value="54">4\' 6"</option><option value="55">4\' 7"</option><option value="56">4\' 8"</option><option value="57">4\' 9"</option><option value="58">4\' 10"</option><option value="59">4\' 11"</option><option value="60">5\' 0"</option><option value="61">5\' 1"</option><option value="62">5\' 2"</option><option value="63">5\' 3"</option><option value="64">5\' 4"</option><option value="65">5\' 5"</option><option value="66">5\' 6"</option><option value="67">5\' 7"</option><option value="68">5\' 8"</option><option value="69">5\' 9"</option><option value="70">5\' 10"</option><option value="71">5\' 11"</option><option value="72">6\' 0"</option><option value="73">6\' 1"</option><option value="74">6\' 2"</option><option value="75">6\' 3"</option><option value="76">6\' 4"</option><option value="77">6\' 5"</option><option value="78">6\' 6"</option><option value="79">6\' 7"</option><option value="80">6\' 8"</option><option value="81">6\' 9"</option><option value="82">6\' 10"</option><option value="83">6\' 11"</option><option value="84">7\' 0"</option><option value="85">7\' 1"</option><option value="86">7\' 2"</option><option value="87">7\' 3"</option><option value="88">7\' 4"</option><option value="89">7\' 5"</option><option value="90">7\' 6"</option><option value="91">7\' 7"</option><option value="92">7\' 8"</option><option value="93">7\' 9"</option><option value="94">7\' 10"</option><option value="95">7\' 11"</option><option value="96">8\' 0"</option></select>')
                }

                function c(a) {
                    return a.write(" disabled ")
                }
                return a.register("templates/formoptions/height", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/formoptions/height", b, c)
                }
            }
        }), define("rdust!templates/formoptions/height-child", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<select name="height" data-validation="').reference(b.get("validation"), b, "h").write('" ').exists(b.get("isLoggedInChild"), b, {
                        block: c
                    }, null).write(' needsclick><option value="" disabled selected></option><option value="24">2\' 0"</option><option value="25">2\' 1"</option><option value="26">2\' 2"</option><option value="27">2\' 3"</option><option value="28">2\' 4"</option><option value="29">2\' 5"</option><option value="30">2\' 6"</option><option value="31">2\' 7"</option><option value="32">2\' 8"</option><option value="33">2\' 9"</option><option value="34">2\' 10"</option><option value="35">2\' 11"</option><option value="36">3\' 0"</option><option value="37">3\' 1"</option><option value="38">3\' 2"</option><option value="39">3\' 3"</option><option value="40">3\' 4"</option><option value="41">3\' 5"</option><option value="42">3\' 6"</option><option value="43">3\' 7"</option><option value="44">3\' 8"</option><option value="45">3\' 9"</option><option value="46">3\' 10"</option><option value="47">3\' 11"</option><option value="48">4\' 0"</option><option value="49">4\' 1"</option><option value="50">4\' 2"</option><option value="51">4\' 3"</option><option value="52">4\' 4"</option><option value="53">4\' 5"</option><option value="54">4\' 6"</option><option value="55">4\' 7"</option><option value="56">4\' 8"</option><option value="57">4\' 9"</option><option value="58">4\' 10"</option><option value="59">4\' 11"</option><option value="60">5\' 0"</option><option value="61">5\' 1"</option><option value="62">5\' 2"</option><option value="63">5\' 3"</option><option value="64">5\' 4"</option><option value="65">5\' 5"</option><option value="66">5\' 6"</option><option value="67">5\' 7"</option><option value="68">5\' 8"</option><option value="69">5\' 9"</option><option value="70">5\' 10"</option><option value="71">5\' 11"</option><option value="72">6\' 0"</option><option value="73">6\' 1"</option><option value="74">6\' 2"</option><option value="75">6\' 3"</option><option value="76">6\' 4"</option><option value="77">6\' 5"</option><option value="78">6\' 6"</option><option value="79">6\' 7"</option><option value="80">6\' 8"</option><option value="81">6\' 9"</option><option value="82">6\' 10"</option><option value="83">6\' 11"</option><option value="84">7\' 0"</option><option value="85">7\' 1"</option><option value="86">7\' 2"</option><option value="87">7\' 3"</option><option value="88">7\' 4"</option><option value="89">7\' 5"</option><option value="90">7\' 6"</option><option value="91">7\' 7"</option><option value="92">7\' 8"</option><option value="93">7\' 9"</option><option value="94">7\' 10"</option><option value="95">7\' 11"</option><option value="96">8\' 0"</option></select>')
                }

                function c(a) {
                    return a.write(" disabled ")
                }
                return a.register("templates/formoptions/height-child", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/formoptions/height-child", b, c)
                }
            }
        }), define("rdust!templates/formoptions/birthyear", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<select name="birthYear" data-validation="').reference(b.get("validation"), b, "h").write('" ').exists(b.get("isLoggedInChild"), b, {
                        block: c
                    }, null).write(' needsclick><option value="" disabled selected></option>').exists(b.get("invalidYear"), b, {
                        block: d
                    }, null).section(b.get("yearsRange"), b, {
                        block: e
                    }, null).write("</select>")
                }

                function c(a) {
                    return a.write(" disabled ")
                }

                function d(a, b) {
                    return a.write("<option disabled selected>").reference(b.get("invalidYear"), b, "h").write("</option>")
                }

                function e(a, b) {
                    return a.write("<option value=").reference(b.getPath(!0, []), b, "h").write(">").reference(b.getPath(!0, []), b, "h").write("</option>")
                }
                return a.register("templates/formoptions/birthyear", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/formoptions/birthyear", b, c)
                }
            }
        }), define("rdust!templates/formoptions/birthyear-child", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<select name="birthYear" data-validation="').reference(b.get("validation"), b, "h").write('" ').exists(b.get("isLoggedInChild"), b, {
                        block: c
                    }, null).write(' needsclick><option value="" disabled selected></option>').exists(b.get("invalidYear"), b, {
                        block: d
                    }, null).section(b.get("yearsRange"), b, {
                        block: e
                    }, null).write("</select>")
                }

                function c(a) {
                    return a.write(" disabled ")
                }

                function d(a, b) {
                    return a.write("<option disabled selected>").reference(b.get("invalidYear"), b, "h").write("</option>")
                }

                function e(a, b) {
                    return a.write("<option value=").reference(b.getPath(!0, []), b, "h").write(">").reference(b.getPath(!0, []), b, "h").write("</option>")
                }
                return a.register("templates/formoptions/birthyear-child", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/formoptions/birthyear-child", b, c)
                }
            }
        }), define("rdust!templates/formoptions/birthmonth", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<select name="birthMonth" data-validation="').reference(b.get("validation"), b, "h").write('" ').exists(b.get("isLoggedInChild"), b, {
                        block: c
                    }, null).write(" needsclick>").helper("select", b, {
                        block: d
                    }, {
                        key: q
                    }).write("</select>")
                }

                function c(a) {
                    return a.write(" disabled ")
                }

                function d(a, b) {
                    return a.write('<option value="" disabled selected></option><option value="1" ').helper("eq", b, {
                        block: e
                    }, {
                        value: "1"
                    }).write('>January</option><option value="2" ').helper("eq", b, {
                        block: f
                    }, {
                        value: "2"
                    }).write('>February</option><option value="3" ').helper("eq", b, {
                        block: g
                    }, {
                        value: "3"
                    }).write('>March</option><option value="4" ').helper("eq", b, {
                        block: h
                    }, {
                        value: "4"
                    }).write('>April</option><option value="5" ').helper("eq", b, {
                        block: i
                    }, {
                        value: "5"
                    }).write('>May</option><option value="6" ').helper("eq", b, {
                        block: j
                    }, {
                        value: "6"
                    }).write('>June</option><option value="7" ').helper("eq", b, {
                        block: k
                    }, {
                        value: "7"
                    }).write('>July</option><option value="8" ').helper("eq", b, {
                        block: l
                    }, {
                        value: "8"
                    }).write('>August</option><option value="9" ').helper("eq", b, {
                        block: m
                    }, {
                        value: "9"
                    }).write('>September</option><option value="10" ').helper("eq", b, {
                        block: n
                    }, {
                        value: "10"
                    }).write('>October</option><option value="11" ').helper("eq", b, {
                        block: o
                    }, {
                        value: "11"
                    }).write('>November</option><option value="12" ').helper("eq", b, {
                        block: p
                    }, {
                        value: "12"
                    }).write(">December</option>")
                }

                function e(a) {
                    return a.write("selected")
                }

                function f(a) {
                    return a.write("selected")
                }

                function g(a) {
                    return a.write("selected")
                }

                function h(a) {
                    return a.write("selected")
                }

                function i(a) {
                    return a.write("selected")
                }

                function j(a) {
                    return a.write("selected")
                }

                function k(a) {
                    return a.write("selected")
                }

                function l(a) {
                    return a.write("selected")
                }

                function m(a) {
                    return a.write("selected")
                }

                function n(a) {
                    return a.write("selected")
                }

                function o(a) {
                    return a.write("selected")
                }

                function p(a) {
                    return a.write("selected")
                }

                function q(a, b) {
                    return a.reference(b.get("birthMonth"), b, "h")
                }
                return a.register("templates/formoptions/birthmonth", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/formoptions/birthmonth", b, c)
                }
            }
        }), define("app/ui/views/pageviews/UserSettingsView", ["require", "app/ui/views/pageviews/BaseView", "app/ui/widgets/FormValidator", "rdust!templates/pageviews/user-settings", "lavaca/mvc/Router", "app/models/AuthModel", "app/models/StateModel", "$", "rdust!templates/headers/header", "rdust!templates/headers/back-header", "rdust!templates/formoptions/weight", "rdust!templates/formoptions/weight-child", "rdust!templates/formoptions/height", "rdust!templates/formoptions/height-child", "rdust!templates/formoptions/birthyear", "rdust!templates/formoptions/birthyear-child", "rdust!templates/formoptions/birthmonth"], function(a) {
            function b() {
                if (h.call(this), c.call(this), d.call(this), f.call(this), i.call(this), g.call(this), this.model.get("user").get("isChild") && e.call(this), Modernizr.msie) {
                    var a = this.el.find("select");
                    a.each(function(a, b) {
                        O(b).css("direction", "ltr")
                    }.bind(this))
                }
            }

            function c() {
                var a = this.el.find("label[for='firstName']"),
                    b = this.model.get("user").get("firstName");
                b.length > 0 && a.addClass("reveal")
            }

            function d() {
                var a = this.el.find("label[for='birthYear']"),
                    b = this.el.find("select[name='birthYear'] option"),
                    c = this.model.get("user").get("birthYear");
                b.each(function(b, d) {
                    O(d).val() == c && (O(d).attr("selected", !0), a.addClass("reveal"))
                })
            }

            function e() {
                var a = this.el.find("label[for='birthMonth']"),
                    b = this.el.find("select[name='birthMonth'] option"),
                    c = this.model.get("user").get("birthMonth");
                b.each(function(b, d) {
                    O(d).val() == c && (O(d).attr("selected", !0), a.addClass("reveal"))
                })
            }

            function f() {
                var a = this.el.find("label[for='height']"),
                    b = this.el.find("select[name='height'] option"),
                    c = this.model.get("user").get("height");
                b.each(function(b, d) {
                    O(d).val() == c && (O(d).attr("selected", !0), a.addClass("reveal"))
                })
            }

            function g() {
                var a = this.el.find("label[for='weight']"),
                    b = this.el.find("select[name='weight'] option"),
                    c = this.model.get("user").get("weight");
                b.each(function(b, d) {
                    O(d).val() == c && (O(d).attr("selected", !0), a.addClass("reveal"))
                })
            }

            function h() {
                var a = this.el.find("label[for='sleepGoal']"),
                    b = this.el.find("select[name='sleepGoal'] option"),
                    c = this.model.get("user").get("sleepGoal");
                b.each(function(b, d) {
                    O(d).val() == c && (O(d).attr("selected", !0), a.addClass("reveal"))
                })
            }

            function i() {
                var a = this.el.find("label[for='male']"),
                    b = this.el.find("label[for='female']"),
                    c = this.el.find("input[type='radio']"),
                    d = this.model.get("user").get("isMale");
                c.each(function(a, b) {
                    "Male" == O(b).val() && d && O(b).attr("checked", !0), "Female" != O(b).val() || d || O(b).attr("checked", !0)
                }), this.model.get("isLoggedInChild") && (a.css("color", " rgb(176, 179, 182) "), b.css("color", " rgb(176, 179, 182) "))
            }

            function j() {
                this.render(".bed-notification-users")
            }

            function k(a) {
                if (a && a.currentTarget) {
                    a.preventDefault(), a.stopPropagation();
                    var b = a ? this.el.find(a.currentTarget) : this.el.find(".switch.notifications-toggle"),
                        c = b.hasClass("on");
                    b.toggleClass("on", !c), this.model.setOutOfBedNotifications(!c)
                }
            }

            function l() {
                var a = this.el.find('.settings-form select[name="sleepGoal"]');
                a && a.length && this.model.get("user").set("sleepGoal", a.val())
            }

            function m() {
                var a = this.el.find('.settings-form input[name="firstName"]'),
                    b = a.val();
                a && a.length && !a.hasClass("invalid") && (this.model.get("user").set("firstName", b), this.model.setFirst(), this.updateHeader())
            }

            function n() {
                var a = this.el.find('.settings-form select[name="birthYear"]'),
                    b = a.val();
                a && a.length && this.model.get("user").set("birthYear", b)
            }

            function o() {
                var a = this.el.find('.settings-form select[name="birthMonth"]').val();
                if (a) try {
                    a = parseInt(a, 10), this.model.get("user").set("birthMonth", a)
                } catch (b) {}
            }

            function p() {
                var a = this.el.find('.settings-form input[id="male"]');
                if (a && a.length) {
                    var b = a.prop("checked");
                    this.model.get("user").set("isMale", b)
                }
            }

            function q() {
                var a = this.el.find('.settings-form select[name="weight"]');
                a && a.length && this.model.get("user").set("weight", a.val())
            }

            function r() {
                var a = this.el.find('.settings-form select[name="bedSide"]');
                if (a && a.length) try {
                    var b = parseInt(a.val(), 10);
                    this.model.get("user").set("side", b)
                } catch (c) {}
            }

            function s() {
                var a = this.el.find('.settings-form select[name="height"]');
                a && a.length && this.model.get("user").set("height", a.val())
            }

            function t() {
                var a = this.el.find('select[name="bedSide"]');
                "1" === a.val() ? (a.val("0"), this.model.get("user").set("side", 0)) : (a.val("1"), this.model.get("user").set("side", 1))
            }

            function u() {
                L.exec("/user/" + this.model.get("userId") + "/settings/create-account-credentials", null, {
                    model: this.model
                })
            }

            function v() {
                var a = this.el.find('.settings-form input[name="email"]');
                if (a && a.length && !a.hasClass("invalid")) {
                    var b = a.val();
                    this.model.get("user").set("email", b)
                }
            }

            function w() {
                L.exec("/user/" + this.model.get("userId") + "/settings/change-password", null, {
                    model: this.model
                })
            }

            function x() {
                this.render(".account-area")
            }

            function y(a) {
                try {
                    var b = O(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var c = b.prev();
                    c.val(""), c.removeClass("invalid valid"), c.focus()
                } catch (d) {
                    console.log(d)
                }
            }

            function z() {
                L.exec("/settings/add-sleeper", null, {
                    model: this.model
                })
            }

            function A(a) {
                a.sleeperId ? setTimeout(function() {
                    L.exec("/user/" + a.sleeperId + "/settings"), O(".save-sleeper").removeClass("disabled")
                }.bind(this), 150) : this.render()
            }

            function B() {
                O(".save-sleeper").removeClass("disabled"), window.customAlert.alert("Failed", null, "Failed to add new sleeper. Please try again later.")
            }

            function C() {
                this.model.get("userNotifications").enabled || k.call(this), L.exec("/user/" + this.model.get("userId") + "/settings/notifications", null, {
                    model: this.model
                })
            }

            function D() {
                this.model.get("userNotifications").children.length > 1 ? this.model.set("notificationsName", "they") : 1 === this.model.get("userNotifications").children.length && this.model.set("notificationsName", this.model.get("userNotifications").children[0].firstName), L.exec("/user/" + this.model.get("userId") + "/settings/notifications-set-time", null, {
                    model: this.model
                })
            }

            function E() {
                O(".cancel-email").hasClass("disabled") || (O(".cancel-email").addClass("disabled"), this.model.cancelEmailChange().then(function() {
                    console.log("Email canceled!")
                }.bind(this), function() {
                    console.log("Email not canceled!"), O(".cancel-email").removeClass("disabled")
                }.bind(this)))
            }

            function F() {
                this.model.editAccountCredentials("", "Random9999").then(function() {
                    console.log("Removed email!")
                }.bind(this), function() {
                    console.log("Did not remove email!")
                }.bind(this))
            }

            function G(a) {
                var b = this.el.find(a.currentTarget).attr("data-href");
                L.exec(b)
            }

            function H(a) {
                var b = this.el.find(a.currentTarget).attr("data-section");
                this.el.find(".section-collapsable[data-section=" + b + "]").toggle()
            }
            var I = a("app/ui/views/pageviews/BaseView"),
                J = a("app/ui/widgets/FormValidator"),
                K = a("rdust!templates/pageviews/user-settings"),
                L = a("lavaca/mvc/Router"),
                M = a("app/models/AuthModel"),
                N = a("app/models/StateModel"),
                O = a("$");
            a("rdust!templates/headers/header"), a("rdust!templates/headers/back-header"), a("rdust!templates/formoptions/weight"), a("rdust!templates/formoptions/weight-child"), a("rdust!templates/formoptions/height"), a("rdust!templates/formoptions/height-child"), a("rdust!templates/formoptions/birthyear"), a("rdust!templates/formoptions/birthyear-child"), a("rdust!templates/formoptions/birthmonth");
            var P = I.extend(function() {
                I.apply(this, arguments), this.mapEvent({
                    ".add-sleeper": {
                        tap: z
                    },
                    ".link": {
                        tap: G
                    },
                    ".display-child-names": {
                        tap: C
                    },
                    ".child-notification-settings .switch": {
                        tap: k
                    },
                    "button.create-account": {
                        tap: u
                    },
                    ".modify-account": {
                        tap: w
                    },
                    "span.clear": {
                        tap: y
                    },
                    ".switch-bed-side button": {
                        tap: t
                    },
                    ".switch-add-sleeper button": {
                        tap: t
                    },
                    ".switch-arrows": {
                        tap: t
                    },
                    ".remove-login": {
                        tap: F
                    },
                    ".cancel-email": {
                        tap: E
                    },
                    ".section-link": {
                        tap: H
                    },
                    "input, select": {
                        validation: this.onFieldValidation
                    },
                    model: {
                        addedSleeper: A,
                        failedAddSleeper: B,
                        setAccountChildrenNotifications: j,
                        setNotificationFrom: D,
                        setNotificationUntil: D,
                        newAccountCredentials: x
                    },
                    ext: {
                        state: {
                            object: N,
                            events: {
                                updatedUserSide: this.updateUserAfterSwitch.bind(this)
                            }
                        }
                    }
                }), this.mapWidget({
                    ".settings-form": {
                        TWidget: J
                    }
                })
            }, {
                className: "user-account-settings",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        K.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    b.call(this), I.prototype.onRenderSuccess.apply(this, arguments)
                },
                updateUserAfterSwitch: function() {
                    this.model && this.model.reinit(), this.render(".bed-side")
                },
                onFieldValidation: function(a, b) {
                    b.isInvalid ? O(a.currentTarget).closest(".section").toggleClass("invalid", "blur" === b.eventType).removeClass("valid") : b.isInvalid || O(a.currentTarget).closest(".section").addClass("valid").removeClass("invalid")
                },
                updateHeader: function() {
                    this.render("header")
                },
                updateModel: function() {
                    l.call(this), m.call(this), n.call(this), o.call(this), p.call(this), p.call(this), s.call(this), q.call(this), r.call(this), v.call(this)
                },
                beforeExit: function() {
                    return this.updateModel(), M && M.get("userId") ? this.model.saveSettings(!0) : Promise.resolve()
                }
            });
            return P
        }), define("rdust!templates/childviews/trends", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/header", b, {
                        pageTitle: c
                    }).write('<div class="trends-container overflow-scroll">').exists(b.get("fetchedTrends"), b, {
                        "else": d,
                        block: j
                    }, null).write("</div>")
                }

                function c(a, b) {
                    return a.reference(b.get("firstName"), b, "h").write("&rsquo;s Trends")
                }

                function d(a, b) {
                    return a.exists(b.get("hasFetched"), b, {
                        "else": e,
                        block: f
                    }, null)
                }

                function e(a) {
                    return a.write('<div class="loading-animation-view"></div><div class="loading-text">Loading</div>')
                }

                function f(a, b) {
                    return a.write("<div class='trends-message-container'>").exists(b.get("isChild"), b, {
                        "else": g,
                        block: i
                    }, null).write("</div>")
                }

                function g(a, b) {
                    return a.write("<div class='trends-message'>Trends will empower you to make changes that improve your sleep.<br/><br/>Check back after tracking activities for several days to see how they affect your sleep.</div><div class=\"start-tracking-button ").exists(b.get("yesterdayHasData"), b, {
                        block: h
                    }, null).write('">Start Activity Tracking For Last Night</div>')
                }

                function h(a) {
                    return a.write("has-data")
                }

                function i(a) {
                    return a.write("<div class='trends-message'>It looks like you don&rsquo;t have any activity tags to use for trends.<br/><br/>Once your parents start activity tracking for you, you&rsquo;ll be able to come here and see how things you do during the day affect your sleep.</div>")
                }

                function j(a, b) {
                    return a.write('<div class="t-pill-container"><div class="avg-sleep-msg">Avg SleepIQ<sup>&reg;</sup> Score<br/><div class="l90">Last 90 Days</div></div><div class="pill-chart" data-value="').reference(b.get("sleepQuotient"), b, "h").write('" data-animate="auto" data-sleep-iq="true" data-pills="20" data-open="true" data-rotation="90" data-pill-width="').reference(b.get("pillWidth"), b, "h").write('" data-pill-height="').reference(b.get("pillHeight"), b, "h").write('"><div class="circle"><div class="summary">').exists(b.get("noData"), b, {
                        "else": k,
                        block: l
                    }, null).write('</div></div></div></div><div class="trends-chart-container">').exists(b.get("trends"), b, {
                        block: m
                    }, null).exists(b.get("edpActivities"), b, {
                        block: o
                    }, null).write('<div class="manage-tags landscape-only">').exists(b.get("isChild"), b, {
                        "else": q,
                        block: r
                    }, null).write("</div></div>")
                }

                function k(a, b) {
                    return a.write('<div class="label">SleepIQ<sup>&reg;</sup></div><div class="number">').reference(b.get("sleepQuotient"), b, "h").write('</div><div class="info-icon"></div>')
                }

                function l(a) {
                    return a.write('<div class="label no-iq"><p>No Data Recorded for this Session.</p></div>')
                }

                function m(a, b) {
                    return a.write('<div class="tags-list-header"><div class="trends-last-text">ACTIVITY TAGS</div><div class="avg-sleep-text">AVG SLEEPIQ</div></div><ul class="trends-list">').section(b.get("trends"), b, {
                        block: n
                    }, null).write("</ul>")
                }

                function n(a, b) {
                    return a.write('<li class="trends-item  clearfix"><div class="trends-text"><div class="trend-name">').reference(b.get("tag"), b, "h").write('</div><div class="trend-count">Tracked on ').reference(b.get("count"), b, "h").write(" days by ").reference(b.get("firstName"), b, "h").write('</div></div><div class="trend-average">').reference(b.get("average"), b, "h").write("</div></li>")
                }

                function o(a, b) {
                    return a.write('<div class="tags-list-header connected"><div class="trends-last-text">CONNECTED ACTIVITY TAGS</div><div class="avg-sleep-text">AVG SLEEPIQ</div></div><ul class="trends-list">').section(b.get("edpActivities"), b, {
                        block: p
                    }, null).write("</ul>")
                }

                function p(a, b) {
                    return a.write('<li class="trends-item  clearfix"><div class="trends-text"><div class="trend-name">').reference(b.get("tag"), b, "h").write('</div><div class="trend-count">Tracked on ').reference(b.get("count"), b, "h").write(' days by <span class="provider">').reference(b.getPath(!1, ["providerData", "name"]), b, "h").write('</span></div></div><div class="trend-average">').reference(b.get("avg"), b, "h").write("</div></li>")
                }

                function q(a) {
                    return a.write("Keep tracking your activities to see how they affect your sleep.")
                }

                function r(a) {
                    return a.write("Ask your parents to keep tracking your activities to see how they affect your sleep.")
                }
                return a.register("templates/childviews/trends", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/trends", b, c)
                }
            }
        }), define("app/ui/views/childviews/TrendsView", ["require", "lavaca/mvc/View", "lavaca/mvc/Router", "app/ui/widgets/PillChart", "moment", "app/utils/MixPanelManager", "app/ui/views/childviews/LoadingAnimationView", "rdust!templates/childviews/trends", "rdust!templates/headers/header"], function(a) {
            function b() {
                window.customAlert("Your individual quality and length of sleep, consisting of restful time in bed, average heart and breathing rates, motion and bed exits. Your SleepIQ<sup>&reg;</sup> score is information that will empower you to sleep better &mdash; there’s no such thing as a bad score.", null, "bottom")
            }
            var c = a("lavaca/mvc/View"),
                d = a("lavaca/mvc/Router"),
                e = a("app/ui/widgets/PillChart"),
                f = a("moment"),
                g = a("app/utils/MixPanelManager"),
                h = a("app/ui/views/childviews/LoadingAnimationView"),
                i = a("rdust!templates/childviews/trends");
            a("rdust!templates/headers/header");
            var j = c.extend(function() {
                c.apply(this, arguments), this.mapWidget({
                    ".pill-chart": {
                        TWidget: e
                    }
                }), this.mapChildView({
                    ".loading-animation-view": {
                        TView: h,
                        model: this.model
                    }
                }), this.mapEvent({
                    ".start-tracking-button": {
                        tap: this.tapped
                    },
                    model: {
                        reset: this.modelUpdate
                    },
                    ".pill-chart .circle": {
                        tap: b
                    }
                })
            }, {
                className: "trends",
                autoRender: !0,
                generateHtml: function(a) {
                    return a && (a.pillWidth = Modernizr.tablet ? "4" : "2", a.pillHeight = Modernizr.tablet ? "18" : "18"), new Promise(function(b) {
                        i.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                tapped: function() {
                    var a = {
                        canEdit: !0,
                        date: f().format("YYYY-MM-DD"),
                        checkedTags: this.model.get("tags") || [],
                        name: this.model.get("firstName") || "",
                        sleeperId: this.model.get("sleeperId"),
                        isChild: this.model.get("selectedUserIsChild")
                    };
                    d.exec("/modals/activities", null, {
                        model: a
                    })
                },
                modelUpdate: function() {
                    this.render().then(function() {
                        var a = this.el.find(".manage-tags"),
                            b = this.model.get("trends").length;
                        b > 5 && a.addClass("over-five"), g.prototype.trackKidTrends(this.model.toObject())
                    }.bind(this))
                }
            });
            return j
        }), define("app/service/TrendsService", ["require", "app/service/Service", "lavaca/util/Disposable", "app/models/StateModel", "app/service/DemoData"], function(a) {
            var b = a("app/service/Service"),
                c = a("lavaca/util/Disposable"),
                d = a("app/models/StateModel"),
                e = a("app/service/DemoData"),
                f = c.extend(function() {
                    c.apply(this, arguments), this._USEMOCK = !1
                }, {
                    getTags: function(a, c, f) {
                        return d.get("demoMode") ? Promise.resolve(e.getTags(a)) : b.makeRequest("sleeper/" + a + "/sleepDataByTag/?startDate=" + c + "&endDate=" + f, null, "GET")
                    }
                });
            return new f
        }), define("app/models/viewmodels/TrendsViewModel", ["require", "lavaca/mvc/Model", "app/models/FamilyModel", "moment", "mout/object/get", "app/models/StateModel", "app/service/SleepDataService", "app/service/EdpAccountService", "app/service/TrendsService"], function(a) {
            function b() {
                var a = !1;
                return this.sleepViewModel && this.sleepViewModel.activeDate && this.sleepViewModel.models && this.sleepViewModel.each(function(b, c) {
                    c.get("date") === this.sleepViewModel.activeDate && (a = !c.get("noData"))
                }.bind(this)), a
            }

            function c(a) {
                console.log("get averaged", a);
                var b = a.tags,
                    c = a.tagTrends,
                    d = [];
                for (var f in b) {
                    for (var g = 0, h = 0, i = 0, j = b[f].length; j > i; ++i) k(b[f][i], "session.longest") && (g += b[f][i].session.sleepQuotient, h++);
                    var l = c.find(function(a) {
                        return a.name === f
                    });
                    l && d.push({
                        count: h,
                        tag: f,
                        average: l.sleepIQWith
                    })
                }
                return e.call(this, d)
            }

            function d(a) {
                if (a.demo && !this.get("selectedUserIsChild")) return console.log("is demo", a), a.activities;
                var b = a.activities,
                    c = [];
                return b.forEach(function(a) {
                    for (var b in a.partner)
                        if (null !== a.partner[b].summary_data) {
                            var d = a.partner[b].summary_data.split(/, |,/),
                                e = g.call(this, b);
                            d.forEach(function(d) {
                                "nest" === b && d.split(" - ").length > 1 && (e.name = e.name + " " + d.split(" - ")[0], d = "Avg Temp " + parseInt(d.split(" - ")[1]));
                                var f = c.find(function(a) {
                                        return a.tag === d && a.providerData.name === e.name
                                    }),
                                    g = this.sleepViewModel.filter({
                                        date: a.activityDate
                                    });
                                if (g && g.length > 0 && d.length > 0 && g[0].get("sleepQuotient")) {
                                    var h = g[0].get("sleepQuotient");
                                    f ? (f.count++, f.avg = Math.round((f.avg * (f.count - 1) + h) / f.count)) : c.push({
                                        tag: d,
                                        count: 1,
                                        avg: h,
                                        providerData: e
                                    })
                                }
                            }.bind(this))
                        }
                }.bind(this)), f.call(this, c)
            }

            function e(a) {
                var b = [],
                    c = [],
                    d = [];
                if (a && a.length > 1) a.forEach(function(a) {
                    d.push(a.tag)
                }), d.sort(), d.forEach(function(b) {
                    var d = b;
                    a.forEach(function(a) {
                        d == a.tag && c.push(a)
                    })
                }), b.push(c.shift()), c.forEach(function(a) {
                    var c = !1,
                        d = a;
                    b.forEach(function(a, e) {
                        !c && d.count && a.count && d.count > a.count && (c = !0, b.splice(e, 0, d))
                    }), c || b.push(a)
                });
                else if (a && 1 == a.length) return a;
                return b
            }

            function f(a) {
                return a.sort(function(a, b) {
                    return a.providerData.order < b.providerData.order ? -1 : a.providerData.order > b.providerData.order ? 1 : a.count >= b.count ? -1 : a.count < b.count ? 1 : 0
                }), a
            }

            function g(a) {
                var b = this.get("providers");
                return provider = b.find(function(b) {
                    return b.id === a
                })
            }
            var h = a("lavaca/mvc/Model"),
                i = a("app/models/FamilyModel"),
                j = a("moment"),
                k = a("mout/object/get"),
                l = a("app/models/StateModel"),
                m = (a("app/service/SleepDataService"), a("app/service/EdpAccountService")),
                n = a("app/service/TrendsService"),
                o = h.extend(function(a) {
                    h.call(this, arguments), l.on("tagsUpdated", this.fetch.bind(this)), this.sleepViewModel = a
                }, {
                    dateFormat: "YYYY-MM-DD",
                    activeDate: j(),
                    fetch: function() {
                        var a = j().format("YYYY-MM-DD"),
                            b = j().subtract(3, "months").format("YYYY-MM-DD"),
                            e = i.getFamily()[i.getLoggedInUserIndex()],
                            f = i.getSelectedUser(),
                            g = f.sleeperId;
                        this.set("firstName", f.firstName), this.set("isChild", e.get("isChild")), this.set("selectedUserIsChild", i.getSelectedUser().isChild), n.getTags(g, b, a).then(function(h) {
                            this.set("trends", c.call(this, h)), this.get("trends").length > 0 && this.set("fetchedTrends", !0), m.getProviders().then(function(c) {
                                this.set("providers", c.providers);
                                var h = !1;
                                c.providers.forEach(function(a) {
                                    a.connected && (h = !0)
                                }), h || e.get("sleeperId") !== f.sleeperId ? m.getActivities(g, b, a).then(function(a) {
                                    this.set("edpActivities", d.call(this, a)), this.get("edpActivities").length > 0 && this.set("fetchedTrends", !0), this.sleepViewModel && this.sleepViewModel.get("months") ? this.updateTrends() : this.sleepViewModel && this.sleepViewModel.fetch().then(function() {
                                        this.updateTrends()
                                    }.bind(this), function() {
                                        this.set("hasFetched", !0), window.customAlert.alert("Something went wrong calculating your trends. Please try again.")
                                    }.bind(this))
                                }.bind(this), function() {
                                    console.warn("err fetching edp activities"), this.set("hasFetched", !0), 0 === this.get("trends").length && this.set("fetchedTrends", !1), this.updateTrends()
                                }) : (this.set("hasFetched", !0), 0 === this.get("trends").length && this.set("fetchedTrends", !1), this.updateTrends())
                            }.bind(this), function(a) {
                                console.warn("edp err", a), 0 === this.get("trends").length && this.set("fetchedTrends", !1), this.updateTrends()
                            }.bind(this))
                        }.bind(this), function(a) {
                            return window.customAlert.alert(a, null, "Connectivity Error"), a
                        })
                    },
                    updateTrends: function() {
                        var a = 0,
                            c = 0,
                            d = 0,
                            e = this.sleepViewModel.get("days");
                        e && e.forEach(function(a) {
                            var b = 0;
                            try {
                                a.sleepQuotient && (b = parseInt(a.sleepQuotient, 10), d += b, c++)
                            } catch (a) {}
                        }.bind(this)), a = d / c, this.set("sleepQuotient", Math.round(a)), this.set("yesterdayHasData", b.call(this)), this.set("hasFetched", !0), l.get("demoMode") && !this.get("selectedUserIsChild") && this.set("sleepQuotient", 76), this.trigger("reset")
                    },
                    dispose: function() {
                        l.off("tagsUpdated"), h.prototype.dispose.apply(this, arguments)
                    }
                });
            return o
        }), define("rdust!templates/childviews/GoalsProgressView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write("<div class='progress-stars-container'><div class=\"stars-container\"><ul>").section(b.get("goalDays"), b, {
                        block: c
                    }, null).write("</ul></div></div>")
                }

                function c(a, b) {
                    return a.write("<li class='day-star ").reference(b.get("goalMet"), b, "h").write("' data-goal-date=\"").reference(b.get("date"), b, "h").write('"><div class="progress-star"></div><div class="day">').reference(b.get("initial"), b, "h").write("</div></li>")
                }
                return a.register("templates/childviews/GoalsProgressView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/GoalsProgressView", b, c)
                }
            }
        }), define("app/ui/views/childviews/GoalsProgressView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/GoalsProgressView", "moment"], function(a) {
            function b() {
                for (var a = this.model.get("date"), b = f(a).day("Sunday"), d = [], e = 0; 7 > e; e++) {
                    var g = b.clone().add(e, "days");
                    d.push({
                        date: g.format("YYYY-MM-DD"),
                        initial: g.format("dddd").slice(0, 1),
                        goalMet: c.call(this, g, a)
                    })
                }
                return this.model.set("goalDays", d), d
            }

            function c(a, b) {
                for (var c = this.model.get("goal"), d = this.model.get("goalEntries"), e = 0, g = d.length; g > e; ++e)
                    if (d[e].goalId === c.goalId && d[e].date === a.format("YYYY-MM-DD")) return 1 === d[e].status ? "success" : "fail";
                return b && f(b).diff(f(a), "days") >= 0 ? "fail" : null
            }
            var d = a("lavaca/mvc/View"),
                e = a("rdust!templates/childviews/GoalsProgressView"),
                f = a("moment"),
                g = d.extend(function() {
                    d.apply(this, arguments)
                }, {
                    autoRender: !0,
                    className: "goalsprogress",
                    generateHtml: function(a) {
                        return a.goalDays = b.call(this), new Promise(function(b) {
                            e.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return g
        }), define("rdust!templates/childviews/goals", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/header", b, {
                        pageTitle: c
                    }).write("<div class='content-wrapper'>").notexists(b.get("hasFetched"), b, {
                        "else": d,
                        block: z
                    }, null).write("</div>")
                }

                function c(a, b) {
                    return a.reference(b.get("childName"), b, "h").write("&rsquo;s Goal")
                }

                function d(a, b) {
                    return a.exists(b.get("goals"), b, {
                        "else": e,
                        block: k
                    }, null)
                }

                function e(a, b) {
                    return a.write("<div class='no-goals-text'><div class=\"goals-progress-view\"></div><div class='nogoals-header'>").exists(b.getPath(!1, ["loggedInUser", "isChild"]), b, {
                        "else": f,
                        block: g
                    }, null).write("</div><div class='nogoals-subtext'>").exists(b.getPath(!1, ["loggedInUser", "isChild"]), b, {
                        "else": h,
                        block: i
                    }, null).write('</div></div><div class="add-goal-button add-new ').exists(b.getPath(!1, ["loggedInUser", "isChild"]), b, {
                        block: j
                    }, null).write('">Add Goal</div>')
                }

                function f(a, b) {
                    return a.reference(b.get("childName"), b, "h").write(" doesn&rsquo;t have a goal set up")
                }

                function g(a) {
                    return a.write("You don&rsquo;t have a goal set up")
                }

                function h(a, b) {
                    return a.write("Setting a goal for ").reference(b.get("childName"), b, "h").write(" is a great way to help develop healthy sleep habits.")
                }

                function i(a) {
                    return a.write("Talk to your parents about setting a sleep goal for you!")
                }

                function j(a) {
                    return a.write("hidden")
                }

                function k(a, b) {
                    return a.section(b.get("goals"), b, {
                        block: l
                    }, null)
                }

                function l(a, b) {
                    return a.write("<div class='goal-container'><div class=\"tablet-only\"><div class=\"divider right\"></div><div class='goal-wrapper'><div class='goal-title'>").reference(b.get("goalTitle"), b, "h").write("<div class='goal-type-subtext'>").helper("select", b, {
                        block: m
                    }, {
                        key: p
                    }).write(" ").reference(b.get("formattedTime"), b, "h").write("</div><div class='goal-details'>Details</div></div><div class='goal-type' data-goal-type=\"").reference(b.get("goalType"), b, "h").write('" data-goal-id="').reference(b.get("goalId"), b, "h").write('" data-goal-time="').reference(b.get("goalTime"), b, "h").write("\"></div></div></div><div class='progress-status'><div class='progress-text'>").helper("eq", b, {
                        "else": q,
                        block: x
                    }, {
                        key: y,
                        value: "0"
                    }).write("</div></div></div>")
                }

                function m(a, b) {
                    return a.helper("eq", b, {
                        block: n
                    }, {
                        value: "Stay in bed"
                    }).helper("default", b, {
                        block: o
                    }, null)
                }

                function n(a) {
                    return a.write("until")
                }

                function o(a) {
                    return a.write("by")
                }

                function p(a, b) {
                    return a.reference(b.get("goalTitle"), b, "h")
                }

                function q(a, b) {
                    return a.write('<div class="message">You have reached your goal<br />').reference(b.get("daysSuccessful"), b, "h").write(" ").helper("eq", b, {
                        "else": r,
                        block: s
                    }, {
                        key: t,
                        value: "1"
                    }).write(" in a row!</div><div class='success-star'><div class='star-days'>").reference(b.get("daysSuccessful"), b, "h").write("<div class='days-text'>").helper("eq", b, {
                        "else": u,
                        block: v
                    }, {
                        key: w,
                        value: "1"
                    }).write("</div></div></div>")
                }

                function r(a) {
                    return a.write("days")
                }

                function s(a) {
                    return a.write("day")
                }

                function t(a, b) {
                    return a.reference(b.get("daysSuccessful"), b, "h")
                }

                function u(a) {
                    return a.write("days")
                }

                function v(a) {
                    return a.write("day")
                }

                function w(a, b) {
                    return a.reference(b.get("daysSuccessful"), b, "h")
                }

                function x(a) {
                    return a.write('<div class="message">You have not met your goal yet.</div>')
                }

                function y(a, b) {
                    return a.reference(b.get("daysSuccessful"), b, "h")
                }

                function z(a) {
                    return a.write('<div class="loading-animation-view"></div><div class="loading-text">Loading</div>')
                }
                return a.register("templates/childviews/goals", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/goals", b, c)
                }
            }
        }), define("app/ui/views/childviews/GoalsView", ["require", "lavaca/mvc/View", "lavaca/mvc/Model", "lavaca/mvc/Router", "app/models/StateModel", "app/ui/views/childviews/GoalsProgressView", "app/ui/views/childviews/LoadingAnimationView", "rdust!templates/childviews/goals", "moment", "$", "app/utils/MixPanelManager", "rdust!templates/headers/header"], function(a) {
            function b() {
                for (var a = this.model.get("goals"), b = 0, c = a.length; c > b; ++b) {
                    var e = {};
                    e[".goal-type[data-goal-type=" + a[b].goalType + "]"] = {
                        TView: f,
                        model: new d({
                            date: i(),
                            goal: a[b],
                            goalEntries: this.model.get("goalEntries")
                        })
                    }, this.mapChildView(e)
                }
                this.render()
            }
            var c = a("lavaca/mvc/View"),
                d = a("lavaca/mvc/Model"),
                e = a("lavaca/mvc/Router"),
                f = (a("app/models/StateModel"), a("app/ui/views/childviews/GoalsProgressView")),
                g = a("app/ui/views/childviews/LoadingAnimationView"),
                h = a("rdust!templates/childviews/goals"),
                i = a("moment"),
                j = a("$"),
                k = a("app/utils/MixPanelManager");
            a("rdust!templates/headers/header");
            var l = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".add-new, .add-new-goal": {
                        tap: this.addGoal
                    },
                    ".primary": {
                        tap: this.setPrimary
                    },
                    ".goal-container": {
                        tap: this.showDetails
                    },
                    model: {
                        reset: this.refresh
                    }
                }), this.mapChildView({
                    ".loading-animation-view": {
                        TView: g,
                        model: this.model
                    }
                })
            }, {
                className: "goals",
                autoRender: !0,
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        h.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    b.call(this)
                },
                showDetails: function(a) {
                    var b, c = j(a.currentTarget),
                        d = c.find(".goal-type").data("goal-id"),
                        f = c.find(".goal-type").data("goal-time"),
                        g = Math.floor(f / 60),
                        h = f - 60 * g,
                        i = this.model.get("goals"),
                        k = g > 12 ? g - 12 : g;
                    k = 0 == k ? 12 : k, this.model.set("goalId", d), this.model.set("goalTime", f), this.model.set("goalTimeMinutes", h), this.model.set("goalTimeHours", k), this.model.set("isAm", g >= 12 ? !1 : !0);
                    for (var l = 0, m = i.length; m > l; ++l) i[l].goalId === this.model.get("goalId") && (b = i[l]);
                    this.model.set("goal", b), e.exec("/goals/detail", null, {
                        model: this.model
                    })
                },
                addGoal: function() {
                    e.exec("/goals/addgoal", null, {
                        model: this.model
                    })
                },
                setPrimary: function(a) {
                    a.preventDefault(), a.stopPropagation(), e.exec("/goals/setprimary", null, {
                        model: this.model
                    })
                },
                refresh: function() {
                    this.model && !this.model.get("hasLoaded") && (this.model.set("hasLoaded", !0), b.call(this), k.prototype.trackKidGoals(this.model.toObject()))
                }
            });
            return l
        }), define("app/models/viewmodels/GoalsViewModel", ["require", "lavaca/mvc/Model", "app/models/StateModel", "app/service/GoalsService", "app/models/FamilyModel", "mout/object/get", "moment"], function(a) {
            function b(a) {
                for (var b, c, d, e = a.goals, f = 0, g = e.length; g > f; ++f)
                    if (void 0 !== e[f]) {
                        b = Math.floor(e[f].goalTime / 60), c = e[f].goalTime - 60 * b;
                        var h = b > 12 ? b - 12 : b;
                        h = 0 === h ? 12 : h, d = String(h) + ":", d += 10 > c ? "0" + String(c) : String(c), d += b >= 12 ? " pm" : " am", e[f].formattedTime = d;
                        var i = "",
                            j = "";
                        0 === e[f].goalType ? (i = "Be in bed on time", j = "have gone to bed on time") : 1 === e[f].goalType ? (i = "Stay in bed", j = "stayed in bed until your goal") : 2 === e[f].goalType && (i = "Get up", j = "got out of bed on time"), e[f].goalTitle = i, e[f].goalDesc = j
                    }
                return e
            }

            function c(a) {
                return a && "function" == typeof a.sort && a.sort(function(a, b) {
                    return k(a.date).diff(k(b.date), "days") < 0 ? -1 : 1
                }), a
            }

            function d(a) {
                for (var b = this.get("goals"), c = 0, d = b.length; d > c; ++c) {
                    b[c].daysSuccessful = 0;
                    for (var e = 0, f = a.length; f > e; ++e) b[c].goalId === a[e].goalId && (b[c].daysSuccessful = a[e].status ? b[c].daysSuccessful + 1 : 0)
                }
                if (g.get("demoMode"))
                    for (var c = 0, d = b.length; d > c; ++c) b[c].daysSuccessful = k().diff(k().startOf("week"), "days") + 1;
                this.set("goals", b)
            }

            function e(a) {
                var b = [];
                if (a.length > 1) {
                    for (var c = 0, d = a.length; d > c; ++c)
                        if (a[c].isPrimary) return b.push(a[c]), b;
                    return a[0]
                }
                return a
            }
            var f = a("lavaca/mvc/Model"),
                g = a("app/models/StateModel"),
                h = a("app/service/GoalsService"),
                i = a("app/models/FamilyModel"),
                j = a("mout/object/get"),
                k = a("moment"),
                l = f.extend(function() {
                    f.call(this, arguments), this.on("goalsUpdated", this.fetch.bind(this))
                }, {
                    fetch: function(a) {
                        a && g.trigger("goalsUpdated"), this.clear();
                        var f = i.getFamily()[i.getLoggedInUserIndex()],
                            l = i.getSelectedUser(),
                            m = l.sleeperId;
                        h.getSleeperGoals(m).then(function(a) {
                            a && a.goals && this.set("goals", e(b(a))), h.getSleeperGoalsList(m, k().startOf("week").format("YYYY-MM-DD"), k().format("YYYY-MM-DD")).then(function(a) {
                                a && a.goalEntries && (a.goalEntries = c(a.goalEntries), this.set("goalEntries", a.goalEntries), d.call(this, a.goalEntries)), this.set("hasFetched", !0), this.trigger("reset"), g.get("demoMode") && setTimeout(function() {
                                    this.trigger("reset")
                                }.bind(this), 100)
                            }.bind(this))
                        }.bind(this), function(a) {
                            a = "string" == typeof a ? a : j(a, "responseJSON.Error.Message"), window.customAlert.alert(a)
                        }), this.set("loggedInUser", f), this.set("isChild", !0), this.set("selectedUser", l), this.set("childName", l.firstName)
                    },
                    dispose: function() {
                        this.off("goalsUpdated", this.fetch.bind(this)), f.prototype.dispose.apply(this, arguments)
                    }
                });
            return l
        }), define("rdust!templates/childviews/routine", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/routine-header", b, {
                        pageTitle: "Bedtime Routine"
                    }).write('<div class="content-wrap ').exists(b.get("routineStarted"), b, {
                        block: c
                    }, null).write("\"><!--This is a child's view. -->").exists(b.get("hasFetched"), b, {
                        "else": d,
                        block: e
                    }, null).write("</div>")
                }

                function c(a) {
                    return a.write("started")
                }

                function d(a) {
                    return a.write('<div class="loading-animation-view"></div><div class="loading-text">Loading</div>')
                }

                function e(a, b) {
                    return a.write('<div class="landscape-container"><div class="doughnut-wrapper" ><div class="doughnut"><div class="timer-countdown">Time To Bed<div class="time-display">').reference(b.getPath(!1, ["routine", "duration"]), b, "h").write('</div><div class="time-inc">minutes</div></div><div class="timer-label"><div class="duration">Duration</div><select class="routine-time" name="routineTime" needsclick ').exists(b.get("isChild"), b, {
                        block: f
                    }, null).write(">").helper("select", b, {
                        block: g
                    }, {
                        key: t
                    }).write("</select><div class='edit-landscape ").exists(b.get("isChild"), b, {
                        block: u
                    }, null).write('\'></div></div><div class="progress" data-donutsize="').reference(b.get("donutsize"), b, "h").write('" data-strokewidth="').reference(b.get("strokewidth"), b, "h").write('" data-primarycolor="#f48935"></div></div></div><div class="routine-container"><div class="list-header">').reference(b.getPath(!1, ["selectedUser", "firstName"]), b, "h").write('&rsquo;s Routine<div class="divider"></div></div><div class="overflow-scroll ').exists(b.get("isChild"), b, {
                        block: v
                    }, null).write('"><div class="overflow-scroll-inner"><ul class="routine-list">').notexists(b.get("isChild"), b, {
                        block: w
                    }, null).section(b.getPath(!1, ["routine", "routines"]), b, {
                        block: y
                    }, null).write('</ul><div class="set-duration ').exists(b.get("isChild"), b, {
                        block: D
                    }, null).write('"><div class="list-header">Settings</div><div class="time-display"><div class="timer-label">Duration<select name="routineTime" needsclick ').exists(b.get("isChild"), b, {
                        block: E
                    }, null).write(">").helper("select", b, {
                        block: F
                    }, {
                        key: S
                    }).write('</select></div><div class="time-caret"></div></div></div></div></div><div class="start-routine-button">Start Routine Now</div></div></div><div class="routine-background"><div class="stars-background"><span data-star="1"></span><span data-star="2"></span><span data-star="3"></span><span data-star="4"></span><span data-star="5"></span><span data-star="6"></span><span data-star="7"></span><span data-star="8"></span><span data-star="9"></span><span data-star="10"></span><span data-star="11"></span><span data-star="12"></span><span data-star="13"></span><span data-star="14"></span></div><span class="cloud cloud-left"></span><span class="cloud cloud-right"></span><span class="moon"></span></div>')
                }

                function f(a) {
                    return a.write("disabled")
                }

                function g(a, b) {
                    return a.write('<option value="5" ').helper("eq", b, {
                        block: h
                    }, {
                        value: "5"
                    }).write('>5 minutes</option><option value="10" ').helper("eq", b, {
                        block: i
                    }, {
                        value: "10"
                    }).write('>10 minutes</option><option value="15" ').helper("eq", b, {
                        block: j
                    }, {
                        value: "15"
                    }).write('>15 minutes</option><option value="20" ').helper("eq", b, {
                        block: k
                    }, {
                        value: "20"
                    }).write('>20 minutes</option><option value="25" ').helper("eq", b, {
                        block: l
                    }, {
                        value: "25"
                    }).write('>25 minutes</option><option value="30" ').helper("eq", b, {
                        block: m
                    }, {
                        value: "30"
                    }).write('>30 minutes</option><option value="35" ').helper("eq", b, {
                        block: n
                    }, {
                        value: "35"
                    }).write('>35 minutes</option><option value="40" ').helper("eq", b, {
                        block: o
                    }, {
                        value: "40"
                    }).write('>40 minutes</option><option value="45" ').helper("eq", b, {
                        block: p
                    }, {
                        value: "45"
                    }).write('>45 minutes</option><option value="50" ').helper("eq", b, {
                        block: q
                    }, {
                        value: "50"
                    }).write('>50 minutes</option><option value="55" ').helper("eq", b, {
                        block: r
                    }, {
                        value: "55"
                    }).write('>55 minutes</option><option value="60" ').helper("eq", b, {
                        block: s
                    }, {
                        value: "60"
                    }).write(">60 minutes</option>")
                }

                function h(a) {
                    return a.write("selected")
                }

                function i(a) {
                    return a.write("selected")
                }

                function j(a) {
                    return a.write("selected")
                }

                function k(a) {
                    return a.write("selected")
                }

                function l(a) {
                    return a.write("selected")
                }

                function m(a) {
                    return a.write("selected")
                }

                function n(a) {
                    return a.write("selected")
                }

                function o(a) {
                    return a.write("selected")
                }

                function p(a) {
                    return a.write("selected")
                }

                function q(a) {
                    return a.write("selected")
                }

                function r(a) {
                    return a.write("selected")
                }

                function s(a) {
                    return a.write("selected")
                }

                function t(a, b) {
                    return a.reference(b.getPath(!1, ["routine", "duration"]), b, "h")
                }

                function u(a) {
                    return a.write("child-mode")
                }

                function v(a) {
                    return a.write("child-mode")
                }

                function w(a, b) {
                    return a.write('<li class="add-item" ').exists(b.get("hide-add"), b, {
                        block: x
                    }, null).write('><div class="icon add"></div><div class="add-item-input item-input">Add Another Item</div><div class="divider"></div></li>')
                }

                function x(a) {
                    return a.write('style="display: none;"')
                }

                function y(a, b) {
                    return a.write('<li class="edit-item ').reference(b.get("check"), b, "h").write(" ").notexists(b.get("isChild"), b, {
                        block: z
                    }, null).write('" data-id="').reference(b.get("routineId"), b, "h").write('" data-sequence="').reference(b.get("sequence"), b, "h").write('"><div class="swipe-wrapper ').reference(b.get("check"), b, "h").write('"><div class="icon ').exists(b.get("routineStarted"), b, {
                        "else": A,
                        block: B
                    }, null).write('"></div><div class="edit-item-input item-input ').reference(b.get("check"), b, "h").write('">').reference(b.get("name"), b, "h").write("</div></div>").notexists(b.get("isChild"), b, {
                        block: C
                    }, null).write('<div class="divider"></div></li>')
                }

                function z(a) {
                    return a.write("draggable-routine")
                }

                function A(a) {
                    return a.write("dots")
                }

                function B(a, b) {
                    return a.write("check-circle ").reference(b.get("check"), b, "h")
                }

                function C(a) {
                    return a.write('<div class="icon medium edit"></div><div class="icon medium trash"></div>')
                }

                function D(a) {
                    return a.write("is-child")
                }

                function E(a) {
                    return a.write("disabled")
                }

                function F(a, b) {
                    return a.write('<option value="5" ').helper("eq", b, {
                        block: G
                    }, {
                        value: "5"
                    }).write('>5 minutes</option><option value="10" ').helper("eq", b, {
                        block: H
                    }, {
                        value: "10"
                    }).write('>10 minutes</option><option value="15" ').helper("eq", b, {
                        block: I
                    }, {
                        value: "15"
                    }).write('>15 minutes</option><option value="20" ').helper("eq", b, {
                        block: J
                    }, {
                        value: "20"
                    }).write('>20 minutes</option><option value="25" ').helper("eq", b, {
                        block: K
                    }, {
                        value: "25"
                    }).write('>25 minutes</option><option value="30" ').helper("eq", b, {
                        block: L
                    }, {
                        value: "30"
                    }).write('>30 minutes</option><option value="35" ').helper("eq", b, {
                        block: M
                    }, {
                        value: "35"
                    }).write('>35 minutes</option><option value="40" ').helper("eq", b, {
                        block: N
                    }, {
                        value: "40"
                    }).write('>40 minutes</option><option value="45" ').helper("eq", b, {
                        block: O
                    }, {
                        value: "45"
                    }).write('>45 minutes</option><option value="50" ').helper("eq", b, {
                        block: P
                    }, {
                        value: "50"
                    }).write('>50 minutes</option><option value="55" ').helper("eq", b, {
                        block: Q
                    }, {
                        value: "55"
                    }).write('>55 minutes</option><option value="60" ').helper("eq", b, {
                        block: R
                    }, {
                        value: "60"
                    }).write(">60 minutes</option>")
                }

                function G(a) {
                    return a.write("selected")
                }

                function H(a) {
                    return a.write("selected")
                }

                function I(a) {
                    return a.write("selected")
                }

                function J(a) {
                    return a.write("selected")
                }

                function K(a) {
                    return a.write("selected")
                }

                function L(a) {
                    return a.write("selected")
                }

                function M(a) {
                    return a.write("selected")
                }

                function N(a) {
                    return a.write("selected")
                }

                function O(a) {
                    return a.write("selected")
                }

                function P(a) {
                    return a.write("selected")
                }

                function Q(a) {
                    return a.write("selected")
                }

                function R(a) {
                    return a.write("selected")
                }

                function S(a, b) {
                    return a.reference(b.getPath(!1, ["routine", "duration"]), b, "h")
                }
                return a.register("templates/childviews/routine", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/routine", b, c)
                }
            }
        }), define("app/service/RoutineService", ["require", "app/service/Service", "app/service/DemoData", "app/models/StateModel", "lavaca/util/Disposable"], function(a) {
            var b = a("app/service/Service"),
                c = a("app/service/DemoData"),
                d = a("app/models/StateModel"),
                e = a("lavaca/util/Disposable"),
                f = e.extend(function() {
                    e.apply(this, arguments)
                }, {
                    getRoutine: function(a) {
                        return d.get("demoMode") ? Promise.resolve(c.getRoutine) : b.makeRequest("sleeper/" + a + "/routine")
                    },
                    setRoutine: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/routine", c, "POST")
                    },
                    updateRoutine: function(a, c, e) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/routine/" + c, e, "PUT")
                    },
                    deleteRoutine: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/routine/" + c, null, "DELETE")
                    },
                    updateDuration: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a, c, "PUT")
                    }
                });
            return new f
        }), define("rdust!templates/childviews/ProgressDonutView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="donut-container" width="').reference(b.get("donutSize"), b, "h").write('" height="').reference(b.get("donutSize"), b, "h").write('" ').exists(b.get("useInline"), b, {
                        block: c
                    }, null).write('><svg class="status-circle" viewBox="0 0 ').reference(b.get("donutSize"), b, "h").write(" ").reference(b.get("donutSize"), b, "h").write('" preserveAspectRatio version="1.1" xmlns="http://www.w3.org/2000/svg"><circle r="').reference(b.get("radius"), b, "h").write('" cx="').reference(b.get("xPos"), b, "h").write('" cy="').reference(b.get("yPos"), b, "h").write('" fill="transparent" stroke-width="').reference(b.get("strokeWidth"), b, "h").write('" stroke="').reference(b.get("secondaryColor"), b, "h").write('"></circle><circle class="progress" r="').reference(b.get("radius"), b, "h").write('" cx="').reference(b.get("xPos"), b, "h").write('" cy="').reference(b.get("yPos"), b, "h").write('" fill="transparent" stroke-dasharray="').reference(b.get("circumference"), b, "h").write('" stroke-dashoffset="').reference(b.get("circumference"), b, "h").write('" stroke-width="').reference(b.get("strokeWidth"), b, "h").write('" stroke="').reference(b.get("primaryColor"), b, "h").write('"></circle></svg><div class="percentage">0</div><div class="sub-text">Complete</div></div>')
                }

                function c(a, b) {
                    return a.write('style="width:').reference(b.get("donutSize"), b, "h").write("px;height:").reference(b.get("donutSize"), b, "h").write('px;"')
                }
                return a.register("templates/childviews/ProgressDonutView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/ProgressDonutView", b, c)
                }
            }
        }), define("app/ui/views/childviews/ProgressDonutView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/ProgressDonutView"], function(a) {
            function b(a) {
                var b = {};
                if (this.el) return b.donutSize = Number(this.el.data("donutsize") || (Modernizr.tablet || Modernizr.desktop ? 264 : 188)), b.strokeWidth = Number(this.el.data("strokewidth") || (Modernizr.tablet || Modernizr.desktop ? 35 : 24)), b.primaryColor = this.el.data("primarycolor") || "#68c62a", b.secondaryColor = this.el.data("secondarycolor") || "#dfe2e6", b.width = b.donutSize, b.height = b.donutSize, b.maginLeft = b.width / 2, b.maginTop = b.height / 2, b.radius = b.donutSize / 2 - b.strokeWidth / 2, b.circumference = 6.28 * b.radius, b.xPos = b.donutSize / 2, b.yPos = b.donutSize / 2, b.useInline = a, this.circumference = b.circumference, b
            }
            var c = a("lavaca/mvc/View"),
                d = a("rdust!templates/childviews/ProgressDonutView"),
                e = c.extend(function() {
                    c.apply(this, arguments)
                }, {
                    autoRender: !0,
                    template: "templates/childviews/ProgressDonutView",
                    className: "progressdonut",
                    generateHtml: function(a) {
                        return a = b.call(this, "boolean" == typeof a.useInline ? a.useInline : !0), new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    setPercentage: function(a) {
                        var b = (100 - a) * this.circumference / 100;
                        this.el.find("circle.progress").css("stroke-dashoffset", b), this.el.find(".percentage").text(a)
                    }
                });
            return e
        }), define("rdust!templates/childviews/alerts/child-routine-success", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="wrapper"><div class="happy-star"></div><h1>Good Job!</h1><h2>Sweet Dreams.</h2></div>')
                }
                return a.register("templates/childviews/alerts/child-routine-success", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/alerts/child-routine-success", b, c)
                }
            }
        }), define("rdust!templates/childviews/alerts/child-routine-failure", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="wrapper"><h1>Good night!</h1></div>')
                }
                return a.register("templates/childviews/alerts/child-routine-failure", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/alerts/child-routine-failure", b, c)
                }
            }
        }), define("rdust!templates/headers/routine-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header with-subtitle"><div class="user-menu">☰</div><div class="title">').exists(b.get("pageTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><div class="subtitle">').exists(b.get("selectedUser"), b, {
                        block: e
                    }, null).write('</div><button class="remote right"><div class="center"><div class="icon siqfont">↕</div><div class="remote-alert"></div><span>Remote</span></div></button><div class="divider"></div></header>')
                }

                function c(a) {
                    return a.write("SleepIQ<sup>&reg;</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("pageTitle"), b, "h", ["s"])
                }

                function e(a, b) {
                    return a.reference(b.getPath(!1, ["selectedUser", "firstName"]), b, "h")
                }
                return a.register("templates/headers/routine-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/routine-header", b, c)
                }
            }
        }), define("app/ui/views/childviews/RoutineView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/routine", "app/service/RoutineService", "app/ui/views/childviews/ProgressDonutView", "lavaca/fx/Transform", "app/models/StateModel", "app/ui/views/childviews/CoachmarkView", "app/ui/views/childviews/LoadingAnimationView", "rdust!templates/childviews/alerts/child-routine-success", "rdust!templates/childviews/alerts/child-routine-failure", "moment", "app/env/ModernizrTests", "mout/object/get", "$", "app/utils/MixPanelManager", "rdust!templates/headers/routine-header", "rdust!templates/headers/header"], function(a) {
            function b() {
                var a = JSON.parse(localStorage.getItem("checkItems"));
                if (a) {
                    for (var b = this.model.get("routine"), d = 0; d < b.routines.length; d++)
                        for (var f = 0; f < a.length; f++) a[f].contains(b.routines[d].name) && (b.routines[d].check = "checked");
                    this.model.set("routine", b), this.render(".routine-container")
                }
                var g, h, i = this.model.fetchTimers(),
                    j = this.el.find(".time-inc");
                for (var d in i) i[d].isForChild === this.model.get("selectedUser").firstName && (g = i[d].routineTimer, h = i[d].routineDuration);
                var k = t(g).diff(t(), "seconds"),
                    l = 100 * (k / (60 * h));
                60 >= k ? ("minutes" == j.text() && j.text("seconds"), 0 >= k && (clearInterval(this.routineTimer), this.model.get("routineStarted") && c.call(this), k = 0), this.el.find(".time-display").text(k), e.call(this, l)) : (this.el.find(".time-display").text("2"), this.el.find(".time-display").text(t(g).diff(t(), "minutes") + 1), e.call(this, l))
            }

            function c() {
                var a = this.el.find(".edit-item"),
                    b = this.el.find(".edit-item.checked");
                this.el.find(".time-display").text("0"), e.call(this, 0), b.length === a.length ? this.alert(!0) : this.alert(!1), Modernizr.localstorage && x.prototype.trackKidEndRoutine(b.length, a.length, null, this.model.get("selectedUser")), this.goodnight = !0, this.model.set("routineStarted", !1), this.render(".content-wrap").then(function() {
                    this.el.find(".routine-container").removeClass("started"), clearInterval(this.routineTimer), this.routineTimer = void 0, this.model.clearTimer()
                }.bind(this))
            }

            function d(a) {
                var c = this.model.fetchTimers(),
                    d = {
                        routineTimer: t().add(a, "minutes"),
                        routineDuration: a,
                        isForChild: this.model.get("selectedUser").firstName
                    };
                Modernizr.localstorage && x.prototype.trackKidStartRoutine(this.model.get("routine"), this.model.get("selectedUser"), d.routineTimer);
                var f = !1;
                for (var g in c) c[g].isForChild === d.isForChild && (c[g] = d, f = !0);
                f || c.push(d);
                var h = {
                    timers: c
                };
                Modernizr.localstorage && sessionStorage.setItem("routineTimers", JSON.stringify(h)), e.call(this, 100), clearInterval(this.routineTimer), this.routineTimer = setInterval(b.bind(this), 1e3)
            }

            function e(a) {
                var b = this.getChildViews(".progress");
                b && b[0] && b[0].setPercentage(a)
            }

            function f() {
                var a = !this.model.get("isChild");
                a && p.displayCoachmark("routine-list")
            }

            function g() {
                var a = !this.model.get("isChild");
                a && p.displayCoachmark("routine-time")
            }

            function h(a) {
                if (a && a.buttonIndex && 1 == a.buttonIndex) return this.el.find(".swipped").removeClass("swipped"), this.el.find(".edit-mode").removeClass("edit-mode"), void 0;
                var b, c = this.model.get("selectedUser");
                b = "object" == typeof a ? a.input1 : a, b.length > 30 && (b = b.slice(0, 30)), b.length > 0 && (this.isSavingSomething = !0, this.model.add(c.sleeperId, {
                    name: b,
                    sequence: 1
                }).then(function(a) {
                    this.el.find(".edit-mode").removeClass("edit-mode");
                    var b = this.el.find(".add-item"),
                        c = '<li class="edit-item" data-id="' + a.routineId + '" data-sequence="' + a.sequence + '"><div class="swipe-wrapper"><div class="icon dots"></div><div class="edit-item-input item-input">' + a.name + '</div></div><div class="icon medium edit"></div><div class="icon medium trash"></div><div class="divider"></div></li>';
                    b.after(c), this.model.set("hide-add", !1), this.el.find(".edit-item").length > 4 && (this.model.set("hide-add", !0), b.hide()), this.render(".edit-item"), this.el.find(".start-routine-button").hasClass("disabled") && this.el.find(".start-routine-button").removeClass("disabled"), this.isSavingSomething = !1
                }.bind(this)))
            }

            function i(a) {
                if (a && a.buttonIndex && 1 == a.buttonIndex) return this.el.find(".swipped").removeClass("swipped"), this.el.find(".edit-mode").removeClass("edit-mode"), void 0;
                var b, c = this.el.find(".edit-mode").closest("li"),
                    d = this.model.get("selectedUser").sleeperId,
                    e = this.el.find(".edit-mode .edit-item-input"),
                    f = this.model.get("routine");
                if (b = "object" == typeof a ? a.input1 : a, b.length > 30 && (b = b.slice(0, 30)), b && "" !== b) {
                    var g = {
                        name: b
                    };
                    for (var h in f.routines) f.routines[h].name === w(e).text() && (f.routines[h].name = b);
                    var i = w(e).text();
                    w(e).text(b), this.isSavingSomething = !0, l.updateRoutine(d, c.data("id"), g).then(function() {
                        this.isSavingSomething = !1, this.model.set("routine", f), this.el.find(".swipped").removeClass("swipped"), this.el.find(".edit-mode").removeClass("edit-mode")
                    }.bind(this), function(a) {
                        this.el.find(".edit-mode").removeClass("edit-mode"), this.el.find(".swipped").removeClass("swipped"), this.isSavingSomething = !1, a = "string" == typeof a ? a : v(a, "responseJSON.Error.Message"), window.customAlert.alert(a), w(e).text(i)
                    }.bind(this))
                }
            }
            var j = a("lavaca/mvc/View"),
                k = a("rdust!templates/childviews/routine"),
                l = a("app/service/RoutineService"),
                m = a("app/ui/views/childviews/ProgressDonutView"),
                n = a("lavaca/fx/Transform"),
                o = a("app/models/StateModel"),
                p = a("app/ui/views/childviews/CoachmarkView"),
                q = a("app/ui/views/childviews/LoadingAnimationView"),
                r = a("rdust!templates/childviews/alerts/child-routine-success"),
                s = a("rdust!templates/childviews/alerts/child-routine-failure"),
                t = a("moment"),
                u = a("app/env/ModernizrTests"),
                v = a("mout/object/get"),
                w = a("$"),
                x = a("app/utils/MixPanelManager");
            a("rdust!templates/headers/routine-header"), a("rdust!templates/headers/header");
            var y = n.cssProperty(),
                z = j.extend(function() {
                    j.apply(this, arguments), this.mapChildView({
                        ".progress": {
                            TView: m,
                            model: {
                                useInline: !u.nexus7
                            }
                        }
                    }), this.mapEvent({
                        ".complete": {
                            tap: this.alert
                        },
                        ".draggable-routine": {
                            dragstart: this.startDrag,
                            drag: this.dragging,
                            dragend: this.endDragging,
                            hold: this.held,
                            swipe: this.swipped
                        },
                        ".add-item": {
                            tap: this.addItem
                        },
                        ".edit-item": {
                            tap: this.checkItem
                        },
                        ".edit": {
                            tap: this.editRoutine
                        },
                        ".trash": {
                            tap: this.trashRoutine
                        },
                        ".timer-label select": {
                            change: this.updateTime
                        },
                        model: {
                            fetched: this.onFetch
                        },
                        ".start-routine-button": {
                            tap: this.startRoutine
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: q,
                            model: this.model
                        }
                    }), f.call(this)
                }, {
                    className: "routine",
                    autoRender: !0,
                    routineList: [2e3, 2e3, 2e3, 2e3, 2e3, 2e3],
                    longPress: !1,
                    hasSwipped: !1,
                    itemMoving: void 0,
                    routineTimer: void 0,
                    goodnight: !1,
                    selectedUserSleeperId: null,
                    isSavingSomething: !1,
                    alert: function(a) {
                        a ? window.customAlert(r, null, "bottom", "routine-alert") : window.customAlert(s, null, "bottom", "routine-alert"), this.model.clearTimer()
                    },
                    onRenderSuccess: function() {
                        this.model && this.model.get("routineStarted") && this.updateRoutine(!0), this.selectedUserSleeperId = this.model.get("selectedUser").sleeperId, Modernizr.localstorage && x.prototype.trackKidRoutineEnterView(this.selectedUserSleeperId), this.model && this.model.get("routine") && 0 === this.model.get("routine").routines.length && this.el.find(".start-routine-button").addClass("disabled")
                    },
                    generateHtml: function(a) {
                        return a.donutsize = Modernizr.tablet || Modernizr.desktop ? 314 : 150, a.strokewidth = Modernizr.tablet || Modernizr.desktop ? 25 : 12, new Promise(function(b) {
                            k.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        var a = this.el.find(".edit-item.checked");
                        Modernizr.localstorage && x.prototype.trackKidRoutineLeaveView(this.selectedUserSleeperId, t(), a.length, a), clearInterval(this.routineTimer), j.prototype.dispose.apply(this, arguments)
                    },
                    updateRoutine: function(a) {
                        var c, d, e = this.model.get("routine"),
                            f = this.model.fetchTimers();
                        for (var g in f) f[g].isForChild === this.model.get("selectedUser").firstName && (c = f[g].routineTimer, d = f[g].routineDuration);
                        if (c && t(t()).diff(c) < 0) this.model.set("routineStarted", !0), this.render(".content-wrap").then(function() {
                            a && b.call(this), this.routineTimer = setInterval(b.bind(this), 1e3), this.el.find(".routine-container").addClass("started")
                        }.bind(this));
                        else {
                            if (c) return this.alert(!1), void 0;
                            e.routines.length && e.routines.length > 5 && (e.routines = e.routines.splice(0, 5), this.model.set("routine", e)), this.render(".content-wrap").then(function() {
                                this.model.set("hide-add", this.model.get("routine").routines.length > 4), this.model.get("routine").routines.length > 4 && this.el.find(".add-item").hide(), 0 === this.model.get("routine").routines.length && this.el.find(".start-routine-button").addClass("disabled")
                            }.bind(this)), this.render(".set-duration")
                        }
                    },
                    onFetch: function() {
                        this.updateRoutine(), this.render(".content-wrap")
                    },
                    startDrag: function(a) {
                        if (!(this.model && this.model.get("routineStarted") || o.get("demoMode")) && (a.preventDefault(), a.stopPropagation(), this.longPress)) {
                            for (var b = this.el.find("ul.routine-list li"), c = w(a.gesture.target).closest("li"), d = w(b[0]).hasClass("add-item"), e = d ? 0 : -1, f = 0, g = b.length; g > f; ++f) this.routineList[f] = w(b[f + e]).position().top;
                            this.itemMoving = c
                        }
                    },
                    dragging: function(a) {
                        if (!(this.model && this.model.get("routineStarted") || o.get("demoMode")) && this.longPress) {
                            a.preventDefault(), a.stopPropagation(), a.gesture.preventDefault(), a.gesture.stopPropagation();
                            var b = this.itemMoving;
                            if (b || (b = w(a.gesture.target).closest("li")), !b) return;
                            b.css(y, "translate3d(0," + a.gesture.deltaY + "px, 0)")
                        }
                    },
                    endDragging: function(a) {
                        if (!(this.model && this.model.get("routineStarted") || o.get("demoMode"))) {
                            a.preventDefault(), a.stopPropagation();
                            var b = this.el.find(".held")[0];
                            if (this.longPress && b && b.textContent) {
                                this.el.find("held").removeClass("held"), this.el.find("prevent-overflow").removeClass("prevent-overflow");
                                for (var c, d = this.itemMoving, e = d.position(), f = 0, g = this.routineList.length; g > f; ++f) e.top - 22 >= this.routineList[f] && e.top - 22 < this.routineList[f + 1] && (c = f);
                                console.log("targetPosog:" + c), e.top <= 0 && (c = 0), console.log("currentPos:" + e), console.log("targetPos:" + c);
                                for (var h, i = this.model.get("routine"), j = -1, k = JSON.parse(JSON.stringify(i)), m = 0, n = i.routines.length; n > m; ++m) i.routines[m].name === b.textContent && (j = m);
                                if ("undefined" != typeof i.routines && null !== i.routines && c > -1 && c <= i.routines.length) {
                                    var p = i.routines.splice(j, 1)[0];
                                    i.routines.splice(c, 0, p);
                                    for (var q = 0, r = i.routines.length; r > q; ++q) h = {
                                        sequence: q + 1
                                    }, l.updateRoutine(i.routines[q].sleeperId, i.routines[q].routineId, h).then(function() {}, function(a) {
                                        a = "string" == typeof a ? a : v(a, "responseJSON.Error.Message"), window.customAlert.alert(a), this.model.set("routine", k), this.render(".routine-container")
                                    }.bind(this))
                                }
                                this.render(".routine-container"), this.longPress = !1, this.itemMoving = void 0
                            }
                        }
                    },
                    addItem: function() {
                        o.get("demoMode") || this.isSavingSomething || window.customAlert.prompt("Add a new task to your routine: ", h.bind(this))
                    },
                    held: function(a) {
                        this.model && this.model.get("routineStarted") || o.get("demoMode") || (this.longPress = !0, this.el.find(a.currentTarget).addClass("held"), this.el.find(".overflow-scroll").addClass("prevent-overflow"))
                    },
                    swipped: function(a) {
                        if (!(this.model && this.model.get("routineStarted") || o.get("demoMode") || (this.el.find(".edit-mode").removeClass("edit-mode"), this.el.find(".swipped").removeClass("swipped"), Modernizr.desktop))) {
                            var b = w(a.gesture.target).closest("li")[0];
                            !this.hasSwipped && "left" === a.gesture.direction && a.gesture.deltaX < -50 && !w(b).hasClass("add-item") ? (this.hasSwipped = !0, b.classList.add("edit-mode", "swipped")) : this.hasSwipped && "left" === a.gesture.direction && a.gesture.deltaX < -50 && !w(b).hasClass("add-item") ? (this.hasSwipped = !0, b.classList.add("edit-mode", "swipped")) : this.hasSwipped && "right" === a.gesture.direction && a.gesture.deltaX > 50 && !w(b).hasClass("add-item") && b.classList.remove("edit-mode", "swipped")
                        }
                    },
                    checkItem: function(a) {
                        if (!o.get("demoMode") && this.model && this.model.get("routineStarted")) {
                            var b = this.el.find(a.currentTarget),
                                c = this.el.find(".edit-item");
                            if (!this.goodnight) {
                                b.toggleClass("checked");
                                for (var d = this.el.find(".checked"), e = [], f = 0; f < d.length; f++) d[f].innerText ? e.push(d[f].innerText) : e.push(d[f].textContent);
                                localStorage.setItem("checkItems", JSON.stringify(e));
                                for (var g = this.model.get("routine"), f = 0; f < g.routines.length; f++)
                                    for (var h = 0; h < e.length; h++) e[h].contains(g.routines[f].name) && (g.routines[f].check = "checked");
                                this.model.set("routine", g), c.length === this.el.find(".edit-item.checked").length && (Modernizr.localstorage && x.prototype.trackKidEndRoutine(this.el.find(".edit-item.checked").length, c.length, t(), this.selectedUserSleeperId), this.alert(!0), this.goodnight = !0, this.model.set("routineStarted", !1), this.el.find(".routine-container").removeClass("started"), this.render(".content-wrap").then(function() {
                                    clearInterval(this.routineTimer), this.routineTimer = void 0, this.model.clearTimer()
                                }.bind(this)))
                            }
                        }
                    },
                    updateTime: function(a) {
                        var b = Number(a.currentTarget.value),
                            c = this.model.get("selectedUser").sleeperId;
                        l.updateDuration(c, {
                            duration: b
                        }).then(function() {
                            var a = this.model.get("routine");
                            a.duration = b, this.model.set("routine", a)
                        }.bind(this), function(b) {
                            console.log(b), w(a.currentTarget).val(this.model.get("routine").duration), b = "string" == typeof b ? b : v(b, "responseJSON.Error.Message"), window.customAlert.alert(b)
                        }.bind(this))
                    },
                    editRoutine: function(a) {
                        if (!o.get("demoMode") && !this.isSavingSomething) {
                            var b = w(a.gesture.target).closest("li");
                            b.addClass("edit-mode"), 0 == window.customAlert.prompt("Edit routine: ", i.bind(this), void 0, void 0, w(b).text()) && b.removeClass("edit-mode swipped")
                        }
                    },
                    trashRoutine: function(a) {
                        if (!o.get("demoMode")) {
                            var b = w(a.gesture.target).closest(".edit-item"),
                                c = this.model.get("selectedUser");
                            b && !b.hasClass("disabled") && (b.addClass("disabled"), l.deleteRoutine(c.sleeperId, b.data("id")).then(function() {
                                b.remove(), w(".edit-item-input").length < 1 && w(".start-routine-button").addClass("disabled"), this.el.find(".add-item").show();
                                for (var a = this.model.get("routine"), c = a.routines.length; c--;) a.routines[c].name === b.text() && a.routines.splice(c, 1);
                                this.model.set("hide-add", !1)
                            }.bind(this), function(a) {
                                b.removeClass("disabled"), a = "string" == typeof a ? a : v(a, "responseJSON.Error.Message"), window.customAlert.alert(a)
                            }.bind(this)))
                        }
                    },
                    startRoutine: function() {
                        if (!o.get("demoMode")) {
                            for (var a = this.model.get("routine"), b = 0; b < a.routines.length; b++) a.routines[b].check = "";
                            this.model.set("routine", a), localStorage.removeItem("checkItems");
                            var c = this.el.find(".start-routine-button").hasClass("disabled");
                            if (!c) {
                                var e = this.model.get("routine").duration;
                                this.model.set("routineStarted", !0), this.goodnight = !1, g.call(this), this.render(".content-wrap").then(function() {
                                    d.call(this, e)
                                }.bind(this))
                            }
                        }
                    }
                });
            return z
        }), define("app/models/viewmodels/RoutineViewModel", ["require", "lavaca/mvc/Model", "app/models/FamilyModel", "mout/object/get", "app/service/RoutineService"], function(a) {
            var b = a("lavaca/mvc/Model"),
                c = a("app/models/FamilyModel"),
                d = a("mout/object/get"),
                e = a("app/service/RoutineService"),
                f = b.extend(function() {
                    b.call(this, arguments)
                }, {
                    routinesIndex: 0,
                    setupComplete: !1,
                    defaultRoutine: {
                        duration: 30,
                        routines: [{
                            name: "Pajamas",
                            sequence: 1
                        }, {
                            name: "Brush Teeth",
                            sequence: 2
                        }, {
                            name: "Read Stories",
                            sequence: 3
                        }, {
                            name: "Lights Out",
                            sequence: 4
                        }]
                    },
                    fetch: function() {
                        var a = c.getSelectedUser(),
                            b = a ? a.sleeperId : "";
                        this.clear(), this.set("isChild", !c.hasPermission()), this.set("selectedUser", a), e.getRoutine(b).then(function(a) {
                            a && a.routines && (a.routines.length ? (a.duration = 0 === a.duration ? 5 : a.duration, this.set("routine", this.orderBySequence(a)), this.setupComplete = !0) : this.setup(b), this.set("hasFetched", !0), this.trigger("fetched"))
                        }.bind(this), function(a) {
                            a = "string" == typeof a ? a : d(a, "responseJSON.Error.Message"), window.customAlert.alert(a, null, "Connectivity Error")
                        })
                    },
                    fetchTimers: function() {
                        if (Modernizr.localstorage) {
                            var a = sessionStorage.getItem("routineTimers"),
                                b = a ? JSON.parse(a) : {
                                    timers: []
                                };
                            return b.timers
                        }
                        return {
                            timers: []
                        }
                    },
                    clearTimer: function() {
                        var a = this.fetchTimers();
                        for (var b in a) a[b].isForChild === this.get("selectedUser").firstName && (a[b].routineTimer = void 0);
                        var c = {
                            timers: a
                        };
                        Modernizr.localstorage && sessionStorage.setItem("routineTimers", JSON.stringify(c))
                    },
                    setup: function(a) {
                        this.routinesIndex >= this.defaultRoutine.routines.length ? (this.set("routine", this.defaultRoutine), this.trigger("fetched"), this.setupComplete = !0) : this.add(a, this.defaultRoutine.routines[this.routinesIndex]).then(function(b) {
                            this.defaultRoutine.routines[this.routinesIndex] = b, this.routinesIndex++, this.setup(a)
                        }.bind(this))
                    },
                    add: function(a, b) {
                        return e.setRoutine(a, b).then(function(a) {
                            var b = this.get("routine");
                            if (this.setupComplete && b.routines) {
                                for (var c in b.routines) b.routines[c].sequence++;
                                b.routines.unshift(a), this.set("routine", b)
                            }
                            return a
                        }.bind(this))
                    },
                    orderBySequence: function(a) {
                        return a.routines.sort(function(a, b) {
                            return a.sequence > b.sequence ? 1 : 0
                        }), a
                    }
                });
            return f
        }), define("app/models/viewmodels/RootTabBarViewModel", ["require", "lavaca/mvc/Model", "app/ui/views/childviews/SleepView", "app/models/viewmodels/SleepViewModel", "app/ui/views/childviews/TrendsView", "app/models/viewmodels/TrendsViewModel", "app/ui/views/childviews/GoalsView", "app/models/viewmodels/GoalsViewModel", "app/ui/views/childviews/RoutineView", "app/models/viewmodels/RoutineViewModel", "app/models/FamilyModel", "moment"], function(a) {
            var b = a("lavaca/mvc/Model"),
                c = a("app/ui/views/childviews/SleepView"),
                d = a("app/models/viewmodels/SleepViewModel"),
                e = a("app/ui/views/childviews/TrendsView"),
                f = a("app/models/viewmodels/TrendsViewModel"),
                g = a("app/ui/views/childviews/GoalsView"),
                h = a("app/models/viewmodels/GoalsViewModel"),
                i = a("app/ui/views/childviews/RoutineView"),
                j = a("app/models/viewmodels/RoutineViewModel"),
                k = a("app/models/FamilyModel"),
                l = a("moment"),
                m = b.extend(function() {
                    b.call(this, arguments), this.apply({
                        activeView: "",
                        selectedView: "sleep"
                    })
                }, {
                    refetchOnResume: function() {
                        if (this.sleepViewModel) {
                            this.sleepViewModel.set("hasFetched", !1), this.sleepViewModel.activeDate = l().format("YYYY-MM-DD"), this.sleepViewModel.clear();
                            var a = k.getSelectedUser();
                            this.sleepViewModel.apply(a), this.sleepViewModel.trigger("reset"), this.sleepViewModel.fetch()
                        }
                        this.trendsViewModel && (this.trendsViewModel.set("hasFetched", !1), this.trendsViewModel.clear()), this.goalsViewModel && (this.goalsViewModel.set("hasFetched", !1), this.goalsViewModel.clear()), this.routineViewModel && (this.routineViewModel.set("hasFetched", !1), this.routineViewModel.clear())
                    },
                    getChildView: function(a) {
                        if ("string" == typeof a && this.set("selectedView", a), this.get("selectedView") != this.get("activeView")) switch (this.get("selectedView") && this.set("activeView", this.get("selectedView")), this.set("selectedView", ""), this.get("activeView")) {
                            case "sleep":
                                return c;
                            case "trends":
                                return e;
                            case "goals":
                                return g;
                            case "routine":
                                return i;
                            case "monster":
                                return window.customAlert.alert("AHH A MONSTER!"), void 0
                        }
                    },
                    disposeOfUser: function() {
                        if (this.sleepViewModel) try {
                            this.sleepViewModel.dispose(), this.sleepViewModel = null
                        } catch (a) {}
                        if (this.trendsViewModel) try {
                            this.trendsViewModel.dispose(), this.trendsViewModel = null
                        } catch (a) {}
                        if (this.goalsViewModel) try {
                            this.goalsViewModel.dispose(), this.goalsViewModel = null
                        } catch (a) {}
                        if (this.routineViewModel) try {
                            this.routineViewModel.dispose(), this.routineViewModel = null
                        } catch (a) {}
                    },
                    getChildViewModel: function() {
                        switch (this.get("activeView")) {
                            case "sleep":
                                return this.sleepViewModel || (this.sleepViewModel = new d), this.sleepViewModel.verifySleeperId(), this.get("currentDate") ? this.sleepViewModel.fetch(this.get("currentDate"), this.get("dataType")) : this.get("dataType") && this.get("formattedDate") ? "month" === this.get("dataType") ? this.sleepViewModel.fetch(l(this.get("formattedDate"), "MMMM YYYY 01").format("YYYY-MM-DD"), this.get("dataType")) : "week" === this.get("dataType") && this.sleepViewModel.fetch(l(this.get("formattedDate"), "MMMM DD " + l().year()).format("YYYY-MM-DD"), "week") : this.sleepViewModel.get("hasFetched") || this.sleepViewModel.fetch(), this.sleepViewModel;
                            case "trends":
                                return this.trendsViewModel || (this.trendsViewModel = new f(this.sleepViewModel)), this.trendsViewModel.get("hasFetched") || this.trendsViewModel.fetch(), this.trendsViewModel;
                            case "goals":
                                return this.goalsViewModel || (this.goalsViewModel = new h), this.goalsViewModel.get("hasFetched") || this.goalsViewModel.fetch(!1), this.goalsViewModel;
                            case "routine":
                                return this.routineViewModel || (this.routineViewModel = new j), this.routineViewModel.get("hasFetched") || this.routineViewModel.fetch(), this.routineViewModel;
                            case "monster":
                                return
                        }
                    }
                });
            return m
        }), define("lavaca/mvc/Controller", ["require", "lavaca/net/Connectivity", "lavaca/net/History", "lavaca/util/Disposable", "mout/string/interpolate"], function(a) {
            var b = (a("lavaca/net/Connectivity"), a("lavaca/net/History")),
                c = a("lavaca/util/Disposable"),
                d = a("mout/string/interpolate"),
                e = c.extend(function(a, b) {
                    a instanceof e ? (this.router = a.router, this.viewManager = a.viewManager) : (this.router = a, this.viewManager = b)
                }, {
                    router: null,
                    viewManager: null,
                    view: function(a, b, c, d) {
                        return this.viewManager.load(a, b, c, d)
                    },
                    history: function(a, c, d, e) {
                        var f = !this.state;
                        return function() {
                            f && b[e ? "replace" : "push"](a, c, d)
                        }
                    },
                    url: function(a, b) {
                        return b = b.map(window.encodeURIComponent), d(a, b, /\{(.+?)\}/)
                    },
                    redirect: function(a, b, c) {
                        return this.router.unlock().exec(this.url(a, b || []), null, c)
                    },
                    dispose: function() {
                        this.router = this.viewManager = null, c.prototype.dispose.apply(this, arguments)
                    }
                });
            return e
        }), define("app/ModalViewManager", ["require", "$", "lavaca/mvc/View", "lavaca/util/Cache", "lavaca/util/Disposable", "mout/object/merge", "mout/array/contains", "lavaca/net/History", "mout/array/removeAll"], function(a) {
            var b = a("$"),
                c = a("lavaca/mvc/View"),
                d = a("lavaca/util/Cache"),
                e = a("lavaca/util/Disposable"),
                f = a("mout/object/merge"),
                g = a("mout/array/contains"),
                h = a("lavaca/net/History"),
                i = a("mout/array/removeAll"),
                j = e.extend(function(a) {
                    e.call(this), h.modalAnimationBreadcrumb = [], this.el = b(a || document.body), this.pageViews = new d, this.layers = [], this.exitingPageViews = [], this.enteringPageViews = []
                }, {
                    breadcrumbs: [],
                    isRoutingBack: !1,
                    currentView: !1,
                    isOpen: !1,
                    setEl: function(a) {
                        return this.el = "string" == typeof a ? b(a) : a, this
                    },
                    load: function(a, b, c) {
                        var d = a.prototype.layer || 0,
                            e = new a(null, b, d);
                        return c = c || "/", "object" == typeof c && (f(e, c), c = c.url || "/"), -1 === this.breadcrumbs.indexOf(c) && this.breadcrumbs.push(c), e.render().then(function() {
                            return this.currentView = e, this.enteringPageViews = [e], Promise.all([function() {
                                return this.layers[d] !== e ? e.enter(this.el, this.exitingPageViews) : void 0
                            }.bind(this)(), function() {
                                return this.dismissLayersAbove(d - 1, e)
                            }.bind(this)()])
                        }.bind(this)).then(function() {
                            this.enteringPageViews = [], this.layers[d] = e
                        }.bind(this))
                    },
                    dismiss: function(a) {
                        if ("number" == typeof a) return this.dismissLayersAbove(a - 1);
                        if (a instanceof c) return this.dismiss(a.layer);
                        a = b(a);
                        var d = a.attr("data-layer-index");
                        return null === d && (a = a.closest("[data-layer-index]"), d = a.attr("data-layer-index")), null !== d ? this.dismiss(Number(d)) : void 0
                    },
                    dismissLayersAbove: function(a, b) {
                        var c = this.layers.slice(a + 1).filter(function(a) {
                            return a && (!b || b !== a)
                        });
                        this.layers = this.layers.map(function(a) {
                            return g(c, a) ? null : a
                        });
                        var d = c.map(function(a) {
                            return Promise.resolve().then(function() {
                                return this.exitingPageViews.push(a), a.exit(this.el, this.enteringPageViews)
                            }.bind(this)).then(function() {
                                i(this.exitingPageViews, a), a.dispose()
                            }.bind(this))
                        }.bind(this));
                        return Promise.all(d)
                    },
                    flush: function() {
                        h.modalAnimationBreadcrumb = [], this.breadcrumbs = [], this.pageViews.dispose(), this.pageViews = new d
                    }
                });
            return new j(null)
        }), define("rdust!templates/controlviews/modal", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="desktop-cover"><div id="modal-wrapper"><div id="modal"></div></div></div>')
                }
                return a.register("templates/controlviews/modal", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/controlviews/modal", b, c)
                }
            }
        }), define("app/ui/views/controlviews/ModalView", ["require", "app/ui/views/pageviews/BaseView", "lavaca/mvc/Router", "app/utils/debounce", "app/models/StateModel", "$", "app/ModalViewManager", "rdust!templates/controlviews/modal", "app/utils/MixPanelManager"], function(a) {
            function b() {}

            function c(a) {
                if (this.shouldTapBackToClose) this.closeModal(a);
                else {
                    var b = a;
                    navigator && navigator.cameraWebview ? navigator.cameraWebview.status(function(a) {
                        a && a.isOpen ? navigator.cameraWebview.stop() : d.call(this, b)
                    }.bind(this)) : d.call(this, b)
                }
            }

            function d(a) {
                this.viewManager && this.viewManager.currentView ? this.viewManager.currentView.onTapBack(a) : h.get("ignoreBack") ? (a.preventDefault(), h.trigger("backButton", a)) : (h.trigger("backButton", a), navigator.app.backHistory())
            }
            var e = a("app/ui/views/pageviews/BaseView"),
                f = a("lavaca/mvc/Router"),
                g = a("app/utils/debounce"),
                h = a("app/models/StateModel"),
                i = a("$"),
                j = a("app/ModalViewManager"),
                k = a("rdust!templates/controlviews/modal");
            a("app/utils/MixPanelManager");
            var l = e.extend(function() {
                e.apply(this, arguments), this.mapEvent({
                    "#modal": {
                        tap: this.preventScroll
                    },
                    ".link": {
                        tap: this.tapLink
                    },
                    ".modal-link": {
                        tap: this.tapModalLink
                    },
                    self: {
                        tap: this.tapToClose
                    },
                    ext: {
                        stateModel: {
                            object: h,
                            events: {
                                closeModal: this.closeModal.bind(this)
                            }
                        }
                    }
                }), i(window).on("resize.modal", g(b.bind(this), 100)), document.addEventListener("backbutton", c.bind(this), !1)
            }, {
                className: "modal",
                shouldHideAfter: !1,
                shouldTapToClose: !0,
                shouldTapBackToClose: !1,
                view: function(a, b, c, d, e) {
                    return "undefined" != typeof e && "object" == typeof e && ("undefined" != typeof e.shouldTapToClose && (this.shouldTapToClose = e.shouldTapToClose), "undefined" != typeof e.shouldTapBackToClose && (this.shouldTapBackToClose = e.shouldTapBackToClose)), this.el.addClass(d ? "show fullscreen" : "show"), this.viewManager = j.setEl("#modal"), f.unlock(), this.viewManager.isOpen = !0, this.viewManager.load(a, b, c)
                },
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        k.render(a, function(a, c) {
                            b(c)
                        }.bind(this))
                    }.bind(this))
                },
                preventScroll: function(a) {
                    a.preventDefault(), a.stopPropagation()
                },
                tapLink: function(a) {
                    var b = this.el.find(a.currentTarget).attr("data-href");
                    this.closeModal(), f.exec(b)
                },
                tapModalLink: function(a) {
                    var b = this.el.find(a.currentTarget).attr("data-href");
                    f.exec(b)
                },
                closeModal: function(a) {
                    return a && a.preventDefault && (a.preventDefault(), a.stopPropagation()), this.viewManager && (this.viewManager.isOpen = !1, this.viewManager.currentView = !1), this.el.removeClass("show fullscreen"), this.viewManager ? (this.viewManager.flush(), h.trigger("closingModal"), this.viewManager.dismiss()) : void 0
                },
                dispose: function() {
                    e.prototype.dispose.apply(this, arguments)
                },
                tapToClose: function(a) {
                    this.shouldTapToClose && this.closeModal(a)
                }
            });
            return new l("#modal-container")
        }), define("app/net/BaseController", ["require", "lavaca/mvc/Controller", "mout/object/merge", "app/ui/views/controlviews/ModalView", "app/ui/views/controlviews/UserSwitchView", "app/models/StateModel"], function(a) {
            var b = a("lavaca/mvc/Controller"),
                c = a("mout/object/merge"),
                d = a("app/ui/views/controlviews/ModalView"),
                e = a("app/ui/views/controlviews/UserSwitchView"),
                f = a("app/models/StateModel"),
                g = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    updateState: function(a, b, g, h) {
                        d.closeModal(), e.update(g), window.customAlert.dismiss(), b = b || "SleepIQ™";
                        var i = {
                            pageTitle: b
                        };
                        this.history(a, "SleepIQ™ by SleepNumber - " + b, g)(), h = c(h || {}, i), f.apply(h, !0), f.trigger("change")
                    }
                });
            return g
        }), define("rdust!templates/pageviews/forgot-password", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/back-header", b, {
                        pageTitle: "Reset Password"
                    }).write('<div class="container"><form class="reset-password-form form" data-animate-labels="true"><h3>FPO Enter your email address associated with your login</h3><div class="input-wrapper"><label for="emailInput" class="').exists(b.get("email"), b, {
                        block: c
                    }, null).write('">Email Address</label><input type="email" name="emailInput" id="email" maxlength="256" value="').reference(b.get("email"), b, "h").write('" data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" /><span class="clear"></span><p class="error-message"></p></div><div class="reset-password-wrapper"><button class="reset-password-submit">Reset Password</button></div></form></div>')
                }

                function c(a) {
                    return a.write("reveal")
                }
                return a.register("templates/pageviews/forgot-password", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/forgot-password", b, c)
                }
            }
        }), define("app/ui/views/pageviews/ForgotPasswordView", ["require", "./BaseView", "app/models/AccountModel", "app/ui/widgets/FormValidator", "rdust!templates/pageviews/forgot-password", "rdust!templates/headers/back-header"], function(a) {
            function b(a) {
                try {
                    var b = $(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var c = b.prev();
                    c.val(""), c.removeClass("invalid valid"), c.focus()
                } catch (d) {
                    console.log(d)
                }
            }
            var c = a("./BaseView"),
                d = a("app/models/AccountModel"),
                e = a("app/ui/widgets/FormValidator"),
                f = a("rdust!templates/pageviews/forgot-password");
            a("rdust!templates/headers/back-header");
            var g = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".reset-password-submit": {
                        tap: this.onTapSubmit
                    },
                    ".clear": {
                        tap: b
                    }
                }), this.mapWidget({
                    ".reset-password-form": {
                        TWidget: e
                    }
                })
            }, {
                className: "forgot-password",
                generateHtml: function(a) {
                    return a.validations = {
                        email: JSON.stringify({
                            validated: !1,
                            message: "Please enter a valid email format",
                            rules: [{
                                type: "required",
                                message: "Please enter a valid email format"
                            }, {
                                type: "email"
                            }, {
                                type: "exclude",
                                exclusions: [" "]
                            }]
                        })
                    }, new Promise(function(b) {
                        f.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onTapSubmit: function(a) {
                    var b = $(a.currentTarget);
                    b && (b.hasClass("disabled") || (b.addClass("disabled"), setTimeout(function() {
                        this.el.find(".reset-password-form").trigger("validateForm", function() {
                            var a = this.el.find('input[name="email"]'),
                                c = get(a.data().validation, "validated");
                            return c ? (c = this.el.find('input[name="email"]').val(), d.resetPassword(c).then(function() {
                                window.customAlert.alert("Check your email for your password reset link.", null, "Password Reset"), b.removeClass("disabled")
                            }.bind(this), function(a) {
                                b.removeClass("disabled"), a && window.customAlert.alert(a)
                            }.bind(this)), void 0) : (this.el.find('input[name="email"]').addClass("invalid"), window.customAlert.alert("Please enter a valid email address"), b.removeClass("disabled"), void 0)
                        }.bind(this))
                    }.bind(this), 100)))
                }
            });
            return g
        }), define("app/models/RegistrationViewModel", ["require", "lavaca/mvc/Model", "app/models/StateModel", "app/models/AccountModel", "mout/object/get", "app/service/AccountService", "app/models/FamilyModel", "app/env/Config"], function(a) {
            function b(a) {
                a = a || {};
                var b = {},
                    c = {};
                if (this.get("bed") && this.get("bed").bedId) {
                    var d = this.get("bed").bedId + "";
                    if (b[d] = {}, this.get("bedName") && (b[d].bedName = this.get("bedName")), "undefined" != typeof this.get("currentTab") && (b[d].currentTabIndex = this.get("currentTab")), "undefined" != typeof this.get("swapped") && (b[d].swapped = this.get("swapped")), this.get("timeZone") && (b[d].timeZone = this.get("timeZone")), this.get("bedSize") && (b[d].bedSize = this.get("bedSize")), this.get("bedBase") && (b[d].bedBase = this.get("bedBase")), this.get("bedModel") && (b[d].bedModel = this.get("bedModel")), this.get("zipCode") && (b[d].zipCode = this.get("zipCode")), this.get("networkModel") && (b[d].networkModel = this.get("networkModel")), this.get("sleepersForm") && (b[d].sleepersForm = this.get("sleepersForm")), this.get("bed") && this.get("bed").isPump && (b[d].isPump = !0), c = $.extend(!0, a, b), this.get("removedUser") && this.get("sleepersForm")) try {
                        c[d].sleepersForm = c[d].sleepersForm.slice(0, 1)
                    } catch (e) {
                        return c
                    }
                }
                return c
            }
            var c = a("lavaca/mvc/Model"),
                d = a("app/models/StateModel"),
                e = a("app/models/AccountModel"),
                f = a("mout/object/get"),
                g = a("app/service/AccountService"),
                h = a("app/models/FamilyModel");
            a("app/env/Config");
            var i = c.extend(function(a) {
                c.call(this, a), d.on("logout", this.clearAll.bind(this)), this.set("canBeAccountOwner", this._canBeAccountOwner), this.set("yearsRange", this._yearsRange)
            }, {
                recordId: "SIQ:registration",
                viewCount: 4,
                currentTabIndex: 0,
                swapped: !1,
                hasUpdatedSelectedBedFromRegistrationCache: !1,
                hasUpdatedSelectedBedSleepersFromRegistrationCache: !1,
                canAddSecondSleeper: !1,
                _canBeAccountOwner: function() {
                    var a = !1,
                        b = this.get("bed");
                    return h.models.length && h.each(function(c, d) {
                        d.get("isAccountOwner") && d.get("bedId") && "0" === d.get("bedId") && (a = b && b.isKidsBed ? !1 : !0)
                    }), a
                },
                _yearsRange: function() {
                    var a = [];
                    if (this.get("bed") && this.get("bed").isKidsBed)
                        for (var b = (new Date).getFullYear() - 14; b <= (new Date).getFullYear() - 4; b++) a.push(b);
                    else
                        for (var b = (new Date).getFullYear() - 115; b <= (new Date).getFullYear() - 15; b++) a.push(b);
                    return a
                },
                checkIfChild: function() {
                    h.count() ? this.set("isChild", !h.hasPermission()) : this.set("isChild", !1)
                },
                setRegistrationState: function(a) {
                    g.setRegistrationState(a)
                },
                getAccountOwnerSleeperId: function() {
                    var a = this.get("sleepers");
                    if (a) {
                        var b = !1;
                        return a.forEach(function(a) {
                            a.isAccountOwner && (b = a.sleeperId)
                        }.bind(this)), b
                    }
                    return !1
                },
                allBedsSetUpCheck: function() {
                    var a = this.get("beds");
                    if (!a) return !1;
                    var b = !0;
                    return a.forEach(function(a) {
                        a.isSetup || (b = !1)
                    }), b
                },
                hasOneBedSetUpCheck: function() {
                    var a = this.get("beds");
                    if (!a) return !1;
                    var b = !1;
                    return a.forEach(function(a) {
                        a.isSetup && (b = !0)
                    }), b
                },
                highlightCorrectViewFromCache: function() {
                    var a = d.getRegistrationState();
                    if (!this.get("isChild") && a && 0 === a.indexOf("12") && (this.get("bed") || this.get("selectedBedId"))) {
                        var b = this.get("bed") && this.get("bed").bedId || this.get("selectedBedId"),
                            c = this.get("registrationCache");
                        if (c && c[b] && c[b].currentTabIndex) switch (c[b].currentTabIndex) {
                            case "profile":
                                this.trigger("nextSection")
                        }
                    }
                },
                getBedIfSavedToFinishLater: function() {
                    if (!this.get("bed")) {
                        var a = d.getRegistrationState();
                        if (a && 0 === a.indexOf("12") && this.get("beds")) {
                            var b;
                            return a = a.slice(2), this.get("beds").forEach(function(c, d) {
                                c.bedId.indexOf(a) >= 0 && (b = c, this.set("bedIndex", d))
                            }.bind(this)), b
                        }
                    }
                    return !1
                },
                getSelectedBedFromId: function(a) {
                    var b = this.get("beds") || [],
                        c = !1;
                    return b ? (b.forEach(function(b) {
                        b.bedId === a && (c = b, ("PUMP" === c.name || "PUMP" === c.model) && (c.isPump = !0, "PUMP" === c.name && delete c.name, delete c.model))
                    }), c && this.set("bed", c), c) : c
                },
                validateOrder: function(a, b) {
                    return a || (a = this.get("orderId")), b || (b = this.get("email")), g.validateOrder(a, b)
                },
                activateAccount: function(a, b) {
                    return g.setPasswordAndActivate(a, b)
                },
                fetchTerms: function() {
                    return g.getTerms().then(function(a) {
                        this.set("terms", a), this.trigger("termsFetched")
                    }.bind(this))
                },
                fetchRegistrationCache: function() {
                    return new Promise(function(a, b) {
                        g.getCache("registration").then(function(b) {
                            var c = b && b.value ? JSON.parse(b.value) : {};
                            return this.set("registrationCache", c), a(c)
                        }.bind(this), function(c) {
                            if (!c) return b();
                            var d = "Not Found" === f(c, "responseJSON.Error.Message") || 404 === f(c, "responseJSON.Error.Code") ? 1 : 0;
                            return d ? (this.set("registrationCache", {}), a("Not Found")) : b(c)
                        }.bind(this))
                    }.bind(this))
                },
                updateRegistrationCache: function() {
                    return new Promise(function(a, c) {
                        g.getCache("registration").then(function(d) {
                            var e = d && d.value ? JSON.parse(d.value) : {};
                            g.updateCache("registration", b.call(this, e)).then(function(b) {
                                return a(b)
                            }.bind(this), function(a) {
                                return c(a)
                            }.bind(this))
                        }.bind(this), function(d) {
                            var e = "Not Found" === f(d, "responseJSON.Error.Message") || 404 === f(d, "responseJSON.Error.Code") ? 1 : 0;
                            return e ? (g.updateCache("registration", b.call(this, {})).then(function(b) {
                                return a(b)
                            }.bind(this), function(a) {
                                return c(a)
                            }.bind(this)), void 0) : c(d)
                        }.bind(this))
                    }.bind(this))
                },
                acceptTerms: function(a, b, c) {
                    return g.setTerms(a, b, c)
                },
                getSleepers: function() {
                    return h.getSleepers().then(function(a) {
                        if (a) try {
                            var b = [];
                            a.forEach(function(a) {
                                b.push(a.toObject())
                            }), this.set("sleepers", b), this.set("canBeAccountOwner", this._canBeAccountOwner), this.set("yearsRange", this._yearsRange)
                        } catch (c) {
                            return
                        }
                    }.bind(this))
                },
                saveSleeper: function(a, b) {
                    return new Promise(function(c, d) {
                        b ? g.updateSleeper(b, a, e.get("accountKey")).then(function() {
                            c(b)
                        }.bind(this), function(a) {
                            d(a)
                        }.bind(this)) : g.addSleeper(a, e.get("accountKey")).then(function() {
                            c()
                        }.bind(this), function(a) {
                            d(a)
                        }.bind(this))
                    }.bind(this))
                },
                scanWifi: function() {
                    return new Promise(function(a, b) {
                        navigator.wifi.getConnectedWifiInfo(function(b) {
                            if (b && b.SSID) {
                                var c = b.SSID.replaceAll('"', "");
                                this.set("networkModel", {
                                    wifiName: c
                                })
                            }
                            return a()
                        }.bind(this), function(a) {
                            return b(new Error(a))
                        }.bind(this))
                    }.bind(this))
                },
                multiBedSetupCacheReset: function() {
                    this.set("sleepersForm", null), this.set("bedSize", null), this.set("bedModel", null), this.set("bedBase", null), this.hasUpdatedSelectedBedFromRegistrationCache = !1, this.hasUpdatedSelectedBedSleepersFromRegistrationCache = !1
                },
                checkIfRegistrationCacheIsPump: function() {
                    var a = this.get("registrationCache");
                    this.get("bed") && a && (a = a[this.get("bed").bedId], a && a.isPump && (this.get("bed").isPump = !0))
                },
                updateBedFromRegistrationCache: function() {
                    if (!this.hasUpdatedSelectedBedFromRegistrationCache) {
                        var a = this.get("registrationCache");
                        this.get("bed") && a && (a = a[this.get("bed").bedId], a && (a.bedName && this.set("bedName", a.bedName) && (this.get("bed").name = a.bedName), a.timeZone && this.set("timeZone", a.timeZone) && (this.get("bed").timezone = a.timeZone), a.zipCode && this.set("zipCode", a.zipCode) && (this.get("bed").zipcode = a.zipCode), a.networkModel && this.set("networkModel", a.networkModel), a.sleepersForm && this.set("sleepersForm", a.sleepersForm), a.swapped && this.set("swapped", a.swapped), a.bedModel && this.set("bedModel", a.bedModel) && (this.get("bed").model = a.bedModel), a.bedSize && this.set("bedSize", a.bedSize) && (this.get("bed").size = a.bedSize), a.bedBase && this.set("bedBase", a.bedBase) && (this.get("bed").base = a.bedBase), this.hasUpdatedSelectedBedFromRegistrationCache = !0))
                    }
                },
                updateSleepersFromRegistrationCache: function() {
                    if (!this.hasUpdatedSelectedBedSleepersFromRegistrationCache) {
                        var a = this.get("registrationCache");
                        this.get("bed") && a && (a = a[this.get("bed").bedId], a && (a.sleepersForm && this.set("sleepersForm", a.sleepersForm), this.hasUpdatedSelectedBedSleepersFromRegistrationCache = !0))
                    }
                },
                clearAll: function() {
                    this.multiBedSetupCacheReset(), this.viewCount = 4, this.currentTabIndex = 0, this.clear(), this.hasUpdatedSelectedBedFromRegistrationCache = !1, this.hasUpdatedSelectedBedSleepersFromRegistrationCache = !1
                }
            });
            return new i
        }), define("app/models/BedDemoModel", ["require", "app/models/BedModel"], function(a) {
            function b() {
                this.apply(c)
            }
            var c = {
                    debug: !0,
                    sleeperRightId: 0,
                    name: "Bed Pump",
                    dualSleep: !0,
                    bedId: "-9223372037664102667",
                    sleeperLeftId: "-9223372036664102624",
                    accountId: "-9223372036664102669",
                    model: "P5",
                    size: "queen",
                    zipcode: "12345",
                    timezone: "US/Pacific",
                    status: {
                        status: 1,
                        leftSide: {
                            sleepNumber: 50,
                            isInBed: !1,
                            pressure: 1850,
                            lastLink: "01:24:11",
                            alertId: 0,
                            alertDetailedMessage: ""
                        },
                        rightSide: {
                            sleepNumber: 35,
                            isInBed: !1,
                            pressure: 1550,
                            lastLink: "00:30:02",
                            alertId: 0,
                            alertDetailedMessage: ""
                        }
                    },
                    macAddress: "CC:04:B4:01:07:19",
                    capabilities: {
                        hasPump: !0,
                        hasFoundation: !0,
                        hasSleepExpert: !0,
                        hasTemperatureEngine: !1,
                        hasProxy: !0,
                        hasBridge: !0,
                        hasSplit: !0,
                        hasDualBoard: !1,
                        hasMassageAndLighting: !0,
                        hasFootControl: !0,
                        isOutlet: !1,
                        isRightChamber: !0,
                        rightChamberType: 0,
                        isLeftChamber: !0,
                        leftChamberType: 0,
                        isK1: !1,
                        isK2: !1,
                        isAdult: !0,
                        hasOutletConfigured: !1
                    },
                    remote: {
                        lightStatus: {
                            1: !0,
                            2: !0,
                            3: !1,
                            4: !0
                        },
                        leftSide: {
                            foundationPreset: 1,
                            sleepNumber: 60,
                            sleepNumberMemory: 60
                        },
                        rightSide: {
                            foundationPreset: 4,
                            sleepNumber: 30,
                            sleepNumberMemory: 35
                        }
                    }
                },
                d = a("app/models/BedModel"),
                e = d.extend(function() {
                    d.apply(this, arguments), b.call(this)
                }, {});
            return new e
        }), define("app/models/viewmodels/BedSettingsViewModel", ["require", "lavaca/mvc/Model", "app/models/BedCollection", "app/service/WifiService", "app/models/AccountModel", "mout/object/get", "app/models/BedDemoModel", "app/utils/MixPanelManager"], function(a) {
            function b() {
                return f.getWifi().then(function(a) {
                    this.set("networks", a.networks)
                }.bind(this))
            }

            function c() {
                e.getCurrentBedModel(), this.apply(e.getCurrentBedModel().toObject()), b.call(this).then(function() {
                    var a = this.get("networks") || [];
                    a.length > 1 ? this.set("networkName", "Multiple Networks") : 1 === a.length ? this.set("networkName", a[0].ssid) : this.set("networkName", "No Known Networks on Account")
                }.bind(this)), this.set("isK1", function() {
                    var a = this.get("model") || "";
                    return "k1" == a.toLowerCase()
                }.bind(this)), this.set("isK2", function() {
                    var a = this.get("model") || "";
                    return "k2" == a.toLowerCase()
                }.bind(this)), this.set("isAdult", function() {
                    var a = this.get("model") || "";
                    return "k1" != a.toLowerCase() && "k2" != a.toLowerCase()
                }.bind(this)), this.set("isPaired", function() {
                    var a = this.get("status") || {};
                    return 2 != a.status
                }.bind(this))
            }
            var d = a("lavaca/mvc/Model"),
                e = a("app/models/BedCollection"),
                f = a("app/service/WifiService"),
                g = a("app/models/AccountModel"),
                h = a("mout/object/get"),
                i = (a("app/models/BedDemoModel"), a("app/utils/MixPanelManager")),
                j = d.extend(function() {
                    d.call(this, arguments), c.call(this)
                }, {
                    save: function() {
                        return new Promise(function(a) {
                            g.updateBed(this.get("bedId"), {
                                name: this.get("bedName"),
                                zipcode: this.get("zipCode"),
                                timezone: this.get("timeZone")
                            }).then(function() {
                                var b = e.getBedModel(this.get("bedId"));
                                i.prototype.trackBedDetailsUpdate(this.toObject()), b && (this.get("bedName") && b.set("name", this.get("bedName")), this.get("zipCode") && b.set("zipcode", this.get("zipCode")), this.get("timeZone") && b.set("timezone", this.get("timeZone")), e.trigger("reset")), a()
                            }.bind(this), function(b) {
                                if ("string" == typeof b) window.customAlert.alert(b);
                                else {
                                    var c = h(b, "responseJSON.Error.Message") || "Something went wrong saving your profile.";
                                    window.customAlert.alert(c)
                                }
                                a()
                            }.bind(this))
                        }.bind(this))
                    },
                    requestUpdate: function() {
                        return e.fetch().then(function() {
                            c.call(this)
                        }.bind(this))
                    }
                });
            return j
        }), define("app/models/validations/account-settings", ["require"], function() {
            return {
                sleepGoal: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                firstName: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required",
                        message: "Your first name cannot be empty."
                    }]
                }),
                birthYear: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                height: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                weight: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                isMale: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                email: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required",
                        message: "Email address is required.."
                    }, {
                        type: "email",
                        message: "Please enter a valid email format"
                    }, {
                        type: "exclude",
                        exclusions: [" "]
                    }]
                }),
                password: {
                    criteria: JSON.stringify({
                        validated: !1,
                        rules: [{
                            type: "required",
                            message: "Your password cannot be empty."
                        }, {
                            type: "exclude",
                            exclusions: [" "],
                            message: "Password cannot contain white space."
                        }, {
                            type: "number",
                            message: "Your password must contain a number."
                        }, {
                            type: "uppercase",
                            message: "Your password must contain an uppercase letter."
                        }, {
                            type: "length",
                            min: 8,
                            max: 30,
                            message: "Your password must be between 8 and 30 characters in length."
                        }]
                    })
                },
                confirmPassword: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required",
                        message: "This field is required."
                    }, {
                        type: "match",
                        match: "password",
                        message: "The passwords do not match."
                    }]
                })
            }
        }), define("app/service/AirshipService", ["require", "app/service/Service", "lavaca/util/Disposable", "app/models/StateModel"], function(a) {
            var b = a("app/service/Service"),
                c = a("lavaca/util/Disposable"),
                d = a("app/models/StateModel"),
                e = c.extend(function() {
                    c.apply(this, arguments)
                }, {
                    registerPush: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/device", c, "POST")
                    },
                    deregisterPush: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/device/" + c, null, "DELETE")
                    },
                    deregisterAll: function(a) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/device", null, "DELETE")
                    },
                    updatePreferences: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/preferences/notifications", c, "PUT")
                    },
                    getPreferences: function(a) {
                        return d.get("demoMode") ? Promise.resolve() : b.makeRequest("sleeper/" + a + "/preferences", null, "GET")
                    }
                });
            return new e
        }), define("app/service/NotificationService", ["require", "app/service/Service", "lavaca/util/Disposable", "app/models/StateModel", "app/service/DemoData"], function(a) {
            var b = a("app/service/Service"),
                c = a("lavaca/util/Disposable"),
                d = a("app/models/StateModel"),
                e = a("app/service/DemoData"),
                f = c.extend(function() {
                    c.apply(this, arguments)
                }, {
                    getUserNotifications: function(a) {
                        return a ? d.get("demoMode") ? Promise.resolve(e.getUserNotifications) : b.makeRequest("sleeper/" + a + "/preferences", null, "GET", !1) : Promise.reject()
                    },
                    setUserNotifications: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : a && c ? b.makeRequest("sleeper/" + a + "/preferences", c, "POST", !1) : Promise.reject()
                    },
                    updateUserNotifications: function(a, c) {
                        return d.get("demoMode") ? Promise.resolve() : a ? b.makeRequest("sleeper/" + a + "/preferences", c, "PUT", !1) : Promise.reject()
                    }
                });
            return new f
        }), define("app/models/viewmodels/UserSettingsViewModel", ["require", "lavaca/mvc/Model", "app/models/FamilyModel", "app/models/BedCollection", "app/models/validations/account-settings", "app/service/AirshipService", "app/models/BedCollection", "app/service/AccountService", "app/models/AccountModel", "app/models/StateModel", "mout/object/get", "app/models/AuthModel", "app/service/NotificationService", "app/utils/MixPanelManager", "moment", "$"], function(a) {
            function b(a) {
                this.set("userId", a);
                var b = n.getUserIndexFromId(this.get("userId")),
                    f = n.models[b];
                f && (this.set("user", f), this.set("originalUser", f.toObject())), this.set("renderBedNotifications", !1), this.set("isLoggedInChild", (this.get("user").get("isLoggedIn") ? !0 : !1) && this.get("user").get("isChild")), this.set("validations", p), e.call(this), c.call(this), h.call(this), d.call(this), this.set("isOnlyAccountOwner", this.get("user") && this.get("user").get("bedId") && "0" === this.get("user").get("bedId") && this.get("user").get("isAccountOwner")), this.set("canAddSecondSleeper", !this.get("user").get("isChild") && o.canAddSecondSleeper(a)), this.set("canSwapSleeper", !this.get("user").get("isChild") && o.canSwapSleeper(a))
            }

            function c() {
                "null" == this.get("user").get("email") && this.get("user").set("email", null)
            }

            function d() {
                var a = [];
                if (this.get("user").get("isChild"))
                    for (var b = (new Date).getFullYear() - 14; b <= (new Date).getFullYear() - 4; b++) a.push(b);
                else
                    for (var b = (new Date).getFullYear() - 115; b <= (new Date).getFullYear() - 15; b++) a.push(b);
                a.indexOf(parseInt(this.get("user").get("birthYear"))) < 0 && this.set("invalidYear", this.get("user").get("birthYear")), this.set("yearsRange", a)
            }

            function e() {
                var a = this.get("user").get("firstName");
                a.length > 5 && !Modernizr.desktop && !Modernizr.tablet && (a = a.slice(0, 4), a += "..."), this.set("firstName", a)
            }

            function f() {
                n.getSleepersOnBeds().then(function(a) {
                    var b = [],
                        c = [];
                    a.forEach(function(a) {
                        a.get("isChild") && (b.push(a), c.push(a.get("firstName")))
                    }), this.set("children", b)
                }.bind(this))
            }

            function g() {
                n.getSleepersOnBeds().then(function(a) {
                    var b = [],
                        c = this.get("userNotifications");
                    c && c.children && (a.forEach(function(a) {
                        if (a.get("isChild"))
                            for (var d in c.children) c.children[d].sleeperId === a.get("sleeperId") && c.children[d].on && b.push(a.get("firstName"))
                    }), b && b.length ? this.set("childrenFirstNames", b.join(", ")) : this.set("childrenFirstNames", "No notifications set"), this.trigger("setAccountChildrenNotifications"))
                }.bind(this))
            }

            function h() {
                this.get("user").get("isChild") || (f.call(this), w.getUserNotifications(this.get("user").get("sleeperId")).then(function(a) {
                    var b = [],
                        c = [],
                        d = {},
                        e = !1;
                    try {
                        var f = a.preferences.notifications;
                        f && f.length ? f.forEach(function(a) {
                            if (1 === a.preferenceType) {
                                e = !0, a.sleepers.forEach(function(a) {
                                    c.push(a)
                                }.bind(this)), d.notifyWindow = a.notifyWindow, d.enabled = a.enabled;
                                var b = a.notifyWindow.start,
                                    f = a.notifyWindow.end,
                                    g = 10 > b / 100 ? "0" + a.notifyWindow.start : "" + a.notifyWindow.start,
                                    h = 10 > f / 100 ? "0" + a.notifyWindow.end : "" + a.notifyWindow.end;
                                d.notifyFrom = y(g, "HHmm").format("h:mma"), d.notifyUntil = y(h, "HHmm").format("h:mma"), d.is24Hours = 2359 === f && f - b === f
                            }
                        }.bind(this)) : (d = {
                            preferenceType: 1,
                            enabled: !1,
                            sleepers: [],
                            notifyWindow: {
                                start: 2e3,
                                end: 600
                            }
                        }, this.get("children").forEach(function(a) {
                            d.sleepers.push(a.get("sleeperId"))
                        }), d.notifyFrom = y("2000", "HHmm").format("h:mma"), d.notifyUntil = y("0600", "HHmm").format("h:mma"), d.is24Hours = !1), this.get("children") && this.get("children").forEach(function(a) {
                            c.indexOf(a.get("sleeperId")) > -1 ? b.push({
                                firstName: a.get("firstName"),
                                sleeperId: a.get("sleeperId"),
                                on: !0
                            }) : b.push({
                                firstName: a.get("firstName"),
                                sleeperId: a.get("sleeperId"),
                                on: !1
                            })
                        }.bind(this)), d.children = b
                    } catch (h) {
                        console.warn(h)
                    } finally {
                        this.set("userNotifications", d), this.set("renderBedNotifications", b.length > 0), this.set("hasSetNotifications", e), g.call(this), this.trigger("setAccountChildrenNotifications")
                    }
                }.bind(this)))
            }

            function i(a) {
                return new Promise(function(b, c) {
                    if (this.hasSavedSleeper) b();
                    else {
                        var d = a ? a : this.get("user").toObject(),
                            e = {};
                        if (this.get("isOnlyAccountOwner")) e.firstName = d.firstName, j.call(this, e) ? r.updateSleeper(d.sleeperId, e).then(function() {
                            x.prototype.trackUserProfileChange(d), q.fetch(), this.hasSavedSleeper = !0, n.fetch(!0).then(function() {
                                b()
                            }.bind(this), function() {
                                b()
                            }.bind(this))
                        }.bind(this), function(a) {
                            c(a)
                        }.bind(this)) : b();
                        else {
                            try {
                                d.firstName && (e.firstName = d.firstName), "undefined" != typeof d.side && null !== typeof d.side && (e.side = d.side), d.birthYear && (e.birthYear = d.birthYear), d.birthMonth && (e.birthMonth = d.birthMonth), "undefined" != typeof d.isMale && null !== typeof d.isMale && (e.isMale = d.isMale), d.sleepGoal && (e.sleepGoal = parseInt(d.sleepGoal, 10)), d.height && (e.height = parseInt(d.height, 10)), d.weight && (e.weight = parseInt(d.weight, 10)), d.bedId && (e.bedId = d.bedId)
                            } catch (f) {
                                console.warn(f), c("Unable to save user. Please verify all fields are correct and try again.")
                            }
                            j.call(this, e) ? n.checkIfOtherUsersAreOnBedSide(d.side, d.bedId, d.sleeperId).then(function(a) {
                                a && t.trigger("updatedUserSide"), console.warn("Putting " + d.firstName + " on side " + d.side), r.updateSleeper(d.sleeperId, e).then(function() {
                                    x.prototype.trackUserProfileChange(d), q.fetch(), this.hasSavedSleeper = !0, n.fetch(!0).then(function() {
                                        b()
                                    }.bind(this), function() {
                                        b()
                                    }.bind(this))
                                }.bind(this), function(a) {
                                    c(a)
                                }.bind(this))
                            }.bind(this), function() {
                                window.customAlert.alert("Something went wrong updating your bed side.")
                            }.bind(this)) : b()
                        }
                    }
                }.bind(this))
            }

            function j(a) {
                if (this.get("originalUser")) {
                    var b = this.get("originalUser");
                    for (var c in a)
                        if ("undefined" != typeof b[c] && null !== b[c] && a[c] !== b[c]) return !0;
                    return !1
                }
                return !1
            }

            function k(a, b) {
                var c = [],
                    d = {},
                    e = z.Deferred();
                if (b && b.children) {
                    for (var f = 0; f < b.children.length; f++) b.children[f].on && c.push(String(b.children[f].sleeperId));
                    try {
                        d.start = b.is24Hours ? 0 : b.notifyWindow.start, d.end = b.is24Hours ? 2359 : b.notifyWindow.end
                    } catch (g) {
                        d.start = 0, d.end = 2359
                    }
                    var h = {
                        preferenceType: 1,
                        enabled: b.enabled || !1,
                        notifyWindow: d,
                        sleepers: c
                    };
                    this.get("hasSetNotifications") ? w.updateUserNotifications(a, h).then(function(b) {
                        this.set("hasSetNotifications", !0), e.resolve(a, ": successfully updated notifications: ", b), x.prototype.trackNotificationsChange(this.toObject())
                    }.bind(this), function(b) {
                        var c = u(b, "responseJSON.Error.Message");
                        c && c.indexOf("The preference is already set for this preference type and sleeper id") ? (this.set("hasSetNotifications", !0), e.resolve()) : e.reject(a + " : failed to update notifications: " + b)
                    }.bind(this)) : w.setUserNotifications(a, h).then(function(b) {
                        this.set("hasSetNotifications", !0), e.resolve(a + ": successfully set notifications: " + b), x.prototype.trackNotificationsChange(this.toObject())
                    }.bind(this), function(b) {
                        var c = u(b, "responseJSON.Error.Message");
                        c && c.indexOf("The preference is already set for this preference type and sleeper id") ? (this.set("hasSetNotifications", !0), w.updateUserNotifications(a, h).then(function(b) {
                            this.set("hasSetNotifications", !0), e.resolve(a, ": successfully updated notifications: ", b), x.prototype.trackNotificationsChange(this.toObject())
                        }.bind(this), function(b) {
                            var c = u(b, "responseJSON.Error.Message");
                            c && c.indexOf("The preference is already set for this preference type and sleeper id") ? (this.set("hasSetNotifications", !0), e.resolve()) : e.reject(a + " : failed to update notifications: " + b)
                        }.bind(this))) : e.reject(a + " : failed to set notifications: " + b)
                    }.bind(this))
                } else e.reject();
                return e
            }

            function l(a, b) {
                return a ? (b ? i.call(this).then(function() {
                    l.call(this, a, !1)
                }.bind(this), function() {
                    window.customAlert.alert("There was trouble adding your sleeper. Please try again.")
                }.bind(this)) : r.addSleeper(a, s.get("accountKey")).then(function(a) {
                    this.set("canAddSecondSleeper", !1);
                    var b = a;
                    q.fetch().then(function() {
                        n.fetch().then(function() {
                            this.trigger("addedSleeper", b)
                        }.bind(this), function(a) {
                            console.warn(a), this.trigger("addedSleeper", b)
                        }.bind(this))
                    }.bind(this), function(a) {
                        console.warn(a), this.trigger("addedSleeper", b)
                    }.bind(this))
                }.bind(this), function() {
                    this.trigger("failedAddSleeper")
                }.bind(this)), void 0) : (this.trigger("failedAddSleeper"), !1)
            }
            var m = a("lavaca/mvc/Model"),
                n = a("app/models/FamilyModel"),
                o = a("app/models/BedCollection"),
                p = a("app/models/validations/account-settings"),
                q = (a("app/service/AirshipService"), a("app/models/BedCollection")),
                r = a("app/service/AccountService"),
                s = a("app/models/AccountModel"),
                t = a("app/models/StateModel"),
                u = a("mout/object/get"),
                v = a("app/models/AuthModel"),
                w = a("app/service/NotificationService"),
                x = a("app/utils/MixPanelManager"),
                y = a("moment"),
                z = a("$"),
                A = m.extend(function(a) {
                    m.call(this, arguments), b.call(this, a)
                }, {
                    hasSavedSleeper: !1,
                    setFirst: function() {
                        e.call(this)
                    },
                    saveSettings: function(a) {
                        return new Promise(function(b, c) {
                            i.call(this).then(function() {
                                b()
                            }.bind(this), function(d) {
                                if (a) {
                                    if ("string" == typeof d) window.customAlert.alert(d);
                                    else {
                                        var e = u(d, "responseJSON.Error.Message") || "Something went wrong saving your profile.";
                                        window.customAlert.alert(e)
                                    }
                                    b()
                                } else c(d)
                            }.bind(this))
                        }.bind(this))
                    },
                    saveNotifications: function(a, b) {
                        return g.call(this), k.call(this, a, b)
                    },
                    reinit: function() {
                        var a = this.get("userId");
                        if (a) {
                            this.set("userId", a);
                            var b = n.getUserIndexFromId(this.get("userId")),
                                c = n.models[b];
                            c && (this.set("user", c), this.set("originalUser", c.toObject()))
                        }
                    },
                    addSleeper: function(a, b, c) {
                        if (b) try {
                            this.get("user").set("side", 0 === c ? 1 : 0)
                        } catch (d) {}
                        l.call(this, a, b || !1)
                    },
                    editAccountCredentials: function(a, b) {
                        var c = this.get("userId");
                        return new Promise(function(d, e) {
                            r.updateSleeper(c, {
                                email: a,
                                password: b
                            }).then(function(a) {
                                r.getSleeper(c).then(function(b) {
                                    "null" == b.sleeper.email ? this.get("user").set("email", null) : this.get("user").set("email", b.sleeper.email), this.get("user").set("emailValidated", b.sleeper.emailValidated), this.trigger("newAccountCredentials"), d(a)
                                }.bind(this), function(a) {
                                    e(a)
                                }.bind(this))
                            }.bind(this), function(a) {
                                e(a)
                            }.bind(this))
                        }.bind(this))
                    },
                    cancelEmailChange: function() {
                        var a = this.get("userId");
                        return new Promise(function(b, c) {
                            r.cancelEmailChange(a).then(function(d) {
                                r.getSleeper(a).then(function(a) {
                                    "null" == a.sleeper.email ? this.get("user").set("email", null) : this.get("user").set("email", a.sleeper.email), this.get("user").set("emailValidated", !0), this.trigger("newAccountCredentials"), b(d)
                                }.bind(this), function(a) {
                                    c(a)
                                }.bind(this))
                            }.bind(this), function(a) {
                                c(a)
                            }.bind(this))
                        }.bind(this))
                    },
                    changePassword: function(a) {
                        var b = z.Deferred(),
                            c = this.get("userId");
                        return r.updateSleeper(c, {
                            email: this.get("user").get("email"),
                            password: a
                        }).then(function() {
                            v.onPasswordReset(a), b.resolve()
                        }.bind(this), function() {
                            b.reject()
                        }.bind(this)), b
                    },
                    setOutOfBedNotifications: function(a) {
                        this.get("userNotifications") && (this.get("userNotifications").enabled = a, this.saveNotifications(this.get("userId"), this.get("userNotifications")))
                    },
                    setNotification: function(a) {
                        0 === a ? this.trigger("setNotificationFrom") : this.trigger("setNotificationUntil")
                    },
                    saveNotificationTimeWindow: function(a) {
                        var b = 100 * parseInt(y(a, "h:mma").format("HH"), 10),
                            c = parseInt(y(a, "h:mma").format("mm"), 10),
                            d = b + c;
                        this.get("userNotifications") && (this.get("userNotifications").notifyWindow || (this.get("userNotifications").notifyWindow = {}), 0 === this.get("notificationType") && (this.get("userNotifications").notifyFrom = a, this.get("userNotifications").notifyWindow.start = d), 1 === this.get("notificationType") && (this.get("userNotifications").notifyUntil = a, this.get("userNotifications").notifyWindow.end = d), this.trigger("renderNotificationTimes"))
                    }
                });
            return A
        }), define("app/net/HomeController", ["require", "app/ui/views/pageviews/LoginView", "app/ui/views/pageviews/RootTabBarView", "app/ui/views/pageviews/DashboardView", "app/ui/views/pageviews/BedSettingsView", "app/ui/views/pageviews/UserSettingsView", "app/models/viewmodels/DashboardViewModel", "app/models/AuthModel", "app/models/StateModel", "app/models/FamilyModel", "app/models/viewmodels/RootTabBarViewModel", "app/net/BaseController", "lavaca/mvc/Model", "app/ui/views/controlviews/UserSwitchView", "app/ui/views/pageviews/ForgotPasswordView", "app/models/FAQModel", "app/models/BedCollection", "app/models/RegistrationViewModel", "app/models/viewmodels/BedSettingsViewModel", "app/models/viewmodels/UserSettingsViewModel", "app/env/Config", "lavaca/net/Connectivity"], function(a) {
            var b = a("app/ui/views/pageviews/LoginView"),
                c = a("app/ui/views/pageviews/RootTabBarView"),
                d = a("app/ui/views/pageviews/DashboardView"),
                e = a("app/ui/views/pageviews/BedSettingsView"),
                f = a("app/ui/views/pageviews/UserSettingsView"),
                g = a("app/models/viewmodels/DashboardViewModel"),
                h = a("app/models/AuthModel"),
                i = a("app/models/StateModel"),
                j = a("app/models/FamilyModel"),
                k = a("app/models/viewmodels/RootTabBarViewModel"),
                l = a("app/net/BaseController"),
                m = a("lavaca/mvc/Model"),
                n = (a("app/ui/views/controlviews/UserSwitchView"), a("app/ui/views/pageviews/ForgotPasswordView"), a("app/models/FAQModel")),
                o = a("app/models/BedCollection"),
                p = a("app/models/RegistrationViewModel"),
                q = a("app/models/viewmodels/BedSettingsViewModel"),
                r = a("app/models/viewmodels/UserSettingsViewModel"),
                s = a("app/env/Config"),
                t = a("lavaca/net/Connectivity"),
                u = l.extend(function() {
                    $("html").attr("data-controller", "HomeController"), l.apply(this, arguments)
                }, {
                    index: function(a, c) {
                        if (t.isOffline() && setTimeout(function() {
                                t.isOffline()
                            }.bind(this), 1e3), Modernizr.webview && (document.location = h.get("username") ? "sleepiq://login?email=" + h.get("username") : "sleepiq://login"), a && 0 == a.url.indexOf("/redirected") && (Modernizr.android && (document.location = "intent://scan/#Intent;scheme=sleepiq;package=com.selectcomfort.SleepIQ;end"), Modernizr.ios && (window.location.href = s.url_scheme, setTimeout(function() {
                                window.location.href = s.appstore_url
                            }, 50))), h && h.get("accountKey") && "" !== h.get("accountKey")) return this.redirect("/dashboard?fromIndex=true");
                        a && a.orderActiveRedirect && window.customAlert.alert("The account is already active. Please log in.");
                        var d = new m;
                        return p.clearAll(), this.view(null, b, d).then(this.updateState(c, "SleepIQ", a.url))
                    },
                    dashboard: function(a, b) {
                        if (i.getRegistrationState() && "13" !== i.getRegistrationState()) return this.redirect("/registration?skipAcc=true");
                        var c = a && a.skipBeds ? !0 : !1;
                        if (0 !== o.models.length || c) {
                            if (!o.checkIfAllBedsBound()) return this.redirect("/registration/complete");
                            if (j.count()) {
                                var e = j.getFamily()[j.getLoggedInUserIndex()];
                                return e.get("isChild") || a && a.fromIndex && "0" !== e.get("bedId") ? this.redirect("/user/" + e.get("sleeperId")) : (p.clearAll(), g.models && g.models.length <= 1 && g.fetch(), this.view(null, d, g).then(this.updateState(b, "SleepIQ", a.url)))
                            }
                            return j.fetch().then(function() {
                                this.redirect(a && a.fromIndex ? "/dashboard?fromIndex=true" : "/dashboard")
                            }.bind(this), function() {
                                this.redirect(a && a.fromIndex ? "/dashboard?fromIndex=true" : "/dashboard")
                            }.bind(this))
                        }
                        return o.fetch().then(function() {
                            return o.checkIfAllBedsBound() ? (o.models && o.models.length ? this.redirect(a && a.fromIndex ? "/dashboard?fromIndex=true" : "/dashboard") : this.redirect(a && a.fromIndex ? "/dashboard?fromIndex=true&skipBeds=true" : "/dashboard?skipBeds=true"), void 0) : this.redirect("/registration/complete")
                        }.bind(this), function(b) {
                            b && 401 === b.status && "Unauthorized" === b.statusText && (Modernizr.localstorage && (sessionStorage.isAuthenticated = !1), h.isAuthenticated = !1), this.redirect(a && a.fromIndex ? "/dashboard?fromIndex=true" : "/dashboard")
                        }.bind(this))
                    },
                    user: function(a, b) {
                        if (i.getRegistrationState() && "13" !== i.getRegistrationState()) return this.redirect("/registration?skipAcc=true");
                        p.clearAll();
                        var d = j.getFamily()[j.getLoggedInUserIndex()];
                        if (0 === o.models.length) return o.fetch().then(function() {
                            if (o.checkIfAllBedsBound() || d.get("isChild")) {
                                var e = new k;
                                return a && a.id && j.setSelectedUser(a.id), a.view && e.set("currentView", a.view), a.formattedDate && e.set("formattedDate", a.formattedDate), a.date && e.set("currentDate", a.date), a.dataType && e.set("dataType", a.dataType), this.view(null, c, e).then(this.updateState(b, "SleepIQ", a.url))
                            }
                            return this.redirect("/registration/complete")
                        }.bind(this));
                        var e = new k;
                        return o.checkIfAllBedsBound() || d.get("isChild") ? (a && a.id && j.setSelectedUser(a.id), a.view && e.set("currentView", a.view), a.formattedDate && e.set("formattedDate", a.formattedDate), a.date && e.set("currentDate", a.date), a.dataType && e.set("dataType", a.dataType), this.view(null, c, e).then(this.updateState(b, "SleepIQ", a.url))) : this.redirect("/registration/complete")
                    },
                    bedSettings: function(a, b) {
                        if (n.init(), j.count()) {
                            var c = j.getFamily()[j.getLoggedInUserIndex()];
                            if (c.get("isChild") && c.get("bedId") !== a.bedId) return this.redirect("/user/" + c.get("sleeperId"))
                        }
                        return o.models.length > 0 ? (o.setCurrentBedWithBedId(a.bedId), this.view(null, e, new q).then(this.updateState(b, "SleepIQ", a.url))) : o.fetch().then(function() {
                            return o.setCurrentBedWithBedId(a.bedId), this.view(null, e, new q).then(this.updateState(b, "SleepIQ", a.url))
                        }.bind(this), function() {
                            this.redirect("/dashboard")
                        }.bind(this))
                    },
                    userSettings: function(a, b) {
                        return j.count() ? this.view(null, f, new r(a.id)).then(this.updateState(b, "SleepIQ", a.url)) : j.fetch().then(function() {
                            0 === o.count() ? o.fetch().then(function() {
                                this.view(null, f, new r(a.id)).then(this.updateState(b, "SleepIQ", a.url))
                            }.bind(this), function() {
                                return this.redirect("/")
                            }.bind(this)) : this.view(null, f, new r(a.id)).then(this.updateState(b, "SleepIQ", a.url))
                        }.bind(this), function() {
                            return this.redirect("/")
                        }.bind(this))
                    }
                });
            return u
        }), define("rdust!templates/pageviews/marketplace", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/dashboard-header", b, {
                        pageTitle: "Device Connections"
                    }).write('<div class="marketplace-container"><div class="marketplace-subheader"><h2>SleepIQ<sup>&reg;</sup></h2></div><h3>Let\'s connect SleepIQ to your favorite apps to create personalized <br> insights that guide you to better sleep.</h3><div class="providers-container">').section(b.get("providers"), b, {
                        block: c
                    }, null).write("</div></div>")
                }

                function c(a, b) {
                    return a.write('<div class="provider-container ').exists(b.get("connected"), b, {
                        block: d
                    }, null).write('"><div class="description-container"><img src="data:image/png;base64,').reference(b.get("image"), b, "h").write('" class="logo"> <span class="description">').reference(b.get("name"), b, "h").write("</span></div>").helper("select", b, {
                        block: e
                    }, {
                        key: b.get("connected")
                    }).write("</div>")
                }

                function d(a) {
                    return a.write("connected")
                }

                function e(a, b) {
                    return a.helper("eq", b, {
                        block: f
                    }, {
                        value: "true",
                        type: "string"
                    }).helper("default", b, {
                        block: g
                    }, null)
                }

                function f(a, b) {
                    return a.write('<a class="big white" href="/manage/').reference(b.get("id"), b, "h").write('">Manage</a>')
                }

                function g(a, b) {
                    return a.exists(b.get("canConnect"), b, {
                        "else": h,
                        block: i
                    }, null)
                }

                function h(a) {
                    return a.write("Only available on iPhone")
                }

                function i(a, b) {
                    return a.write('<button class="big connect" data-provider="').reference(b.get("id"), b, "h").write('">Connect</button>')
                }
                return a.register("templates/pageviews/marketplace", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/marketplace", b, c)
                }
            }
        }), define("app/models/viewmodels/MarketplaceViewModel", ["require", "lavaca/mvc/Model", "lavaca/mvc/Collection", "app/models/StateModel", "app/service/EdpAccountService"], function(a) {
            function b(a) {
                return f.getConnectURL(a)
            }

            function c(a) {
                return a.map(function(a) {
                    return a.platforms.indexOf("web") >= 0 ? (a.canConnect = !0, a.connectURL = b(a.id) + "&redirect=" + encodeURIComponent(document.location)) : a.canConnect = !1, a
                }), a
            }

            function d(a) {
                return a.sort(function(a, b) {
                    return a.order < b.order ? -1 : a.order > b.order ? 1 : 0
                }), a
            }
            var e = (a("lavaca/mvc/Model"), a("lavaca/mvc/Collection")),
                f = (a("app/models/StateModel"), a("app/service/EdpAccountService")),
                g = e.extend(function() {
                    e.call(this, arguments)
                }, {
                    fetch: function() {
                        return f.getProviders().then(function(a) {
                            return this.set("providers", a && a.providers ? d(a.providers) : []), this.set("hasFetched", !0), this.add(c(a.providers)), a
                        }.bind(this), function(a) {
                            window.customAlert('<p class="center">Failed to connect to 3rd party providers, please try again later.</p>', null, "bottom"), this.set("hasFetched", !0), reject(a)
                        }.bind(this))
                    },
                    disconnect: function(a) {
                        return f.disconnect(a.get("id")).then(function(a) {
                            return a
                        }.bind(this), function(a) {
                            reject(a)
                        }.bind(this))
                    },
                    getConnectURL: function(a) {
                        return f.getProviders().then(function() {
                            var b = document.location;
                            return "nest" === a && (b = window.location.origin + "#/manage/nest"), f.getConnectURL(a) + "&redirect=" + encodeURIComponent(b)
                        })
                    },
                    setDevices: function(a) {
                        return f.getDevices().then(function(b) {
                            return f.getDeviceAssociations().then(function(c) {
                                b.devices.map(function(a) {
                                    return a.name_long = a.name_long.replace(/ *\([^)]*\) */g, "")
                                });
                                var d = [];
                                b.devices.forEach(function(a) {
                                    var b = c.associations.find(function(b) {
                                        return b.device_id === a.device_id
                                    });
                                    b ? (a.connected = !0, d.push(a.name_long)) : a.connected = !1
                                }.bind(this)), a.set("devices", b.devices), a.set("connectedDevices", d)
                            }.bind(this), function(a) {
                                return a
                            }.bind(this))
                        }.bind(this), function(a) {
                            return 400 === a.status ? (this.set("hasDeviceError", !0), a) : a
                        }.bind(this))
                    },
                    connectDevice: function(a, b, c) {
                        return f.createDeviceAssociation({
                            provider: a,
                            device_id: b,
                            bed_id: c
                        })
                    }
                });
            return new g
        }), define("app/ui/views/pageviews/MarketplaceView", ["require", "./BaseView", "lavaca/mvc/Router", "rdust!templates/pageviews/marketplace", "app/models/viewmodels/MarketplaceViewModel", "$", "rdust!templates/headers/dashboard-header"], function(a) {
            function b(a) {
                var b = f(a.currentTarget);
                if (!b.hasClass("disabled")) {
                    b.addClass("disabled");
                    var c = this.el.find(a.currentTarget).attr("data-provider"),
                        d = e.getConnectURL(c);
                    d.then(function(a) {
                        window.location.href = a, setTimeout(function() {
                            b.removeClass("disabled")
                        }, 4500)
                    }, function() {
                        b.removeClass("disabled")
                    })
                }
            }
            var c = a("./BaseView"),
                d = (a("lavaca/mvc/Router"), a("rdust!templates/pageviews/marketplace")),
                e = a("app/models/viewmodels/MarketplaceViewModel"),
                f = a("$");
            a("rdust!templates/headers/dashboard-header");
            var g = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".connect": {
                        tap: b
                    }
                })
            }, {
                className: "marketplace-wrapper",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        d.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                dispose: function() {
                    c.prototype.dispose.apply(this, arguments)
                },
                onRenderSuccess: function() {
                    this.model.get("hasDeviceError") && (window.customAlert.alert('Your Nest account has been deauthorized. Please click "Connect" to set up a new connection with Nest.', null, "bottom"), this.model.set("hasDeviceError", !1))
                }
            });
            return g
        }), define("rdust!templates/pageviews/disconnect-provider", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/dashboard-header", b, {
                        pageTitle: c
                    }).write('<div class="marketplace-container"><div class="disconnect-subheader">Connected on: ').reference(b.get("connectedAt"), b, "h").exists(b.get("lastSync"), b, {
                        block: d
                    }, null).write("</div><h3>SleepIQ has permission to connect with your ").reference(b.get("name"), b, "h").write(' <br> account. This allows SleepIQ to read the following: </h3><div class="scopes-container">').section(b.get("scope"), b, {
                        block: e
                    }, null).exists(b.get("connectedDevices"), b, {
                        block: f
                    }, null).notexists(b.get("canConnect"), b, {
                        block: h
                    }, null).write('<button class="big disconnect">Disconnect</button></div></div>')
                }

                function c(a, b) {
                    return a.write("Manage ").reference(b.get("name"), b, "h")
                }

                function d(a, b) {
                    return a.write(" <br>Last Synced on: ").reference(b.get("lastSync"), b, "h")
                }

                function e(a, b) {
                    return a.write('<div class="scope-container"><div class="scope-description">').reference(b.getPath(!0, []), b, "h").write("</div></div>")
                }

                function f(a, b) {
                    return a.write('<div class="small-header">Connection info</div>').section(b.get("connectedDevices"), b, {
                        block: g
                    }, null)
                }

                function g(a, b) {
                    return a.write('<div class="device-container"><label>').reference(b.get("name"), b, "h").write(" Location</label>").reference(b.getPath(!0, []), b, "h").write("</div>")
                }

                function h(a, b) {
                    return a.write('<span class="input-tip">You must be on an iPhone to disconnect ').reference(b.get("name"), b, "h").write(".</span>")
                }
                return a.register("templates/pageviews/disconnect-provider", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/disconnect-provider", b, c)
                }
            }
        }), define("app/ui/views/pageviews/ManageView", ["require", "./BaseView", "lavaca/mvc/Router", "rdust!templates/pageviews/disconnect-provider", "app/models/FamilyModel", "app/models/viewmodels/MarketplaceViewModel", "$", "rdust!templates/headers/dashboard-header"], function(a) {
            function b() {
                d.exec("/manage/" + this.model.get("id") + "?fromManage=true")
            }
            var c = a("./BaseView"),
                d = a("lavaca/mvc/Router"),
                e = a("rdust!templates/pageviews/disconnect-provider"),
                f = (a("app/models/FamilyModel"), a("app/models/viewmodels/MarketplaceViewModel")),
                g = a("$");
            a("rdust!templates/headers/dashboard-header");
            var h = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".device-container": {
                        tap: b.bind(this)
                    },
                    ".disconnect": {
                        tap: this.onTapDisconnect
                    }
                })
            }, {
                className: "marketplace-wrapper",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        e.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                dispose: function() {
                    c.prototype.dispose.apply(this, arguments)
                },
                onTapDisconnect: function(a) {
                    var b = g(a.currentTarget);
                    if (!b.hasClass("disabled")) return b.addClass("disabled"), this.model.get("canConnect") ? (f.disconnect(this.model).then(function() {
                        d.exec("/marketplace")
                    }.bind(this), function() {
                        d.exec("/marketplace"), b.removeClass("disabled")
                    }), void 0) : (b.removeClass("disabled"), void 0)
                }
            });
            return h
        }), define("rdust!templates/pageviews/manage-nest-provider", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/dashboard-header", b, {
                        pageTitle: c
                    }).write('<div class="marketplace-container"><h3>Please select which device you would like <br> to connect with SleepIQ</h3><div class="devices-container">').section(b.get("devices"), b, {
                        block: d
                    }, null).write('<button class="big connect-nest">').reference(b.get("action"), b, "h").write("</button></div></div>")
                }

                function c(a, b) {
                    return a.reference(b.get("title"), b, "h").write(" ").reference(b.get("name"), b, "h")
                }

                function d(a, b) {
                    return a.write('<div class="device-container ').exists(b.get("connected"), b, {
                        block: e
                    }, null).write('" data-device-id="').reference(b.get("device_id"), b, "h").write('">').reference(b.get("name_long"), b, "h").write("</div>")
                }

                function e(a) {
                    return a.write("connected")
                }
                return a.register("templates/pageviews/manage-nest-provider", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/manage-nest-provider", b, c)
                }
            }
        }), define("app/ui/views/pageviews/ProviderDevicesView", ["require", "./BaseView", "lavaca/mvc/Router", "rdust!templates/pageviews/manage-nest-provider", "app/models/FamilyModel", "app/models/viewmodels/MarketplaceViewModel", "$", "rdust!templates/headers/dashboard-header"], function(a) {
            function b(a) {
                var b = h(a.currentTarget);
                h(".device-container").removeClass("connected"), b.addClass("connected")
            }
            var c = a("./BaseView"),
                d = a("lavaca/mvc/Router"),
                e = a("rdust!templates/pageviews/manage-nest-provider"),
                f = a("app/models/FamilyModel"),
                g = a("app/models/viewmodels/MarketplaceViewModel"),
                h = a("$");
            a("rdust!templates/headers/dashboard-header");
            var i = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".device-container": {
                        tap: b
                    },
                    ".connect-nest": {
                        tap: this.onTapConnectDevice
                    }
                })
            }, {
                className: "marketplace-wrapper",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        e.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                dispose: function() {
                    c.prototype.dispose.apply(this, arguments)
                },
                onTapConnectDevice: function(a) {
                    var b = h(a.currentTarget);
                    if (!b.hasClass("disabled")) {
                        b.addClass("disabled");
                        var c = f.getFamily()[f.getLoggedInUserIndex()],
                            e = h(h(".device-container.connected")[0]),
                            i = e.attr("data-device-id");
                        return g.connectDevice(this.model.get("id"), i, c.get("bedId")).then(function() {
                            d.exec("/manage/" + this.model.get("id"))
                        }.bind(this), function() {
                            window.customAlert.alert("There was an error conencting your device.", null, "SleepIQ®", "OK"), b.removeClass("disabled")
                        })
                    }
                }
            });
            return i
        }), define("app/net/MarketplaceController", ["require", "app/net/BaseController", "app/ui/views/pageviews/MarketplaceView", "app/ui/views/pageviews/ManageView", "app/ui/views/pageviews/ProviderDevicesView", "app/models/viewmodels/MarketplaceViewModel", "app/models/StateModel", "app/models/BedCollection"], function(a) {
            var b = a("app/net/BaseController"),
                c = a("app/ui/views/pageviews/MarketplaceView"),
                d = a("app/ui/views/pageviews/ManageView"),
                e = a("app/ui/views/pageviews/ProviderDevicesView"),
                f = a("app/models/viewmodels/MarketplaceViewModel");
            a("app/models/StateModel"), a("app/models/BedCollection");
            var g = b.extend(function() {
                $("html").attr("data-controller", "MarketplaceConteoller"), b.apply(this, arguments)
            }, {
                marketplace: function(a, b) {
                    return f.fetch().then(function() {
                        return this.view(null, c, f).then(this.updateState(b, "SleepIQ", a.url))
                    }.bind(this))
                },
                manage: function(a, b) {
                    return f.fetch().then(function() {
                        var c = f.filter({
                            connected: !0,
                            id: a.provider
                        });
                        return c.length > 0 ? (c[0].set("connectedAt", moment(c[0].connectedAt).format("M/D/YY")), c[0].get("last_sync") && c[0].set("lastSync", moment(c[0].get("last_sync")).format("M/D/YY")), "nest" !== a.provider ? this.view(null, d, c[0]).then(this.updateState(b, "SleepIQ", a.url)) : (f.setDevices(c[0]).then(function() {
                            return c[0].get("connectedDevices").length < 1 ? (c[0].set("title", "Connect"), c[0].set("action", "Connect"), this.view(null, e, c[0]).then(this.updateState(b, "SleepIQ", a.url))) : a.fromManage ? (c[0].set("title", "Manage"), c[0].set("action", "Update"), this.view(null, e, c[0]).then(this.updateState(b, "SleepIQ", a.url))) : this.view(null, d, c[0]).then(this.updateState(b, "SleepIQ", a.url))
                        }.bind(this), function() {
                            return this.redirect("/marketplace")
                        }.bind(this)), void 0)) : this.redirect("/marketplace")
                    }.bind(this))
                }
            });
            return g
        }), define("rdust!templates/pageviews/remote", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/remote-header", b, {
                        pageTitle: "Remote"
                    }).write('<button class="back" rel="back">Back</button><div class="connecting"><div class="error"><div class="text"><p class="reason">There was an error connecting to your pump.It may be already connected to another device oryou may be out of range. Please move closer and try again. </p><p class="sub-reason"></p></div><div class="actions"><div class="button try-again">Try Again</div><div class="button exit-remote text-only">Cancel</div></div></div><div class="loading-animation-view" data-label="Connecting"></div></div><div class="segmented-control-tabs"><div class="tab-wrap">').exists(b.getPath(!1, ["capabilities", "isAdult"]), b, {
                        block: c
                    }, null).exists(b.getPath(!1, ["capabilities", "isK1"]), b, {
                        block: f
                    }, null).exists(b.getPath(!1, ["capabilities", "isK2"]), b, {
                        block: i
                    }, null).write('</div></div><div class="signal-strength"></div><div class="segmented-control-bed-side"><div class="bed-container"><div class="sleeper right selected" data-index="0" data-side-id="0"><div class="bed-side"></div><div class="sleeper-label"><h1>').reference(b.get("rightSleeperName"), b, "h").write('</h1><span>Right Side</span></div></div><div class="sleeper left" data-index="1" data-side-id="1"><div class="bed-side"></div><div class="sleeper-label"><h1>').reference(b.get("leftSleeperName"), b, "h").write('</h1><span>Left Side</span></div></div><div class="both-label">Controlling both sides</div></div><div class="kid-bed-container"><div class="twin-bed"></div><div class="full-queen-bed"></div><div class="bed-title">').exists(b.get("childSleeperName"), b, {
                        "else": m,
                        block: p
                    }, null).write("</div></div></div>").exists(b.getPath(!1, ["capabilities", "isAdult"]), b, {
                        block: q
                    }, null).notexists(b.getPath(!1, ["capabilities", "isAdult"]), b, {
                        block: r
                    }, null).exists(b.getPath(!1, ["capabilities", "hasFoundation"]), b, {
                        block: s
                    }, null).write('<!-- ######################### --><!-- Adult Foundation Lights --><!-- ######################### --><div class="segmented-control-content-item remote-section light-control" data-segment-index="2"><div class="toggle-controls"><div class="flex-fix"><div class="wrap"><div class="control-item lamp left-light" data-index="2" data-name="Left Nightstand"><div class="item-wrap"><div class="inner').exists(b.get("leftNameLong"), b, {
                        block: L
                    }, null).write('">').exists(b.get("leftSleeperName"), b, {
                        "else": M,
                        block: N
                    }, null).write('</div></div></div><div class="control-item lamp right-light" data-index="1" data-name="Right Nightstand"><div class="item-wrap"><div class="inner').exists(b.get("rightNameLong"), b, {
                        block: O
                    }, null).write('">').exists(b.get("rightSleeperName"), b, {
                        "else": P,
                        block: Q
                    }, null).write('</div></div></div><div class="control-item underbed left-light" data-index="4" data-name="Left Nightlight"><div class="item-wrap"><div class="inner').exists(b.get("leftNameLong"), b, {
                        block: R
                    }, null).write('">').exists(b.get("leftSleeperName"), b, {
                        "else": S,
                        block: T
                    }, null).write('</div></div></div><div class="control-item underbed right-light" data-index="3" data-name="Right Nightlight"><div class="item-wrap"><div class="inner').exists(b.get("rightNameLong"), b, {
                        block: U
                    }, null).write('">').exists(b.get("rightSleeperName"), b, {
                        "else": V,
                        block: W
                    }, null).write("</div></div></div></div></div></div></div>").exists(b.getPath(!1, ["capabilities", "hasOutletConfigured"]), b, {
                        block: X
                    }, null).exists(b.getPath(!1, ["capabilities", "isK2"]), b, {
                        block: Z
                    }, null)
                }

                function c(a, b) {
                    return a.write('<div class="segmented-control-tab-item sleepnumber sleepnumber-adult on" data-tab="sleepnumber" data-segment-index="0"><i class="siqfont">↕</i><span class="sleepnumber-dropdown">Sleep Number<sup>&#174;</sup></span></div>').exists(b.getPath(!1, ["capabilities", "hasFoundation"]), b, {
                        block: d
                    }, null).exists(b.getPath(!1, ["capabilities", "hasMassageAndLighting"]), b, {
                        block: e
                    }, null)
                }

                function d(a) {
                    return a.write('<div class="segmented-control-tab-item foundation" data-tab="foundation" data-segment-index="1"><i class="siqfont">🛏</i><span>Position</span></div>')
                }

                function e(a) {
                    return a.write('<div class="segmented-control-tab-item lights lights-adult" data-tab="lights" data-segment-index="2"><i class="siqfont">💡</i><span>Light</span></div>')
                }

                function f(a, b) {
                    return a.write('<div class="segmented-control-tab-item sleepnumber sleepnumber-kid on" data-tab="sleepnumber" data-segment-index="0"><i class="siqfont">↕</i><span class="sleepnumber-dropdown">Sleep Number<sup>&#174;</sup>').exists(b.get("isLoggedInAdult"), b, {
                        block: g
                    }, null).write("</span>").exists(b.get("isLoggedInAdult"), b, {
                        block: h
                    }, null).write("</div>")
                }

                function g(a) {
                    return a.write('<span class="siqfont dropdown">▼</span>')
                }

                function h(a) {
                    return a.write('<div class="find-container"><div class="caret"></div><div class="find"><button class="find-sleep-number">Find Favorite Sleep Number<sup>&#174;</sup> Setting</button></div></div>')
                }

                function i(a, b) {
                    return a.write('<div class="segmented-control-tab-item sleepnumber sleepnumber-kid on" data-tab="sleepnumber" data-segment-index="0"><i class="siqfont">↕</i><span class="sleepnumber-dropdown">Sleep Number<sup>&#174;</sup>').exists(b.get("isLoggedInAdult"), b, {
                        block: j
                    }, null).write("</span>").exists(b.get("isLoggedInAdult"), b, {
                        block: k
                    }, null).write("</div>").exists(b.getPath(!1, ["capabilities", "hasOutletConfigured"]), b, {
                        block: l
                    }, null).write('<div class="segmented-control-tab-item headtilt" data-tab="headtilt" data-segment-index="3"><i class="siqfont"><span class="headtilt-wrapper">—</span></i><span>Headtilt</span></div>')
                }

                function j(a) {
                    return a.write('<span class="siqfont dropdown">▼</span>')
                }

                function k(a) {
                    return a.write('<div class="find-container"><div class="caret"></div><div class="find"><button class="find-sleep-number">Find Favorite Sleep Number<sup>&#174;</sup> Setting</button></div></div>')
                }

                function l(a) {
                    return a.write('<div class="segmented-control-tab-item lights lights-kid" data-tab="lights" data-segment-index="2"><i class="siqfont">💡</i><span>Light</span></div>')
                }

                function m(a, b) {
                    return a.exists(b.getPath(!1, ["capabilities", "isK1"]), b, {
                        block: n
                    }, null).exists(b.getPath(!1, ["capabilities", "isK2"]), b, {
                        block: o
                    }, null)
                }

                function n(a) {
                    return a.write("K1 Bed")
                }

                function o(a) {
                    return a.write("K2 Bed")
                }

                function p(a, b) {
                    return a.reference(b.get("childSleeperName"), b, "h").write("&rsquo;s Bed")
                }

                function q(a, b) {
                    return a.write('<!-- ########################## --><div class="segmented-control-content-item sleepnumber-section sleepnumber-adult on" data-segment-index="0"><div class="multiple-sides snap-drag-x"><div class="sleepnumber-control-0 sleepnumber-control side" data-sleepnumber="').reference(b.getPath(!1, ["remote", "rightSide", "sleepNumber"]), b, "h").write('" data-sleepnumber-memory="').reference(b.getPath(!1, ["remote", "rightSide", "sleepNumberMemory"]), b, "h").write('" data-section="0" data-side-id="0"><div class="dial"><div class="touch-control"></div></div><div class="sleep-number"><div class="circle"><div class="is-number"></div><div class="summary"><div class="number">').reference(b.getPath(!1, ["remote", "rightSide", "sleepNumber"]), b, "h").write('</div></div></div><div class="dial-pill-chart pill-chart" data-value="').reference(b.getPath(!1, ["remote", "rightSide", "sleepNumber"]), b, "h").write('" data-animate="auto" data-flag="').reference(b.getPath(!1, ["remote", "rightSide", "sleepNumberMemory"]), b, "h").write('" data-flag-name="sleep-number-memory" data-pills="20" data-valueRange="100" data-rotation="90" data-pill-width="').reference(b.get("pillWidth"), b, "h").write('" data-pill-height="').reference(b.get("pillHeight"), b, "h").write('"></div></div><div class="set-sleepnumber"><button class="button"><i class="siqfont return">˿</i>Return to Favorite Sleep Number<sup>&reg;</sup> Setting</button></div></div><div class="sleepnumber-control-1 sleepnumber-control side" data-sleepnumber="').reference(b.getPath(!1, ["remote", "leftSide", "sleepNumber"]), b, "h").write('" data-sleepnumber-memory="').reference(b.getPath(!1, ["remote", "leftSide", "sleepNumberMemory"]), b, "h").write('" data-section="1" data-side-id="1"><div class="dial"><div class="touch-control"></div></div><div class="sleep-number"><div class="circle"><div class="is-number"></div><div class="summary"><div class="number">').reference(b.getPath(!1, ["remote", "leftSide", "sleepNumber"]), b, "h").write('</div></div></div><div class="dial-pill-chart pill-chart side1" data-value="').reference(b.getPath(!1, ["remote", "leftSide", "sleepNumber"]), b, "h").write('" data-animate="auto" data-flag="').reference(b.getPath(!1, ["remote", "leftSide", "sleepNumberMemory"]), b, "h").write('" data-flag-name="sleep-number-memory" data-pills="20" data-valueRange="100" data-rotation="90"  data-pill-width="').reference(b.get("pillWidth"), b, "h").write('" data-pill-height="').reference(b.get("pillHeight"), b, "h").write('"></div></div><div class="set-sleepnumber"><button class="button"><i class="siqfont return">˿</i>Return to Favorite Sleep Number<sup>&reg;</sup> Setting</button></div></div><!-- ## --></div></div>')
                }

                function r(a, b) {
                    return a.write('<!-- ########################## --><div class="segmented-control-content-item sleepnumber-section sleepnumber-kid on" data-segment-index="0"><div class="sleepnumber-control-0 sleepnumber-control side" data-sleepnumber="').reference(b.getPath(!1, ["remote", "kidBedChamber", "sleepNumber"]), b, "h").write('" data-sleepnumber-memory="').reference(b.getPath(!1, ["remote", "kidBedChamber", "sleepNumberMemory"]), b, "h").write('" data-section="0" data-side-id="0"><div class="dial"><div class="touch-control"></div></div><div class="sleep-number"><div class="circle"><div class="is-number kids-number"></div><div class="summary"><div class="number">').reference(b.getPath(!1, ["remote", "kidBedChamber", "sleepNumber"]), b, "h").write('</div></div></div><div class="dial-pill-chart pill-chart" data-value="').reference(b.getPath(!1, ["remote", "kidBedChamber", "sleepNumber"]), b, "h").write('" data-animate="auto" data-flag="').reference(b.getPath(!1, ["remote", "kidBedChamber", "sleepNumberMemory"]), b, "h").write('" data-flag-name="sleep-number-memory" data-pills="20" data-valueRange="100" data-rotation="90" data-pill-width="').reference(b.get("pillWidth"), b, "h").write('" data-pill-height="').reference(b.get("pillHeight"), b, "h").write('"></div></div></div><div class="sleepnumber-buttons kid"><div class="buttons-wrapper"><button class="set-favorite-button"><i class="siqfont heart">❤</i>Set ').reference(b.getPath(!1, ["remote", "kidBedChamber", "sleepNumber"]), b, "h").write(' as Favorite Sleep Number<sup>&reg;</sup> Setting</button><button class="return-favorite-button"><i class="siqfont return">˿</i>Return to Favorite Sleep Number<sup>&reg;</sup> Setting</button></div></div><div class="favorite-setting">').reference(b.get("childName"), b, "h").write("&rsquo;s bed is set to his/her <br> Favorite Sleep Number<sup>&reg;</sup> Setting</div></div>")
                }

                function s(a, b) {
                    return a.write('<!-- ######################### --><!-- Adult Foundation Position --><!-- ######################### --><div class="segmented-control-content-item foundation-section" data-segment-index="1"><div class="multiple-sides snap-drag-x"><!-- ## --><div class="foundation-control-0 foundation-control side" data-section="0" data-side-id="0"><div class="toggle-controls">').helper("select", b, {
                        block: t
                    }, {
                        key: B
                    }).write('</div></div><div class="foundation-control-1 foundation-control side" data-section="1" data-side-id="1"><div class="toggle-controls">').helper("select", b, {
                        block: C
                    }, {
                        key: K
                    }).write("</div></div></div></div>")
                }

                function t(a, b) {
                    return a.write('<div class="flex-fix"><div class="wrap"><div class=\'control-item favorite').helper("eq", b, {
                        block: u
                    }, {
                        value: "1"
                    }).write('\' data-side="0" data-index="1" data-name="Favorite"><div class="item-wrap"><div class="inner">Favorite</div></div></div><div class=\'control-item tv').helper("eq", b, {
                        block: v
                    }, {
                        value: "3"
                    }).write('\' data-side="0" data-index="3" data-name="TV"><div class="item-wrap"><div class="inner">Watch TV</div></div></div><div class=\'control-item partner-snore snore').helper("eq", b, {
                        block: w
                    }, {
                        value: "6"
                    }).write('\' data-side="1" data-index="6" data-name="Partner Snore"><div class="item-wrap"><div class="inner">Partner Snore</div></div></div><div class=\'control-item snore').helper("eq", b, {
                        block: x
                    }, {
                        value: "6"
                    }).write('\' data-side="0" data-index="6" data-name="Snore"><div class="item-wrap"><div class="inner">Snore</div></div></div><div class=\'control-item read').helper("eq", b, {
                        block: y
                    }, {
                        value: "2"
                    }).write('\' data-side="0" data-index="2" data-name="Read"><div class="item-wrap"><div class="inner">Read</div></div></div><div class=\'control-item zerog').helper("eq", b, {
                        block: z
                    }, {
                        value: "5"
                    }).write('\' data-side="0" data-index="5" data-name="Zero G"><div class="item-wrap"><div class="inner">Zero G</div></div></div><div class=\'control-item flat').helper("eq", b, {
                        block: A
                    }, {
                        value: "4"
                    }).write('\' data-side="0" data-index="4" data-name="Flat"><div class="item-wrap"><div class="inner">Flat</div></div></div></div></div>')
                }

                function u(a) {
                    return a.write(" on")
                }

                function v(a) {
                    return a.write(" on")
                }

                function w(a) {
                    return a.write(" on")
                }

                function x(a) {
                    return a.write(" on")
                }

                function y(a) {
                    return a.write(" on")
                }

                function z(a) {
                    return a.write(" on")
                }

                function A(a) {
                    return a.write(" on")
                }

                function B(a, b) {
                    return a.reference(b.getPath(!1, ["remote", "rightSide", "foundationPreset"]), b, "h")
                }

                function C(a, b) {
                    return a.write('<div class="flex-fix"><div class="wrap"><div class=\'control-item favorite').helper("eq", b, {
                        block: D
                    }, {
                        value: "1"
                    }).write('\' data-side="1" data-index="1" data-name="Favorite"><div class="item-wrap"><div class="inner">Favorite</div></div></div><div class=\'control-item tv').helper("eq", b, {
                        block: E
                    }, {
                        value: "3"
                    }).write('\' data-side="1" data-index="3" data-name="TV"><div class="item-wrap"><div class="inner">Watch TV</div></div></div><div class=\'control-item partner-snore snore').helper("eq", b, {
                        block: F
                    }, {
                        value: "6"
                    }).write('\' data-side="0" data-index="6" data-name="Partner Snore"><div class="item-wrap"><div class="inner">Partner Snore</div></div></div><div class=\'control-item snore').helper("eq", b, {
                        block: G
                    }, {
                        value: "6"
                    }).write('\' data-side="1" data-index="6" data-name="Snore"><div class="item-wrap"><div class="inner">Snore</div></div></div><div class=\'control-item read').helper("eq", b, {
                        block: H
                    }, {
                        value: "2"
                    }).write('\' data-side="1" data-index="2" data-name="Read"><div class="item-wrap"><div class="inner">Read</div></div></div><div class=\'control-item zerog').helper("eq", b, {
                        block: I
                    }, {
                        value: "5"
                    }).write('\' data-side="1" data-index="5" data-name="Zero G"><div class="item-wrap"><div class="inner">Zero G</div></div></div><div class=\'control-item flat').helper("eq", b, {
                        block: J
                    }, {
                        value: "4"
                    }).write('\' data-side="1" data-index="4" data-name="Flat"><div class="item-wrap"><div class="inner">Flat</div></div></div></div></div>')
                }

                function D(a) {
                    return a.write(" on")
                }

                function E(a) {
                    return a.write(" on")
                }

                function F(a) {
                    return a.write(" on")
                }

                function G(a) {
                    return a.write(" on")
                }

                function H(a) {
                    return a.write(" on")
                }

                function I(a) {
                    return a.write(" on")
                }

                function J(a) {
                    return a.write(" on")
                }

                function K(a, b) {
                    return a.reference(b.getPath(!1, ["remote", "leftSide", "foundationPreset"]), b, "h")
                }

                function L(a) {
                    return a.write(" long")
                }

                function M(a) {
                    return a.write("Left Nightstand")
                }

                function N(a, b) {
                    return a.write('<div class="sleeper-name">').reference(b.get("leftSleeperName"), b, "h").write("’s</div>Nightstand")
                }

                function O(a) {
                    return a.write(" long")
                }

                function P(a) {
                    return a.write("Right Nightstand")
                }

                function Q(a, b) {
                    return a.write('<div class="sleeper-name">').reference(b.get("rightSleeperName"), b, "h").write("’s</div>Nightstand")
                }

                function R(a) {
                    return a.write(" long")
                }

                function S(a) {
                    return a.write("Left Nightlight")
                }

                function T(a, b) {
                    return a.write('<div class="sleeper-name">').reference(b.get("leftSleeperName"), b, "h").write("’s</div>Nightlight")
                }

                function U(a) {
                    return a.write(" long")
                }

                function V(a) {
                    return a.write("Right Nightlight")
                }

                function W(a, b) {
                    return a.write('<div class="sleeper-name">').reference(b.get("rightSleeperName"), b, "h").write("’s</div>Nightlight")
                }

                function X(a, b) {
                    return a.write('<!-- ######################### --><!-- Kid Outlet --><!-- ######################### --><div class="segmented-control-content-item remote-section kid-light-control" data-segment-index="2"><div class="toggle-controls"><div class="flex-fix"><div class="wrap"><div class="button-wrapper"><div class="control-item-wrapper"><div class="control-item night-stand" data-name="Nightstand"><div class="item-wrap"><div class="item-align"><div class="vertical-nightstand-align">').exists(b.get("childSleeperName"), b, {
                        block: Y
                    }, null).write('Nightstand</div></div></div></div></div></div><div class="button-wrapper"><div class="control-item-wrapper"><div class="control-item underbed" data-name="Underbed"><div class="item-wrap"><div class="item-align"><div class="vertical-underbed-align">').reference(b.getPath(!1, ["remote", "underBedLightName"]), b, "h").write('</div><div class="underbed-buttons"><div class="underbed-button button-off" data-name="off"><div class="underbed-button-align">Off</div></div><div class="underbed-button button-on" data-name="on"><div class="underbed-button-align">On</div></div><div class="underbed-button button-auto" data-name="auto"><div class="underbed-button-align">Auto</div></div></div></div></div></div></div></div><div class="text-container"><div class="auto-remote-text"> Automatic under-bed lighting can only be enabled when within BLE range of the bed. </div></div></div></div></div></div>')
                }

                function Y(a, b) {
                    return a.reference(b.get("childSleeperName"), b, "h").write("&rsquo;s ")
                }

                function Z(a) {
                    return a.write('<!-- ######################### --><!-- Head Tilt --><!-- ######################### --><div class="segmented-control-content-item remote-section headtilt-control" data-segment-index="3"><div class="toggle-controls"><div class="flex-fix"><div class="wrap"><div class="progress"><div class="progress-outer"><div class="progress-inner"></div></div></div><div class="button-wrapper"><div class="control-item-wrapper"><div class="control-item high" data-sleepnumber="100" data-name="high"><div class="item-wrap high"><div class="inner">Elevated</div></div></div></div></div><div class="button-wrapper"><div class="control-item-wrapper"><div class="control-item off" data-sleepnumber="0" data-name="low"><div class="item-wrap off"><div class="inner">Flat</div></div></div></div></div><div class="text-container"><div class="inflate-item">&nbsp;</div></div><div class="button-wrapper"><div class="control-stop-item-wrapper"><div class="control-item stop" data-name="stop"><div class="item-wrap stop-wrap"><div class="stop-inner">Stop</div></div></div></div></div><div class="text-container"><div class="resume-item">Tap any position to resume.</div></div></div></div></div></div>')
                }
                return a.register("templates/pageviews/remote", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/remote", b, c)
                }
            }
        }), define("app/ui/widgets/FindSleepnumberPopoverWidget", ["require", "lavaca/ui/Widget", "$"], function(a) {
            function b() {
                this.isSelected = !0, this.el.find(".segmented-control-tab-item").on("tap", c.bind(this)), h(window).on("resize." + this.id, d.bind(this)), f.call(this)
            }

            function c(a) {
                var b = this.el.find(".find-container");
                "sleepnumber" == a.currentTarget.dataset.tab ? "hidden" != b.css("visibility") || this.isSelected ? "hidden" == b.css("visibility") && this.isSelected ? b.css("visibility", "visible") : b.css("visibility", "hidden") : this.isSelected = !0 : (this.isSelected = !1, b.css("visibility", "hidden"))
            }

            function d() {
                f.call(this)
            }

            function e(a) {
                var b = this.el.find(".find-container");
                "visible" == b.css("visibility") && "sleepnumber-dropdown" != a.target.className && b.css("visibility", "hidden")
            }

            function f() {
                var a = this.el.find('.segmented-control-tab-item[data-segment-index="0"]');
                if (a.length > 0) {
                    var b = a.width();
                    if (this.el.find(".find-container").length > 0) {
                        var c = this.el.find(".find-container"),
                            d = this.el.find(".find-container .caret"),
                            e = this.el.find(".tab-wrap"),
                            f = e.height() + 15,
                            g = this.el.find(".find-container .find"),
                            h = a.position().left + b / 2 + 5;
                        c.css("top", f + "px"), d.css("left", h + "px"), d.addClass("find-caret"), (Modernizr.tablet || Modernizr.desktop) && (h - 170 + 5 > 20 ? g.css("left", h - 170 + 5 + "px") : g.css("left", "20px"))
                    }
                }
            }
            var g = a("lavaca/ui/Widget"),
                h = a("$"),
                i = g.extend(function() {
                    g.apply(this, arguments), setTimeout(function() {
                        b.call(this)
                    }, 300)
                }, {
                    dispose: function() {
                        return this.el.find(".segmented-control-tab-item").off("tap"), h(window).off("resize." + this.id), g.prototype.dispose.apply(this, arguments)
                    },
                    update: function() {
                        f.call(this)
                    },
                    clearPopover: function(a) {
                        e.call(this, a)
                    }
                });
            return i
        }), define("rdust!templates/childviews/signal-strength-view", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="bluetooth-connected"><div class="bluetooth-icon"></div><div class="bars"><div class="bar-container"><div class="bar" data-index="1"></div></div><div class="bar-container"><div class="bar" data-index="2"></div></div><div class="bar-container"><div class="bar" data-index="3"></div></div><div class="bar-container"><div class="bar" data-index="4"></div></div></div></div><div class="not-connected"></div><div class="wifi-connected loading-remote"><div class="internet-icon"></div><div class="loading-animation-view"></div></div>')
                }
                return a.register("templates/childviews/signal-strength-view", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/signal-strength-view", b, c)
                }
            }
        }), define("app/ui/views/childviews/SignalStrengthView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/signal-strength-view", "sccomm/DeviceCommunication"], function(a) {
            function b(a) {
                var b = Math.abs(a.rssi);
                b > 95 ? this.el.find(".bar").removeClass("on") : 95 >= b && b > 80 ? (this.el.find('.bar[data-index="1"]').addClass("on"), this.el.find('.bar[data-index="2"],.bar[data-index="3"],.bar[data-index="4"]').removeClass("on")) : 80 >= b && b > 75 ? (this.el.find('.bar[data-index="1"],.bar[data-index="2"]').addClass("on"), this.el.find('.bar[data-index="3"],.bar[data-index="4"]').removeClass("on")) : 75 >= b && b > 65 ? (this.el.find('.bar[data-index="1"],.bar[data-index="2"],.bar[data-index="3"]').addClass("on"), this.el.find('.bar[data-index="4"]').removeClass("on")) : 65 >= b && this.el.find(".bar").addClass("on")
            }
            var c = a("lavaca/mvc/View"),
                d = a("rdust!templates/childviews/signal-strength-view"),
                e = a("sccomm/DeviceCommunication"),
                f = c.extend(function() {
                    c.apply(this, arguments), this.mapEvent({
                        ext: {
                            DeviceCommunication: {
                                object: e,
                                events: {
                                    "rssi-update": b.bind(this)
                                }
                            }
                        }
                    })
                }, {
                    autoRender: !0,
                    template: "templates/childviews/signal-strength-view",
                    className: "signal-strength-view",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return f
        }), define("rdust!templates/childviews/sleepiq-status", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="title">SleepIQ</div><div class="bed-name">Master Bed</div><div class="switch"></div><div class="status-off-icon"></div><div class="status-off-banner"><div class="line">SleepIQ is currently off.</div><div class="line">To resume reading, turn on.</div></div>')
                }
                return a.register("templates/childviews/sleepiq-status", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/sleepiq-status", b, c)
                }
            }
        }), define("app/ui/views/childviews/SleepIQStatusView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/sleepiq-status"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("rdust!templates/childviews/sleepiq-status"),
                d = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    autoRender: !0,
                    template: "templates/childviews/sleepiq-status",
                    className: "sleepiq-status-view",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            c.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return d
        }), define("app/ui/widgets/SleepNumberDialWidget", ["require", "lavaca/ui/Widget", "lavaca/fx/Transform"], function(a) {
            function b() {
                this.el.find(".touch-control").on("touchstart", e.bind(this)), this.el.find(".touch-control").on("touchmove", f.bind(this)), this.el.find(".touch-control").on("touchend", g.bind(this));
                var a = this.el.attr("data-sleepnumber");
                this.setFinalizedSleepNumber(a)
            }

            function c(a) {
                this.el.find(".sleep-number .number").text(a), this.el.attr("data-sleepnumber", a), i.call(this, a), d.call(this);
                var b = this.el.attr("data-side-id");
                this.el.trigger("dialchange", {
                    sleepnumber: a,
                    side: b
                })
            }

            function d() {
                this.el.attr("data-sleepnumber") === this.el.attr("data-sleepnumber-memory") ? this.el.find(".sleep-number").addClass("on-number") : this.el.find(".sleep-number").removeClass("on-number")
            }

            function e(a) {
                a.preventDefault(), this.elSleepNumber = this.el.find(".sleep-number"), n.startX = this.elSleepNumber.offset().left + this.elSleepNumber.width() / 2, n.startY = this.elSleepNumber.offset().top + this.elSleepNumber.height() / 2, n.lastX = a.originalEvent.touches[0].clientX, n.lastY = a.originalEvent.touches[0].clientY
            }

            function f(a) {
                n.lastX = a.originalEvent.touches[0].clientX, n.lastY = a.originalEvent.touches[0].clientY, n.angle = h.call(this), n.angleInt = parseInt(n.angle.toFixed(0), 10);
                var b = j.call(this);
                c.call(this, b)
            }

            function g() {
                n.angle = h.call(this), n.angleInt = parseInt(n.angle.toFixed(0), 10);
                var a = j.call(this);
                c.call(this, a)
            }

            function h() {
                var a = Math.atan2(-(n.lastY - n.startY), n.lastX - n.startX);
                return 0 > a && (a += 2 * Math.PI), a * (180 / Math.PI)
            }

            function i(a) {
                var b = 360 * (a / 5) / 20;
                b -= 198, this.el.find(".dial").css(m, "rotate(" + b + "deg)")
            }

            function j() {
                var a = Math.abs(n.angleInt - 360) - 90;
                a = 0 > a ? 360 + a : a, a >= 360 && (a -= 360);
                var b = 95 * a / 360 + 5;
                return b = b.toFixed(0), b = 5 * Math.ceil(b / 5)
            }
            var k = a("lavaca/ui/Widget"),
                l = a("lavaca/fx/Transform"),
                m = l.cssProperty(),
                n = {},
                o = k.extend(function() {
                    k.apply(this, arguments), setTimeout(b.bind(this), 0)
                }, {
                    setNextSleepNumber: function() {},
                    setIntermediateSleepNumber: function() {},
                    setFinalizedSleepNumber: function(a) {
                        c.call(this, a)
                    },
                    dispose: function() {
                        return this.el.find(".touch-control").off("touchstart"), this.el.find(".touch-control").off("touchmove"), this.el.find(".touch-control").off("touchend"), k.prototype.dispose.apply(this, arguments)
                    }
                });
            return o
        }), define("app/models/viewmodels/RemoteViewModel", ["require", "lavaca/mvc/Model", "app/models/BedCollection", "sccomm/ConnectedDeviceStateModel"], function(a) {
            function b() {
                var a = d.getCurrentBedModel();
                this.apply(d.getCurrentBedModel().toObject()), e.get("capabilities").apply(a.get("capabilities"))
            }
            var c = a("lavaca/mvc/Model"),
                d = a("app/models/BedCollection"),
                e = a("sccomm/ConnectedDeviceStateModel"),
                f = c.extend(function() {
                    c.call(this, arguments), b.call(this)
                }, {
                    getRemoteState: function() {}
                });
            return f
        }), define("app/utils/BedManager", ["require", "sccomm/DeviceCommunication", "app/service/BedService", "app/models/StateModel", "$", "sccomm/ConnectedDeviceStateModel", "lavaca/util/Disposable"], function(a) {
            var b = a("sccomm/DeviceCommunication"),
                c = a("app/service/BedService"),
                d = (a("app/models/StateModel"), a("$")),
                e = "bluetooth",
                f = 0,
                g = a("sccomm/ConnectedDeviceStateModel"),
                h = a("lavaca/util/Disposable"),
                i = h.extend(function() {
                    h.apply(this, arguments)
                }, {
                    getBedStatus: function() {
                        return c.getBedStatus(f)
                    },
                    close: function() {
                        return b.close()
                    },
                    get: function() {
                        return console.log("GET()"), b
                    },
                    open: function() {
                        if ("bluetooth" == e) return b.open();
                        var a = d.Deferred();
                        return a.resolve(1), a
                    },
                    openWithRetry: function() {
                        return b.openWithRetry()
                    },
                    foundationSetPreset: function(a, d) {
                        return console.log("foundationSetPreset() - BED MANAGER"), "bluetooth" == e ? b.foundationSetPreset(a, d) : (a = 0 == a ? "R" : "L", c.setFoundationPreset(f, a, d))
                    },
                    foundationSetMotionHalt: function(a, d, g, h) {
                        return console.log("foundationSetMotionHalt() - BED MANAGER"), "bluetooth" == e ? b.foundationSetMotionHalt(a, d, g, h) : (a = 0 === a ? "R" : "L", d = 1 == d ? 1 : 0, g = 1 == g ? 1 : 0, h = 1 == h ? 1 : 0, c.setFoundationMotionHalt(f, a, d, g, h))
                    },
                    foundationSetLight: function(a, d, g) {
                        return console.log("foundationSetLight() - BED MANAGER"), "bluetooth" == e ? b.foundationSetLight(a, d, g) : c.setFoundationOutlet(f, a, d)
                    },
                    getBedInformation: function() {
                        if (console.log("getBedInformation() - BED MANAGER"), "bluetooth" == e) return b.getBedInformation();
                        console.log("start connection");
                        var a = d.Deferred();
                        console.log("WORKS 1");
                        var h = g.get("remote");
                        if (g.get("isDemo")) return a.resolve(h), a;
                        console.log("WORKS 2");
                        var i = {};
                        return c.getSuperStatus(f).then(function(a) {
                            if (console.log(JSON.stringify(a)), i.hasPump = a.pump ? !0 : !1, i.hasFoundation = a.foundation ? !0 : !1, i.hasSleepExpert = !0, console.log("WORKS 3"), i.rightChamberType = a.chambers.rightChamberType, i.isRightChamber = !0, 3 == i.rightChamberType && (i.isRightChamber = !1), i.leftChamberType = a.chambers.leftChamberType, i.isLeftChamber = !0, 3 == i.leftChamberType && (i.isLeftChamber = !1), i.isK2 = !1, i.isK1 = !1, i.isAdult = !1, (2 == i.rightChamberType || 2 == i.leftChamberType) && (i.isK2 = !0), console.log("WORKS 3+"), 1 != i.rightChamberType && 1 != i.leftChamberType || i.isK2 || (i.isK1 = !0), console.log("WORKS 3++"), i.isAdult = !(i.isK2 || i.isK1), console.log("WORKS 3+++"), i.type = i.isK2 ? "K2" : i.isK1 ? "K1" : "Adult", console.log("WORKS 4"), h.leftSide.sleepNumberMemory = Number(a.pump.sleepNumberFavoriteLeft), h.rightSide.sleepNumberMemory = Number(a.pump.sleepNumberFavoriteRight), h.leftSide.sleepNumber = Number(a.pump.leftSideSleepNumber), h.rightSide.sleepNumber = Number(a.pump.rightSideSleepNumber), console.log("WORKS 5"), g.get("capabilities").apply(i), console.log("WORKS 6"), console.log(g.get("capabilities").get("rightChamberType")), console.log(h.kidBedChamber), 1 === g.get("capabilities").get("rightChamberType") && (h.kidBedChamber.sideId = 0, h.kidBedChamber.sleepNumber = h.rightSide.sleepNumber, h.kidBedChamber.sleepNumberMemory = h.rightSide.sleepNumberMemory), 2 === g.get("capabilities").get("rightChamberType") && (h.kidHeadTilt.sideId = 0, h.kidHeadTilt.sleepNumber = h.rightSide.sleepNumber, h.kidHeadTilt.sleepNumberMemory = h.rightSide.sleepNumberMemory), 1 === g.get("capabilities").get("leftChamberType") && (h.kidBedChamber.sideId = 1, h.kidBedChamber.sleepNumber = h.leftSide.sleepNumber, h.kidBedChamber.sleepNumberMemory = h.leftSide.sleepNumberMemory), 2 === g.get("capabilities").get("leftChamberType") && (h.kidHeadTilt.sideId = 1, h.kidHeadTilt.sleepNumber = h.leftSide.sleepNumber, h.kidHeadTilt.sleepNumberMemory = h.leftSide.sleepNumberMemory), console.log("WORKS 7"), a.foundation) {
                                switch (console.log("WORKS 7+"), i.hasSleepExpert = !0, i.hasProxy = !0, i.hasBridge = !0, i.hasSplit = a.foundation.fsType.indexOf("Split") > -1 ? !0 : !1, console.log("WORKS 7++"), a.foundation.fsCurrentPositionPresetRight) {
                                    case "Custom":
                                        h.rightSide.foundationPreset = 1;
                                        break;
                                    case "Read":
                                        h.rightSide.foundationPreset = 2;
                                        break;
                                    case "Watch TV":
                                        h.rightSide.foundationPreset = 3;
                                        break;
                                    case "Flat":
                                        h.rightSide.foundationPreset = 4;
                                        break;
                                    case "Zero G":
                                        h.rightSide.foundationPreset = 5;
                                        break;
                                    case "Snore":
                                        h.rightSide.foundationPreset = 6;
                                        break;
                                    default:
                                        h.rightSide.foundationPreset = 0
                                }
                                switch (console.log("WORKS 7+++"), a.foundation.fsCurrentPositionPresetLeft) {
                                    case "Custom":
                                        h.leftSide.foundationPreset = 1;
                                        break;
                                    case "Read":
                                        h.leftSide.foundationPreset = 2;
                                        break;
                                    case "Watch TV":
                                        h.leftSide.foundationPreset = 3;
                                        break;
                                    case "Flat":
                                        h.leftSide.foundationPreset = 4;
                                        break;
                                    case "Zero G":
                                        h.leftSide.foundationPreset = 5;
                                        break;
                                    case "Snore":
                                        h.leftSide.foundationPreset = 6;
                                        break;
                                    default:
                                        h.leftSide.foundationPreset = 0
                                }
                                h.lightStatus[1] = a.foundation.outlets[0].setting ? !0 : !1, h.lightStatus[2] = a.foundation.outlets[1].setting ? !0 : !1, h.lightStatus[3] = a.foundation.outlets[2].setting ? !0 : !1, h.lightStatus[4] = a.foundation.outlets[3].setting ? !0 : !1
                            }
                            console.log("WORKS 7++++"), g.get("capabilities").apply(i), g.set("remote", h), console.log("WORKS")
                        }.bind(this), function() {
                            console.log("DOES NOT WORK  "), a.reject()
                        }.bind(this)).then(function() {
                            return console.log("BLABLA"), "K2" == g.get("capabilities").get("type") ? c.getSmartOutletStatus(f).then(function(b) {
                                console.log(b);
                                var d = {
                                        isOn12: !1,
                                        isOn120: !1
                                    },
                                    e = [];
                                switch (console.log(b.outletId0), b.outletId0 % 4) {
                                    case 1:
                                        d.isOn120 = !0;
                                        break;
                                    case 2:
                                        d.isOn12 = !0;
                                        break;
                                    case 3:
                                        d.isOn120 = !0, d.isOn12 = !0
                                }
                                return console.log("outlet"), c.getSmartOutletName(f).then(function(b) {
                                    console.log("WORKS 8"), d.name = b.name, e.push(d), h.isOnSenseAndDo = !1, h.outletArray = e, h.underBedLightName = e[0].name, g.get("capabilities").set("outletArray", e), g.get("capabilities").set("hasOutletConfigured", !0), g.set("remote", h), a.resolve(h)
                                }.bind(this), function() {
                                    a.resolve(h)
                                }.bind(this))
                            }, function() {
                                a.resolve(h)
                            }.bind(this)) : (a.resolve(h), void 0)
                        }.bind(this), function() {
                            a.reject()
                        }.bind(this)), a
                    },
                    pumpSetHaltSleepNumberWithProgress: function(a) {
                        return b.pumpSetHaltSleepNumberWithProgress(a)
                    },
                    pumpSetSleepNumberWithProgress: function(a, g, h) {
                        if (console.log(e), "bluetooth" == e) return b.pumpSetSleepNumberWithProgress(a, g, h);
                        var i = 0 == a ? "R" : "L",
                            j = d.Deferred(),
                            k = h,
                            l = 0;
                        return console.log(a + " " + g + " " + h), c.setSleepNumber(i, g, f).then(function() {
                            var b = setInterval(function() {
                                c.getPumpStatus(f).then(function(c) {
                                    0 == c.activeTask && (l = 1200), "R" == i ? (k != c.rightSideSleepNumber ? (k = c.rightSideSleepNumber, l = 0) : l++, j.notify(a, c.rightSideSleepNumber)) : (k != c.leftSideSleepNumber ? (k = c.leftSideSleepNumber, l = 0) : l++, j.notify(a, c.leftSideSleepNumber)), l >= 1200 && (clearInterval(b), j.resolve(a, k))
                                }.bind(this), function() {
                                    console.log("error with setSleepNumber"), b && clearInterval(b), j.reject(k)
                                }.bind(this))
                            }.bind(this), 1e3)
                        }.bind(this), function(a) {
                            console.log("DOES NOT WORK!"), j.reject(a)
                        }.bind(this)), j
                    },
                    pumpSetForceIdle: function() {
                        return "bluetooth" == e ? b.pumpSetForceIdle() : c.pumpSetForceIdle(f)
                    },
                    outletSetOutlet12: function(a, d) {
                        return "bluetooth" == e ? b.outletSetOutlet12(a, d) : (d = 1 == d ? 1 : 0, c.outletSetOutlet12(f, a, d))
                    },
                    outletSetSenseAndDo: function(a) {
                        return b.outletSetSenseAndDo(a)
                    },
                    outletSetOutlet120: function(a, d) {
                        return "bluetooth" == e ? b.outletSetOutlet120(a, d) : (d = 1 == d ? 1 : 0, c.outletSetOutlet120(f, a, d))
                    },
                    pumpSetMemory: function(a, d) {
                        return "bluetooth" == e ? b.pumpSetMemory(a, d) : (a = 0 === a ? "R" : "L", c.setFavoriteSleepNumber(f, a, d))
                    },
                    pumpGetStatus: function() {
                        return "bluetooth" == e ? b.pumpGetStatus() : c.getPumpStatus(f).then(function(a) {
                            var b = {
                                returnObject: {
                                    rightSide: a.rightSideSleepNumber,
                                    leftSide: a.leftSideSleepNumber
                                }
                            };
                            return b
                        })
                    },
                    _error: function() {
                        "bluetooth" == e && (e = "cloud")
                    },
                    setConnectionType: function(a) {
                        g.set("connectionType", a), e = a
                    },
                    getConnectionType: function() {
                        return e
                    },
                    setBedId: function(a) {
                        f = a
                    }
                });
            return new i
        }), define("app/models/FindSleepnumberModel", ["require", "lavaca/mvc/Model", "sccomm/DeviceCommunication", "sccomm/ConnectedDeviceStateModel", "app/models/viewmodels/RemoteViewModel", "app/utils/BedManager", "$"], function(a) {
            function b(a, b, c) {
                var d = f.Deferred(),
                    g = c;
                return 5 > b && 5 == c || b > 100 && 100 == c ? (d.resolve(!0), d) : (this.promise && this.promise.notify({
                    target: {
                        side: this.get("side"),
                        number: b
                    }
                }), e.open().then(function() {
                    e.pumpSetSleepNumberWithProgress(a, b, g).progress(function(a, b) {
                        null != b && (console.log(b), this.set("currentSleepnumber", b), this.promise && this.promise.notify({
                            update: {
                                side: this.get("side"),
                                number: b
                            }
                        }))
                    }.bind(this)).then(function(a, b) {
                        console.log(b), b && (this.set("currentSleepnumber", b), this.promise && this.promise.notify({
                            complete: {
                                side: this.get("side"),
                                number: b
                            }
                        })), d.resolve()
                    }.bind(this), function() {
                        d.reject()
                    }.bind(this))
                }.bind(this)), d)
            }
            var c = a("lavaca/mvc/Model"),
                d = (a("sccomm/DeviceCommunication"), a("sccomm/ConnectedDeviceStateModel")),
                e = (a("app/models/viewmodels/RemoteViewModel"), a("app/utils/BedManager")),
                f = a("$"),
                g = c.extend(function() {
                    c.call(this, arguments)
                }, {
                    startFind: function() {
                        return this.set("userTappedCancel", !1), this.set("stoppedInFindState", !1), this.promise || (this.promise = f.Deferred()), this.promise
                    },
                    cancelFind: function() {
                        this.set("userTappedCancel", !0), e.open().then(function() {
                            e.pumpSetForceIdle()
                        }.bind(this)), e.pumpGetStatus().then(function(a) {
                            console.log(a + "API"), a.returnObject.rightSide && this.set("currentSleepnumber", Number(a.returnObject.rightSide)), this.cancelNotify()
                        }.bind(this), function() {
                            this.cancelNotify()
                        }.bind(this))
                    },
                    cancelNotify: function() {
                        this.promise && (this.promise.notify({
                            complete: {
                                side: this.get("side"),
                                number: this.get("currentSleepnumber")
                            }
                        }), this.promise.reject(), this.promise = null)
                    },
                    doneFind: function() {
                        this.promise && (this.promise.resolve(this.get("userFavorite"), this.get("side")), this.promise = null)
                    },
                    setInitial: function(a, b, c) {
                        this.set("side", a), this.set("childName", c), this.set("initialSleepnumber", b), this.set("currentSleepnumber", b), console.log(b + " inital")
                    },
                    setToFirmest: function() {
                        var a = this.get("side"),
                            c = this.get("currentSleepnumber");
                        b.call(this, a, 100, c).then(function() {
                            this.trigger("setFirmestComplete")
                        }.bind(this)).fail(function() {
                            this.trigger("setFirmestFailed")
                        }.bind(this))
                    },
                    setToSoftest: function() {
                        var a = this.get("side"),
                            c = this.get("currentSleepnumber"),
                            d = b.call(this, a, 25, c);
                        return d
                    },
                    stopInFindState: function() {
                        this.set("stoppedInFindState", !0), e.open().then(function() {
                            e.pumpSetForceIdle()
                        }.bind(this))
                    },
                    adjust: function(a, c) {
                        if ("firmer" == a || "softer" == a) {
                            var d = this.get("side"),
                                e = this.get("currentSleepnumber"),
                                f = "firmer" == a ? e + 5 : e - 5;
                            "undefined" != typeof c && c && (f = this.get("currentSleepnumber"));
                            var g = b.call(this, d, f, e);
                            return g
                        }
                    },
                    setFavorite: function() {
                        var a = f.Deferred();
                        return e.open().then(function() {
                            e.pumpGetStatus().then(function(b) {
                                b.returnObject.rightSide ? this.set("userFavorite", b.returnObject.rightSide) : this.set("userFavorite", this.get("currentSleepnumber")), a.resolve()
                            }.bind(this), function() {
                                this.set("userFavorite", this.get("currentSleepnumber")), a.resolve()
                            }.bind(this))
                        }.bind(this)), a
                    },
                    resolveFavorite: function() {
                        d.get("isDemo") ? this.trigger("setFavoriteMemoryComplete") : e.open().then(function() {
                            e.pumpSetMemory(this.get("side"), this.get("userFavorite")).then(function() {
                                this.trigger("setFavoriteMemoryComplete")
                            }.bind(this), function() {
                                this.trigger("setFavoriteMemoryFailed")
                            }.bind(this))
                        }.bind(this))
                    }
                });
            return new g
        }), define("rdust!templates/headers/remote-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header with-subtitle"><div class="user-menu">☰</div><div class="title">').exists(b.get("pageTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><div class="subtitle">').reference(b.get("name"), b, "h").write('</div><button class="remote right"><div class="center"><div class="icon siqfont">↕</div><div class="remote-alert"></div><span>Remote</span></div></button></header>')
                }

                function c(a) {
                    return a.write("SleepIQ<sup>&reg;</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("pageTitle"), b, "h", ["s"])
                }
                return a.register("templates/headers/remote-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/remote-header", b, c)
                }
            }
        }), define("app/utils/between", ["require"], function() {
            return Number.prototype.between = function(a, b) {
                var c = Math.min.apply(Math, [a, b]),
                    d = Math.max.apply(Math, [a, b]);
                return this > c && d > this
            }
        }), define("app/ui/views/pageviews/RemoteView", ["require", "./BaseView", "rdust!templates/pageviews/remote", "app/ui/widgets/PillChart", "app/ui/widgets/SlidingTabBarWidget", "app/ui/widgets/FindSleepnumberPopoverWidget", "app/ui/views/childviews/SignalStrengthView", "app/ui/views/childviews/SleepIQStatusView", "app/ui/widgets/DragAndSnapXWidget", "app/ui/widgets/SleepNumberDialWidget", "sccomm/ConnectedDeviceStateModel", "app/models/FindSleepnumberModel", "app/models/FamilyModel", "app/models/StateModel", "app/models/AccountModel", "app/ui/views/childviews/LoadingAnimationView", "lavaca/net/History", "lavaca/mvc/Router", "lavaca/fx/Transform", "app/utils/MixPanelManager", "$", "app/models/BedCollection", "app/utils/BedManager", "rdust!templates/headers/remote-header", "app/utils/between"], function(a) {
            function b() {
                return mb.get("isDemo") || pb.get("demoMode")
            }

            function c() {
                g.call(this)
            }

            function d(a) {
                mb.get("appBackgrounded") || (console.log(qb.isLoggedIn()), qb.isLoggedIn() ? "bluetooth" == Bb.getConnectionType() ? (Modernizr.setTest("ble-active-connection", !1), console.log("AUTO FIX"), this.el.find(".auto-remote-text").addClass("show"), this.el.find(".button-auto").addClass("gray-background"), console.log("AUTO FIX=END"), mb.set("shouldReconnectOnAppResume", !1), Bb.close(), Bb.setConnectionType("cloud"), Bb.pumpGetStatus().then(function() {
                    Modernizr.setTest("cloud-device-control", !0)
                }.bind(this), function() {
                    1 == Ab.getCurrentBedModel().hasBaseType() && (zb = !0, mb.trigger("connectionLost"))
                }.bind(this))) : "cloud" == Bb.getConnectionType() && 1 == zb && 0 != a.BLEstatus && (console.log("API LOST"), window.customAlert.alert("Cloud device control not available at this moment. Please move closer to your bed to adjust its settings.", null, "Connection Error"), tb.exec("/dashboard")) : (Modernizr.setTest("ble-active-connection", !1), console.log(Bb.getConnectionType()), console.log("BLE LOST"), Modernizr.hasble && !Modernizr.isbleon && (a.reason = "Bluetooth is off."), this.el.find(".button.try-again").text("Reconnect"), this.el.find(".connecting .text .reason").text("Bluetooth connection to the bed has been lost."), this.el.find(".connecting .text .sub-reason").text(a.reason), this.el.addClass("connect-error").removeClass("initialized")))
            }

            function e() {
                !(Modernizr.hasble && Modernizr.isbleon || b.call(this)) || mb.get("macAddress") && "" != mb.get("macAddress") ? g.call(this) : tb.exec("/scan")
            }

            function f() {
                var a = xb.Deferred();
                return Bb.openWithRetry().then(function() {
                    Bb.getBedInformation().then(function(b) {
                        a.resolve(b)
                    }.bind(this), function() {
                        a.reject()
                    }.bind(this))
                }.bind(this), function() {
                    a.reject()
                }.bind(this)), a
            }

            function g() {
                return mb.get("macAddress") && "" != mb.get("macAddress") ? (this.el.removeClass("connect-error initialized"), Bb.setBedId(Ab.getCurrentBedModel().get("bedId")), Bb.setConnectionType("bluetooth"), console.log(Ab.getCurrentBedModel()), Modernizr.hasble && Modernizr.isbleon ? f.call(this).then(function(a) {
                    Modernizr.setTest("ble-active-connection", !0), Ab.getCurrentBedModel().updateBaseType(mb.get("capabilities").get("foundationType")).then(function() {
                        r.call(this, a), console.log(a), i.call(this), console.log(mb.get("capabilities"))
                    }.bind(this), function() {
                        window.customAlert.alert("We are not able to control your adjustable base, please go to your Sleep Number remote for troubleshooting support or contact customer support at 1-888-484-9263 during the hours Mon-Fri 8:00 am - 8:00 pm cst., Sat. 8:30 am - 5:00 pm cst.", null, "Info")
                    }.bind(this))
                }.bind(this), function() {
                    console.log("BLE ERROR"), mb.trigger("connectionLost"), h.call(this)
                }.bind(this)) : (console.log("NO BLE"), mb.trigger("connectionLost"), h.call(this)), void 0) : (sb.back(), void 0)
            }

            function h() {
                if (1 != Ab.getCurrentBedModel().hasBaseType()) {
                    console.log("FIRST CONNECTION");
                    var a = "";
                    return Modernizr.hasble && !Modernizr.isbleon && (a = "Bluetooth is off."), this.el.find(".button.try-again").text("Reconnect"), this.el.find(".connecting .text .reason").text("Bluetooth connection to the bed has been lost."), this.el.find(".connecting .text .sub-reason").text(a), this.el.addClass("connect-error").removeClass("initialized"), void 0
                }
                f.call(this).then(function(a) {
                    mb.get("capabilities").setFoundationType(Ab.getCurrentBedModel().get("base")), mb.get("capabilities").updateModernizr(), mb.set("remote", a), r.call(this, a), console.log(JSON.stringify(a)), console.log(JSON.stringify(mb.get("capabilities").toObject())), i.call(this)
                }.bind(this), function() {
                    zb = !0, mb.trigger("connectionLost")
                }.bind(this))
            }

            function i() {
                pb.trigger("beginShortPolling"), this.el.addClass("initialized")
            }

            function j() {
                if ("bluetooth" != Bb.getConnectionType()) {
                    var a = this.el.find(".internet-icon");
                    a.addClass("loading-animation"), a.empty(), a.append(xb("<div></div>")), a.append(xb("<div></div>")), a.append(xb("<div></div>"))
                }
            }

            function k() {
                if ("bluetooth" != Bb.getConnectionType()) {
                    var a = this.el.find(".internet-icon");
                    a.removeClass("loading-animation"), a.empty()
                }
            }

            function l(a, b) {
                this.el.find('.light-control [data-index="' + a + '"]').toggleClass("on", b)
            }

            function m(a, b, c) {
                var d = u.call(this, a);
                d && (d.setFlaggedPill(c, "sleep-number-memory"), d.update(b));
                var e = x.call(this, a);
                e && e.setFinalizedSleepNumber(b), this.el.find('.sleepnumber-control[data-side-id="' + a + '"]').attr("data-sleepnumber-memory", c)
            }

            function n(a, b, c) {
                var d = v.call(this);
                d && (d.setFlaggedPill(c, "sleep-number-memory"), d.update(b));
                var e = w.call(this);
                e && e.setFinalizedSleepNumber(b);
                var f = this.el.find('.sleepnumber-kid .sleepnumber-control[data-side-id="0"]');
                f.attr("data-sleepnumber-memory", c)
            }

            function o(a, b) {
                var c = this.el.find(".progress .progress-outer .progress-inner"),
                    d = 100 - b;
                if (c.attr("data-current", b), c.attr("data-side", a), c.css(vb, "translate3d(0," + d + "%,0)"), 100 == b) {
                    var e = this.el.find(".control-item.high");
                    e.addClass("on")
                }
                if (0 == b) {
                    var f = this.el.find(".control-item.off");
                    f.addClass("on")
                }
            }

            function p(a) {
                var b = this.el.find(".control-item.night-stand");
                a.outletArray[0].isOn120 && b.addClass("on")
            }

            function q(a) {
                var b = this.el.find(".underbed-button.button-off"),
                    c = this.el.find(".underbed-button.button-on"),
                    d = this.el.find(".underbed-button.button-auto");
                a.isOnSenseAndDo ? (d.addClass("on"), b.removeClass("on"), c.removeClass("on")) : a.outletArray[0].isOn12 ? (d.removeClass("on"), b.removeClass("on"), c.addClass("on")) : (d.removeClass("on"), c.removeClass("on"), b.addClass("on"))
            }

            function r(a) {
                var b = mb.get("capabilities").toObject();
                if (b.hasFoundation) {
                    var c = t.call(this);
                    if (c) {
                        if ("local" == window.env) return c.resume(), void 0;
                        Modernizr.hassplit ? c.resume() : c.pause()
                    }
                }
                this.model.set("capabilities", b), mb.get("capabilities").updateModernizr(), a.underBedLightName = a.outletArray.length > 0 ? a.outletArray[0].name : "Underbed Light", this.model.set("remote", a), this.model.set("isLoggedInAdult", ob.hasPermission()), this.model.set("childName", Ab.getCurrentBedModel().get("childSleeperName") || "Your child"), this.render().then(function() {
                    this.el.find("[data-section]").on("sectionInView", Y.bind(this)), Modernizr.isadult ? (m.call(this, 1, a.leftSide.sleepNumber, a.leftSide.sleepNumberMemory), m.call(this, 0, a.rightSide.sleepNumber, a.rightSide.sleepNumberMemory), l.call(this, 1, a.lightStatus["1"]), l.call(this, 2, a.lightStatus["2"]), l.call(this, 3, a.lightStatus["3"]), l.call(this, 4, a.lightStatus["4"]), cb.call(this), this.el.find(".foundation-section .control-item.on").removeClass("on"), this.el.find('.foundation-section .control-item[data-side="1"][data-index="' + a.leftSide.foundationPreset + '"]').addClass("on"), this.el.find('.foundation-section .control-item[data-side="0"][data-index="' + a.rightSide.foundationPreset + '"]').addClass("on")) : (Modernizr.isk2 && (o.call(this, a.kidHeadTilt.sideId, a.kidHeadTilt.sleepNumber), "bluetooth" != Bb.getConnectionType() && (console.log("AUTO FIX"), this.el.find(".auto-remote-text").addClass("show"), this.el.find(".button-auto").addClass("gray-background"), console.log("AUTO FIX=END"))), Modernizr.setTest("kid-queen", "queen" == this.model.get("size")), q(a), p(a), n.call(this, 0, a.kidBedChamber.sleepNumber, a.kidBedChamber.sleepNumberMemory), cb.call(this), R.call(this));
                    var b = this.getWidgets(this.el)[0];
                    b && b.update()
                }.bind(this))
            }

            function s() {
                return this.getWidgets(".sleepnumber-section .snap-drag-x")[0]
            }

            function t() {
                return this.getWidgets(".foundation-section .snap-drag-x")[0]
            }

            function u(a) {
                return this.getWidgets('.sleepnumber-control[data-side-id="' + a + '"] .dial-pill-chart')[0]
            }

            function v() {
                return this.getWidgets('.sleepnumber-section.sleepnumber-kid .sleepnumber-control[data-side-id="0"] .dial-pill-chart')[0]
            }

            function w() {
                return this.getWidgets('.sleepnumber-section.sleepnumber-kid .sleepnumber-control[data-side-id="0"] ')[0]
            }

            function x(a) {
                return this.getWidgets('.sleepnumber-control[data-side-id="' + a + '"]')[0]
            }

            function y(a, b) {
                var c = b.sleepnumber,
                    d = b.side,
                    e = u.call(this, d);
                e && e.setFlaggedPill(c, "sleep-number-current")
            }

            function z() {
                tb.exec("/dashboard")
            }

            function A(a) {
                var b = this.el.find(a.currentTarget).parents(".sleepnumber-control");
                this.previousSleepnumber = b.attr("data-sleepnumber");
                var c = b.attr("data-side-id");
                y.call(this, null, {
                    sleepnumber: this.previousSleepnumber,
                    side: c
                }), b.find(".pill-chart").addClass("touching"), b.on("dialchange", y.bind(this));
                var d = s.call(this);
                d && d.pause()
            }

            function B(a) {
                if (setTimeout(function() {
                        var c = this.el.find(a.currentTarget).parents(".sleepnumber-control");
                        c.find(".pill-chart").removeClass("touching"), c.off("dialchange");
                        var d = c.attr("data-side-id"),
                            e = c.attr("data-sleepnumber"),
                            f = s.call(this, d);
                        f && f.resume(), b.call(this) || wb.prototype.trackRemoteAction(this.model.toObject(), "Sleep Number", "Sleep Number Setting", 0 == d ? "Right" : "Left", mb.get("connectionType")), Z.call(this, d, e, this.previousSleepnumber)
                    }.bind(this), 10), this.model.get("capabilities").isAdult) {
                    var c = this.el.find(a.currentTarget).parents(".sleepnumber-control"),
                        d = c.attr("data-side-id"),
                        e = c.attr("data-sleepnumber");
                    cb.call(this, d), 0 == d ? this.model.get("remote").rightSide.sleepNumber = e : this.model.get("remote").leftSide.sleepNumber = e, this.render(".set-favorite-button")
                } else R.call(this), S.call(this)
            }

            function C(a) {
                var c = this.el.find(a.currentTarget),
                    d = c.attr("data-side"),
                    e = c.attr("data-index");
                c.attr("data-name");
                var f = 0 === Number(d) ? "Right" : "Left",
                    g = c.hasClass("on"),
                    h = this.el.find('[data-side="' + d + '"][data-index="' + e + '"]'),
                    i = c.find(".inner").text();
                if (g) Bb.foundationSetMotionHalt(d, !0, !0, !0);
                else {
                    var l = this.el.find(".foundation-section"),
                        m = l.find('[data-side="' + d + '"].on').not('[data-index="' + e + '"]');
                    m.removeClass("on"), l.find('[data-side="' + d + '"][data-index="' + e + '"]').addClass("on"), b.call(this) || (j.call(this), wb.prototype.trackRemoteAction(this.model.toObject(), "Foundation", i, f, mb.get("connectionType")), Bb.foundationSetPreset(d, e).then(function() {
                        k()
                    }.bind(this), function() {
                        h.removeClass("on"), m.addClass("on"), k(), "bluetooth" != Bb.getConnectionType() && (zb = !0), mb.trigger("connectionLost")
                    }.bind(this)))
                }
            }

            function D(a) {
                var c = this.el.find(a.currentTarget),
                    d = c.attr("data-index"),
                    e = c.attr("data-name");
                c.toggleClass("on");
                var f = c.hasClass("on"),
                    g = e.indexOf("Nightlight");
                j.call(this), b.call(this) || (wb.prototype.trackRemoteAction(this.model.toObject(), -1 == g ? "LightingNightstand" : "LightingUnderbed", f ? "LightOn" : "LightOff", "Both", mb.get("connectionType")), Bb.foundationSetLight(d, f ? 1 : 0, 0).then(function() {
                    k()
                }, function() {
                    c.toggleClass("on"), k(), "bluetooth" != Bb.getConnectionType() && (zb = !0), mb.trigger("connectionLost")
                }))
            }

            function E(a) {
                !this._keepAliveInterval && a instanceof jQuery && (this._directionObject = a, this._keepAliveInterval = setInterval(function() {
                    a.toggleClass("on")
                }.bind(this), 1750))
            }

            function F() {
                this._keepAliveInterval && (clearInterval(this._keepAliveInterval), this._directionObject.removeClass("on"), this._directionObject = null, this._keepAliveInterval = null)
            }

            function G() {
                var a = this.el.find(".headtilt-control"),
                    c = a.find(".control-item.off"),
                    d = a.find(".control-item.high"),
                    e = a.find(".text-container .inflate-item");
                "elevated" != Db.get() && (b.call(this) || wb.prototype.trackRemoteAction(this.model.toObject(), "Headtilt", "Elevated", 1 == this.model.get("remote").kidHeadTilt.sideId ? "Left" : "Right", mb.get("connectionType")), this.isSettingHeadtilt = !0, Db.reject.call(this), Db.set("elevated"), e.text("Inflating..."), a.addClass("active").removeClass("active-after-stop"), (5 == this.model.get("remote").kidHeadTilt.sleepNumber || 0 == this.model.get("remote").kidHeadTilt.sleepNumber) && c.removeClass("on"), F(), E(d), I.call(this, this.model.get("remote").kidHeadTilt.sideId, 100, this.model.get("remote").kidHeadTilt.sleepNumber).then(function() {
                    K.call(this), this.isSettingHeadtilt = !1
                }.bind(this), function() {
                    K.call(this), this.isSettingHeadtilt = !1
                }.bind(this)))
            }

            function H() {
                var a = this.el.find(".headtilt-control"),
                    c = a.find(".control-item.off"),
                    d = a.find(".control-item.high"),
                    e = a.find(".text-container .inflate-item");
                "flat" != Db.get() && (b.call(this) || wb.prototype.trackRemoteAction(this.model.toObject(), "Headtilt", "Flat", 1 == this.model.get("remote").kidHeadTilt.sideId ? "Left" : "Right", mb.get("connectionType")), this.isSettingHeadtilt = !0, Db.reject.call(this), Db.set("flat"), e.text("Deflating..."), a.addClass("active").removeClass("active-after-stop"), 100 == this.model.get("remote").kidHeadTilt.sleepNumber && d.removeClass("on"), F(), E(c), I.call(this, this.model.get("remote").kidHeadTilt.sideId, 5, this.model.get("remote").kidHeadTilt.sleepNumber).then(function() {
                    K.call(this), this.isSettingHeadtilt = !1
                }.bind(this), function() {
                    K.call(this), this.isSettingHeadtilt = !1
                }.bind(this)))
            }

            function I(a, b, c) {
                var d = Db.promise(),
                    e = this.el.find(".headtilt-control .progress .progress-outer .progress-inner");
                j.call(this);
                var f = Bb.getConnectionType();
                return Bb.pumpSetSleepNumberWithProgress(a, b, c).progress(function(a, b) {
                    null != b && (this.isSettingHeadtilt = !0, e.attr("data-current", b), this.model.get("remote").kidHeadTilt.sleepNumber = b, e.css(vb, "translate3d(0," + (100 - b) + "%,0)"))
                }.bind(this)).then(function(d, g) {
                    if (f != Bb.getConnectionType()) Bb.pumpSetSleepNumberWithProgress(a, b, c).progress(function(a, b) {
                        null != b && (this.isSettingHeadtilt = !0, e.attr("data-current", b), this.model.get("remote").kidHeadTilt.sleepNumber = b, e.css(vb, "translate3d(0," + (100 - b) + "%,0)"))
                    }.bind(this)).then(function(a, b) {
                        F();
                        var c = 100 - b;
                        this.model.get("remote").kidHeadTilt.sleepNumber = b, e.attr("data-current", b), e.css(vb, "translate3d(0," + c + "%,0)"), (0 == b || 5 == b || 100 == b) && (Db.clear(), Db.resolve()), k.call(this)
                    }.bind(this), function(a) {
                        if (F(), Db.clear(), !a) {
                            var b = 100 - this.model.get("remote").kidHeadTilt.sleepNumber;
                            e.css(vb, "translate3d(0," + b + "%,0)"), e.attr("data-current", this.model.get("remote").kidHeadTilt.sleepNumber)
                        }
                        "bluetooth" != Bb.getConnectionType() && (zb = !0, mb.trigger("connectionLost")), k.call(this)
                    }.bind(this));
                    else {
                        F();
                        var h = 100 - g;
                        this.model.get("remote").kidHeadTilt.sleepNumber = g, e.attr("data-current", g), e.css(vb, "translate3d(0," + h + "%,0)"), (0 == g || 5 == g || 100 == g) && (Db.clear(), Db.resolve()), k.call(this)
                    }
                }.bind(this), function(a) {
                    if (F(), Db.clear(), !a) {
                        var b = 100 - this.model.get("remote").kidHeadTilt.sleepNumber;
                        e.css(vb, "translate3d(0," + b + "%,0)"), e.attr("data-current", this.model.get("remote").kidHeadTilt.sleepNumber)
                    }
                    "bluetooth" != f && "bluetooth" != Bb.getConnectionType() && (zb = !0, mb.trigger("connectionLost")), k.call(this)
                }.bind(this)), d
            }

            function J() {
                b.call(this) ? Bb.pumpSetHaltSleepNumberWithProgress() : Bb.pumpSetForceIdle();
                var a = "flat" == Db.get() ? "deflation" : "inflation",
                    c = "Headtilt " + a + " has been stopped. Tap any position to resume inflation or deflation.",
                    d = "flat" == Db.get() ? "Deflation stopped" : "Inflation stopped";
                Db.reject.call(this), Db.clear(), F(), K.call(this), window.customAlert.alert(c, null, d)
            }

            function K() {
                var a = this.el.find(".headtilt-control"),
                    b = a.find(".control-item.high"),
                    c = a.find(".control-item.off"),
                    d = this.model.get("remote").kidHeadTilt.sleepNumber;
                100 == d && (b.addClass("on"), c.removeClass("on")), (5 == d || 0 == d) && (b.removeClass("on"), c.addClass("on")), a.removeClass("active"), 100 != d && 5 != d && 0 != d ? a.addClass("active-after-stop") : a.removeClass("active-after-stop")
            }

            function L(a) {
                if (this.isSettingSleepNumber) {
                    var b = "Please wait until your Sleep Number is set before adjusting your Headtilt.";
                    return window.customAlert.alert(b, null, "Message"), !1
                }
                var c = this.el.find(a.currentTarget),
                    d = c.attr("data-name");
                "high" == d && G.call(this, a), "low" == d && H.call(this, a), "stop" == d && this.isSettingHeadtilt && J.call(this, a)
            }

            function M(a) {
                var c, d = this.el.find(a.currentTarget),
                    e = d.attr("data-name"),
                    f = this.el.find(".kid-light-control .underbed-button.button-off"),
                    g = this.el.find(".kid-light-control .underbed-button.button-on"),
                    h = this.el.find(".kid-light-control .underbed-button.button-auto");
                f.hasClass("on") && (c = f), g.hasClass("on") && (c = g), h.hasClass("on") && (c = h), console.log("Get ready"), d.hasClass("on") || (console.log("no class on"), "on" == e ? (c.removeClass("on"), g.addClass("on"), b.call(this) || (c == h && wb.prototype.trackRemoteAction(this.model.toObject(), "LightingUnderbed", "AutoOff", "Both", mb.get("connectionType")), j.call(this), Bb.outletSetOutlet12(0, !0).then(function() {
                    k.call(this)
                }, function() {
                    k.call(this), "bluetooth" != Bb.getConnectionType() && (zb = !0), mb.trigger("connectionLost"), g.removeClass("on"), c.addClass("on")
                }.bind(this)))) : "off" == e ? (c.removeClass("on"), f.addClass("on"), b.call(this) || (c == h && wb.prototype.trackRemoteAction(this.model.toObject(), "LightingUnderbed", "AutoOff", "Both", mb.get("connectionType")), j.call(this), Bb.outletSetOutlet12(0, !1).then(function() {
                    k.call(this)
                }, function() {
                    k.call(this), f.removeClass("on"), c.addClass("on"), "bluetooth" != Bb.getConnectionType() && (zb = !0), mb.trigger("connectionLost")
                }.bind(this)))) : "auto" == e && "bluetooth" == Bb.getConnectionType() && (c.removeClass("on"), h.addClass("on"), b.call(this) || (wb.prototype.trackRemoteAction(this.model.toObject(), "LightingUnderbed", "AutoOn", "Both", mb.get("connectionType")), j.call(this), Bb.outletSetSenseAndDo(!0).then(function() {
                    k.call(this)
                }, function() {
                    k.call(this), h.removeClass("on"), c.addClass("on"), "bluetooth" != Bb.getConnectionType() && (zb = !0), mb.trigger("connectionLost")
                }.bind(this)))))
            }

            function N(a) {
                var c = this.el.find(a.currentTarget);
                c.hasClass("on") ? (c.removeClass("on"), b.call(this) || (j.call(this), wb.prototype.trackRemoteAction(this.model.toObject(), "LightingNightstand", "LightOff", "Both", mb.get("connectionType")), Bb.outletSetOutlet120(0, !1).then(function() {
                    k.call(this)
                }.bind(this), function() {
                    c.addClass("on"), k.call(this), "bluetooth" != Bb.getConnectionType() && (zb = !0), mb.trigger("connectionLost")
                }.bind(this)))) : b.call(this) || (c.addClass("on"), j.call(this), wb.prototype.trackRemoteAction(this.model.toObject(), "LightingNightstand", "LightOn", "Both", mb.get("connectionType")), Bb.outletSetOutlet120(0, !0).then(function() {
                    k.call(this)
                }.bind(this), function() {
                    c.removeClass("on"), k.call(this), "bluetooth" != Bb.getConnectionType() && (zb = !0), mb.trigger("connectionLost")
                }))
            }

            function O() {
                var a = this.el.find(".sleepnumber-section.sleepnumber-kid .sleepnumber-control"),
                    c = parseInt(a.attr("data-sleepnumber"), 10),
                    d = parseInt(this.model.get("remote").kidBedChamber.sideId, 10);
                j.call(this), !isNaN(c) && !isNaN(d) && c >= 0 && 100 >= c && (b.call(this) || this.model.get("capabilities").isAdult ? P.call(this, d, c) : (wb.prototype.trackRemoteAction(this.model.toObject(), "SetFavorite", "Sleep Number Setting", "Right", mb.get("connectionType")), Bb.pumpSetMemory(0, c).then(function() {
                    P.call(this, d, c), k.call(this)
                }.bind(this), function() {
                    "bluetooth" != Bb.getConnectionType() && (zb = !0), mb.trigger("connectionLost"), k.call(this)
                }.bind(this))))
            }

            function P(a, b) {
                var c = this.el.find(".sleepnumber-section.sleepnumber-kid .sleepnumber-control"),
                    d = b,
                    e = a;
                !isNaN(d) && !isNaN(e) && d >= 0 && 100 >= d && (this.model.get("remote").kidBedChamber.sleepNumberMemory = d, c.attr("data-sleepnumber-memory", d), cb.call(this, e))
            }

            function Q() {
                var a = this.el.find(".sleepnumber-section.sleepnumber-kid .sleepnumber-control"),
                    c = a.attr("data-sleepnumber"),
                    d = a.attr("data-sleepnumber-memory"),
                    e = x.call(this, 0);
                e && e.setFinalizedSleepNumber(d), this.model.get("capabilities").isAdult || (R.call(this), S.call(this)), b.call(this) || wb.prototype.trackRemoteAction(this.model.toObject(), "ReturnToFavorite", "Sleep Number Setting", "Right", mb.get("connectionType")), Z.call(this, 0, d, c)
            }

            function R() {
                var a = this.el.find(".sleepnumber-section.sleepnumber-kid"),
                    b = parseInt(a.find(".sleepnumber-control").attr("data-sleepnumber"), 10),
                    c = parseInt(a.find(".sleepnumber-control").attr("data-sleepnumber-memory"), 10);
                cb.call(this), b === c ? a.addClass("set-to-favorite") : a.removeClass("set-to-favorite")
            }

            function S() {
                var a = this.el.find(".sleepnumber-section.sleepnumber-kid"),
                    b = parseInt(a.find(".sleepnumber-control").attr("data-sleepnumber"), 10);
                !isNaN(b) && b >= 0 && 100 >= b && this.model && (this.model.get("remote").kidBedChamber.sleepNumber = b, this.render(".sleepnumber-buttons"))
            }

            function T(a) {
                var c = this.el.find(a.currentTarget).parents(".sleepnumber-control"),
                    d = c.attr("data-sleepnumber"),
                    e = this.el.find(a.currentTarget).parents("[data-side-id]").attr("data-side-id"),
                    f = this.el.find(a.currentTarget).parents("[data-sleepnumber-memory]").attr("data-sleepnumber-memory"),
                    g = x.call(this, e);
                g && g.setFinalizedSleepNumber(f), b.call(this) || wb.prototype.trackRemoteAction(this.model.toObject(), "SetFavorite", "Sleep Number Setting", 0 == e ? "Right" : "Left", mb.get("connectionType")), Z.call(this, e, f, d)
            }

            function U() {
                var a = 0,
                    b = this.el.find(".segmented-control-content-item.sleepnumber-section.sleepnumber-kid .sleepnumber-control-0"),
                    c = parseInt(b.attr("data-sleepnumber"), 10);
                nb.startFind().progress(function(a) {
                    if (a.target) {
                        var b = w.call(this);
                        b && b.setFinalizedSleepNumber(a.target.number), $.call(this, a.target.side, a.target.number), S.call(this)
                    }
                    a.update && (ab.call(this, a.update.side, a.update.number), this.model.get("remote").kidBedChamber.sleepNumber = a.update.number, cb.call(this, a.update.side), S.call(this)), a.complete && (_.call(this, a.complete.side, a.complete.number), this.model.get("remote").kidBedChamber.sleepNumber = a.complete.number, S.call(this))
                }.bind(this)).then(function(a, b) {
                    P.call(this, b, a), _.call(this, b, a)
                }.bind(this)).fail(function() {
                    cb.call(this, a), S.call(this)
                }.bind(this));
                var d = Ab.getCurrentBedModel().get("childSleeperName");
                tb.exec("/findsleepnumber/step-one", null, {
                    currentSideId: a,
                    currentSleepNumber: c,
                    name: d
                })
            }

            function V() {
                if (this.model.get("capabilities").isAdult) {
                    if ("foundation" == this.el.data("tab") && !Modernizr.hassplit) return;
                    var a = "foundation" == this.el.data("tab") ? t.call(this) : s.call(this);
                    a.snapToView(this._currentSideIndex, !0)
                }
            }

            function W() {
                Bb.pumpSetForceIdle(), Db.get() && J.call(this)
            }

            function X(a) {
                var b = a ? a.currentTarget : !1,
                    c = "foundation" == this.el.data("tab") ? t.call(this) : s.call(this);
                if ("lights" !== this.el.data("tab") && ("foundation" != this.el.data("tab") || Modernizr.hassplit) && b) {
                    if (b.classList.contains("selected")) return;
                    this._currentSideIndex = b.dataset.index || 0, c.snapToView(this._currentSideIndex), this.el.find('[data-section="' + this._currentSideIndex + '"]').trigger("sectionInView"), xb(b).addClass("selected").siblings().removeClass("selected")
                }
            }

            function Y(a) {
                var b = this.el.find(a.currentTarget).attr("data-section"),
                    c = this.el.find('.sleeper[data-index="' + b + '"]');
                c.addClass("selected").siblings().removeClass("selected"), this._currentSideIndex = b, this.el.find(a.currentTarget).hasClass("sleepnumber-control") && Bb.pumpSetForceIdle()
            }

            function Z(a, b, c) {
                $.call(this, a, b), Bb.pumpSetHaltSleepNumberWithProgress(a), j.call(this), this.isSettingSleepNumber = !0;
                var d = Bb.getConnectionType();
                Bb.pumpSetSleepNumberWithProgress(a, b, c).then(function(e, f) {
                    d != Bb.getConnectionType() ? (j.call(this), Bb.pumpSetSleepNumberWithProgress(a, b, c).then(function(a, b) {
                        this.isSettingSleepNumber = !1, _.call(this, a, b), k.call(this)
                    }.bind(this), function(b) {
                        this.isSettingSleepNumber = !1, b || (this.el.find(".next-flag").removeClass("next-flag"), bb.call(this, a, c), this.model.get("capabilities").isAdult || (cb.call(this, a), this.model.get("remote").kidBedChamber.sleepNumber = c, S.call(this))), k.call(this), "bluetooth" != Bb.getConnectionType() && (zb = !0, mb.trigger("connectionLost"))
                    }.bind(this)).progress(function(a, b) {
                        this.isSettingSleepNumber = !0, null != b && ab.call(this, a, b)
                    }.bind(this))) : (this.isSettingSleepNumber = !1, _.call(this, e, f), k.call(this))
                }.bind(this), function(b) {
                    this.isSettingSleepNumber = !1, b || (this.el.find(".next-flag").removeClass("next-flag"), bb.call(this, a, c), this.model.get("capabilities").isAdult || (cb.call(this, a), this.model.get("remote").kidBedChamber.sleepNumber = c, S.call(this))), k.call(this), "bluetooth" != Bb.getConnectionType() && (zb = !0, mb.trigger("connectionLost"))
                }.bind(this)).progress(function(a, b) {
                    this.isSettingSleepNumber = !0, null != b && ab.call(this, a, b)
                }.bind(this))
            }

            function $(a, b) {
                var c = u.call(this, a);
                c && c.setFlaggedPill(b, "next-flag")
            }

            function _(a, b) {
                var c = x.call(this, a);
                c && c.setFinalizedSleepNumber(b), ab.call(this, a, b), this.el.find(".next-flag").removeClass("next-flag"), this.el.find('.sleepnumber-control[data-side-id="' + a + '"]').attr("data-sleepnumber", b);
                var d = this.el.find('.sleepnumber-control[data-side-id="' + a + '"] .dial-pill-chart');
                d.off("pillsComplete"), cb.call(this, a), S.call(this)
            }

            function ab(a, b) {
                var c = u.call(this, a);
                c && c.update(b)
            }

            function bb(a, b) {
                var c = this.el.find('.sleepnumber-control[data-side-id="' + a + '"] .dial-pill-chart');
                c.on("pillsComplete", _.bind(this, a, b)), setTimeout(_.bind(this, a, b), 1e3)
            }

            function cb(a) {
                var b = this.getWidgets(".sleepnumber-control");
                b.forEach(function(b, c) {
                    b.el && (b.el.attr("data-sleepnumber") === b.el.attr("data-sleepnumber-memory") ? (b.el.addClass("on-number"), b.el.find(".sleep-number").addClass("on-number"), c == a && (Modernizr.isk1 || Modernizr.isk2) && el.find(".sleepnumber-section.sleepnumber-kid").addClass("set-to-favorite")) : (b.el.removeClass("on-number"), b.el.find(".sleep-number").removeClass("on-number"), c == a && (Modernizr.isk1 || Modernizr.isk2) && el.find(".sleepnumber-section.sleepnumber-kid").removeClass("set-to-favorite")))
                }.bind(this))
            }
            var db = a("./BaseView"),
                eb = a("rdust!templates/pageviews/remote"),
                fb = a("app/ui/widgets/PillChart"),
                gb = a("app/ui/widgets/SlidingTabBarWidget"),
                hb = a("app/ui/widgets/FindSleepnumberPopoverWidget"),
                ib = a("app/ui/views/childviews/SignalStrengthView"),
                jb = a("app/ui/views/childviews/SleepIQStatusView"),
                kb = a("app/ui/widgets/DragAndSnapXWidget"),
                lb = a("app/ui/widgets/SleepNumberDialWidget"),
                mb = a("sccomm/ConnectedDeviceStateModel"),
                nb = a("app/models/FindSleepnumberModel"),
                ob = a("app/models/FamilyModel"),
                pb = a("app/models/StateModel"),
                qb = a("app/models/AccountModel"),
                rb = a("app/ui/views/childviews/LoadingAnimationView"),
                sb = a("lavaca/net/History"),
                tb = a("lavaca/mvc/Router"),
                ub = a("lavaca/fx/Transform"),
                vb = ub.cssProperty(),
                wb = a("app/utils/MixPanelManager"),
                xb = a("$"),
                yb = {},
                zb = !1,
                Ab = a("app/models/BedCollection"),
                Bb = a("app/utils/BedManager");
            a("rdust!templates/headers/remote-header"), a("app/utils/between");
            var Cb = db.extend(function() {
                    db.apply(this, arguments), this.mapEvent({
                        ".foundation-control .control-item": {
                            tap: C.bind(this)
                        },
                        ".light-control .control-item": {
                            tap: D.bind(this)
                        },
                        ".headtilt-control .control-item": {
                            tap: L.bind(this)
                        },
                        ".kid-light-control .control-item.underbed .underbed-button": {
                            tap: M.bind(this)
                        },
                        ".kid-light-control .control-item.night-stand": {
                            tap: N.bind(this)
                        },
                        ".set-sleepnumber": {
                            tap: T.bind(this)
                        },
                        ".segmented-control-tab-item.sleepnumber button.find-sleep-number": {
                            tap: U.bind(this)
                        },
                        ".sleepnumber-buttons.kid .set-favorite-button": {
                            tap: O.bind(this)
                        },
                        ".sleepnumber-buttons.kid .return-favorite-button": {
                            tap: Q.bind(this)
                        },
                        ".connecting .try-again": {
                            tap: g.bind(this)
                        },
                        ".connecting .exit-remote": {
                            tap: z.bind(this)
                        },
                        ".touch-control": {
                            touchstart: A.bind(this),
                            touchend: B.bind(this)
                        },
                        ".segmented-control-bed-side .sleeper": {
                            tap: X
                        },
                        self: {
                            "tab-tapped": V,
                            "tab-changed-index": W,
                            tap: hb.prototype.clearPopover
                        },
                        ext: {
                            connectedDeviceStateModel: {
                                object: mb,
                                events: {
                                    bedMacAddressSelected: c.bind(this),
                                    connectionLost: d.bind(this)
                                }
                            }
                        }
                    }), this.mapChildView({
                        ".signal-strength": {
                            TView: ib,
                            model: {}
                        },
                        ".sleepiq-status": {
                            TView: jb,
                            model: {}
                        },
                        ".loading-animation-view": {
                            TView: rb,
                            model: {}
                        }
                    }), this.mapWidget({
                        ".dial-pill-chart": {
                            TWidget: fb
                        },
                        ".snap-drag-x": {
                            TWidget: kb
                        },
                        ".sleepnumber-control": {
                            TWidget: lb
                        },
                        self: {
                            TWidget: gb
                        },
                        ".tab-wrap": {
                            TWidget: hb
                        }
                    })
                }, {
                    template: "templates/pageviews/remote",
                    className: "remote-view",
                    _currentSideIndex: 0,
                    generateHtml: function(a) {
                        return a.pillWidth = Modernizr.tablet || Modernizr.desktop ? "8" : "5", a.pillHeight = Modernizr.tablet || Modernizr.desktop ? "37" : "38", Modernizr.nexus7 ? (a.pillWidth = 9, a.pillHeight = 36) : Modernizr.squattyphone && (a.pillWidth = 4, a.pillHeight = 28), new Promise(function(b) {
                            eb.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        this.classNameAppend && this.el.addClass(this.classNameAppend), mb.set("shouldReconnectOnAppResume", !0), db.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    onEnterComplete: function() {
                        setTimeout(function() {
                            Bb.setConnectionType("bluetooth"), e.call(this)
                        }.bind(this), 1e3), db.prototype.onEnterComplete.apply(this, arguments)
                    },
                    dispose: function() {
                        db.prototype.dispose.apply(this, arguments)
                    },
                    beforeExit: function() {
                        pb.trigger("clearShortPolling"), console.log("beforeExit");
                        var a = xb.Deferred();
                        return this.el.find("[data-section]").off("sectionInView"), xb(document).off("tap.remote"), mb.set("shouldReconnectOnAppResume", !1), wb.prototype.clearRemoteStandAlone(), Modernizr.setTest("cloud-device-control", !1), yb && clearInterval(yb), Bb.close().then(function() {
                            qb.isLoggedIn() || mb.reset(), a.resolve()
                        }.bind(this)), a
                    }
                }),
                Db = function() {
                    function a(a) {
                        var b = a;
                        return b
                    }
                    var b, c;
                    return {
                        get: function() {
                            return b
                        },
                        promise: function() {
                            return c
                        },
                        set: function(d) {
                            b && b == d || (b = a(d), c = xb.Deferred())
                        },
                        reject: function() {
                            c && (Bb.pumpSetHaltSleepNumberWithProgress(this.model.get("remote").kidHeadTilt.sideId), c.reject())
                        },
                        resolve: function() {
                            c && c.resolve()
                        },
                        clear: function() {
                            b && (b = null)
                        }
                    }
                }.bind(this)();
            return Cb
        }), define("rdust!templates/pageviews/ble-test", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="overflow-scroll logging-container"><div id="logging" class="overflow-scroll-inner"></div></div><div class="left"><div class="btn fifth exit done">Exit</div><div class="btn third start-scan">Start Scan</div><div class="btn third connect">Connect</div><div class="btn third disconnect">Disconnect</div></div><div class="signal-strength"></div><div class="labeled device-list-container overflow-scroll"><div class="overflow-scroll-inner device-list">').section(b.get("scanResults"), b, {
                        block: c
                    }, null).write('</div></div><div class="labeled selected-device"></div><div class="capabilities"><div class="capability requires-foundation">Foundation</div><div class="capability requires-foundation requires-footcontrol">Foot Position</div><div class="capability requires-foundation requires-massageandlighting">Massage Lights</div><div class="capability requires-foundation require-split">Split</div><div class="capability requires-foundation requires-temperatureengine">Temp Engine</div></div><div class="labeled sent"></div><div class="labeled response"></div><div class="functions"><div class="pump-functions"><div class="btn grid function set-value" data-action="factoryReset">factoryReset</div><div class="btn grid function set-value" data-action="pumpSetSleepNumber">pumpSetSleepNumber</div><div class="btn grid function" data-action="pumpGetMemory">pumpGetMemory</div><div class="btn grid function set-value" data-action="pumpSetMemory">pumpSetMemory</div><div class="btn grid function" data-action="pumpGetStatus">pumpGetStatus</div><div class="btn grid function" data-action="pumpGetJobStatus">pumpGetJobStatus</div><div class="btn grid function" data-action="pumpSetForceIdle">pumpSetForceIdle</div><div class="btn grid function" data-action="pumpGetState">pumpGetState</div><div class="btn grid function" data-action="pumpGetSoftwareVersion">pumpGetSoftwareVersion</div><div class="btn grid function" data-action="pumpGetChamberType">pumpGetChamberType</div><div class="btn grid function set-value" data-action="pumpSetLEDOverrideBlink">pumpSetLEDOverrideBlink</div><div class="btn grid function set-value" data-action="pumpSetLEDOverrideRevert">pumpSetLEDOverrideRevert</div><div class="btn grid function" data-action="getBedInformation">getBedInformation</div><div class="btn grid function" data-action="proxyGetNodeList">proxyGetNodeList</div><div class="btn grid function set-value" data-action="proxySetAddNode">proxySetAddNode</div><div class="btn grid function set-value" data-action="proxySetRemoveNode">proxySetRemoveNode</div><div class="btn grid function set-value requires-foundation" data-action="foundationSetAdjustment">foundationSetAdjustment</div><div class="btn grid function requires-foundation" data-action="foundationGetSystemStatus">foundationGetSystemStatus</div><div class="btn grid function requires-foundation" data-action="foundationGetAdjustment">foundationGetAdjustment</div><div class="btn grid function requires-foundation" data-action="foundationSetMotionHalt">foundationSetMotionHalt</div><div class="btn grid function requires-foundation requires-massageandlighting set-value" data-action="foundationSetLight">foundationSetLight</div><div class="btn grid function requires-foundation requires-massageandlighting" data-action="foundationGetLight">foundationGetLight</div><div class="btn grid function requires-foundation set-value" data-action="foundationSetPreset">foundationSetPreset</div><div class="btn grid function requires-foundation" data-action="foundationSetForceIdle">foundationSetForceIdle</div><div class="btn grid function requires-foundation" data-action="foundationGetSoftwareVersion">foundationGetSoftwareVersion</div><div class="btn grid function requires-k2" data-action="outletGetCachedStatus">outletGetCachedStatus</div><div class="btn grid function requires-k2" data-action="outletGetName">outletGetName</div><div class="btn grid function requires-k2" data-action="outletGetOulet">outletGetOutlet</div><div class="btn grid function requires-k2 set-value" data-action="outletSetName">outletSetName</div><div class="btn grid function requires-k2 set-value" data-action="outletSetAddOutlet">outletSetAddOutlet</div><div class="btn grid function requires-k2 set-value" data-action="outletSetRemoveOutlet">outletSetRemoveOutlet</div><div class="btn grid function requires-k2 set-value" data-action="outletSetOutlet120">outletSetOutlet120</div><div class="btn grid function requires-k2 set-value" data-action="outletSetOutlet12">outletSetOutlet12</div><div class="btn grid function requires-k2" data-action="outletGetSenseAndDoStatus">outletGetSenseAndDoStatus</div><div class="btn grid function requires-k2 set-value" data-action="outletSetSenseAndDo">outletSetSenseAndDo</div><!--     <div class="btn grid function requires-k2" data-action="verifyConnectedOutlet">verifyConnectedOutlet</div> --></div><div class="outlet-functions"><div class="btn grid function" data-action="outletGetConfiguration">outletGetConfiguration</div><div class="btn grid function set-value" data-action="outletSetConfiguration">outletSetConfiguration</div></div></div>')
                }

                function c(a, b) {
                    return a.write('<div class="btn').exists(b.get("isOutlet"), b, {
                        block: d
                    }, null).write('" data-name="').reference(b.get("name"), b, "h").write('" data-address="').reference(b.get("address"), b, "h").write('" data-macAddress="').reference(b.get("macAddress"), b, "h").write('" data-capabilities="').reference(b.get("capabilitiesJSON"), b, "h").write('"><b>').reference(b.get("name"), b, "h").write("</b>: ").reference(b.get("macAddress"), b, "h").write("<br />").reference(b.get("manufacturerDataHex"), b, "h").exists(b.get("isK1"), b, {
                        block: e
                    }, null).exists(b.get("isK2"), b, {
                        block: f
                    }, null).exists(b.get("isAdult"), b, {
                        block: g
                    }, null).exists(b.get("isOutlet"), b, {
                        block: h
                    }, null).write("</div>")
                }

                function d(a) {
                    return a.write(" outlet")
                }

                function e(a) {
                    return a.write(" K1")
                }

                function f(a) {
                    return a.write(" K2")
                }

                function g(a) {
                    return a.write(" Adult")
                }

                function h(a) {
                    return a.write(" Outlet")
                }
                return a.register("templates/pageviews/ble-test", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/ble-test", b, c)
                }
            }
        }), define("app/ui/views/pageviews/BleTestView", ["require", "./BaseView", "lavaca/mvc/Router", "rdust!templates/pageviews/ble-test", "sccomm/DeviceCommunication", "sccomm/ConnectedDeviceStateModel", "sccomm/CommunicationHelpers", "app/ui/views/childviews/SignalStrengthView", "$"], function(a) {
            function b() {
                C.exec("/")
            }

            function c() {
                this.el.find(".logging-container").show()
            }

            function d() {
                this.el.find(".logging-container").hide()
            }

            function e() {
                E.scan(), this.el.find(".btn.start-scan").addClass("disabled"), setTimeout(function() {
                    this.el.find(".btn.start-scan").removeClass("disabled"), this.render(".device-list")
                }.bind(this), 3e3)
            }

            function f(a) {
                var b = this.el.find(a.currentTarget).attr("data-name"),
                    c = this.el.find(a.currentTarget).attr("data-address"),
                    d = this.el.find(a.currentTarget).attr("data-macAddress");
                F.get("macAddress") && "" !== F.get("macAddress") || (this.el.find(a.currentTarget).hasClass("outlet") ? (F.set("outletAddress", c), F.set("outletMacAddress", d), this.el.find(".selected-device").html("<b>" + b + "</b>: " + c)) : (F.set("macAddress", d), this.el.find(".selected-device").html("<b>" + b + "</b>: " + d))), this.el.addClass("deviceSelected")
            }

            function g() {
                this.device = "", this.el.find(".selected-device").text(""), F.set("macAddress", ""), F.set("outletAddress", ""), this.el.removeClass("deviceSelected")
            }

            function h() {
                this.el.addClass("deviceConnecting"), F.get("outletAddress") ? (this.el.find(".functions .pump-functions").hide(), E.openOutlet().then(function() {
                    this.el.addClass("outlet"), i.call(this)
                }.bind(this), function() {
                    this.el.removeClass("deviceConnecting")
                }.bind(this))) : (this.el.find(".functions .outlet-functions").hide(), E.open().then(function() {
                    i.call(this)
                }.bind(this), function() {
                    this.el.removeClass("deviceConnecting")
                }.bind(this)))
            }

            function i() {
                this.el.find(".btn.connect").addClass("disabled"), this.el.addClass("deviceConnected"), this.el.removeClass("deviceConnecting")
            }

            function j() {
                E.close(), this.device = "", this.el.removeClass("outlet"), this.el.find(".selected-device").text(""), F.reset(), this.el.removeClass("deviceSelected"), this.el.removeClass("deviceConnecting"), this.el.find(".response").attr("data-status", "").text(""), this.el.find(".sent").text(""), this.render(".device-list"), this.el.find(".functions .pump-functions").show(), this.el.find(".functions .outlet-functions").show()
            }

            function k() {
                this.el.find(".btn.connect").removeClass("disabled"), this.el.removeClass("deviceConnected")
            }

            function l() {
                return Math.abs(Math.floor(2 * Math.random() - 1))
            }

            function m() {
                return Math.floor(4 * Math.random() + 1)
            }

            function n() {
                return Math.abs(Math.floor(2 * Math.random() - 1))
            }

            function o() {
                return Math.floor(6 * Math.random() + 1)
            }

            function p() {
                return 5 * Math.ceil(Math.floor(100 * Math.random() + 1) / 5)
            }

            function q() {
                return "test" + Math.floor(100 * Math.random() + 1)
            }

            function r(a) {
                var b = this.el.find(a.currentTarget).attr("data-action"),
                    c = {};
                if ("factoryReset" === b) {
                    var d = "Factory Reset",
                        e = "This will remove Wifi and outlet settings";
                    window.navigator && window.navigator.notification && navigator.notification.confirm(e, function(a) {
                        2 == a && (y.call(this, c), E.factoryReset().then(function(a) {
                            v.call(this, a)
                        }.bind(this), function(a) {
                            A.call(this, a)
                        }.bind(this)))
                    }.bind(this), d, ["Cancel", "Ok"])
                }
                if ("pumpSetSleepNumber" === b && (c.action = b, c.side = l.call(this), c.number = p.call(this), y.call(this, c), E.pumpSetSleepNumber(c.side, c.number).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpGetMemory" === b && (c.action = b, y.call(this, c), E.pumpGetMemory().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpSetMemory" === b && (c.action = b, c.side = l.call(this), c.number = p.call(this), y.call(this, c), E.pumpSetMemory(c.side, c.number).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpGetStatus" === b && (c.action = b, y.call(this, c), E.pumpGetStatus().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpGetJobStatus" === b && (c.action = b, y.call(this, c), E.pumpGetJobStatus().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpSetForceIdle" === b && (c.action = b, y.call(this, c), E.pumpSetForceIdle().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpGetState" === b && (c.action = b, y.call(this, c), E.pumpGetState().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpGetMemory" === b && (c.action = b, y.call(this, c), E.pumpGetMemory().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpGetSoftwareVersion" === b && (c.action = b, y.call(this, c), E.pumpGetSoftwareVersion().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpGetChamberType" === b && (c.action = b, y.call(this, c), E.pumpGetChamberType().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpSetLEDOverrideBlink" === b && (c.action = b, y.call(this, c), E.pumpSetLEDOverrideBlink().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "pumpSetLEDOverrideRevert" === b && (c.action = b, y.call(this, c), E.pumpSetLEDOverrideRevert().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "proxyGetNodeList" === b && (c.action = b, y.call(this, c), E.proxyGetNodeList().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "proxySetAddNode" === b && (c.action = b, c.node = "", y.call(this, c), E.proxySetAddNode(c.node).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "proxySetRemoveNode" === b && (c.action = b, c.node = "", y.call(this, c), E.proxySetRemoveNode(c.node).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "foundationAdjustment" === b && (c.action = b, c.side = l.call(this), y.call(this, c), E.foundationAdjustment(c.side).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "foundationGetSystemStatus" === b && (c.action = b, y.call(this, c), E.foundationGetSystemStatus().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "foundationGetAdjustment" === b && (c.action = b, y.call(this, c), E.foundationGetAdjustment().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "foundationSetMotionHalt" === b && (c.action = b, c.side = l.call(this), c.stopHead = 1, c.stopFoot = 1, c.stopMassage = 1, y.call(this, c), E.foundationSetMotionHalt(c.side, c.stopHead, c.stopFoot, c.stopMassage).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "foundationSetLight" === b && (c.action = b, c.which = m.call(this), c.state = n.call(this), c.timeout = 0, y.call(this, c), E.foundationSetLight(c.which, c.state, c.timeout).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "foundationGetLight" === b && (c.action = b, c.which = m.call(this), y.call(this, c), E.foundationGetLight(c.which).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "foundationSetPreset" === b && (c.action = b, c.side = l.call(this), c.which = o.call(this), y.call(this, c), E.foundationSetPreset(c.side, c.which).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "foundationSetForceIdle" === b && (c.action = b, y.call(this, c), E.foundationSetForceIdle().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "foundationGetSoftwareVersion" === b && (c.action = b, y.call(this, c), E.foundationGetSoftwareVersion().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletGetCachedStatus" === b && (c.action = b, y.call(this, c), E.outletGetCachedStatus().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletSetRequestStatus" === b && (c.action = b, c.which = 0, y.call(this, c), E.outletSetRequestStatus([c.which]).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletGetName" === b && (c.action = b, c.which = 0, y.call(this, c), E.outletGetName(c.which).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletSetName" === b && (c.action = b, c.which = 0, c.name = q.call(this), y.call(this, c), E.outletSetName(c.which, c.name).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletGetOutlet" === b && (c.action = b, c.which = 0, y.call(this, c), E.outletGetOutlet(c.which).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletSetAddOutlet" === b && (c.action = b, c.which = 0, navigator && navigator.notification && navigator.notification.prompt && navigator.notification.prompt("Enter Outlet mac Address", function(a) {
                        1 === a.buttonIndex && (c.outletAddress = a.input1, y.call(this, c), E.outletSetAddOutlet(c.which, c.outletAddress).then(function(a) {
                            v.call(this, a)
                        }.bind(this), function(a) {
                            A.call(this, a)
                        }.bind(this)))
                    }.bind(this), "Address", ["Ok", "Cancel"], "cc:04:b4:01:f7:c6")), "outletSetRemoveOutlet" === b && (c.action = b, c.which = 0, y.call(this, c), E.outletSetRemoveOutlet(c.which).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletSetOutlet" === b && (c.action = b, c.which = 0, c.state120 = n.call(this), c.state12 = n.call(this), y.call(this, c), E.outletSetOutlet(c.which, c.state120, c.state12).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletSetOutlet120" === b && (c.action = b, c.which = 0, c.state = n.call(this), y.call(this, c), E.outletSetOutlet120(c.which, c.state).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletSetOutlet12" === b && (c.action = b, c.which = 0, c.state = n.call(this), y.call(this, c), E.outletSetOutlet12(c.which, c.state).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletGetSenseAndDoStatus" === b && (c.action = b, y.call(this, c), E.outletGetSenseAndDoStatus().then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletSetSenseAndDo" === b && (c.action = b, c.state = n.call(this), y.call(this, c), E.outletSetSenseAndDo(c.state).then(function(a) {
                        v.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))), "outletGetConfiguration" === b && E.outletDirectGetConfiguration().then(function(a) {
                        w.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this)), "outletSetConfiguration" === b && (c.action = b, c.which = 0, navigator && navigator.notification && navigator.notification.prompt && navigator.notification.prompt("Enter Pump mac Address", function(a) {
                        1 === a.buttonIndex && (c.pumpAddress = a.input1, y.call(this, c), E.outletDirectSetConfiguration(c.which, c.pumpAddress).then(function(a) {
                            w.call(this, a)
                        }.bind(this), function(a) {
                            A.call(this, a)
                        }.bind(this)))
                    }.bind(this), "Address", ["Ok", "Cancel"], "cc:04:b4:01:f8:58")), "verifyConnectedOutlet" === b) {
                    c.action = b, c.which = 0;
                    var f = new Date;
                    navigator && navigator.notification && navigator.notification.prompt && navigator.notification.prompt("Enter Pump mac Address", function(a) {
                        1 === a.buttonIndex && (c.pumpAddress = a.input1, y.call(this, c), E.verifyConnectedOutlet(c.pumpAddress, c.which).then(function() {
                            u.call(this, {
                                status: "successful",
                                timeTaken: new Date - f
                            })
                        }.bind(this), function() {
                            A.call(this, {
                                status: "not successful"
                            })
                        }.bind(this)))
                    }.bind(this), "Address", ["Ok", "Cancel"], "cc:04:b4:01:f8:58")
                }
                if ("getBedInformation" === b) {
                    c.action = b, y.call(this, c);
                    var f = new Date;
                    E.getBedInformation().then(function(a) {
                        a.timeTaken = new Date - f, u.call(this, a)
                    }.bind(this), function(a) {
                        A.call(this, a)
                    }.bind(this))
                }
            }

            function s(a) {
                "scanResult" === a.state && this.render(".device-list"), "closed" === a.state && k.call(this), "opened" === a.state && i.call(this)
            }

            function t() {}

            function u(a) {
                var b = I("<div>"),
                    c = I("<div>").addClass("wrapper");
                x.call(this, a.timeTaken), c.append(I("<div>").addClass("data").html('<span class="prop">TimeTaken</span>: <span class="value">' + a.timeTaken + "</span>")), c = z.call(this, c, a), b.append(c), this.el.find(".response").attr("data-status", "success").html(b.html())
            }

            function v(a) {
                var b = I("<div>"),
                    c = I("<div>").addClass("wrapper");
                x.call(this, a.timeTaken), c.append(I("<div>").addClass("data").html('<span class="prop">SubCommand</span>: <span class="value">' + a.subCommandHex + "</span>")), c.append(I("<div>").addClass("data").html('<span class="prop">PayloadHex</span>: <span class="value">' + a.payloadHex + "</span>")), c.append(I("<div>").addClass("data").html('<span class="prop">TimeTaken</span>: <span class="value">' + a.timeTaken + "</span>")), c = z.call(this, c, a.returnObject), b.append(c), this.el.find(".response").attr("data-status", "success").html(b.html())
            }

            function w(a) {
                var b = {};
                b.hex = G.rawToHex(G.arrayBufferToRaw(a));
                var c = I("<div>"),
                    d = I("<div>").addClass("wrapper");
                d = z.call(this, d, b), c.append(d), this.el.find(".response").attr("data-status", "success").html(c.html())
            }

            function x(a) {
                this.timeTakenMin || (this.timeTakenMin = 1e19), this.timeTakenMax || (this.timeTakenMax = 0), this.timeTakenMin = a < this.timeTakenMin ? a : this.timeTakenMin, this.timeTakenMax = a > this.timeTakenMax ? a : this.timeTakenMax, console.log(this.timeTakenMin + ":" + a + ":" + this.timeTakenMax)
            }

            function y(a) {
                var b = I("<div>"),
                    c = I("<div>").addClass("wrapper");
                c = z.call(this, c, a), b.append(c), this.el.find(".sent").html(b.html())
            }

            function z(a, b) {
                if (b && "object" == typeof b)
                    for (var c in b) "object" == typeof b[c] && (b[c] = JSON.stringify(b[c])), a.append(I("<div>").addClass("data").html('<span class="prop">' + c + '</span>: <span class="value">' + b[c] + "</span>"));
                return a
            }

            function A(a) {
                this.el.find(".response").attr("data-status", "error").text(JSON.stringify(a))
            }
            var B = a("./BaseView"),
                C = a("lavaca/mvc/Router"),
                D = a("rdust!templates/pageviews/ble-test"),
                E = a("sccomm/DeviceCommunication"),
                F = a("sccomm/ConnectedDeviceStateModel"),
                G = a("sccomm/CommunicationHelpers"),
                H = a("app/ui/views/childviews/SignalStrengthView"),
                I = a("$"),
                J = B.extend(function() {
                    B.apply(this, arguments), this.mapEvent({
                        ".done": {
                            tap: b
                        },
                        ".start-scan": {
                            tap: e
                        },
                        ".connect": {
                            tap: h
                        },
                        ".disconnect": {
                            tap: j
                        },
                        ".function": {
                            tap: r
                        },
                        "[data-address]": {
                            tap: f
                        },
                        ".deviceSelected .selected-device": {
                            tap: g
                        },
                        ".signal-strength": {
                            tap: c
                        },
                        ".logging-container": {
                            tap: d
                        },
                        ext: {
                            DeviceCommunication: {
                                object: E,
                                events: {
                                    stateChange: s.bind(this),
                                    scanResult: t.bind(this)
                                }
                            }
                        }
                    }), this.mapChildView({
                        ".signal-strength": {
                            TView: H,
                            model: {}
                        }
                    })
                }, {
                    className: "ble-test",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            D.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        B.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        B.prototype.dispose.apply(this, arguments)
                    }
                });
            return J
        }), define("app/net/RemoteController", ["require", "app/ui/views/pageviews/RemoteView", "app/ui/views/pageviews/BleTestView", "app/net/BaseController", "sccomm/ConnectedDeviceStateModel", "app/models/viewmodels/RemoteViewModel", "app/models/StateModel", "app/models/BedCollection"], function(a) {
            var b = a("app/ui/views/pageviews/RemoteView"),
                c = a("app/ui/views/pageviews/BleTestView"),
                d = a("app/net/BaseController"),
                e = a("sccomm/ConnectedDeviceStateModel"),
                f = a("app/models/viewmodels/RemoteViewModel"),
                g = a("app/models/StateModel"),
                h = a("app/models/BedCollection"),
                i = d.extend(function() {
                    $("html").attr("data-controller", "RemoteController"), d.apply(this, arguments)
                }, {
                    index: function(a, c) {
                        return g.get("isDemo") && e.set("isDemo", !0), h.models.length > 0 ? (h.setCurrentBedWithBedId(a.bedId), this.view(null, b, new f).then(this.updateState(c, "SleepIQ", a.url))) : h.fetch().then(function() {
                            return h.setCurrentBedWithBedId(a.bedId), this.view(null, b, new f).then(this.updateState(c, "SleepIQ", a.url))
                        }.bind(this), function() {
                            this.redirect("/dashboard")
                        }.bind(this))
                    },
                    standAlone: function(a, c) {
                        return g.get("isDemo") && e.set("isDemo", !0), this.view(null, b, new f, {
                            classNameAppend: "remote-stand-alone"
                        }).then(this.updateState(c, "SleepIQ", a.url))
                    },
                    test: function(a, b) {
                        return g.get("isDemo") && e.set("isDemo", !0), this.view(null, c, e).then(this.updateState(b, "SleepIQ", a.url))
                    }
                });
            return i
        }), define("app/ui/widgets/RegistrationFormValidator", ["require", "lavaca/ui/Widget", "app/utils/debounce", "mout/object/get", "app/models/StateModel", "$"], function(a) {
            function b() {
                this.formValidated = !1, this.animateLabels = this.el.data("animate-labels") || !1, this.emailRegex = /^([\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+\.)*[\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+@((((([a-z0-9]{1}[a-z0-9\-]{0,62}[a-z0-9]{1})|[a-z])\.)+[a-z]{2,6})|(\d{1,3}\.){3}\d{1,3}(\:\d{1,5})?)$/i, this.numberMin = 1, this.uppercaseCharMin = 1, this.lowercaseCharMin = 1, this.lengthMin = 0, this.lengthMax = 0, this.errorMsgClass = ".error-message", this.defaultErrorMessages = {
                    required: "Field required.",
                    email: "Please enter a valid email address",
                    length: "This field does not meet the necessary length requirements.",
                    uppercase: "This field does not contain enough uppercase letters.",
                    number: "This field does not contain enough numbers.",
                    exclude: "Certain characters are not allowed",
                    allow: "Certain characters are not allowed.",
                    match: "The value does not equal its matching field."
                }, c.call(this)
            }

            function c() {
                this.el.find('[data-validate-onload="true"]').each(function(a, b) {
                    h.call(this, null, p(b))
                }.bind(this))
            }

            function d(a) {
                a.preventDefault(), a.stopPropagation(), e.call(this, a)
            }

            function e(a) {
                a && a.currentTarget && "number" == typeof a.currentTarget.maxLength && a.currentTarget.value.length > a.currentTarget.maxLength - 1 && (a.currentTarget.value = a.currentTarget.value.slice(0, a.currentTarget.maxLength));
                var b = p(a.currentTarget);
                g.call(this, b, "keyup"), this.animateLabels && f.call(this, b), !a || 13 !== a.which && "submit" !== a.type || k.call(this)
            }

            function f(a) {
                var b = this.el.find('label[for="' + a.attr("name") + '"]');
                b.toggleClass("reveal", a.val() ? !0 : !1)
            }

            function g(a, b) {
                var c = a.data("validation"),
                    d = c ? c.rules : null,
                    e = !1;
                if (d && d.length) {
                    for (var f = 0; f < d.length; f++) "object" == typeof d[f] ? (d[f].validated = j.call(this, a, d[f]), d[f].validated || (e = !0)) : (e = !1, console.warn("Validation rule is not an object."));
                    try {
                        "demo" === a.val() && (e = !1)
                    } catch (g) {}
                    var h = this.el.find('label[for="' + a.attr("name") + '"]');
                    return e ? a.removeClass("valid") : (h.removeClass("invalid").addClass("reveal"), a.parent().removeClass("multiple-errors"), a.addClass("valid").removeClass("invalid").nextAll(this.errorMsgClass).first().removeClass("reveal")), a.trigger("validation", {
                        isInvalid: e,
                        eventType: b
                    }), e
                }
            }

            function h(a, b, c) {
                var d, e = a ? p(a.currentTarget) : b,
                    h = e.data("validation"),
                    i = h ? h.rules : null,
                    j = e.nextAll(this.errorMsgClass).first(),
                    k = void 0 !== c ? c : g.call(this, e, "blur"),
                    l = 0;
                if (i && i.optional) return this.animateLabels && f.call(this, e), !0;
                if (i && i.length) {
                    o.trigger("formValidationRun");
                    var m = this.el.find('label[for="' + e.attr("name") + '"]');
                    if (m.toggleClass("invalid", k), this.el.find("h4." + e.attr("name")).toggleClass("invalid", k), e.toggleClass("invalid", k), k) {
                        h.validated = !1;
                        for (var n = 0; n < i.length; n++) i[n].validated || (l++, d = n);
                        p(".save-sleeper").removeClass("disabled"), l > 1 ? (j.text(h.message || i[d].message || this.defaultErrorMessages[i[d].type]).addClass("reveal"), e.parent().addClass("multiple-errors")) : l && (j.text(i[d].message || this.defaultErrorMessages[i[d].type]).addClass("reveal"), e.parent().removeClass("multiple-errors"))
                    } else h.validated = !0, "string" == typeof e.val() && e.val(e.val().trim()), e.parent().removeClass("multiple-errors"), j.text("").removeClass("reveal");
                    return l > 0 ? !1 : !0
                }
            }

            function i(a) {
                if (a) {
                    var b = n(a, "currentTarget.type");
                    if ("number" === b) {
                        var c = a.which ? a.which : a.keyCode;
                        return c > 31 && (48 > c || c > 57) ? !1 : !0
                    }
                    return !0
                }
                return !0
            }

            function j(a, b) {
                var c, d = "string" == typeof a.val() ? a.val().trim() : a.val();
                if (a.toggleClass("empty", "" === d).siblings().toggleClass("empty", "" === d), d || a.toggleClass("empty", !0).siblings().toggleClass("empty", !0), a.hasClass("skip")) return a.removeClass("valid"), !0;
                if (b.optional) return !0;
                switch (b.type) {
                    case "required":
                        return "radio" === a.attr("type") && (d = this.el.find('input[name="' + a.attr("name") + '"]:checked').length), d ? !0 : !1;
                    case "email":
                        var e = b.expression ? b.expression : this.emailRegex;
                        return e.test(d);
                    case "length":
                        var f = b.min || this.lengthMin,
                            g = b.max || this.lengthMax;
                        return (!f || d.length >= f) && (!g || d.length <= g);
                    case "number":
                        var h = 0,
                            i = b.min || this.numberMin;
                        for (c = 0; c < d.length; c++) isNaN(d[c]) || h++;
                        return h >= i;
                    case "uppercase":
                        var j = 0,
                            k = b.min || this.uppercaseCharMin;
                        for (c = 0; c < d.length; c++) d[c] === d[c].toUpperCase() && d[c] !== d[c].toLowerCase() && j++;
                        return j >= k;
                    case "lowercase":
                        var l = 0,
                            m = b.min || this.lowercaseCharMin;
                        for (c = 0; c < d.length; c++) d[c] !== d[c].toUpperCase() && d[c] === d[c].toLowerCase() && l++;
                        return l >= m;
                    case "exclude":
                        for (c = 0; c < b.exclusions.length; c++)
                            if (d.indexOf(b.exclusions[c]) > -1) return !1;
                        return !0;
                    case "allow":
                        var n = 0,
                            o = "";
                        if (b.numbers && (n += (d.match(/[0-9]/g) || []).length), b.letters && (n += (d.match(/[a-zA-Z]/g) || []).length), b.special && b.special.length > 0) {
                            for (c = 0; c < b.special.length; c++) o += b.special[c];
                            n += (d.match(new RegExp("[" + o + "]", "g")) || []).length
                        }
                        return b.numbers && n !== d.length && d.match(/[a-zA-Z]/g), n === d.length;
                    case "match":
                        var p = this.el.find('[name="' + b.match + '"]');
                        return !p.hasClass("invalid") && p.val() === d;
                    default:
                        return !1
                }
            }

            function k(a, b) {
                var c = this.el.find("[data-validation]:not(.skip)"),
                    d = 0;
                c.each(function(a, b) {
                    h.call(this, null, p(b)) && d++
                }.bind(this)), this.formValidated = c.length === d, this.el.toggleClass("validated", this.formValidated), b && "function" == typeof b && b(this.formValidated)
            }
            var l = a("lavaca/ui/Widget"),
                m = a("app/utils/debounce"),
                n = a("mout/object/get"),
                o = a("app/models/StateModel"),
                p = a("$"),
                q = l.extend(function() {
                    l.apply(this, arguments), setTimeout(b.bind(this), 0), this.el.find("input").hammer({
                        stop_browser_behavior: {
                            userSelect: !0
                        }
                    }).on("keyup paste", m(e.bind(this), 10)), this.el.find("input").on("keypress", i.bind(this)), this.el.find('input[type="radio"], select').hammer({
                        stop_browser_behavior: {
                            userSelect: !0
                        }
                    }).on("change", h.bind(this)), this.el.find("input, select").hammer({
                        stop_browser_behavior: {
                            userSelect: !0
                        }
                    }).on("blur", h.bind(this)), this.el.on("validateOnload", c.bind(this)), this.el.on("validateForm", k.bind(this)), this.el.on("submit", d.bind(this))
                }, {
                    dispose: function() {
                        return this.el.find("input").hammer({
                            stop_browser_behavior: {
                                userSelect: !0
                            }
                        }).on("keyup paste", e.bind(this)), this.el.find("input").off("keypress", i.bind(this)), this.el.find("select").hammer({
                            stop_browser_behavior: {
                                userSelect: !0
                            }
                        }).on("change", e.bind(this)), this.el.find("input, select").hammer({
                            stop_browser_behavior: {
                                userSelect: !0
                            }
                        }).on("blur", h.bind(this)), this.el.off("validateOnload", c.bind(this)), this.el.off("validateForm", k.bind(this)), this.el.off("submit", d.bind(this)), l.prototype.dispose.apply(this, arguments)
                    }
                });
            return q
        }), define("app/models/validations/setup-account", ["require"], function() {
            return {
                firstName: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required",
                        message: "Your first name cannot be empty."
                    }]
                }),
                email: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required",
                        message: "Email address is required.."
                    }, {
                        type: "email",
                        message: "Please enter a valid email format"
                    }, {
                        type: "exclude",
                        exclusions: [" "]
                    }]
                }),
                password: {
                    criteria: JSON.stringify({
                        validated: !1,
                        rules: [{
                            type: "required",
                            message: "Your password cannot be empty."
                        }, {
                            type: "exclude",
                            exclusions: [" "],
                            message: "Password cannot contain white space."
                        }, {
                            type: "number",
                            message: "Your password must contain a number."
                        }, {
                            type: "uppercase",
                            message: "Your password must contain an uppercase letter."
                        }, {
                            type: "length",
                            min: 8,
                            max: 30,
                            message: "Your password must be between 8 and 30 characters in length."
                        }]
                    })
                },
                confirmPassword: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required",
                        message: "This field is required."
                    }, {
                        type: "match",
                        match: "password",
                        message: "The passwords do not match."
                    }]
                })
            }
        }), define("rdust!templates/pageviews/registration-order-lookup", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><h2>Welcome to SleepIQ<sup>&reg;</sup></h2><form class="order-form form"><div class="input-wrapper"><input type="email" name="emailInput" id="email" maxlength="256" value="').reference(b.get("email"), b, "h").write('" placeholder="Email" data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" needsclick/><span class="input-tip">Please enter your email address.</span><p class="error-message"></p><p class="success-message"></p></div><div class="input-wrapper"><input type="text" name="orderNumber" id="order-number" maxlength="11" value="').reference(b.get("orderId"), b, "h").write('" placeholder="Order Number" data-validation="').reference(b.getPath(!1, ["validations", "orderNumber"]), b, "h").write('" maxlength="30" needsclick/><span class="input-tip">Please enter your SleepIQ Order number.</span><p class="error-message"></p></div></form><h3>Create a password for your <br> SleepIQ account</h3><form class="password-form form"><div class="input-wrapper"><input type="password" name="passwordInput" id="password" maxlength="256" value="').reference(b.get("password"), b, "h").write('" placeholder="Password" data-validation="').reference(b.getPath(!1, ["validations", "password", "criteria"]), b, "h").write('" needsclick/><span class="input-tip">Password must contain at least 8 characters including one uppercase letter, one lowercase letter and one number.</span><p class="error-message"></p></div><div class="submit">Next</div></form></div>')
                }
                return a.register("templates/pageviews/registration-order-lookup", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/registration-order-lookup", b, c)
                }
            }
        }), define("app/ui/views/pageviews/RegistrationOrderLookupView", ["require", "./BaseView", "lavaca/mvc/Router", "app/ui/widgets/FormValidator", "app/ui/widgets/RegistrationFormValidator", "app/models/StateModel", "app/utils/debounce", "app/models/validations/setup-account", "rdust!templates/pageviews/registration-order-lookup", "app/utils/MixPanelManager", "app/models/AccountModel", "rdust!templates/headers/back-header"], function(a) {
            function b(a) {
                if (a) {
                    var b = l.get("debugEmail") || this.el.find("#email").val(),
                        e = l.get("debugPassword") || this.el.find("#password").val(),
                        f = this.el.find("#order-number");
                    if (this.model.set("username", b), this.model.set("password", e), !l.get("accountActivation")) return d.call(this, b, e);
                    if (this.model.get("termsAccepted")) c.call(this), this.model.trigger("nextSection");
                    else if (this.model.get("accountIsActive")) c.call(this), $(".submit").addClass("disabled"), i.exec("/modals/accept-terms");
                    else {
                        var g = this.model.get("orderToken");
                        if (g) return this.validateToken(g).then(function() {
                            return this.activateAccount(e, g).then(function(a) {
                                o.prototype.trackPassword(f.val(), null, null), this.model && this.model.setRegistrationState(10), c.call(this), $(".submit").removeClass("disabled"), this.model.set("accountIsActive", !0), a.login || "active" === a ? ($(".submit").addClass("disabled"), i.exec("/modals/accept-terms")) : window.customAlert.alert("An error occurred. Your account could not be created. Please try again.")
                            }.bind(this), function(a) {
                                console.error(a), o.prototype.trackPassword(f.val(), a, null), $(".submit").removeClass("disabled"), window.customAlert.alert("An error occurred. Your account could not be created. Please try again.")
                            }.bind(this))
                        }.bind(this));
                        $(".submit").removeClass("disabled");
                        var h = "A parameter is missing, invalid email, or account is already active.";
                        window.customAlert.alert(h)
                    }
                } else $(".submit").removeClass("disabled")
            }

            function c() {
                this.el.find("input").each(function(a, b) {
                    b.disabled = !0, b.classList.add("disabled")
                })
            }

            function d(a, b) {
                return p.login(a, b).then(function() {
                    $("button.next").removeClass("disabled"), this.model.trigger("nextSection")
                }.bind(this), function() {
                    $("button.next").removeClass("disabled"), window.customAlert.alert("401: Likely not activated yet.")
                }.bind(this))
            }

            function e() {
                var a = this.model,
                    b = this.el.find("#email"),
                    c = this.el.find("#order-number");
                b.hasClass("valid") && c.hasClass("valid") && this.model.validateOrder(c.val(), b.val()).then(function(b) {
                    a.set("email", b.email), a.set("orderToken", b.token), o.prototype.trackOrder(c.val(), null, null), $(".success-message").addClass("reveal")
                }, function(a) {
                    var b = "Pardon us. We are experiencing technical difficulties; please check back later.";
                    if (o.prototype.trackOrder(c.val(), a, null), a && a.status) switch (a.status) {
                        case 400:
                            b = a.responseJSON && a.responseJSON.Error && a.responseJSON.Error.Message ? a.responseJSON.Error.Message.replace("SleepIQ?", "SleepIQ®") : "A parameter is missing, invalid email, or account is already active.";
                            break;
                        case 404:
                            b = a.responseJSON && a.responseJSON.Error && a.responseJSON.Error.Message ? a.responseJSON.Error.Message.replace("SleepIQ?", "SleepIQ®") : "Order number or email not found."
                    }
                    window.customAlert.alert(b), this.el.addClass("fail")
                }.bind(this))
            }

            function f() {
                setTimeout(function() {
                    $(".submit").removeClass("disabled")
                }.bind(this), 2e3)
            }

            function g(a) {
                try {
                    var b = $(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var c = b.prev();
                    c.val(""), c.removeClass("invalid valid"), c.focus()
                } catch (d) {
                    console.log(d)
                }
            }
            var h = a("./BaseView"),
                i = a("lavaca/mvc/Router"),
                j = a("app/ui/widgets/FormValidator"),
                k = a("app/ui/widgets/RegistrationFormValidator"),
                l = a("app/models/StateModel"),
                m = a("app/utils/debounce"),
                n = (a("app/models/validations/setup-account"), a("rdust!templates/pageviews/registration-order-lookup")),
                o = a("app/utils/MixPanelManager"),
                p = a("app/models/AccountModel");
            a("rdust!templates/headers/back-header");
            var q = h.extend(function() {
                h.apply(this, arguments), this.mapEvent({
                    ".submit": {
                        tap: this.onTapSubmit
                    },
                    ".clear": {
                        tap: g
                    },
                    model: {
                        termsAccepted: this.onModalClose
                    },
                    ext: {
                        stateModel: {
                            object: l,
                            events: {
                                formValidationRun: e.bind(this),
                                closeTermsModal: f.bind(this)
                            }
                        }
                    }
                }), this.mapWidget({
                    ".order-form": {
                        TWidget: k
                    },
                    ".password-form": {
                        TWidget: j
                    }
                })
            }, {
                className: "registration-order-lookup",
                generateHtml: function(a) {
                    return a.validations = {
                        orderNumber: JSON.stringify({
                            validated: !1,
                            rules: [{
                                type: "required",
                                message: "An order number is required."
                            }, {
                                type: "exclude",
                                exclusions: [" "]
                            }, {
                                type: "number",
                                min: 11,
                                max: 11,
                                message: "This is 11 numbers without hyphens or letters."
                            }]
                        }),
                        email: JSON.stringify({
                            validated: !1,
                            message: "Please enter a valid email format",
                            rules: [{
                                type: "required",
                                message: "Please enter a valid email format"
                            }, {
                                type: "email"
                            }, {
                                type: "exclude",
                                exclusions: [" "]
                            }]
                        }),
                        password: {
                            criteria: JSON.stringify({
                                validated: !1,
                                rules: [{
                                    type: "required",
                                    message: "Your password cannot be empty."
                                }, {
                                    type: "exclude",
                                    exclusions: [" "],
                                    message: "Password cannot contain white space."
                                }, {
                                    type: "number",
                                    message: "Your password must contain a number."
                                }, {
                                    type: "uppercase",
                                    message: "Your password must contain an uppercase letter."
                                }, {
                                    type: "length",
                                    min: 8,
                                    max: 30,
                                    message: "Your password must be between 8 and 30 characters in length."
                                }]
                            })
                        }
                    }, new Promise(function(b) {
                        n.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onModalClose: function() {
                    m(this.onClose(), 100)
                },
                onClose: function() {
                    var a = this.el.find("#email").val(),
                        b = this.el.find("#password").val();
                    a && b && p.login(a, b).then(function() {
                        c.call(this), this.model.set("isChild", !1), i.exec("/registration/0/" + a + "/0/2")
                    }.bind(this), function() {
                        window.customAlert.alert("There was trouble authenticating the session. Please login and attempt again.")
                    }.bind(this))
                },
                onTapSubmit: function(a) {
                    $(a.currentTarget).hasClass("disabled") || ($(a.currentTarget).addClass("disabled"), a.preventDefault(), a.stopPropagation(), this.el.find(".password-form").trigger("validateForm", b.bind(this)))
                },
                activateAccount: function(a) {
                    return this.model.get("accountIsActive") ? Promise.resolve("active") : this.model.activateAccount(a, this.model.get("orderToken"))
                },
                onTapBack: function() {
                    i.exec("/")
                },
                validateToken: function(a) {
                    return new Promise(function(b, c) {
                        return this.model.get("tokenIsValid") ? b() : (p.validateToken(a).then(function() {
                            return this.model.set("tokenIsValid", !0), b()
                        }.bind(this), function(a) {
                            return a && a.status && 401 === a.status && this.model.get("orderToken") ? (this.model.set("accountIsActive", !0), this.model.set("tokenIsValid", !0), b()) : (window.customAlert.alert("Your Sleep Number order is not valid. Please verify your order number and try again."), c())
                        }.bind(this)), void 0)
                    }.bind(this))
                }
            });
            return q
        }), define("rdust!templates/pageviews/registration-complete", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header registration"><div class="user-menu">☰</div><button class="remote right"><div class="center"><div class="icon siqfont">↕</div><div class="remote-alert"></div><span>Remote</span></div></button></header><div class="registration-complete-container"><h1>Welcome!</h1><div class="content-columns"><div class="column track"><div class="image truck"></div><a class="big white log-in" href=').reference(b.get("orderURI"), b, "h").write(' target="_blank">Track My Bed</a></div><div class="column connect"><div class="image connect"></div><button class="big white connect"  data-href="marketplace">Connect Your World</button></div><div class="column setup"><div class="image bed"></div><button class="big white log-in setup">Setup My Bed</button></div></div></div>')
                }
                return a.register("templates/pageviews/registration-complete", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/registration-complete", b, c)
                }
            }
        }), define("rdust!templates/childviews/reusable-success", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="reusable-success-view view"><i></i><h1>').reference(b.get("mainCopy"), b, "h").write("</h1></div>")
                }
                return a.register("templates/childviews/reusable-success", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/reusable-success", b, c)
                }
            }
        }), define("app/ui/views/pageviews/RegistrationCompleteView", ["require", "./BaseView", "lavaca/mvc/Router", "app/models/StateModel", "app/models/BedCollection", "mout/object/get", "app/env/Config", "rdust!templates/pageviews/registration-complete", "rdust!templates/headers/dashboard-header", "rdust!templates/childviews/reusable-success"], function(a) {
            function b() {
                this.model.clearAll(), f.exec("/")
            }

            function c() {
                window.customAlert('<p class="center"><span>BLE not available</span> <br> <br> Please open the SleepIQ app on your mobile device to continue.</p>', null, "bottom")
            }

            function d(a) {
                var b = a && a.currentTarget ? $(a.currentTarget).data("href") : !1;
                b && f.exec("/" + b)
            }
            var e = a("./BaseView"),
                f = a("lavaca/mvc/Router"),
                g = a("app/models/StateModel"),
                h = a("app/models/BedCollection"),
                i = (a("mout/object/get"), a("app/env/Config")),
                j = a("rdust!templates/pageviews/registration-complete");
            a("rdust!templates/headers/dashboard-header"), a("rdust!templates/childviews/reusable-success");
            var k = e.extend(function() {
                e.apply(this, arguments), this.mapEvent({
                    ".continue": {
                        tap: this.goToDashboard
                    },
                    ".setup": {
                        tap: c
                    },
                    "[data-href]": {
                        tap: d
                    },
                    ext: {
                        stateModel: {
                            object: g,
                            events: {
                                backButton: b.bind(this)
                            }
                        }
                    }
                })
            }, {
                currentTabIndex: 0,
                className: "registration complete",
                progressView: !1,
                generateHtml: function(a) {
                    a && (a.headerTitle = "Registration Complete", a.isMultiBed = a.beds && a.beds.length > 1, a.isMultiBed || a.bedName || (a.bedName = a.beds && a.beds[0] && a.beds[0].name || "Your bed"));
                    var b = this;
                    return new Promise(function(c) {
                        h.fetch().then(function() {
                            a.orderURI = b.orderURI(), j.render(a, function(a, b) {
                                c(b)
                            })
                        })
                    })
                },
                goToDashboard: function() {
                    this.model.clearAll(), f.exec("/")
                },
                onRenderSuccess: function() {
                    g.set("ignoreBack", !0), e.prototype.onRenderSuccess.apply(this, arguments)
                },
                dispose: function() {
                    g.set("ignoreBack", !1), e.prototype.dispose.apply(this, arguments)
                },
                orderURI: function() {
                    return i.track_url + "?orderNumber=" + h.models[0].get("reference").slice(0, 11) + "&zipCode=" + h.models[0].get("zipcode")
                }
            });
            return k
        }), define("rdust!templates/childviews/setup-account", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="child-wrapper"><h1>Welcome!</h1><h2>Let&rsquo;s create an account.</h2><form class="account-form form" data-form="account" data-animate-labels="true"><!-- <div class="section last"><div class="input-wrapper"><label for="firstName" >First Name</label><input name="firstName" type="text" data-validation="').reference(b.getPath(!1, ["validations", "firstName"]), b, "h").write('" maxlength="256" /><span class="clear"></span><p class="error-message"></p></div> --><div class="input-wrapper email"><label for="email">Email<span class="excess"> Address</span></label><input name="email" type="email" ').exists(b.get("email"), b, {
                        block: c
                    }, null).write(' disabled data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" class="disabled" value="').reference(b.get("email"), b, "h").write('" readonly="readonly" needsclick /><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper password"><label class="labelSetupPass"for="password">Password</label><input class="setupPass" name="password" type="password" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "password", "criteria"]), b, "h").write('" needsclick /><span class="clear"></span><p class="error-message"></p></div><h4 class="multiple-invalidations">The password must be between 8 and 30 characters and include a capital letter, a number and no whitespace.</h4><div class="input-wrapper"><label class="labelSetupConfirmPass" for="confirmPassword">Confirm Password</label><input class="setupConfirmPass" name="confirmPassword" type="password" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "confirmPassword"]), b, "h").write('" needsclick /><span class="clear"></span><p class="error-message"></p></div></form><div class="button-row"><button class="next">Next</button></div></div>')
                }

                function c(a) {
                    return a.write('data-validate-onload="true"')
                }
                return a.register("templates/childviews/setup-account", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/setup-account", b, c)
                }
            }
        }), define("app/ui/views/childviews/SetupAccountView", ["require", "lavaca/mvc/View", "app/ui/widgets/FormValidator", "app/models/StateModel", "rdust!templates/childviews/setup-account", "lavaca/mvc/Router", "app/utils/debounce", "app/models/validations/setup-account", "app/models/AccountModel"], function(a) {
            function b(a) {
                $(a.currentTarget).hasClass("disabled") || ($(a.currentTarget).addClass("disabled"), a.preventDefault(), a.stopPropagation(), this.el.find(".account-form").trigger("validateForm", c.bind(this)))
            }

            function c(a) {
                if (a) {
                    var b = i.get("debugEmail") || this.el.find(".email input").val(),
                        c = i.get("debugPassword") || this.el.find(".password input").val();
                    if (this.model.set("username", b), this.model.set("password", c), !i.get("accountActivation")) return e.call(this, b, c);
                    if (this.model.get("termsAccepted")) d.call(this), this.model.trigger("nextSection");
                    else {
                        if (!this.model.get("accountIsActive")) {
                            var f = this.model.get("orderToken");
                            return this.validateToken(f).then(function() {
                                return this.activateAccount(c, f).then(function(a) {
                                    this.model && this.model.setRegistrationState(10), d.call(this), $("button.next").removeClass("disabled"), this.model.set("accountIsActive", !0), a.login || "active" === a ? k.exec("/modals/accept-terms") : window.customAlert.alert("An error occurred. Your account could not be created. Please try again.")
                                }.bind(this), function(a) {
                                    console.error(a), $("button.next").removeClass("disabled"), window.customAlert.alert("An error occurred. Your account could not be created. Please try again.")
                                }.bind(this))
                            }.bind(this))
                        }
                        d.call(this), k.exec("/modals/accept-terms")
                    }
                } else $("button.next").removeClass("disabled")
            }

            function d() {
                this.el.find("input").each(function(a, b) {
                    b.disabled = !0, b.classList.add("disabled")
                })
            }

            function e(a, b) {
                return n.login(a, b).then(function() {
                    $("button.next").removeClass("disabled"), this.model.trigger("nextSection")
                }.bind(this), function() {
                    $("button.next").removeClass("disabled"), window.customAlert.alert("401: Likely not activated yet.")
                }.bind(this))
            }

            function f() {
                this.el.find(".labelSetupPass").removeClass("empty").addClass("reveal"), this.el.find(".labelSetupConfirmPass").removeClass("empty").addClass("reveal")
            }
            var g = a("lavaca/mvc/View"),
                h = a("app/ui/widgets/FormValidator"),
                i = a("app/models/StateModel"),
                j = a("rdust!templates/childviews/setup-account"),
                k = a("lavaca/mvc/Router"),
                l = a("app/utils/debounce"),
                m = a("app/models/validations/setup-account"),
                n = a("app/models/AccountModel"),
                o = g.extend(function() {
                    g.apply(this, arguments), this.mapEvent({
                        ".next": {
                            tap: b
                        },
                        ".setupPass": {
                            tap: f
                        },
                        ".setupConfirmPass": {
                            tap: f
                        },
                        model: {
                            termsAccepted: this.onModalClose
                        }
                    }), this.mapWidget({
                        ".account-form": {
                            TWidget: h
                        }
                    })
                }, {
                    className: "account-creation",
                    autoRender: !0,
                    hasActivated: !1,
                    generateHtml: function(a) {
                        return a.validations = m, new Promise(function(b) {
                            j.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onModalClose: function() {
                        l(this.onClose(), 100)
                    },
                    onClose: function() {
                        var a = this.el.find(".email input").val(),
                            b = this.el.find(".password input").val();
                        a && b && n.login(a, b).then(function() {
                            d.call(this), this.model.set("isChild", !1), this.model.trigger("nextSection")
                        }.bind(this), function() {
                            window.customAlert.alert("There was trouble authenticating the session. Please login and attempt again.")
                        }.bind(this))
                    },
                    activateAccount: function(a) {
                        return this.model.get("accountIsActive") ? Promise.resolve("active") : this.model.activateAccount(a, this.model.get("orderToken"))
                    },
                    validateToken: function(a) {
                        return new Promise(function(b, c) {
                            return this.model.get("tokenIsValid") ? b() : (n.validateToken(a).then(function() {
                                return this.model.set("tokenIsValid", !0), b()
                            }.bind(this), function(a) {
                                return a && a.status && 401 === a.status && this.model.get("orderToken") ? (this.model.set("accountIsActive", !0), this.model.set("tokenIsValid", !0), b()) : (window.customAlert.alert("Your Sleep Number order is not valid. Please verify your order number and try again."), c())
                            }.bind(this)), void 0)
                        }.bind(this))
                    }
                });
            return o
        }), define("rdust!templates/childviews/setup-bed", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="child-wrapper">').exists(b.get("selectedBedId"), b, {
                        "else": c,
                        block: g
                    }, null).write('<div id="bed-wrapper">').exists(b.get("bed"), b, {
                        "else": h,
                        block: i
                    }, null).write("</div></div>")
                }

                function c(a, b) {
                    return a.write('<div id="bed-list">').exists(b.get("isChild"), b, {
                        "else": d,
                        block: f
                    }, null).write("</div>")
                }

                function d(a, b) {
                    return a.exists(b.get("bedsToSetup"), b, {
                        block: e
                    }, null)
                }

                function e(a, b) {
                    return a.helper("include", b, {}, {
                        name: "templates/childviews/bed-list"
                    })
                }

                function f(a) {
                    return a.write('<h2 class="no-beds" style="text-align:center;">Your parents have not finished registering all the beds.</h2>')
                }

                function g(a) {
                    return a
                }

                function h(a) {
                    return a.write('<h2 class="still-loading" style="text-align:center;">Loading...</h2>')
                }

                function i(a, b) {
                    return a.helper("include", b, {}, {
                        name: "templates/childviews/bed-forms"
                    })
                }
                return a.register("templates/childviews/setup-bed", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/setup-bed", b, c)
                }
            }
        }), define("rdust!templates/childviews/bed-pump-forms", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="subheader"><h3>It looks like you are getting a <br> SleepIQ account.</h3><span class="input-tip">Please enter the information below about your bed.</span></div>').exists(b.get("models"), b, {
                        block: c
                    }, null).write('<div class="button-row"><div class="submit bed-pump-form">Next</div></div>')
                }

                function c(a, b) {
                    return a.write('<div class="input-wrapper bed-model"><label for="bedModel">Bed Model (Optional)</label><select name="bedModel" data-validation="').reference(b.getPath(!1, ["validations", "optional"]), b, "h").write('" data-validate-onload="false" needsclick><option value="" disabled selected></option>').section(b.getPath(!1, ["models", "models"]), b, {
                        block: d
                    }, null).write('</select><p class="error-message"></p></div><div class="input-wrapper bed-size"><label for="bedSize">Bed Size (Optional)</label><select name="bedSize" data-validation="').reference(b.getPath(!1, ["validations", "optional"]), b, "h").write('" data-validate-onload="false" needsclick><option value="" disabled selected></option>').section(b.getPath(!1, ["models", "sizes"]), b, {
                        block: e
                    }, null).write('</select><p class="error-message"></p></div><div class="input-wrapper bed-base"><label for="bedBase">Base Type (Optional)</label><select name="bedBase" data-validation="').reference(b.getPath(!1, ["validations", "optional"]), b, "h").write('" data-validate-onload="false" needsclick><option value="" disabled selected></option>').section(b.getPath(!1, ["models", "bases"]), b, {
                        block: f
                    }, null).write('</select><p class="error-message"></p></div>')
                }

                function d(a, b) {
                    return a.write('<option value="').reference(b.getPath(!0, []), b, "h").write('">').reference(b.getPath(!0, []), b, "h").write("</option>")
                }

                function e(a, b) {
                    return a.write('<option value="').reference(b.getPath(!0, []), b, "h").write('">').reference(b.getPath(!0, []), b, "h").write("</option>")
                }

                function f(a, b) {
                    return a.write('<option value="').reference(b.getPath(!0, []), b, "h").write('">').reference(b.getPath(!0, []), b, "h").write("</option>")
                }
                return a.register("templates/childviews/bed-pump-forms", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/bed-pump-forms", b, c)
                }
            }
        }), define("rdust!templates/childviews/bed-forms", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="setup-wrapper" data-bed-model="').reference(b.getPath(!1, ["bed", "model"]), b, "h").write('" data-is-child="').reference(b.getPath(!1, ["bed", "isChild"]), b, "h").write('"><form class="setup-form form" data-form="bed-setup" data-animate-labels="true"><div class="bed-time-zone"><h2>Which time zone is <br> your bed in?</h2><section class="section time-zone"><img src="/assets/img/usa-time-zone-alaska.png" style="display:none"><img src="/assets/img/usa-time-zone-central.png" style="display:none"><img src="/assets/img/usa-time-zone-eastern.png" style="display:none"><img src="/assets/img/usa-time-zone-hawaii.png" style="display:none"><img src="/assets/img/usa-time-zone-mountain.png" style="display:none"><img src="/assets/img/usa-time-zone-pacific.png" style="display:none"><!-- use image tags to avoid reloading images on click --><img src="http://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif" width="320" height="205" usemap="#usatimezonesmap" class="usa-map"><map id="usatimezonesmap" name="usatimezonesmap"><area id="pacific" shape="poly" alt="pacific" title="pacific" data-utc-offset="-8" coords="62.24,120.20, 62.16,124.21, 62.10,123.21, 62.05,122.21, 62.03,121.21, 62.02,120.21, 62.05,119.21, 62.11,118.21, 62.20,117.22, 62.36,116.23, 62.58,115.26, 62.90,114.31, 63.36,113.42, 64.01,112.66, 64.84,112.12, 65.79,111.80, 66.75,111.54, 67.50,110.92, 67.86,109.99, 68.14,109.03, 68.40,108.07, 68.64,107.09, 68.86,106.12, 69.08,105.14, 69.28,104.17, 69.49,103.19, 69.68,102.21, 69.87,101.22, 70.06,100.24, 70.24,99.26, 70.42,98.28, 70.60,97.29, 70.78,96.31, 70.95,95.32, 71.12,94.34, 71.28,93.35, 71.45,92.36, 71.61,91.38, 71.77,90.39, 71.92,89.40, 72.08,88.41, 72.23,87.42, 72.38,86.44, 72.53,85.45, 72.67,84.46, 72.81,83.47, 72.95,82.48, 73.08,81.49, 73.22,80.49, 73.34,79.50, 73.47,78.51, 73.58,77.52, 73.69,76.52, 73.80,75.53, 73.89,74.53, 73.97,73.54, 74.02,72.54, 74.01,71.54, 73.78,70.57, 73.33,69.67, 72.71,68.89, 71.97,68.23, 71.14,67.66, 70.27,67.18, 69.36,66.76, 68.43,66.40, 67.47,66.09, 66.51,65.82, 65.54,65.59, 64.56,65.39, 63.58,65.21, 62.59,65.07, 61.59,64.95, 60.60,64.86, 59.70,64.43, 58.87,63.88, 58.09,63.26, 57.35,62.58, 56.68,61.84, 56.06,61.05, 55.52,60.21, 55.05,59.33, 54.67,58.41, 54.36,57.46, 54.14,56.48, 54.00,55.49, 53.94,54.49, 53.96,53.49, 54.04,52.50, 54.18,51.51, 54.38,50.53, 54.65,49.57, 55.03,48.64, 55.57,47.80, 56.32,47.15, 57.26,46.82, 58.25,46.78, 59.25,46.87, 60.24,46.87, 61.04,46.32, 61.38,45.38, 61.96,44.57, 62.71,43.91, 63.54,43.36, 64.42,42.88, 65.32,42.45, 66.24,42.06, 67.18,41.71, 68.13,41.39, 69.08,41.09, 70.04,40.81, 71.01,40.56, 71.98,40.32, 72.93,40.02, 73.85,39.63, 74.74,39.18, 75.60,38.67, 76.43,38.10, 77.19,37.45, 77.88,36.73, 78.46,35.92, 78.89,35.02, 79.14,34.05, 79.17,33.05, 79.01,32.06, 78.82,31.08, 78.64,30.10, 78.48,29.11, 78.33,28.12, 78.19,27.13, 78.05,26.14, 77.91,25.15, 77.78,24.16, 77.65,23.17, 77.53,22.18, 77.41,21.18, 77.29,20.19, 77.17,19.20, 77.06,18.21, 76.94,17.21, 76.83,16.22, 76.73,15.22, 76.24,14.59, 75.25,14.42, 74.27,14.25, 73.28,14.08, 72.30,13.91, 71.31,13.73, 70.33,13.56, 69.34,13.38, 68.36,13.20, 67.38,13.02, 66.39,12.83, 65.41,12.64, 64.43,12.45, 63.45,12.25, 62.47,12.05, 61.49,11.85, 60.51,11.64, 59.54,11.42, 58.56,11.20, 57.59,10.96, 56.65,10.65, 55.83,10.08, 55.04,9.47, 54.26,8.84, 53.49,8.21, 52.70,7.58, 51.90,6.98, 51.07,6.43, 50.19,5.96, 49.26,5.59, 48.29,5.37, 47.29,5.35, 46.31,5.54, 45.37,5.90, 44.51,6.39, 43.98,7.19, 43.66,8.13, 43.28,9.06, 42.86,9.97, 42.36,10.83, 41.71,11.59, 40.80,11.98, 39.82,11.92, 38.86,11.65, 37.87,11.51, 36.87,11.55, 35.88,11.69, 34.91,11.94, 33.98,12.28, 33.08,12.73, 32.24,13.27, 31.47,13.90, 30.76,14.61, 30.12,15.38, 29.57,16.21, 29.09,17.09, 28.70,18.01, 28.39,18.96, 28.15,19.93, 28.00,20.92, 27.99,21.92, 28.14,22.91, 28.41,23.87, 28.61,24.84, 28.53,25.83, 28.26,26.79, 27.96,27.75, 27.66,28.70, 27.36,29.66, 27.05,30.61, 26.74,31.56, 26.42,32.51, 26.10,33.45, 25.77,34.40, 25.44,35.34, 25.10,36.28, 24.75,37.22, 24.39,38.15, 24.02,39.08, 23.64,40.01, 23.25,40.93, 22.86,41.85, 22.37,42.72, 21.86,43.57, 21.37,44.45, 20.89,45.33, 20.41,46.20, 20.08,47.14, 19.81,48.10, 19.59,49.08, 19.41,50.06, 19.27,51.05, 19.15,52.05, 19.04,53.04, 18.95,54.04, 18.86,55.03, 18.76,56.03, 18.65,57.02, 18.51,58.01, 18.34,59.00, 18.13,59.97, 17.71,60.88, 17.33,61.80, 16.98,62.74, 16.67,63.69, 16.41,64.65, 16.20,65.63, 16.04,66.62, 15.94,67.61, 15.90,68.61, 15.91,69.61, 15.96,70.61, 16.20,71.58, 16.41,72.56, 16.60,73.54, 16.78,74.52, 16.95,75.51, 17.11,76.50, 17.27,77.48, 17.45,78.47, 17.64,79.45, 17.85,80.43, 18.10,81.40, 18.41,82.34, 18.87,83.22, 19.36,84.09, 19.80,84.99, 20.19,85.91, 20.53,86.85, 20.81,87.81, 21.05,88.78, 21.25,89.76, 21.39,90.75, 21.49,91.74, 21.56,92.74, 21.58,93.74, 21.60,94.74, 21.68,95.73, 21.58,96.73, 21.56,97.73, 21.63,98.72, 21.76,99.71, 21.96,100.69, 22.21,101.66, 22.53,102.61, 22.89,103.54, 23.22,104.48, 23.56,105.42, 23.91,106.36, 24.28,107.29, 24.66,108.21, 25.04,109.14, 25.43,110.06, 25.83,110.98, 26.22,111.90, 26.61,112.82, 27.00,113.74, 27.38,114.66, 27.75,115.59, 28.28,116.40, 29.07,117.02, 29.86,117.63, 30.64,118.25, 31.42,118.88, 32.18,119.52, 32.94,120.18, 33.68,120.85, 34.41,121.53, 35.13,122.23, 35.83,122.94, 36.52,123.67, 37.18,124.41, 37.83,125.18, 38.45,125.96, 39.05,126.76, 39.59,127.60, 40.14,128.44, 40.34,129.42, 40.56,130.39, 40.82,131.36, 41.14,132.30, 41.54,133.22, 42.05,134.08, 42.69,134.84, 43.49,135.44, 44.41,135.82, 45.40,135.96, 46.40,135.90, 47.37,135.69, 48.33,135.38, 49.30,135.25, 50.30,135.31, 51.28,135.48, 52.27,135.63, 53.26,135.79, 54.22,136.05, 55.16,136.40, 56.07,136.81, 56.95,137.28, 57.82,137.78, 58.66,138.20, 59.36,137.48, 59.98,136.70, 60.52,135.86, 60.98,134.97, 61.36,134.04, 61.67,133.09, 61.92,132.13, 62.11,131.14, 62.24,130.15, 62.32,129.16, 62.35,128.16, 62.35,127.16, 62.31,126.16"/><area shape="poly" id="mountain" alt="mountain" title="mountain" data-utc-offset="-7" coords="125.60,149.82, 126.48,155.29, 127.39,155.70, 128.34,156.02, 129.32,156.20, 130.30,156.08, 131.00,155.40, 131.17,154.42, 131.07,153.43, 130.83,152.46, 130.53,151.50, 130.31,150.53, 130.16,149.54, 130.07,148.54, 130.01,147.54, 129.98,146.54, 129.98,145.54, 129.99,144.54, 130.02,143.54, 130.06,142.55, 130.11,141.55, 130.18,140.55, 130.25,139.55, 130.33,138.56, 130.42,137.56, 130.52,136.56, 130.63,135.57, 130.74,134.58, 130.86,133.58, 130.99,132.59, 131.12,131.60, 131.25,130.61, 131.40,129.62, 131.54,128.63, 131.70,127.64, 131.86,126.66, 132.02,125.67, 132.19,124.68, 132.37,123.70, 132.55,122.72, 132.74,121.73, 132.94,120.75, 133.15,119.78, 133.36,118.80, 133.59,117.83, 133.83,116.86, 134.09,115.89, 134.39,114.93, 134.73,114.00, 135.35,113.28, 136.24,112.86, 137.04,112.25, 137.78,111.58, 138.50,110.89, 139.19,110.17, 139.88,109.44, 140.54,108.69, 141.20,107.94, 141.85,107.18, 142.43,106.39, 142.54,105.39, 142.65,104.40, 142.76,103.40, 142.87,102.41, 142.97,101.42, 143.08,100.42, 143.19,99.43, 143.30,98.43, 143.41,97.44, 143.52,96.45, 143.63,95.45, 143.74,94.46, 143.85,93.46, 143.96,92.47, 144.03,91.47, 143.96,90.48, 143.92,89.48, 143.89,88.48, 143.87,87.48, 143.87,86.48, 143.89,85.48, 143.93,84.48, 144.00,83.48, 144.10,82.49, 144.25,81.50, 144.46,80.52, 144.77,79.57, 145.26,78.70, 145.88,77.92, 146.43,77.09, 146.92,76.21, 147.33,75.30, 147.65,74.36, 147.89,73.38, 148.04,72.40, 148.10,71.40, 148.07,70.40, 147.95,69.40, 147.76,68.42, 147.50,67.46, 147.20,66.51, 146.90,65.55, 146.89,64.62, 147.71,64.06, 148.24,63.22, 148.63,62.30, 148.93,61.35, 149.18,60.38, 149.43,59.41, 149.68,58.44, 149.93,57.47, 150.18,56.50, 150.43,55.54, 150.68,54.57, 150.93,53.60, 151.18,52.63, 151.43,51.67, 151.69,50.70, 151.94,49.73, 152.19,48.76, 152.45,47.80, 151.50,47.53, 150.55,47.19, 149.64,46.80, 148.75,46.34, 147.90,45.81, 147.10,45.21, 146.36,44.54, 145.70,43.79, 145.13,42.97, 144.67,42.08, 144.34,41.14, 144.12,40.16, 144.03,39.17, 143.92,38.17, 143.70,37.20, 143.30,36.28, 142.66,35.53, 141.79,35.03, 140.83,34.75, 139.86,34.53, 138.89,34.27, 137.95,33.93, 137.07,33.45, 136.27,32.85, 135.57,32.15, 135.00,31.33, 134.57,30.42, 134.28,29.47, 134.09,28.49, 133.98,27.49, 133.94,26.49, 133.96,25.49, 134.01,24.50, 134.11,23.50, 134.24,22.51, 134.34,21.56, 133.34,21.56, 132.34,21.57, 131.34,21.59, 130.34,21.62, 129.34,21.68, 128.35,21.60, 127.35,21.50, 126.36,21.39, 125.37,21.28, 124.37,21.16, 123.38,21.05, 122.39,20.93, 121.39,20.82, 120.40,20.70, 119.41,20.58, 118.41,20.47, 117.42,20.35, 116.43,20.23, 115.43,20.11, 114.44,19.99, 113.45,19.87, 112.46,19.74, 111.46,19.62, 110.47,19.50, 109.48,19.37, 108.49,19.25, 107.50,19.12, 106.50,18.99, 105.51,18.87, 104.52,18.74, 103.53,18.61, 102.54,18.48, 101.55,18.35, 100.55,18.21, 99.56,18.08, 98.57,17.95, 97.58,17.81, 96.59,17.68, 95.60,17.54, 94.61,17.40, 93.62,17.26, 92.63,17.12, 91.64,16.98, 90.65,16.84, 89.66,16.69, 88.67,16.55, 87.68,16.40, 86.69,16.25, 85.70,16.10, 84.72,15.95, 83.73,15.80, 82.74,15.65, 81.75,15.49, 80.76,15.33, 79.78,15.17, 78.79,15.01, 77.80,14.85, 76.82,14.69, 76.75,15.50, 76.86,16.50, 76.97,17.49, 77.08,18.49, 77.19,19.48, 77.30,20.47, 77.41,21.47, 77.53,22.46, 77.65,23.45, 77.77,24.45, 77.90,25.44, 78.03,26.43, 78.17,27.42, 78.32,28.41, 78.48,29.39, 78.65,30.38, 78.85,31.36, 79.07,32.33, 79.18,33.33, 79.09,34.32, 78.79,35.27, 78.31,36.15, 77.70,36.94, 76.99,37.64, 76.20,38.26, 75.37,38.81, 74.50,39.31, 73.60,39.74, 72.67,40.12, 71.71,40.39, 70.74,40.63, 69.78,40.89, 68.82,41.17, 67.86,41.48, 66.92,41.81, 65.99,42.17, 65.07,42.56, 64.17,43.00, 63.30,43.50, 62.49,44.08, 61.77,44.78, 61.27,45.64, 60.85,46.53, 59.94,46.88, 58.95,46.82, 57.95,46.72, 56.96,46.82, 56.06,47.25, 55.38,47.97, 54.90,48.85, 54.57,49.79, 54.32,50.76, 54.14,51.74, 54.01,52.73, 53.95,53.73, 53.95,54.73, 54.03,55.73, 54.19,56.72, 54.43,57.69, 54.75,58.63, 55.16,59.55, 55.64,60.42, 56.20,61.25, 56.83,62.02, 57.52,62.75, 58.27,63.41, 59.07,64.02, 59.91,64.55, 60.84,64.88, 61.83,64.99, 62.82,65.12, 63.81,65.28, 64.79,65.47, 65.77,65.68, 66.74,65.93, 67.69,66.21, 68.64,66.53, 69.57,66.91, 70.47,67.34, 71.34,67.84, 72.15,68.42, 72.87,69.11, 73.46,69.92, 73.86,70.83, 74.03,71.81, 74.01,72.81, 73.95,73.81, 73.87,74.81, 73.78,75.80, 73.67,76.80, 73.56,77.79, 73.45,78.79, 73.32,79.78, 73.20,80.77, 73.07,81.76, 72.93,82.75, 72.80,83.74, 72.66,84.73, 72.52,85.72, 72.37,86.71, 72.22,87.70, 72.07,88.69, 71.92,89.68, 71.76,90.67, 71.61,91.65, 71.45,92.64, 71.28,93.63, 71.12,94.61, 70.95,95.60, 70.78,96.59, 70.60,97.57, 70.43,98.55, 70.25,99.54, 70.06,100.52, 69.88,101.50, 69.68,102.48, 69.48,103.46, 69.28,104.44, 69.07,105.42, 68.85,106.40, 68.62,107.37, 68.37,108.34, 68.11,109.30, 67.80,110.25, 67.37,111.16, 66.50,111.62, 65.53,111.86, 64.60,112.22, 63.80,112.82, 63.20,113.61, 62.77,114.51, 62.47,115.46, 62.26,116.44, 62.13,117.43, 62.04,118.43, 62.00,119.43, 61.99,120.43, 62.00,121.43, 62.04,122.43, 62.10,123.43, 62.17,124.42, 62.25,125.42, 62.32,126.42, 62.35,127.42, 62.34,128.42, 62.29,129.42, 62.20,130.41, 62.05,131.40, 61.85,132.38, 61.59,133.34, 61.26,134.29, 60.87,135.21, 60.41,136.10, 59.88,136.94, 59.28,137.74, 58.85,138.47, 59.67,139.03, 60.49,139.61, 61.30,140.19, 62.11,140.78, 62.93,141.36, 63.75,141.93, 64.58,142.48, 65.38,143.08, 66.21,143.65, 67.05,144.19, 67.89,144.72, 68.74,145.25, 69.59,145.77, 70.45,146.28, 71.31,146.80, 72.15,147.34, 72.95,147.94, 73.76,148.52, 74.61,149.05, 75.49,149.54, 76.38,149.98, 77.30,150.37, 78.24,150.72, 79.19,151.02, 80.16,151.27, 81.14,151.47, 82.13,151.63, 83.12,151.73, 84.12,151.79, 85.12,151.84, 86.11,151.96, 87.10,152.06, 88.10,152.17, 89.09,152.27, 90.08,152.40, 91.08,152.53, 92.07,152.58, 93.07,152.57, 94.07,152.53, 95.07,152.45, 96.06,152.34, 97.05,152.20, 98.04,152.03, 99.02,151.84, 100.00,151.63, 100.98,151.46, 101.98,151.35, 102.97,151.34, 103.97,151.42, 104.96,151.59, 105.92,151.85, 106.86,152.19, 107.77,152.60, 108.65,153.08, 109.53,153.56, 110.48,153.84, 111.44,154.12, 112.37,154.49, 113.26,154.95, 114.09,155.50, 114.85,156.15, 115.52,156.89, 116.10,157.70, 116.59,158.58, 116.99,159.49, 117.34,160.43, 117.60,161.30, 118.18,160.48, 118.82,159.71, 119.50,158.99, 120.23,158.30, 121.00,157.66, 121.79,157.05, 122.62,156.48, 123.46,155.95, 124.33,155.45, 125.22,154.99" alt=""><area shape="poly" id="central" alt="central" title="central" data-utc-offset="-6" coords="241.54,121.46, 241.82,125.50, 241.99,124.52, 242.09,123.52, 242.14,122.52, 242.15,121.52, 242.12,120.52, 242.06,119.52, 241.98,118.53, 241.87,117.53, 241.75,116.54, 241.60,115.55, 241.44,114.56, 241.27,113.58, 241.07,112.60, 240.86,111.62, 240.63,110.65, 240.25,109.73, 239.60,108.98, 238.70,108.55, 237.71,108.43, 236.71,108.49, 235.72,108.63, 234.73,108.77, 233.74,108.78, 232.87,108.34, 232.63,107.38, 232.58,106.39, 232.46,105.39, 232.26,104.41, 232.01,103.45, 231.70,102.49, 231.35,101.56, 230.93,100.65, 230.45,99.78, 229.86,98.97, 229.05,98.41, 228.21,97.87, 227.49,97.18, 226.88,96.38, 226.38,95.52, 225.98,94.60, 225.68,93.65, 225.48,92.67, 225.36,91.68, 225.34,90.68, 225.38,89.68, 225.50,88.69, 225.68,87.70, 225.94,86.74, 226.29,85.80, 226.75,84.92, 227.34,84.11, 228.05,83.41, 228.89,82.87, 229.83,82.52, 230.42,82.11, 230.19,81.13, 229.97,80.16, 229.74,79.19, 229.51,78.21, 229.28,77.24, 229.05,76.26, 228.82,75.29, 228.59,74.32, 228.18,74.35, 227.58,75.15, 226.90,75.88, 226.10,76.47, 225.15,76.76, 224.20,76.51, 223.46,75.83, 222.92,75.00, 222.49,74.09, 222.14,73.16, 221.85,72.20, 221.60,71.23, 221.40,70.25, 221.23,69.27, 221.10,68.28, 220.99,67.28, 220.92,66.28, 220.88,65.29, 220.86,64.29, 220.87,63.29, 220.91,62.29, 220.96,61.29, 221.04,60.29, 221.14,59.30, 221.25,58.30, 221.39,57.31, 221.55,56.33, 221.73,55.34, 221.93,54.36, 222.21,53.40, 222.63,52.50, 223.09,51.61, 223.60,50.75, 224.13,49.90, 224.71,49.08, 225.31,48.29, 225.95,47.52, 226.63,46.79, 227.34,46.08, 228.09,45.42, 228.87,44.80, 229.69,44.22, 230.49,43.62, 231.25,42.98, 231.88,42.20, 232.34,41.31, 232.66,40.37, 232.86,39.39, 232.96,38.39, 233.00,37.39, 233.01,36.39, 232.03,36.37, 231.03,36.37, 230.03,36.37, 229.03,36.37, 228.07,36.58, 227.14,36.94, 226.20,37.29, 225.26,37.62, 224.31,37.93, 223.35,38.22, 222.38,38.47, 221.40,38.68, 220.42,38.83, 219.42,38.93, 218.42,38.96, 217.42,38.92, 216.43,38.81, 215.44,38.67, 214.44,38.66, 213.45,38.75, 212.46,38.89, 211.47,39.05, 210.49,39.24, 209.51,39.44, 208.53,39.64, 207.55,39.84, 206.56,40.01, 205.58,40.09, 204.59,39.96, 203.59,39.86, 202.60,39.76, 201.60,39.66, 200.61,39.54, 199.62,39.39, 198.93,39.02, 199.30,38.09, 199.77,37.21, 200.32,36.38, 200.93,35.59, 201.58,34.83, 202.25,34.08, 202.93,33.35, 203.63,32.63, 204.33,31.92, 205.04,31.21, 204.94,30.71, 203.98,30.42, 203.00,30.25, 202.00,30.20, 201.00,30.12, 200.01,29.99, 199.03,29.81, 198.06,29.58, 197.09,29.31, 196.14,29.01, 195.20,28.67, 194.29,28.26, 193.37,27.87, 192.43,27.52, 191.49,27.20, 190.53,26.91, 189.57,26.63, 188.60,26.37, 187.63,26.12, 186.67,25.86, 185.70,25.63, 184.72,25.39, 183.75,25.15, 182.78,24.91, 181.81,24.68, 180.84,24.45, 179.86,24.24, 178.88,24.05, 177.89,23.89, 176.90,23.77, 175.90,23.68, 174.90,23.64, 173.90,23.65, 172.90,23.70, 171.91,23.66, 170.91,23.57, 169.91,23.57, 168.92,23.52, 167.92,23.43, 166.92,23.34, 165.93,23.25, 164.93,23.16, 163.94,23.08, 162.94,22.99, 161.94,22.90, 160.95,22.81, 159.95,22.72, 158.95,22.64, 157.96,22.55, 156.96,22.47, 155.97,22.39, 154.97,22.31, 153.97,22.23, 152.97,22.16, 151.98,22.08, 150.98,22.01, 149.98,21.94, 148.98,21.88, 147.99,21.82, 146.99,21.76, 145.99,21.71, 144.99,21.66, 143.99,21.61, 142.99,21.57, 141.99,21.53, 140.99,21.50, 139.99,21.48, 138.99,21.46, 137.99,21.44, 136.99,21.43, 135.99,21.43, 134.99,21.43, 134.32,21.82, 134.17,22.81, 134.06,23.80, 133.98,24.80, 133.94,25.80, 133.95,26.80, 134.02,27.80, 134.16,28.79, 134.40,29.76, 134.74,30.70, 135.23,31.57, 135.86,32.34, 136.60,33.02, 137.42,33.58, 138.33,34.01, 139.28,34.31, 140.25,34.54, 141.22,34.77, 142.16,35.11, 142.96,35.71, 143.50,36.54, 143.81,37.49, 143.98,38.48, 144.06,39.47, 144.20,40.46, 144.47,41.43, 144.86,42.35, 145.36,43.21, 145.97,44.00, 146.67,44.71, 147.44,45.35, 148.26,45.92, 149.13,46.42, 150.03,46.85, 150.96,47.22, 151.91,47.53, 152.35,48.09, 152.11,49.06, 151.87,50.04, 151.63,51.01, 151.38,51.98, 151.13,52.94, 150.88,53.91, 150.63,54.88, 150.38,55.85, 150.13,56.82, 149.87,57.78, 149.61,58.75, 149.34,59.71, 149.07,60.67, 148.80,61.64, 148.47,62.58, 148.02,63.47, 147.35,64.20, 146.71,64.82, 146.98,65.78, 147.30,66.73, 147.61,67.68, 147.87,68.65, 148.04,69.63, 148.14,70.63, 148.14,71.63, 148.06,72.62, 147.87,73.61, 147.60,74.57, 147.24,75.50, 146.79,76.39, 146.27,77.25, 145.68,78.06, 145.07,78.85, 144.65,79.75, 144.38,80.71, 144.19,81.70, 144.06,82.69, 143.97,83.68, 143.91,84.68, 143.88,85.68, 143.87,86.68, 143.87,87.68, 143.89,88.68, 143.93,89.68, 143.98,90.68, 144.04,91.67, 143.94,92.67, 143.84,93.66, 143.74,94.66, 143.64,95.65, 143.54,96.65, 143.44,97.65, 143.34,98.64, 143.24,99.64, 143.14,100.63, 143.04,101.63, 142.94,102.62, 142.84,103.62, 142.74,104.61, 142.64,105.61, 142.54,106.60, 141.92,107.38, 141.27,108.14, 140.61,108.89, 139.94,109.63, 139.26,110.36, 138.56,111.08, 137.84,111.77, 137.09,112.44, 136.29,113.04, 135.38,113.41, 134.82,114.21, 134.48,115.15, 134.20,116.10, 133.94,117.07, 133.70,118.04, 133.47,119.01, 133.25,119.99, 133.05,120.97, 132.85,121.95, 132.66,122.93, 132.48,123.91, 132.30,124.90, 132.13,125.88, 131.97,126.87, 131.81,127.86, 131.66,128.85, 131.51,129.83, 131.37,130.82, 131.23,131.82, 131.10,132.81, 130.97,133.80, 130.86,134.79, 130.74,135.79, 130.64,136.78, 130.54,137.78, 130.45,138.77, 130.37,139.77, 130.29,140.76, 130.23,141.76, 130.18,142.76, 130.14,143.76, 130.11,144.76, 130.10,145.76, 130.11,146.76, 130.14,147.76, 130.20,148.76, 130.30,149.75, 130.45,150.74, 130.68,151.71, 130.97,152.67, 131.18,153.65, 131.25,154.64, 131.03,155.61, 130.29,156.24, 129.30,156.32, 128.32,156.12, 127.38,155.78, 126.47,155.36, 125.59,155.00, 124.69,155.44, 123.82,155.92, 122.96,156.44, 122.12,156.99, 121.31,157.57, 120.53,158.19, 119.78,158.85, 119.06,159.55, 118.40,160.29, 117.79,161.09, 117.96,162.01, 118.29,162.96, 118.63,163.90, 118.99,164.83, 119.38,165.76, 119.80,166.66, 120.26,167.55, 120.76,168.41, 121.31,169.25, 121.91,170.05, 122.53,170.83, 123.23,171.55, 123.97,172.22, 124.78,172.80, 125.66,173.28, 126.60,173.60, 127.59,173.73, 128.59,173.66, 129.55,173.39, 130.46,172.99, 131.31,172.46, 132.09,171.84, 133.04,171.51, 134.01,171.27, 135.00,171.13, 136.00,171.09, 136.99,171.16, 137.98,171.33, 138.94,171.61, 139.86,171.98, 140.75,172.44, 141.59,172.99, 142.37,173.61, 143.10,174.30, 143.76,175.05, 144.36,175.85, 144.91,176.68, 145.47,177.51, 145.74,178.47, 146.02,179.43, 146.35,180.37, 146.74,181.29, 147.17,182.19, 147.65,183.07, 148.16,183.93, 148.70,184.77, 149.26,185.60, 149.85,186.41, 150.45,187.21, 151.06,188.00, 151.67,188.79, 152.29,189.58, 152.74,190.45, 153.08,191.39, 153.12,192.39, 153.24,193.38, 153.47,194.35, 153.83,195.28, 154.35,196.14, 155.03,196.86, 155.85,197.45, 156.74,197.88, 157.69,198.20, 158.67,198.43, 159.65,198.59, 160.65,198.61, 161.65,198.61, 162.56,198.95, 163.46,199.37, 164.38,199.77, 165.31,200.10, 166.27,199.82, 166.92,199.39, 166.56,198.46, 166.06,197.61, 165.44,196.82, 164.86,196.01, 164.35,195.15, 163.90,194.26, 163.55,193.32, 163.30,192.35, 163.32,191.36, 163.54,190.39, 163.90,189.46, 164.32,188.55, 164.81,187.68, 165.36,186.85, 165.96,186.05, 166.62,185.29, 167.32,184.58, 168.08,183.94, 168.85,183.30, 169.69,182.75, 170.54,182.23, 171.40,181.71, 172.26,181.20, 173.12,180.70, 173.99,180.20, 174.86,179.70, 175.72,179.21, 176.59,178.71, 177.45,178.20, 178.31,177.69, 179.16,177.17, 180.01,176.63, 180.85,176.09, 181.67,175.53, 182.52,174.99, 183.38,174.49, 184.26,174.02, 185.16,173.58, 186.07,173.17, 187.00,172.78, 187.93,172.42, 188.87,172.07, 189.81,171.75, 190.76,171.44, 191.73,171.18, 192.71,171.01, 193.68,170.77, 194.67,170.61, 195.66,170.52, 196.66,170.50, 197.66,170.53, 198.66,170.62, 199.65,170.75, 200.64,170.91, 201.62,171.11, 202.59,171.34, 203.55,171.61, 204.53,171.45, 205.51,171.25, 206.50,171.07, 207.48,170.91, 208.48,170.79, 209.47,170.72, 210.47,170.71, 211.47,170.77, 212.46,170.91, 213.43,171.15, 214.37,171.49, 215.27,171.93, 216.12,172.46, 217.05,172.81, 218.02,173.01, 219.02,173.04, 220.02,173.11, 221.00,172.97, 221.97,172.76, 221.89,172.08, 221.49,171.16, 221.15,170.22, 220.91,169.25, 220.82,168.26, 220.95,167.27, 221.39,166.38, 222.13,165.73, 222.97,165.19, 223.85,164.71, 224.76,164.30, 225.70,163.95, 226.65,163.66, 227.63,163.43, 228.61,163.25, 229.60,163.12, 230.60,163.04, 231.60,163.00, 232.60,162.99, 233.60,163.03, 234.59,163.09, 235.57,162.90, 236.56,162.74, 237.52,162.47, 238.50,162.35, 239.50,162.38, 240.49,162.51, 241.47,162.72, 242.44,162.97, 243.39,163.26, 244.35,163.56, 245.31,163.85, 246.27,164.12, 247.24,164.34, 248.23,164.52, 249.07,164.45, 249.04,163.45, 248.98,162.45, 248.89,161.45, 248.77,160.46, 248.62,159.47, 248.44,158.49, 248.24,157.51, 248.02,156.53, 247.78,155.56, 247.52,154.60, 247.25,153.64, 246.95,152.68, 246.64,151.73, 246.31,150.79, 245.95,149.85, 245.61,148.91, 245.35,147.95, 245.09,146.98, 244.83,146.02, 244.58,145.05, 244.34,144.08, 244.10,143.11, 243.86,142.14, 243.62,141.16, 243.39,140.19, 243.17,139.22, 242.95,138.24, 242.74,137.26, 242.53,136.29, 242.33,135.31, 242.14,134.32, 241.96,133.34, 241.80,132.35, 241.65,131.37, 241.52,130.37, 241.42,129.38, 241.36,128.38, 241.37,127.38" alt=""><area shape="poly" id="eastern" name="eastern" title="eastern" data-utc-offset="-5" coords="323.22,22.46, 322.76,26.58, 322.43,25.63, 322.06,24.70, 321.65,23.79, 321.19,22.90, 320.68,22.04, 320.11,21.23, 319.46,20.46, 318.73,19.78, 317.93,19.18, 317.05,18.70, 316.12,18.35, 315.14,18.13, 314.15,18.03, 313.16,18.07, 312.40,18.53, 312.25,19.52, 312.10,20.51, 311.95,21.50, 311.81,22.49, 311.66,23.47, 311.51,24.46, 311.36,25.45, 311.22,26.44, 310.98,27.41, 310.89,28.40, 310.76,29.39, 310.54,30.37, 310.24,31.32, 309.88,32.26, 309.42,33.14, 308.91,34.00, 308.26,34.76, 307.54,35.46, 306.77,36.09, 305.96,36.67, 305.10,37.19, 304.22,37.66, 303.31,38.08, 302.39,38.45, 301.44,38.79, 300.49,39.09, 299.52,39.35, 298.55,39.59, 297.58,39.80, 296.59,39.99, 295.61,40.16, 294.67,40.48, 293.71,40.76, 292.78,41.13, 291.89,41.59, 291.05,42.13, 290.26,42.74, 289.52,43.42, 288.83,44.14, 288.19,44.91, 287.59,45.71, 287.02,46.53, 286.48,47.37, 285.96,48.22, 285.45,49.09, 284.79,49.83, 284.08,50.54, 283.38,51.24, 282.67,51.95, 281.96,52.66, 281.26,53.37, 280.55,54.07, 280.31,54.97, 280.31,55.97, 280.31,56.97, 280.31,57.97, 280.29,58.95, 279.29,58.87, 278.30,58.78, 277.30,58.70, 276.31,58.62, 275.31,58.53, 274.31,58.45, 273.32,58.36, 272.32,58.28, 271.37,58.28, 271.03,59.22, 270.69,60.16, 270.44,61.10, 270.72,62.06, 271.00,63.02, 271.28,63.98, 271.56,64.94, 271.84,65.90, 271.18,66.39, 270.25,66.76, 269.32,67.12, 268.38,67.49, 267.45,67.86, 266.52,68.22, 265.59,68.59, 264.66,68.96, 263.78,69.41, 262.92,69.93, 262.07,70.45, 261.22,70.97, 260.36,71.50, 259.51,72.02, 258.66,72.54, 257.91,73.17, 257.35,74.00, 256.80,74.83, 256.24,75.67, 255.69,76.50, 254.98,76.96, 253.99,76.79, 253.00,76.62, 252.02,76.45, 251.03,76.28, 250.10,75.93, 249.17,75.56, 248.24,75.19, 247.31,74.82, 247.39,73.93, 247.62,72.96, 247.86,71.98, 248.09,71.01, 248.45,70.08, 248.89,69.18, 249.33,68.28, 249.76,67.39, 250.20,66.49, 250.38,65.55, 250.22,64.56, 250.06,63.57, 249.90,62.59, 249.74,61.60, 249.46,60.64, 249.00,59.76, 248.25,59.10, 247.38,58.61, 246.44,58.28, 245.46,58.10, 244.46,58.07, 243.47,58.17, 242.50,58.41, 242.18,58.08, 242.54,57.15, 242.96,56.24, 243.41,55.34, 243.84,54.44, 244.22,53.52, 244.54,52.58, 244.88,51.67, 244.57,50.73, 244.25,49.78, 243.94,48.83, 243.52,47.96, 242.64,47.49, 241.76,47.02, 240.88,46.55, 239.99,46.08, 240.09,45.15, 240.29,44.17, 240.49,43.19, 240.69,42.21, 240.89,41.23, 240.05,41.41, 239.09,41.68, 238.11,41.92, 237.15,42.18, 236.31,42.56, 235.64,43.30, 234.92,43.99, 234.27,44.72, 234.44,45.71, 234.60,46.69, 234.75,47.68, 234.11,48.44, 233.47,49.21, 232.83,49.98, 232.18,50.74, 231.48,51.45, 230.77,52.16, 230.06,52.86, 229.47,53.63, 229.38,54.62, 229.28,55.62, 229.19,56.61, 229.10,57.61, 229.00,58.61, 228.91,59.60, 228.81,60.60, 228.74,61.59, 228.74,62.59, 228.74,63.59, 228.74,64.59, 228.74,65.59, 228.99,66.54, 229.41,67.45, 229.82,68.36, 229.91,69.32, 229.77,70.31, 229.63,71.30, 229.48,72.28, 229.03,73.17, 228.85,74.08, 229.07,75.05, 229.30,76.03, 229.53,77.00, 229.76,77.97, 229.99,78.95, 230.22,79.92, 230.45,80.89, 230.68,81.87, 230.06,82.27, 229.13,82.61, 228.28,83.14, 227.56,83.83, 226.97,84.63, 226.51,85.52, 226.16,86.46, 225.91,87.43, 225.75,88.41, 225.64,89.41, 225.59,90.41, 225.61,91.40, 225.72,92.40, 225.91,93.38, 226.20,94.34, 226.60,95.25, 227.10,96.12, 227.71,96.91, 228.42,97.61, 229.27,98.14, 230.10,98.66, 230.70,99.46, 231.19,100.33, 231.61,101.24, 231.96,102.18, 232.27,103.13, 232.51,104.10, 232.71,105.08, 232.83,106.07, 232.88,107.07, 233.07,108.04, 233.87,108.58, 234.87,108.62, 235.86,108.49, 236.85,108.35, 237.84,108.27, 238.84,108.35, 239.76,108.72, 240.46,109.43, 240.86,110.34, 241.10,111.31, 241.32,112.29, 241.51,113.27, 241.69,114.25, 241.85,115.24, 242.00,116.23, 242.12,117.22, 242.23,118.21, 242.31,119.21, 242.37,120.21, 242.40,121.21, 242.39,122.21, 242.35,123.21, 242.25,124.20, 242.08,125.19, 241.81,126.15, 241.62,127.13, 241.61,128.13, 241.68,129.12, 241.78,130.12, 241.92,131.11, 242.08,132.10, 242.25,133.08, 242.44,134.06, 242.64,135.04, 242.84,136.02, 243.06,137.00, 243.28,137.97, 243.51,138.95, 243.74,139.92, 243.98,140.89, 244.22,141.86, 244.47,142.83, 244.72,143.80, 244.98,144.76, 245.24,145.73, 245.50,146.70, 245.77,147.66, 246.04,148.62, 246.41,149.55, 246.76,150.49, 247.08,151.43, 247.39,152.38, 247.68,153.34, 247.96,154.30, 248.21,155.27, 248.45,156.24, 248.66,157.22, 248.86,158.20, 249.03,159.18, 249.17,160.17, 249.29,161.17, 249.37,162.16, 249.43,163.16, 249.50,164.10, 250.50,164.08, 251.50,163.98, 252.41,163.60, 253.31,163.19, 254.25,162.83, 255.21,162.57, 256.20,162.44, 257.20,162.46, 258.18,162.67, 259.09,163.09, 259.87,163.70, 260.56,164.42, 261.27,165.12, 261.94,165.87, 262.55,166.66, 263.11,167.49, 263.62,168.35, 264.07,169.24, 264.46,170.16, 264.79,171.10, 265.07,172.06, 265.29,173.04, 265.45,174.03, 265.79,174.96, 266.15,175.90, 266.51,176.83, 266.87,177.76, 267.23,178.69, 267.60,179.62, 267.99,180.54, 268.40,181.46, 268.84,182.36, 269.31,183.24, 269.81,184.10, 270.36,184.94, 270.92,185.76, 271.82,186.07, 272.79,186.31, 273.73,186.65, 274.63,187.07, 275.50,187.57, 276.32,188.14, 277.09,188.77, 277.83,189.45, 278.53,190.16, 279.21,190.89, 279.88,191.64, 280.54,192.39, 281.20,193.14, 281.88,193.88, 282.57,194.59, 283.16,193.78, 283.54,192.86, 283.45,191.88, 283.10,190.94, 282.76,190.00, 282.59,189.02, 282.98,188.13, 283.89,187.73, 283.30,187.46, 282.79,186.70, 283.07,185.74, 283.12,184.75, 282.93,183.77, 282.62,182.82, 282.32,181.87, 282.03,180.91, 281.76,179.95, 281.49,178.99, 281.21,178.03, 280.93,177.07, 280.62,176.12, 280.30,175.17, 279.94,174.24, 279.53,173.32, 279.13,172.41, 278.99,171.43, 278.84,170.44, 278.61,169.47, 278.30,168.52, 277.92,167.59, 277.46,166.70, 276.95,165.84, 276.40,165.01, 275.89,164.15, 275.48,163.24, 275.07,162.33, 274.72,161.40, 274.51,160.42, 274.29,159.44, 274.06,158.47, 273.84,157.49, 273.63,156.52, 273.42,155.54, 273.23,154.56, 273.06,153.57, 272.90,152.58, 272.78,151.59, 272.68,150.60, 272.62,149.60, 272.60,148.60, 272.62,147.60, 272.73,146.61, 273.24,145.82, 274.06,145.24, 274.86,144.64, 275.62,144.00, 276.36,143.32, 277.05,142.59, 277.70,141.83, 278.29,141.03, 278.84,140.19, 279.33,139.32, 279.77,138.42, 280.14,137.50, 280.47,136.55, 280.95,135.69, 281.66,135.00, 282.45,134.38, 283.23,133.76, 284.01,133.13, 284.77,132.49, 285.52,131.82, 286.25,131.14, 286.95,130.42, 287.61,129.68, 288.23,128.89, 288.80,128.07, 289.30,127.20, 289.75,126.31, 290.31,125.49, 291.08,124.87, 292.00,124.51, 292.90,124.07, 293.75,123.54, 294.53,122.92, 295.21,122.18, 295.78,121.36, 296.23,120.47, 296.59,119.54, 296.87,118.58, 297.14,117.62, 297.35,116.64, 297.54,115.66, 297.70,114.67, 297.83,113.68, 297.91,112.68, 297.95,111.68, 297.94,110.68, 297.89,109.68, 297.78,108.69, 297.62,107.70, 297.12,106.97, 296.22,106.53, 295.35,106.04, 294.52,105.48, 293.75,104.84, 293.04,104.14, 292.42,103.35, 291.89,102.50, 291.44,101.62, 291.14,100.66, 290.91,99.69, 290.74,98.70, 290.66,97.71, 290.66,96.71, 290.75,95.71, 290.96,94.73, 291.27,93.79, 291.70,92.88, 292.22,92.03, 292.83,91.24, 293.72,90.84, 294.66,90.49, 295.58,90.10, 296.47,89.65, 297.32,89.11, 298.10,88.49, 298.78,87.76, 299.34,86.93, 299.73,86.01, 300.25,85.16, 300.71,84.27, 301.10,83.35, 301.42,82.41, 301.66,81.44, 301.83,80.45, 301.95,79.46, 302.02,78.46, 302.02,77.46, 302.36,76.58, 302.94,75.76, 303.50,74.93, 304.03,74.08, 304.54,73.22, 305.03,72.36, 305.52,71.48, 306.00,70.60, 306.48,69.73, 306.96,68.85, 307.45,67.98, 307.96,67.12, 308.48,66.27, 309.04,65.44, 309.67,64.66, 310.57,64.51, 311.57,64.49, 312.57,64.39, 313.54,64.19, 314.49,63.86, 315.36,63.37, 316.11,62.72, 316.68,61.90, 317.04,60.97, 317.20,59.98, 317.19,58.98, 317.05,57.99, 316.81,57.02, 316.38,56.13, 315.77,55.33, 315.57,54.40, 315.69,53.41, 315.80,52.42, 315.91,51.42, 316.02,50.43, 316.14,49.43, 316.28,48.44, 316.45,47.46, 316.65,46.48, 317.10,45.60, 317.66,44.77, 318.33,44.03, 319.02,43.31, 319.72,42.60, 320.43,41.89, 321.14,41.19, 321.85,40.49, 322.55,39.77, 323.24,39.04, 323.90,38.29, 324.53,37.52, 325.13,36.72, 325.68,35.88, 326.27,35.08, 326.97,34.38, 327.72,33.71, 328.48,33.06, 329.24,32.41, 329.72,31.84, 328.83,31.46, 327.93,31.01, 327.05,30.54, 326.19,30.03, 325.36,29.47, 324.57,28.86, 323.84,28.18" alt=""><area shape="poly" id="alaska" name="alaska" title="alaska" data-utc-offset="-9" coords="1,137.573064, 1.26835295,187.801823, 39.8888147,192.52135, 77.9581945,174.640084, 38.0934057,126.70234, 6.43254985,122" alt=""><area shape="poly" id="hawaii" name="hawaii" title="hawaii" data-utc-offset="-10" coords="70.2569697,153.406092, 87.1179049,155.1458, 138.442463,184.787264, 138.442463,200.877985, 117.502701,200.877985, 97.6067647,191.88053, 83.2778949,176.392382" alt=""></map><div class="input-wrapper time-zone"><label for="timeZone">Time Zone</label><select name="timeZone" class="time" data-validation="').reference(b.getPath(!1, ["validations", "timeZone"]), b, "h").write('" needsclick><option value="" disabled selected></option><option data-utc-offset="-10"   value="US/Hawaii">US/Hawaii</option><option data-utc-offset="-9"    value="US/Alaska">US/Alaska</option><option data-utc-offset="-8"    value="US/Pacific">US/Pacific</option><option data-utc-offset="-7"    value="US/Arizona">US/Arizona</option><option data-utc-offset="-7"    value="US/Mountain">US/Mountain</option><option data-utc-offset="-6"    value="US/Central">US/Central</option><option data-utc-offset="-5"    value="US/Eastern">US/Eastern</option><option data-utc-offset="-5"    value="US/East-Indiana">US/East-Indiana</option></select></div><h2 class="time-zone">').reference(b.getPath(!1, ["bed", "tz"]), b, "h").write('</h2><span class="input-tip">Click on your bed time zone.</span></section><section class="section"><div class="input-wrapper zip-code"><input name="zipCode" type="number" data-validation="').reference(b.getPath(!1, ["validations", "zipCode"]), b, "h").write('" placeholder="Zip Code" pattern="\\d*" maxlength="5" needsclick/><span class="clear"></span><span class="input-tip">Enter the 5 digit zip code where your bed is being delivered.</span><p class="error-message"></p></div></section>').exists(b.getPath(!1, ["bed", "isPump"]), b, {
                        block: c
                    }, null).write("</div>").exists(b.getPath(!1, ["bed", "isPump"]), b, {
                        "else": d,
                        block: e
                    }, null).write("</form></div>")
                }

                function c(a) {
                    return a.write('<div class="button-row"><button class="big next-pumps">Next</button></div>')
                }

                function d(a) {
                    return a.write('<div class="button-row"><div class="submit">Next</div></div>')
                }

                function e(a, b) {
                    return a.write('<section class="bed-pump">').helper("include", b, {}, {
                        name: "templates/childviews/bed-pump-forms"
                    }).write("</section>")
                }
                return a.register("templates/childviews/bed-forms", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/bed-forms", b, c)
                }
            }
        }), define("rdust!templates/childviews/bed-list", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="subheader"><h2>Your Order</h2> <br><h3>Here are the beds you <br> have not set up.</h3> <br><span class="input-tip">Please choose a bed to continue setup.</span></div><div class="bed-list-test"><ul class="bed-ordered-list view ').exists(b.get("bed-had-been-set-up"), b, {
                        block: c
                    }, null).write('">').section(b.get("beds"), b, {
                        block: d
                    }, null).write("</ul></div>")
                }

                function c(a) {
                    return a.write("show-dashboard")
                }

                function d(a, b) {
                    return a.exists(b.get("isSetup"), b, {
                        "else": e,
                        block: h
                    }, null)
                }

                function e(a, b) {
                    return a.write('<li class="bed-list-item" data-type="').reference(b.get("type"), b, "h").write('" data-bed-size="').reference(b.get("size"), b, "h").write('" data-bed-id="').reference(b.get("bed-id"), b, "h").write('" data-index="').reference(b.get("idx"), b, "h").write('"><div class="bed-image"><span data-type="').reference(b.get("type"), b, "h").write('" data-bed-size="').reference(b.get("size"), b, "h").write('" data-kids-bed="').reference(b.get("isKidsBed"), b, "h").write('" data-dual-chamber-bed="').exists(b.get("dualSleep"), b, {
                        "else": f,
                        block: g
                    }, null).write('" ></span></div><div class="bed-copy"><section><span class="model">').reference(b.get("model"), b, "h").write("</span> ").reference(b.get("size"), b, "h").write(" Bed</section></div></li>")
                }

                function f(a) {
                    return a.write("false")
                }

                function g(a) {
                    return a.write("true")
                }

                function h(a) {
                    return a
                }
                return a.register("templates/childviews/bed-list", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/bed-list", b, c)
                }
            }
        }), define("app/ui/views/childviews/SetupBedView", ["require", "lavaca/mvc/View", "lavaca/mvc/Router", "app/models/StateModel", "app/ui/widgets/FormValidator", "app/models/AccountModel", "mout/string/interpolate", "app/models/AuthModel", "app/utils/ZipCodes", "app/models/BedCollection", "app/models/FamilyModel", "rdust!templates/childviews/setup-bed", "app/models/validations/setup-bed", "app/env/Config", "app/utils/MixPanelManager", "mout/object/get", "$", "rdust!templates/childviews/bed-pump-forms", "rdust!templates/childviews/bed-forms", "rdust!templates/childviews/bed-list"], function(a) {
            function b(a) {
                if (!a) return !1;
                var b = !0;
                return a.forEach(function(a, c) {
                    a.idx = c, "0" === a.sleeperLeftId && "0" === a.sleeperRightId ? (a.isSetup = !1, b = !1) : a.isSetup = !0
                }), this.model.set("bed-had-been-set-up", b), a
            }

            function c() {
                this.model.setRegistrationState("13"), x.exec("/")
            }

            function d() {
                this.model.checkIfRegistrationCacheIsPump(), this.model.updateBedFromRegistrationCache(), this.render().then(function() {
                    I(".still-loading").hide();
                    var a = this.model ? this.model.get("bed") : !1;
                    a && this.el.addClass("bed-selected"), this.el.find(".setup-form").trigger("validateOnload"), h.call(this), r.call(this)
                }.bind(this)), this.model.allBedsSetUpCheck() && (this.el.addClass("all-beds-set-up"), x.exec("/"))
            }

            function e() {
                x.exec("/modals/wifi-setup")
            }

            function f() {
                this.render(".wifi,.wifi-download")
            }

            function g() {
                var a = this.model ? this.model.get("bed") : !1,
                    b = this.model ? this.model.get("beds") : !1;
                b ? (this.model.get("selectedBedId") && !a && (a = this.model.getSelectedBedFromId(this.model.get("selectedBedId"))), a ? (this.el.addClass("bed-selected"), this.el.find(".still-loading") ? d.call(this) : (this.el.find(".bed-name input").val(a.name), this.el.find(".setup-form").trigger("validateOnload"), this.model.updateBedFromRegistrationCache())) : d.call(this)) : this.fetch().then(function() {
                    d.call(this)
                }.bind(this), function() {
                    window.customAlert.alert("There was trouble retrieving your bed from the server")
                })
            }

            function h() {
                setTimeout(function() {
                    var a = this.el.find(".zip-code input");
                    if (this.model.get("zipCode") && this.model.get("timeZone")) {
                        a.val(this.model.get("zipCode")), a.siblings().closest("label").addClass("reveal");
                        var b = this.el.find(".time-zone option");
                        for (var c in b) {
                            var d = b[c];
                            d.value === this.model.get("timeZone") && (this.el.find("select.time").val(d.dataset.value).siblings("label").addClass("reveal"), I(d).attr("selected", "selected"), this.el.find(".time")[0].selectedIndex = parseInt(c))
                        }
                        k.call(this, this.model.get("zipCode"))
                    } else if (H(this.model.get("bed"), "zipcode")) try {
                        var e = this.model.get("bed").zipcode.slice(0, 5);
                        e && (a.val(e), a.siblings().closest("label").addClass("reveal"), H(this.model.get("bed"), "timeZone") || k.call(this, e))
                    } catch (f) {
                        return
                    }
                }.bind(this), 300)
            }

            function i(a) {
                try {
                    var b = B.zip.indexOf(parseInt(a)),
                        c = B.timezone[b];
                    return c
                } catch (d) {
                    return !1
                }
            }

            function j(a) {
                try {
                    var b = H(a, "currentTarget.value");
                    5 === b.length && "number" == typeof parseInt(b) && k.call(this, parseInt(b))
                } catch (c) {
                    return console.error(c), void 0
                }
            }

            function k(a) {
                var b = i(a);
                if ("number" == typeof b) {
                    var c = this.el.find(".time-zone option"),
                        d = !1;
                    for (var e in c) {
                        var f = c[e],
                            g = parseInt(f.dataset.utcOffset);
                        if (d) return;
                        "number" == typeof g && g === b && (d = !0, this.el.find("select.time").val(f.dataset.value).siblings("label").addClass("reveal"), I(f).attr("selected", !0).attr("selected", !1), this.el.find(".time")[0].selectedIndex = parseInt(e), this.el.find(".usa-map").removeClass().addClass("usa-map utc" + b), this.model.get("bed").tz = f.value.slice(3), this.render("h2.time-zone"))
                    }
                }
            }

            function l(a) {
                a.preventDefault(), a.stopPropagation();
                var b = I(a.currentTarget);
                if (!b.hasClass("disabled")) {
                    if (b.addClass("disabled"), this.model.get("bed") && this.model.get("bed").bedId && !this.model.get("selectedBedId")) {
                        var c = this.model.get("bed").bedId.slice(this.model.get("bed").bedId.length - 5);
                        this.model.setRegistrationState("12" + c)
                    }
                    this.el.find(".setup-form").trigger("validateForm", function(a) {
                        a ? this.hasBeenSubmitted ? this.isValid().then(function() {
                            b.removeClass("disabled"), this.model.trigger("newBed"), this.model.trigger("nextSection")
                        }.bind(this)) : n.call(this).then(function() {
                            o.call(this).then(function() {
                                this.hasBeenSubmitted = !0, b.removeClass("disabled"), this.model.trigger("newBed"), b.hasClass("bed-pump-form") ? G.prototype.trackBedInfo(this.model.toObject()) : G.prototype.trackBedDetailsAdd(this.model.toObject(), "AddSleeper"), this.model.trigger("nextSection")
                            }.bind(this))
                        }.bind(this)) : b.removeClass("disabled")
                    }.bind(this))
                }
            }

            function m() {
                G.prototype.trackBedDetailsAdd(this.model.toObject(), "AddSleeper"), I(".bed-time-zone").hide(), I(".bed-pump").show()
            }

            function n() {
                return this.model.getSleepers().then(function() {
                    var a = this.model.get("sleepers"),
                        b = this.model.get("bed").bedId;
                    if (a)
                        for (var c = 0; c < a.length; c++) a[c].bedId === b && (1 === a[c].side ? this.model.set("rightSleeper", a[c]) : 0 === a[c].side && this.model.set("leftSleeper", a[c]))
                }.bind(this), function() {
                    window.customAlert.alert("There was trouble authenticating. Please try again.")
                }.bind(this))
            }

            function o() {
                return new Promise(function(a, b) {
                    var c = this.el.find(".zip-code input").val(),
                        d = this.el.find(".time-zone select option:selected").text(),
                        e = this.el.find(".bed-size select option:selected").text(),
                        f = this.el.find(".bed-base select option:selected").text(),
                        g = this.el.find(".bed-model select option:selected").text();
                    if (this.model.set("zipCode", c), this.model.set("timeZone", d), e && "" !== e && this.model.set("bedSize", e), f && "" !== f && this.model.set("bedBase", f), g && "" !== g && this.model.set("bedModel", g), !this.model || !this.model.get("bed")) return window.customAlert.alert("An error occurred while attempting to update your bed name. Please try again."), b();
                    var h = this.el.find(".bed-name input").val();
                    this.model.set("bedName", h), this.model.get("bed").name = h;
                    var i = {
                        name: h,
                        zipcode: c,
                        timezone: d
                    };
                    e && "" !== e && (i.size = e), f && "" !== f && (i.base = f), g && "" !== g && (i.model = g), A.updateBed(this.model.get("bed").bedId, i).then(function() {
                        return a()
                    }.bind(this), function(a) {
                        return console.log(a), window.customAlert.alert("An error occurred while attempting to update your bed name. Please try again."), b()
                    })
                }.bind(this))
            }

            function p() {
                if (this.model && this.model.get("bed")) {
                    var a = this.model.get("bed"),
                        b = {
                            name: this.el.find(".section.bed-name input").val()
                        },
                        c = this.el.find(".zip-code input").val(),
                        d = this.el.find(".time-zone select option:selected").text();
                    return a.name !== b.name || this.model.get("zipCode") !== c || this.model.get("timeZone") !== d
                }
                return !1
            }

            function q(a) {
                var b = a.currentTarget.dataset.index;
                this.model.set("bedIndex", b), this.model.set("canAddSecondSleeper", !1), this.el.addClass("bed-selected"), this.model.get("beds")[b] && "PUMP" === this.model.get("beds")[b].name && (this.model.get("beds")[b].isPump = !0, delete this.model.get("beds")[b].name, this.model.get("models") && (this.model.get("beds")[b].models = this.model.get("models"))), this.model.set("bed", this.model.get("beds")[b]), G.prototype.trackBedList(this.model.toObject()), this.model.checkIfRegistrationCacheIsPump(), this.model.updateBedFromRegistrationCache(), this.render("#bed-wrapper"), this.model.trigger("newBed"), setTimeout(function() {
                    this.el.find(".setup-form").trigger("validateOnload"), h.call(this), r.call(this)
                }.bind(this), 100)
            }

            function r() {
                if (this.model && this.model.get("bedBase")) {
                    var a = this.el.find(".bed-base select"),
                        b = this.el.find(".bed-base select option");
                    for (var c in b) {
                        var d = b[c];
                        d.text === this.model.get("bedBase") && (a && a.val(d.dataset.value).siblings("label").addClass("reveal"), I(d).attr("selected", "selected"), a && (a[0].selectedIndex = parseInt(c)))
                    }
                }
                if (this.model && this.model.get("bedSize")) {
                    var e = this.el.find(".bed-size select"),
                        f = this.el.find(".bed-size select option");
                    for (var g in f) {
                        var h = f[g];
                        h.text === this.model.get("bedSize") && (e && e.val(h.dataset.value).siblings("label").addClass("reveal"), I(h).attr("selected", "selected"), e && (e[0].selectedIndex = parseInt(g)))
                    }
                }
                if (this.model && this.model.get("bedModel")) {
                    var i = this.el.find(".bed-model select"),
                        j = this.el.find(".bed-model select option");
                    for (var k in j) {
                        var l = j[k];
                        l.text === this.model.get("bedModel") && (i && i.val(l.dataset.value).siblings("label").addClass("reveal"), I(l).attr("selected", "selected"), i && (i[0].selectedIndex = parseInt(k)))
                    }
                }
            }

            function s(a) {
                if (a || a.currentTarget) {
                    var b = this.el.find(a.currentTarget);
                    b && !b.hasClass("disabled") && (b.addClass("disabled"), this.model && this.model.get("bed") && (this.model.set("zipCode", this.el.find(".zip-code input").val()), this.model.set("timeZone", this.el.find(".time-zone select option:selected").text()), this.model.set("bedName", this.el.find(".bed-name input").val()), this.model.set("bedSize", this.el.find(".bed-size select option:selected").text()), this.model.set("bedBase", this.el.find(".bed-base select option:selected").text()), this.model.set("bedModel", this.el.find(".bed-model select option:selected").text()), this.model.updateRegistrationCache().then(function() {
                        if (G.prototype.trackBedDetailsAdd(this.model.toObject(), "SaveAndFinishLater"), this.model.get("bed") && this.model.get("bed").bedId && !this.model.get("selectedBedId")) {
                            var a = this.model.get("bed").bedId.slice(this.model.get("bed").bedId.length - 5);
                            this.model.setRegistrationState("12" + a)
                        }
                        window.customAlert.alert("Your settings have been saved. Return to this screen to complete the setup.", null, "SleepIQ®"), this.model && this.model.get("selectedBedId") ? D.fetch().then(function() {
                            b.removeClass("disabled"), C.fetch(), this.model.setRegistrationState("13"), x.exec("/")
                        }.bind(this), function() {
                            b.removeClass("disabled"), this.model.setRegistrationState("13"), x.exec("/")
                        }.bind(this)) : b.removeClass("disabled")
                    }.bind(this), function() {
                        b.removeClass("disabled"), window.customAlert.alert("There was trouble saving your information to the server. Try again.", null, "SleepIQ®")
                    }.bind(this))))
                }
            }

            function t(a) {
                var b = this.el.find("label#bed-name-label");
                if (I(a.currentTarget) && I(a.currentTarget)[0]) {
                    var c = I(a.currentTarget)[0].selectionStart;
                    c > 0 ? b.text("Bed Name") : 0 == c && b.text("Give your bed a name")
                }
                I(a.currentTarget).hasClass("clear") && b.text("Give your bed a name")
            }

            function u(a) {
                D.getSleepers().then(function(b) {
                    G.prototype.trackAccountRegistrationInitiation(null, Array.isArray(b) ? b.map(function(a) {
                        return a.toObject()
                    }) : null, a)
                }.bind(this), function() {
                    G.prototype.trackAccountRegistrationInitiation(null, null, a)
                }.bind(this))
            }

            function v(a) {
                a.preventDefault(), a.stopPropagation();
                var b = a.currentTarget.id,
                    c = a.currentTarget.dataset.utcOffset;
                I(".usa-map").removeClass().addClass("usa-map " + b);
                var d = this.el.find(".time-zone option"),
                    e = !1;
                for (var f in d) {
                    var g = d[f],
                        h = g.dataset.utcOffset;
                    if (e) return;
                    h === c && (e = !0, this.el.find("select.time").val(g.dataset.value).siblings("label").addClass("reveal"), I(g).attr("selected", !0).attr("selected", !1), this.el.find(".time")[0].selectedIndex = parseInt(f), this.model.get("bed").tz = b, this.render("h2.time-zone"))
                }
            }
            var w = a("lavaca/mvc/View"),
                x = a("lavaca/mvc/Router"),
                y = a("app/models/StateModel"),
                z = a("app/ui/widgets/FormValidator"),
                A = a("app/models/AccountModel"),
                B = (a("mout/string/interpolate"), a("app/models/AuthModel"), a("app/utils/ZipCodes")),
                C = a("app/models/BedCollection"),
                D = a("app/models/FamilyModel"),
                E = a("rdust!templates/childviews/setup-bed"),
                F = a("app/models/validations/setup-bed"),
                G = (a("app/env/Config"), a("app/utils/MixPanelManager")),
                H = a("mout/object/get"),
                I = a("$");
            a("rdust!templates/childviews/bed-pump-forms"), a("rdust!templates/childviews/bed-forms"), a("rdust!templates/childviews/bed-list");
            var J = w.extend(function() {
                w.apply(this, arguments), this.mapEvent({
                    self: {
                        focused: g.bind(this)
                    },
                    model: {
                        wifiChanged: f
                    },
                    ".wifi-btn": {
                        tap: e
                    },
                    ".submit": {
                        tap: l
                    },
                    ".next-pumps": {
                        tap: m
                    },
                    ".zip-code input": {
                        keyup: j
                    },
                    ".bed-list-item": {
                        tap: q
                    },
                    ".dashboard": {
                        tap: c
                    },
                    ".save": {
                        tap: s
                    },
                    "span.clear": {
                        tap: t
                    },
                    "input#bed-name": {
                        keyup: t
                    },
                    area: {
                        tap: v
                    },
                    ext: {
                        stateModel: {
                            object: y,
                            events: {
                                formValidationRun: n.bind(this)
                            }
                        }
                    }
                }), this.mapWidget({
                    ".setup-form": {
                        TWidget: z
                    }
                })
            }, {
                className: "bed-setup",
                autoRender: !0,
                hasBeenSubmitted: !1,
                isFetching: !1,
                fetchPromise: new I.Deferred,
                isValidPromise: new I.Deferred,
                generateHtml: function(a) {
                    return a && (a.validations = F), new Promise(function(b) {
                        E.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    this.fetchPromise = new I.Deferred, setTimeout(function() {
                        h.call(this)
                    }.bind(this), 200), this.model && this.model.get("selectedBedId") && g.call(this), this.model && this.model.get("skipActivation") && g.call(this), w.prototype.onRenderSuccess.apply(this, arguments)
                },
                fetch: function() {
                    return this.model && this.model.get("beds") ? Promise.resolve() : this.isFetching ? this.fetchPromise : (this.isFetching = !0, this.fetchPromise = new I.Deferred, A.getBeds().then(function(a) {
                        if (this.isFetching = !1, a && a.beds && a.beds.length > 0) {
                            var c = !1;
                            if ("number" == typeof this.model.get("bedIndex")) {
                                var d = this.model.get("bedIndex");
                                !a.beds[d] || "PUMP" !== a.beds[d].name && "PUMP" !== a.beds[d].model || (a.beds[d].isPump = !0, delete a.beds[d].name, delete a.beds[d].model), c = a.beds[d]
                            } else a && a.beds && 1 === a.beds.length && (!a.beds[0] || "PUMP" !== a.beds[0].name && "PUMP" !== a.beds[0].model || (a.beds[0].isPump = !0, delete a.beds[0].name, delete a.beds[0].model), "0" === a.beds[0].sleeperLeftId && "0" === a.beds[0].sleeperRightId && (c = a.beds[0], this.model.set("bedIndex", 0), this.el.addClass("bed-selected")));
                            this.model.set("beds", a.beds), this.model.set("bedsToSetup", b.call(this, a.beds)), this.model.getBedIfSavedToFinishLater() && (c = this.model.getBedIfSavedToFinishLater()), this.model.get("selectedBedId") && !c && (c = this.model.getSelectedBedFromId(this.model.get("selectedBedId"))), this.model.set("bed", c), c.timezone && (this.model.get("bed").tz = c.timezone.slice(3)), this.model.highlightCorrectViewFromCache(), G.prototype.setRegistrationPath("Register Action"), u.call(this, this.model.toObject()), A.getBedModels().then(function(a) {
                                this.model.set("models", a), this.model.trigger("newBed"), this.isFetching = !1, this.fetchPromise.resolve()
                            }.bind(this), function(a) {
                                a = "string" == typeof a ? a : H(a, "responseJSON.Error.Message"), window.customAlert.alert(a), this.isFetching = !1, this.fetchPromise.reject()
                            }.bind(this))
                        }
                    }.bind(this), function() {
                        this.isFetching = !1, this.fetchPromise.reject()
                    }.bind(this)), this.fetchPromise)
                },
                isValid: function() {
                    return this.isValidPromise = new I.Deferred, this.hasBeenSubmitted && p.call(this) ? window.customAlert.confirm("You have made changes that have not been saved yet. Would you like to save these?", this.validResolver.bind(this)) ? this.validResolver(!0) : this.isValidPromise.resolve() : this.isValidPromise.resolve(), this.isValidPromise
                },
                validResolver: function(a) {
                    "boolean" == typeof a && a || "number" == typeof a && 2 === a ? o.call(this).then(function() {
                        this.isValidPromise.resolve()
                    }.bind(this)) : this.isValidPromise.resolve()
                }
            });
            return J
        }), define("app/models/validations/setup-profile", ["require"], function() {
            return {
                sleepGoal: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                firstName: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }, {
                        type: "length",
                        max: 256
                    }]
                }),
                birthYear: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                birthMonth: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                height: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                weight: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                isMale: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "required"
                    }]
                }),
                email: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "email",
                        message: "Please enter a valid email format"
                    }, {
                        type: "required",
                        message: "Your email cannot be empty."
                    }, {
                        type: "exclude",
                        exclusions: [" "]
                    }]
                }),
                password: {
                    criteria: JSON.stringify({
                        validated: !1,
                        rules: [{
                            type: "required",
                            message: "Your email cannot be empty."
                        }, {
                            type: "exclude",
                            exclusions: [" "],
                            message: "Password cannot contain white space."
                        }, {
                            type: "number",
                            message: "Your password must contain a number."
                        }, {
                            type: "uppercase",
                            message: "Your password must contain an uppercase letter."
                        }, {
                            type: "length",
                            min: 8,
                            max: 30,
                            message: "Your password must be between 8 and 30 characters in length."
                        }]
                    })
                },
                confirmPassword: JSON.stringify({
                    validated: !1,
                    rules: [{
                        type: "match",
                        match: "password",
                        message: "The passwords do not match."
                    }]
                })
            }
        }), define("rdust!templates/childviews/setup-profile", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="child-wrapper" data-kids-bed="').reference(b.getPath(!1, ["bed", "isKidsBed"]), b, "h").write('">').exists(b.get("bed"), b, {
                        block: c
                    }, null).write('<!-- <div class="bed-wrapper">').exists(b.get("bed"), b, {
                        "else": d,
                        block: e
                    }, null).write('</div> --><form class="profile-form primary half ').exists(b.get("swapped"), b, {
                        "else": h,
                        block: i
                    }, null).write(' form" data-kids-bed="').reference(b.getPath(!1, ["bed", "isKidsBed"]), b, "h").write('" data-form="primary" data-animate-labels="true" autocomplete="off">').partial("templates/childviews/add-sleeper", b, null).exists(b.get("bed"), b, {
                        block: j
                    }, null).write('<div class="section auth-options-primary"><div class="create-account-header">Create account for this sleeper. <span class="create-account">Create an individual account to allow managing sleep, setting their beds Sleep Number, and more on their own device.</span> </div><div class="input-wrapper"><input autocomplete="off" name="email" class="skip" type="email" placeholder="Email" data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" maxlength="256" needsclick/><span class="clear"></span><span class="input-tip">Please enter email address.</span><p class="error-message"></p></div><div class="indicator"></div><div class="input-wrapper"><input autocomplete="new-password" name="password" class="skip" placeholder="Password" autocorrect="off" autocomplete="off" type="password" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "password", "criteria"]), b, "h").write('" needsclick/><span class="clear"></span><span class="input-tip">Password must contain at least 8 characters including one uppercase letter, one lowercase letter and one number.</span><p class="error-message"></p></div></div><div class="button-row"><div class="submit">Next</div></div></form><!-- <div class="various-forms-wrapper">').exists(b.get("bed"), b, {
                        block: o
                    }, null).write("</div> --></div>")
                }

                function c(a) {
                    return a.write("<h3>Tell us a little bit about yourself to <br> get the most accurate sleep data.</h3>")
                }

                function d(a) {
                    return a.write('<h2 class="loading" style="text-align:center;">Loading...</h2>')
                }

                function e(a, b) {
                    return a.exists(b.getPath(!1, ["bed", "isKidsBed"]), b, {
                        "else": f,
                        block: g
                    }, null)
                }

                function f(a, b) {
                    return a.partial("templates/childviews/adult-beds-form-header", b, null)
                }

                function g(a, b) {
                    return a.partial("templates/childviews/child-bed-form-header", b, null)
                }

                function h(a) {
                    return a.write("right active")
                }

                function i(a) {
                    return a.write("left")
                }

                function j(a, b) {
                    return a.exists(b.getPath(!1, ["bed", "isKidsBed"]), b, {
                        "else": k,
                        block: n
                    }, null)
                }

                function k(a, b) {
                    return a.exists(b.get("canBeAccountOwner"), b, {
                        "else": l,
                        block: m
                    }, null)
                }

                function l(a) {
                    return a.write('<div class="section"><div class="input-wrapper clearfix"><input id="primaryAuthToggle" type="checkbox"/><label for="primaryAuthToggle" class="authLabel">Add login for this user</label></div></div>')
                }

                function m(a) {
                    return a.write('<section class="section account-login"><div class="input-wrapper clearfix"><input id="loginUse" type="checkbox"/><label for="loginUse">Use my account info as login for this sleeper</label></div></section><div class="section use-login not-primary"><div class="input-wrapper clearfix"><input id="primaryAuthToggle" type="checkbox"/><label for="primaryAuthToggle" class="authLabel">Add login for this user</label></div></div>')
                }

                function n(a) {
                    return a.write('<div class="section"><div class="input-wrapper clearfix"><input id="primaryAuthToggle" type="checkbox"/><label for="primaryAuthToggle" class="authLabel">Add login for this user</label></div></div>')
                }

                function o(a, b) {
                    return a.exists(b.getPath(!1, ["bed", "isKidsBed"]), b, {
                        "else": p,
                        block: q
                    }, null)
                }

                function p(a, b) {
                    return a.partial("templates/childviews/profile-forms", b, null)
                }

                function q(a, b) {
                    return a.partial("templates/childviews/profile-forms-child", b, null)
                }
                return a.register("templates/childviews/setup-profile", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/setup-profile", b, c)
                }
            }
        }), define("rdust!templates/childviews/add-sleeper", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="section"><div class="input-wrapper"><label for="birthYear">Birth Year</label>').partial("templates/formoptions/birthyear", b, {
                        validation: c
                    }).write('<p class="error-message"></p></div>').exists(b.getPath(!1, ["bed", "isKidsBed"]), b, {
                        block: d
                    }, null).write('<div class="input-wrapper"><label for="height">Height</label>').partial("templates/formoptions/height", b, {
                        validation: f
                    }).write('<p class="error-message"></p></div><div class="input-wrapper"><label for="weight">Weight</label>').partial("templates/formoptions/weight", b, {
                        validation: g
                    }).write('<p class="error-message"></p></div></div><div class="section"><div class="input-wrapper radio-inputs"><input id="male" name="isMale" type="radio" value="Male" data-validation="').reference(b.getPath(!1, ["validations", "isMale"]), b, "h").write('"><label for="male" class="reveal">Male</label><input id="female" name="isMale" type="radio" value="Female" data-validation="').reference(b.getPath(!1, ["validations", "isMale"]), b, "h").write('" checked="true"/><label for="female" class="reveal">Female</label><p class="error-message"></p></div></div><h3>How many hours of sleep do you want <br> to get each night?</h3><div class="section"><div class="input-wrapper"><label for="sleepGoal">Hours of sleep</label>').exists(b.getPath(!1, ["bed", "isKidsBed"]), b, {
                        "else": h,
                        block: i
                    }, null).write('<p class="error-message"></p></div></div>')
                }

                function c(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "birthYear"]), b, "h")
                }

                function d(a, b) {
                    return a.write('<div class="input-wrapper"><label for="birthMonth">Birth Month</label>').partial("templates/formoptions/birthmonth", b, {
                        validation: e
                    }).write('<p class="error-message"></p></div>')
                }

                function e(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "birthMonth"]), b, "h")
                }

                function f(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "height"]), b, "h")
                }

                function g(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "weight"]), b, "h")
                }

                function h(a, b) {
                    return a.write('<select name="sleepGoal" data-validation="').reference(b.getPath(!1, ["validations", "sleepGoal"]), b, "h").write('" needsclick><option value="" disabled selected></option><option value="390">6:30 hrs</option><option value="420">7:00 hrs</option><option value="450">7:30 hrs</option><option value="480">8:00 hrs</option><option value="510">8:30 hrs</option><option value="540">9:00 hrs</option></select>')
                }

                function i(a, b) {
                    return a.write('<select name="sleepGoal" data-validation="').reference(b.getPath(!1, ["validations", "sleepGoal"]), b, "h").write('" needsclick><option value="" disabled selected></option><option value="420">7:00 hrs</option><option value="450">7:30 hrs</option><option value="480">8:00 hrs</option><option value="510">8:30 hrs</option><option value="540">9:00 hrs</option><option value="570">9:30 hrs</option><option value="600">10:00 hrs</option><option value="630">10:30 hrs</option><option value="660">11:00 hrs</option><option value="690">11:30 hrs</option><option value="720">12:00 hrs</option><option value="750">12:30 hrs</option><option value="780">13:00 hrs</option><option value="810">13:30 hrs</option><option value="840">14:00 hrs</option></select>')
                }
                return a.register("templates/childviews/add-sleeper", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/add-sleeper", b, c)
                }
            }
        }), define("rdust!templates/childviews/child-bed-form-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="bed"><div class="sleeper isChild" data-bed-model="').reference(b.getPath(!1, ["bed", "model"]), b, "h").write('" data-bed-size="').reference(b.getPath(!1, ["bed", "size"]), b, "h").write('"><div class="the-bed"></div></div></div>')
                }
                return a.register("templates/childviews/child-bed-form-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/child-bed-form-header", b, c)
                }
            }
        }), define("rdust!templates/childviews/adult-beds-form-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="bed"><div class="sleeper right">').exists(b.getPath(!1, ["bed", "rightSleeper"]), b, {
                        block: c
                    }, null).write('<div class="bed-side"></div></div><div class="sleeper left">').exists(b.getPath(!1, ["bed", "leftSleeper"]), b, {
                        block: d
                    }, null).write('<div class="bed-side"></div></div></div>')
                }

                function c(a, b) {
                    return a.write('<div class="sleeper-label"><span class="green-check"></span> <br>').reference(b.getPath(!1, ["bed", "rightSleeper", "firstName"]), b, "h").write("</div>")
                }

                function d(a, b) {
                    return a.write('<div class="sleeper-label left"><span class="green-check"></span> <br>').reference(b.getPath(!1, ["bed", "leftSleeper", "firstName"]), b, "h").write("</div>")
                }
                return a.register("templates/childviews/adult-beds-form-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/adult-beds-form-header", b, c)
                }
            }
        }), define("rdust!templates/childviews/profile-forms", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<form class="profile-form primary half ').exists(b.get("swapped"), b, {
                        "else": c,
                        block: d
                    }, null).write(' form" data-form="primary" data-animate-labels="true"><div class="switch-sides"><i></i><p>Switch Sleeper Sides</p></div>').helper("include", b, {}, {
                        name: "templates/childviews/add-sleeper"
                    }).exists(b.get("rightSleeper"), b, {
                        block: e
                    }, null).exists(b.get("canBeAccountOwner"), b, {
                        "else": f,
                        block: g
                    }, null).write('<div class="section auth-options-primary"><div class="section-header create-account"> Create account for this sleeper <span class="create-account">Create an individual account to allow managing sleep, setting their beds Sleep Number, and more on their own device.</span> </div><div class="input-wrapper"><label for="email">Email <span class="excess">Address</span></label><input name="email" class="skip" type="email" data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" maxlength="256" needsclick/><span class="clear"></span><p class="error-message"></p></div><div class="indicator"></div><div class="input-wrapper"><label for="password">Password</label><input name="password" class="skip" autocorrect="off" autocomplete="off" type="password" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "password", "criteria"]), b, "h").write('" needsclick/><span class="clear"></span><p class="error-message"></p></div><h4 class="multiple-invalidations">The password must be between 8 and 30 characters and include a capital letter, a number and no whitespace</h4><div class="input-wrapper"><label for="confirmPassword">Confirm Password</label><input name="confirmPassword" class="skip" autocorrect="off" autocomplete="off"  type="password" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "confirmPassword"]), b, "h").write('" needsclick/><span class="clear"></span><p class="error-message"></p></div></div></form><form class="profile-form secondary half ').exists(b.get("swapped"), b, {
                        "else": h,
                        block: i
                    }, null).write(' form" data-form="secondary" data-animate-labels="true"><div class="switch-sides"><i></i><p>Switch Sleeper Sides</p></div>').helper("include", b, {}, {
                        name: "templates/childviews/add-sleeper"
                    }).exists(b.get("leftSleeper"), b, {
                        "else": j,
                        block: k
                    }, null).write('</form><div class="button-row"><button class="std-button alt remove-sleeper"><span class="add">Remove Sleeper</span></button><button class="std-button alt add-sleeper two-line"><span class="add">Add Another Sleeper<div class="sub">(Optional)</div></span></button><button class="submit save-sleeper">').exists(b.get("sleepersForm"), b, {
                        "else": l,
                        block: m
                    }, null).write('</button></div><div class="button-row"><div class="save">Save and Finish Setup Later</div></div>')
                }

                function c(a) {
                    return a.write("right active")
                }

                function d(a) {
                    return a.write("left")
                }

                function e(a, b) {
                    return a.write('<input class="valid" name="sleeperId" type="hidden" value="').reference(b.getPath(!1, ["rightSleeper", "sleeperId"]), b, "h").write('" needsclick/>')
                }

                function f(a) {
                    return a.write('<div class="section"><div class="input-wrapper clearfix"><input id="primaryAuthToggle" type="checkbox"/><label for="primaryAuthToggle" class="authLabel">Add login for this user</label></div></div>')
                }

                function g(a) {
                    return a.write('<section class="section"><div class="input-wrapper clearfix"><input id="loginUse" type="checkbox" checked="checked" /><label for="loginUse">Use my account info as login for this sleeper</label></div></section><div class="section use-login"><div class="input-wrapper clearfix"><input id="primaryAuthToggle" type="checkbox"/><label for="primaryAuthToggle" class="authLabel">Add login for this user</label></div></div>')
                }

                function h(a) {
                    return a.write("left")
                }

                function i(a) {
                    return a.write("right active")
                }

                function j(a, b) {
                    return a.write('<div class="section"><div class="input-wrapper clearfix"><input name="toggleAuth" type="checkbox" id="toggleAuth"/><label for="toggleAuth" class="authLabel">Add login for this user</label></div></div><div class="section auth-options"><div class="section-header"> Create account for this sleeper <span class="create-account">Create an individual account to allow managing sleep, setting their beds Sleep Number, and more on their own device.</span> </div><div class="input-wrapper"><label for="email">Email <span class="excess">Address</span></label><input name="email" class="skip" type="email" data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" maxlength="256" needsclick/><span class="clear"></span><p class="error-message"></p></div><div class="indicator"></div><div class="input-wrapper"><label for="password">Password</label><input name="password" class="skip" autocorrect="off" autocomplete="off"  type="password" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "password", "criteria"]), b, "h").write('" needsclick/><span class="clear"></span><p class="error-message"></p></div><h4 class="multiple-invalidations">The password must be between 8 and 30 characters and include a capital letter, a number and no whitespace</h4><div class="input-wrapper"><label for="confirmPassword">Confirm Password</label><input name="confirmPassword" autocorrect="off" autocomplete="off" class="skip" type="password" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "confirmPassword"]), b, "h").write('" needsclick/><span class="clear"></span><p class="error-message"></p></div></div>')
                }

                function k(a, b) {
                    return a.write('<input class="valid" name="sleeperId" type="hidden" value="').reference(b.getPath(!1, ["leftSleeper", "sleeperId"]), b, "h").write('" />')
                }

                function l(a) {
                    return a.write("Done")
                }

                function m(a) {
                    return a.write("Update")
                }
                return a.register("templates/childviews/profile-forms", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/profile-forms", b, c)
                }
            }
        }), define("rdust!templates/childviews/profile-forms-child", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<form class="profile-form isChild form" data-form="primary" data-is-child="true" data-bed-model="').reference(b.getPath(!1, ["bed", "model"]), b, "h").write('" data-animate-labels="true"><div class="section"><div class="input-wrapper"><label for="sleepGoal">Sleep Goal</label><select name="sleepGoal" data-validation="').reference(b.getPath(!1, ["validations", "sleepGoal"]), b, "h").write('" needsclick><option value="" disabled selected></option><option value="420">7:00 hrs</option><option value="450">7:30 hrs</option><option value="480">8:00 hrs</option><option value="510">8:30 hrs</option><option value="540">9:00 hrs</option><option value="570">9:30 hrs</option><option value="600">10:00 hrs</option><option value="630">10:30 hrs</option><option value="660">11:00 hrs</option><option value="690">11:30 hrs</option><option value="720">12:00 hrs</option><option value="750">12:30 hrs</option><option value="780">13:00 hrs</option><option value="810">13:30 hrs</option><option value="840">14:00 hrs</option></select><p class="error-message"></p></div><h5>Your sleep goal is used as a baseline to calculate your nightly SleepIQ<sup>&reg;</sup>.</h5></div><div class="section"><div class="input-wrapper"><label for="firstName">First Name</label><input name="firstName" type="text" data-validation="').reference(b.getPath(!1, ["validations", "firstName"]), b, "h").write('"autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" maxlength="30" needsclick/><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper"><label for="birthMonth">Birth Month</label>').partial("templates/formoptions/birthmonth", b, {
                        validation: c
                    }).write('<p class="error-message"></p></div><div class="input-wrapper"><label for="birthYear">Birth Year</label>').partial("templates/formoptions/birthyear-child", b, {
                        validation: d
                    }).write('<p class="error-message"></p></div><div class="input-wrapper radio-inputs"><h4 class="reveal isMale">Gender</h4><input id="male" name="isMale" type="radio" value="Male" data-validation="').reference(b.getPath(!1, ["validations", "isMale"]), b, "h").write('"><label for="male" class="reveal">Male</label><input id="female" name="isMale" type="radio" value="Female" data-validation="').reference(b.getPath(!1, ["validations", "isMale"]), b, "h").write('"/><label for="female" class="reveal">Female</label><p class="error-message"></p></div><div class="input-wrapper"><label for="height">Height</label>').partial("templates/formoptions/height-child", b, {
                        validation: e
                    }).write('<p class="error-message"></p></div><div class="input-wrapper"><label for="weight">Weight</label>').partial("templates/formoptions/weight-child", b, {
                        validation: f
                    }).write('<p class="error-message"></p></div><h5>Your demographics are used to help calculate your nightly SleepIQ<sup>&reg;</sup></h5></div>').exists(b.get("rightSleeper"), b, {
                        block: g
                    }, null).write('<div class="section"><div class="input-wrapper"><input name="toggleAuth" type="checkbox" id="toggleAuth"/><label for="toggleAuth" class="authLabel">Add login for this user</label></div></div><div class="section auth-options"><div class="section-header create-account"> Create account for this sleeper <span class="create-account">Create an individual account for your child to limit access from changing goals, bedtime routines, and activity trends.</span> </div><div class="input-wrapper"><label for="email">Email <span class="excess">Address</span></label><input name="email" class="skip" type="email" data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" maxlength="256" needsclick/><span class="clear"></span><p class="error-message"></p></div><div class="indicator"></div><div class="input-wrapper"><label for="password">Password</label><input name="password" class="skip" autocorrect="off" autocomplete="off" type="password" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "password", "criteria"]), b, "h").write('" needsclick/><span class="clear"></span><p class="error-message"></p></div><h4 class="multiple-invalidations">The password must be between 8 and 30 characters and include a capital letter, a number and no whitespace.</h4><div class="input-wrapper"><label for="confirmPassword">Confirm Password</label><input name="confirmPassword" class="skip" autocorrect="off" autocomplete="off" type="password" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "confirmPassword"]), b, "h").write('" needsclick/><span class="clear"></span><p class="error-message"></p></div></div></form><div class="button-row"><button class="submit">').exists(b.get("sleepersForm"), b, {
                        "else": h,
                        block: i
                    }, null).write('</button><div class="save kid">Save and Finish Setup Later</div></div>')
                }

                function c(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "birthMonth"]), b, "h")
                }

                function d(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "birthYear"]), b, "h")
                }

                function e(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "height"]), b, "h")
                }

                function f(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "weight"]), b, "h")
                }

                function g(a, b) {
                    return a.write('<input class="valid" name="sleeperId" type="hidden" value="').reference(b.getPath(!1, ["rightSleeper", "sleeperId"]), b, "h").write('" />')
                }

                function h(a) {
                    return a.write("Done")
                }

                function i(a) {
                    return a.write("Update")
                }
                return a.register("templates/childviews/profile-forms-child", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/profile-forms-child", b, c)
                }
            }
        }), define("app/ui/views/childviews/SetupProfileView", ["require", "lavaca/mvc/View", "app/ui/widgets/RegistrationFormValidator", "$", "app/models/FamilyModel", "app/models/BedCollection", "mout/object/get", "lavaca/mvc/Router", "app/models/validations/setup-profile", "app/utils/MixPanelManager", "rdust!templates/childviews/setup-profile", "rdust!templates/childviews/add-sleeper", "rdust!templates/childviews/child-bed-form-header", "rdust!templates/childviews/adult-beds-form-header", "rdust!templates/formoptions/weight", "rdust!templates/formoptions/weight-child", "rdust!templates/formoptions/height", "rdust!templates/formoptions/height-child", "rdust!templates/formoptions/birthyear", "rdust!templates/formoptions/birthyear-child", "rdust!templates/formoptions/birthmonth", "rdust!templates/childviews/profile-forms", "rdust!templates/childviews/profile-forms-child"], function(a) {
            function b(a, b) {
                if ("undefined" != typeof b)
                    if (isNaN(b)) {
                        if ("string" == typeof b && b.trim(" ") && !b.trim(" ").length) return;
                        "radio" === a.attr("type") && b ? a.val() === b && a.attr("checked", !0) : "checkbox" === a.attr("type") ? a.prop("checked", "checked" === b) : (a.val(b).addClass("reveal"), a.prev("label").addClass("reveal"))
                    } else a.val(parseInt(b, 10)).addClass("reveal"), a.prev("label").addClass("reveal")
            }

            function c(a) {
                "undefined" != typeof checked && (a.find(".auth-options").toggleClass("add-credentials", checked), a.find(".auth-options input").toggleClass("skip", !checked), a.find(".use-login").toggleClass("not-primary", !checked)), checked = a.find("#primaryAuthToggle").prop("checked"), "undefined" != typeof checked && (a.find(".auth-options-primary").toggleClass("add-credentials", checked), a.find(".auth-options-primary input").toggleClass("skip", !checked)), checked = a.find("#toggleAuth").prop("checked"), "undefined" != typeof checked && (a.find(".auth-options").toggleClass("add-credentials", checked), a.find(".auth-options input").toggleClass("skip", !checked))
            }

            function d() {
                this.render()
            }

            function e() {
                this.swapped = !!this.model.get("swapped"), this.model.set("swapped", this.swapped), this.render(), setTimeout(function() {
                    this.populateFieldsWithCache(), f.call(this), r.call(this)
                }.bind(this), 500)
            }

            function f() {
                var a = this.el.find(".bed .sleeper .sleeper-label span");
                try {
                    a.each(function(a, b) {
                        var c = b.dataset.side;
                        if (c) {
                            var d = this.el.find(".profile-form." + c);
                            if (d) {
                                var e = d.find(".first-name").val();
                                "undefined" != typeof e && "" !== e.trim(" ") ? w(b).html(e.trim(" ")) : w(b).html(b.dataset.backup)
                            } else w(b).html(b.dataset.backup)
                        } else w(b).html(b.dataset.backup)
                    }.bind(this))
                } catch (b) {
                    console.log(b)
                }
            }

            function g(a) {
                var b = w(a.currentTarget);
                b.hasClass("active") || b.hasClass("isChild") || (this.hasSecondUser ? j.call(this, a, !0) : i.call(this))
            }

            function h() {
                i.call(this)
            }

            function i() {
                var a = this.el.find(".profile-form");
                this.el.find(".bed .sleeper.active").removeClass("active").siblings().addClass("active"), this.swapped = !this.swapped, a.each(function() {
                    w(this).toggleClass("left right")
                })
            }

            function j(a, b) {
                b || s.call(this, "AddAnotherSleeper"), a.preventDefault(), a.stopPropagation(), this.hasSecondUser = !0, this.el.addClass("has-second"), this.el.find(".bed .sleeper.active").removeClass("active").siblings().addClass("active");
                var c = this.el.find(".profile-form.active");
                c.trigger("validateForm", function() {
                    this.el.find(".profile-form").addClass("active"), c.removeClass("active")
                }.bind(this)), f.call(this), setTimeout(function() {
                    this.el && this.el.parent() && this.el.parent().scrollTop(0)
                }.bind(this), 350)
            }

            function k() {
                window.customAlert.confirm("Are you sure you want to remove this profile? A sleeper profile is required to receive SleepIQ® data.", this.removeSleeper.bind(this)) && this.removeSleeper(!0)
            }

            function l(a) {
                var b = a.find("input.valid, select.valid"),
                    c = {};
                b.each(function(a, b) {
                    var d = w(b);
                    "isMale" === d.attr("name") ? c.isMale = "Male" === this.find('input[name="isMale"]:checked').val() ? !0 : !1 : "confirmPassword" !== d.attr("name") && (c[d.attr("name")] = d.val())
                }.bind(a)), c.bedId = this.model.get("bed").bedId, c.zipCode = this.model.get("zipCode") || "00000", c.isChild = this.model.get("bed") && this.model.get("bed").isKidsBed || !1, c.firstName = this.model.get("sideName"), c.side = a.hasClass("left") ? 0 : 1;
                var d = a.find("#loginUse").prop("checked");
                if ("undefined" != typeof d && (c.hasLoginUseChecked = d), c.isChild && (delete c.sleeperId, c.duration = 30, c.side = 1), this.model.get("bed") && !this.model.get("bed").dualSleep) c.side = 1;
                else {
                    var d = a.find("#loginUse").prop("checked");
                    d && (delete c.email, delete c.password, c.sleeperId = this.model.getAccountOwnerSleeperId() || c.sleeperId)
                }
                return c.timezone = this.model && this.model.get("timeZone") && "" !== this.model.get("timeZone") ? "" + this.model.get("timeZone") : "US/Central", c.height = parseInt(c.height), c.weight = parseInt(c.weight), c.sleepGoal = parseInt(c.sleepGoal), c.birthMonth && (c.birthMonth = parseInt(c.birthMonth)), c
            }

            function m(a) {
                if (a && a.currentTarget) {
                    a.stopPropagation(), a.preventDefault();
                    var b = w(a.currentTarget).prop("checked");
                    this.el.find(".auth-options").toggleClass("add-credentials", b), this.el.find(".auth-options input").toggleClass("skip", !b)
                }
            }

            function n(a) {
                if (a && a.currentTarget) {
                    a.stopPropagation(), a.preventDefault();
                    var b = w(a.currentTarget).prop("checked");
                    this.el.find(".auth-options-primary").toggleClass("add-credentials", b), this.el.find(".auth-options-primary input").toggleClass("skip", !b), b ? w(".create-profile .child-wrapper").scrollTop(700) : w(".create-profile .child-wrapper").scrollTop(0)
                }
            }

            function o(a) {
                a.stopPropagation(), a.preventDefault();
                var b = w(a.currentTarget).prop("checked");
                this.el.find(".use-login").toggleClass("not-primary", !b), b && (this.el.find("#primaryAuthToggle").prop("checked", !1), this.el.find(".auth-options-primary").removeClass("add-credentials"), this.el.find(".auth-options-primary input").addClass("skip"))
            }

            function p(a) {
                if (!a || a.currentTarget) {
                    s.call(this, "SaveAndFinishLater");
                    var b = this.el.find(a.currentTarget);
                    b && !b.hasClass("disabled") && (b.addClass("disabled"), this.updateSleepers(), this.model.updateRegistrationCache().then(function() {
                        if (b.removeClass("disabled"), this.model.get("bed") && this.model.get("bed").bedId && !this.model.get("selectedBedId")) {
                            var a = this.model.get("bed").bedId.slice(this.model.get("bed").bedId.length - 5);
                            this.model.setRegistrationState("12" + a)
                        }
                        window.customAlert.alert("Your settings have been saved. Return to this screen to complete the setup.", null, "SleepIQ®"), this.model && this.model.get("selectedBedId") && x.fetch().then(function() {
                            b.removeClass("disabled"), y.fetch(), this.model.setRegistrationState("13"), A.exec("/")
                        }.bind(this), function() {
                            b.removeClass("disabled"), this.model.setRegistrationState("13"), A.exec("/")
                        }.bind(this))
                    }.bind(this), function() {
                        b.removeClass("disabled"), window.customAlert.alert("There was trouble saving your information to the server. Try again.", null, "SleepIQ®")
                    }.bind(this)))
                }
            }

            function q(a) {
                var b = a.find("input, select"),
                    c = {};
                b.each(function(a, b) {
                    var d = w(b);
                    "checkbox" === d.attr("type") ? c[d.attr("name")] = d.prop("checked") ? "checked" : "" : "radio" === d.attr("type") ? d.prop("checked") && (c[d.attr("name")] = d.val()) : d.val() && d.val() && (c[d.attr("name")] = d.val())
                }.bind(a));
                var d = a.find("#loginUse").prop("checked");
                return "undefined" != typeof d && (c.hasLoginUseChecked = d), c.side = a.hasClass("left") ? 0 : 1, c
            }

            function r() {
                var a = this.el.find(".form");
                if (!a.hasClass("isChild")) {
                    a.removeClass("active");
                    var b = this.el.find(".bed .sleeper.right").hasClass("active");
                    b ? this.el.find(".form.right").addClass("active") : this.el.find(".form.left").addClass("active")
                }
            }

            function s(a, b) {
                var c = this.el.find(".profile-form"),
                    d = [];
                c.each(function(a, b) {
                    var c = q.call(this, w(b));
                    d.push(c)
                }.bind(this)), "Done" == a ? x.getSleepers().then(function(a) {
                    var c = Array.isArray(a) ? a.map(function(a) {
                        return a.toObject()
                    }) : null;
                    C.prototype.trackAccountRegistrationDone(this.model.toObject(), c, d), C.prototype.trackSaveSleeper(this.model.toObject(), c, b), b.hasLoginUseChecked ? C.prototype.trackReuseLoginAction(this.model.toObject(), c, b, "Yes") : b.email ? (C.prototype.trackReuseLoginAction(this.model.toObject(), c, b, "No"), C.prototype.trackCreateAccount(this.model.toObject(), c, b)) : C.prototype.trackReuseLoginAction(this.model.toObject(), c, b, "Skip")
                }.bind(this), function() {
                    C.prototype.trackAccountRegistrationDone(this.model.toObject(), null, d)
                }.bind(this)) : x.getSleepers().then(function(b) {
                    var c = Array.isArray(b) ? b.map(function(a) {
                        return a.toObject()
                    }) : null;
                    C.prototype.trackAccountRegistrationAddSleeperIncomplete(this.model.toObject(), c, d, a)
                }.bind(this), function() {
                    C.prototype.trackAccountRegistrationAddSleeperIncomplete(this.model.toObject(), null, d, a)
                }.bind(this))
            }

            function t() {
                var a = this.model.get("beds"),
                    b = !1;
                return a.forEach(function(a) {
                    a.isSetup || (b = !0)
                }), b && !this.model.get("selectedBedId")
            }
            var u = a("lavaca/mvc/View"),
                v = a("app/ui/widgets/RegistrationFormValidator"),
                w = a("$"),
                x = a("app/models/FamilyModel"),
                y = a("app/models/BedCollection"),
                z = a("mout/object/get"),
                A = a("lavaca/mvc/Router"),
                B = a("app/models/validations/setup-profile"),
                C = a("app/utils/MixPanelManager"),
                D = a("rdust!templates/childviews/setup-profile");
            a("rdust!templates/childviews/add-sleeper"), a("rdust!templates/childviews/child-bed-form-header"), a("rdust!templates/childviews/adult-beds-form-header"), a("rdust!templates/formoptions/weight"), a("rdust!templates/formoptions/weight-child"), a("rdust!templates/formoptions/height"), a("rdust!templates/formoptions/height-child"), a("rdust!templates/formoptions/birthyear"), a("rdust!templates/formoptions/birthyear-child"), a("rdust!templates/formoptions/birthmonth"), a("rdust!templates/childviews/profile-forms"), a("rdust!templates/childviews/profile-forms-child");
            var E = u.extend(function() {
                u.apply(this, arguments), this.mapEvent({
                    self: {
                        focused: e
                    },
                    ".bed .sleeper": {
                        tap: g
                    },
                    ".switch-sides": {
                        tap: h
                    },
                    ".remove-sleeper": {
                        tap: k
                    },
                    ".add-sleeper": {
                        tap: j
                    },
                    ".submit": {
                        tap: this.saveSleeper
                    },
                    "#toggleAuth": {
                        change: m
                    },
                    "#primaryAuthToggle": {
                        change: n
                    },
                    "#loginUse": {
                        change: o
                    },
                    ".save": {
                        tap: p
                    },
                    model: {
                        newBed: d,
                        swapSide: d
                    }
                }), this.mapWidget({
                    ".profile-form": {
                        TWidget: v
                    }
                })
            }, {
                className: "create-profile",
                autoRender: !0,
                hasSecondUser: !1,
                swapped: !1,
                generateHtml: function(a) {
                    return a ? a.validations = B : a = {
                        validations: B
                    }, new Promise(function(b) {
                        D.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                saveSleeper: function(a) {
                    var b = this.el.find(".profile-form"),
                        c = [],
                        d = 0,
                        e = 0,
                        g = 0,
                        h = w(a.currentTarget);
                    if (!h.hasClass("disabled"))
                        if (h.addClass("disabled"), this.hasSecondUser || (b = b.first()), b.each(function(a, b) {
                                w(b).trigger("validateForm", function(a) {
                                    a ? d++ : g = this.classList.contains("left") ? 0 : 1
                                }.bind(b))
                            }.bind(this)), d === b.length) {
                            b.each(function(a, b) {
                                c.push(l.call(this, w(b)))
                            }.bind(this));
                            var i = 0,
                                j = this.model.get("bed"),
                                k = w(b[0]).hasClass("left") ? 0 : 1;
                            1 === k && j.rightSleeper && (j.rightSleeper.side = 0, c.push(j.rightSleeper)), 0 === k && j.leftSleeper && (j.leftSleeper.side = 1, c.push(j.leftSleeper));
                            for (var m = 0; m < c.length; m++) {
                                var n = c[m].sleeperId;
                                1 === c[m].side ? this.model.get("bed").rightSleeper = c[m] : this.model.get("bed").leftSleeper = c[m];
                                var o = m;
                                this.model.saveSleeper(c[m], n).then(function(a) {
                                    if (i += 1, i == c.length && s.call(this, "Done", c[o]), x.updateBedId(a, this.model.get("bed").bedId), e++, e === b.length) {
                                        if (this.model && "undefined" != typeof this.model.get("bedIndex") && null !== this.model.get("bedIndex") && (this.model.get("beds")[this.model.get("bedIndex")].isSetup = !0), this.model.get("selectedBedId")) {
                                            var d = this.model.getSelectedBedFromId(this.model.get("selectedBedId"));
                                            d && (d.isSetup = !0)
                                        }
                                        this.el.removeClass("has-second"), this.hasSecondUser = !1, this.model.set("sleepersForm", null), !this.model.get("bed").isKidsBed && this.model.get("bed").dualSleep && this.model.set("canAddSecondSleeper", !this.model.get("canAddSecondSleeper"));
                                        var f = this;
                                        x.fetch().then(function() {
                                            var a = t.call(f);
                                            a ? f.model.setRegistrationState(11) : f.model.setRegistrationState(13), f.model.trigger("redrawBedComplete"), f.model.trigger("nextSection")
                                        })
                                    }
                                }.bind(this), function(a) {
                                    h.removeClass("disabled");
                                    var b = z(a, "responseJSON.Error.Message") || "Something went wrong communicating with the server. Please try again.";
                                    window.customAlert.alert(b)
                                }.bind(this))
                            }
                        } else {
                            if (h.removeClass("disabled"), d) {
                                var k = 0 === g ? "left" : "right";
                                this.el.find(".bed .sleeper." + k).addClass("active").siblings().removeClass("active"), this.el.find(".profile-form." + k).addClass("active").siblings().removeClass("active")
                            }
                            setTimeout(function() {
                                this.el && this.el.parent() && this.el.parent().scrollTop(0)
                            }.bind(this), 500), f.call(this)
                        }
                },
                populateFieldsWithCache: function(a) {
                    if (this.model && this.model.updateSleepersFromRegistrationCache(), this.model && !this.model.get("sleepersForm")) return a = a || 1, 5 > a && this.model.get("registrationCache") && this.model.get("selectedBedId") && this.model.get("registrationCache")[this.model.get("selectedBedId")] && setTimeout(function() {
                        this.populateFieldsWithCache(a + 1), f.call(this)
                    }.bind(this), 1e3), void 0;
                    this.el.find(".button-row .submit").text("Update");
                    var d = this.model.get("sleepersForm");
                    if (d) {
                        d.length > 1 && (this.hasSecondUser = !0, this.el.addClass("has-second"));
                        var e = this.el.find(".profile-form");
                        this.hasSecondUser || (e = e.first()), e.each(function(a, e) {
                            var f = w(e),
                                g = f.find("input, select");
                            g.each(function(a, c) {
                                var e = w(c),
                                    g = e.attr("name");
                                d.forEach(function(a) {
                                    var c = f.find("#loginUse");
                                    "undefined" != typeof a.hasLoginUseChecked && c.prop("checked", a.hasLoginUseChecked), f.hasClass("isChild") ? b.call(this, e, a[g]) : f.hasClass("left") && 0 === a.side ? b.call(this, e, a[g]) : f.hasClass("right") && 1 === a.side && b.call(this, e, a[g])
                                }.bind(this))
                            }.bind(this)), c.call(this, f)
                        }.bind(this))
                    }
                },
                updateSleepers: function() {
                    var a = this.el.find(".profile-form"),
                        b = [];
                    this.hasSecondUser || (a = a.first()), a.each(function(a, c) {
                        b.push(q.call(this, w(c)))
                    }.bind(this)), !this.hasSecondUser && this.model.get("sleepersForm") && 2 === this.model.get("sleepersForm").length ? this.model.set("removedUser", !0) : this.model.set("removedUser", !1), this.model.set("sleepersForm", b), this.model.set("swapped", this.swapped)
                },
                removeSleeper: function(a) {
                    ("boolean" == typeof a && a || "number" == typeof a && 2 === a) && (this.hasSecondUser = !1, this.el.removeClass("has-second"), this.el.find(".profile-form.primary").addClass("active"), this.render(".profile-form.secondary, .button-row"), this.el.find(".bed .sleeper.active").removeClass("active").siblings().addClass("active"), setTimeout(function() {
                        this.swapped && (this.el.find(".profile-form.secondary").toggleClass("right left"), this.el.find(".profile-form.secondary").removeClass("active")), f.call(this)
                    }.bind(this), 100), setTimeout(function() {
                        this.el && this.el.parent() && this.el.parent().scrollTop(0)
                    }.bind(this), 500))
                }
            });
            return E
        }), define("rdust!templates/childviews/setup-bed-side", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="setup-wrapper" data-bed-model="').reference(b.getPath(!1, ["bed", "model"]), b, "h").write('" data-is-child="').reference(b.getPath(!1, ["bed", "isChild"]), b, "h").write('"><form class="setup-form form" data-form="bed-setup" data-animate-labels="true">').exists(b.get("bed"), b, {
                        block: c
                    }, null).write('<section class="section"><div class="bed-wrapper">').exists(b.get("bed"), b, {
                        block: e
                    }, null).write('</div></section><section class="section bed-name"><h3>Type in your name</h3><div class="input-wrapper bed-name"><input name="bedName" type="text" placeholder="Sleeper Name" pattern="\\d*" maxlength="30" data-validation="').reference(b.getPath(!1, ["validations", "sleeperName"]), b, "h").write('" needsclick/><span class="clear"></span><p class="error-message"></p></div></section><div class="button-row"><div class="submit">Next</div></div></form></div>')
                }

                function c(a, b) {
                    return a.exists(b.getPath(!1, ["bed", "dualSleep"]), b, {
                        block: d
                    }, null)
                }

                function d(a) {
                    return a.write("<h2>Which side of the bed do <br> you sleep on?</h2>")
                }

                function e(a, b) {
                    return a.exists(b.getPath(!1, ["bed", "dualSleep"]), b, {
                        "else": f,
                        block: g
                    }, null)
                }

                function f(a, b) {
                    return a.partial("templates/childviews/child-bed-form-header", b, null)
                }

                function g(a, b) {
                    return a.partial("templates/childviews/adult-beds-form-header", b, null).write('<span class="input-tip">Click on your side of the bed.</span>')
                }
                return a.register("templates/childviews/setup-bed-side", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/setup-bed-side", b, c)
                }
            }
        }), define("app/ui/views/childviews/SetupBedSideView", ["require", "lavaca/mvc/View", "lavaca/mvc/Router", "app/models/StateModel", "app/models/BedCollection", "app/models/FamilyModel", "app/ui/widgets/RegistrationFormValidator", "app/models/AccountModel", "app/utils/MixPanelManager", "app/models/validations/setup-bed", "$", "rdust!templates/childviews/setup-bed-side"], function(a) {
            function b(a) {
                a.preventDefault(), a.stopPropagation();
                var b = o(a.currentTarget);
                return b.hasClass("disabled") ? void 0 : (b.addClass("disabled"), 0 === o(".sleeper.active").length && 0 === o(".sleeper.isChild").length ? (o(".bed-wrapper .input-tip").addClass("has-error"), b.removeClass("disabled"), void 0) : (this.el.find(".setup-form").trigger("validateForm", function(a) {
                    a ? c.call(this).then(function() {
                        i.call(this).then(function() {
                            this.hasBeenSubmitted = !0, m.prototype.trackBedSideSetup(this.model.toObject(), this.swapped), b.removeClass("disabled"), this.model.trigger("nextSection")
                        }.bind(this))
                    }.bind(this)) : b.removeClass("disabled")
                }.bind(this)), void 0))
            }

            function c() {
                return this.model.getSleepers().then(function() {
                    var a = this.model.get("sleepers"),
                        b = this.model.get("bed").bedId;
                    if (a)
                        for (var c = 0; c < a.length; c++) a[c].bedId === b && (1 === a[c].side ? this.model.set("rightSleeper", a[c]) : 0 === a[c].side && this.model.set("leftSleeper", a[c]))
                }.bind(this), function() {
                    window.customAlert.alert("There was trouble authenticating. Please try again.")
                }.bind(this))
            }

            function d() {
                this.render()
            }

            function e(a) {
                var b = o(a.currentTarget);
                return o(".bed-wrapper .input-tip").removeClass("has-error"), b.hasClass("active") || b.hasClass("isChild") ? void 0 : 0 === o(".sleeper.active").length ? (this.swapped = b.hasClass("left") ? !0 : !1, this.model.set("swapped", this.swapped), b.addClass("active"), void 0) : (this.hasSecondUser ? f.call(this, a, !0) : g.call(this), void 0)
            }

            function f(a, b) {
                b || _writeMixPanelAddSleeper.call(this, "AddAnotherSleeper"), a.preventDefault(), a.stopPropagation(), this.hasSecondUser = !0, this.el.addClass("has-second"), this.el.find(".bed .sleeper.active").removeClass("active").siblings().addClass("active");
                var c = this.el.find(".profile-form.active");
                c.trigger("validateForm", function() {
                    this.el.find(".profile-form").addClass("active"), c.removeClass("active"), this.el.find(".bed .side.active").removeClass("active").siblings(".side").addClass("active")
                }.bind(this)), _toggleSleeperLabels.call(this), setTimeout(function() {
                    this.el && this.el.parent() && this.el.parent().scrollTop(0)
                }.bind(this), 350)
            }

            function g() {
                o(".sleeper-label").appendTo(".bed .sleeper.active").toggleClass("left", this.swapped), this.el.find(".bed .sleeper.active").removeClass("active").siblings().addClass("active"), this.swapped = !this.swapped, this.model.set("swapped", this.swapped)
            }

            function h() {
                this.swapped = !this.swapped, this.model.set("swapped", this.swapped), this.el.find(".bed-name input").val(""), this.render().then(function() {
                    this.swapped ? (o(".sleeper.right").removeClass("active"), o(".sleeper.left").addClass("active")) : (o(".sleeper.left").removeClass("active"), o(".sleeper.right").addClass("active"))
                }.bind(this))
            }

            function i() {
                return new Promise(function(a, b) {
                    if (!this.model || !this.model.get("bed")) return window.customAlert.alert("An error occurred while attempting to update your bed name. Please try again."), b();
                    var c = this.el.find(".bed-name input").val(),
                        d = {};
                    return this.model.set("sideName", c), this.model.get("bed").name = c, this.model.get("canAddSecondSleeper") === !0 ? a() : (this.model.set("bedName", c), d = {
                        name: c
                    }, l.updateBed(this.model.get("bed").bedId, d).then(function() {
                        return a()
                    }.bind(this), function(a) {
                        return console.log(a), window.customAlert.alert("An error occurred while attempting to update your bed name. Please try again."), b()
                    }), void 0)
                }.bind(this))
            }
            var j = a("lavaca/mvc/View"),
                k = (a("lavaca/mvc/Router"), a("app/models/StateModel"), a("app/models/BedCollection"), a("app/models/FamilyModel"), a("app/ui/widgets/RegistrationFormValidator")),
                l = a("app/models/AccountModel"),
                m = a("app/utils/MixPanelManager"),
                n = a("app/models/validations/setup-bed"),
                o = a("$"),
                p = a("rdust!templates/childviews/setup-bed-side"),
                q = j.extend(function() {
                    j.apply(this, arguments), this.mapEvent({
                        ".submit": {
                            tap: b
                        },
                        ".bed .sleeper": {
                            tap: e
                        },
                        model: {
                            newBed: d,
                            swapSide: h
                        }
                    }), this.mapWidget({
                        ".setup-form": {
                            TWidget: k
                        }
                    })
                }, {
                    className: "setup-bed-side",
                    autoRender: !0,
                    hasSecondUser: !1,
                    swapped: !1,
                    generateHtml: function(a) {
                        return a && (a.validations = n), new Promise(function(b) {
                            p.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return q
        }), define("rdust!templates/childviews/bed-complete", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="child-wrapper">').exists(b.get("canAddSecondSleeper"), b, {
                        "else": c,
                        block: d
                    }, null).write("</div>")
                }

                function c(a, b) {
                    return a.write("<h2>Thank you for setting up <br> ").reference(b.get("sideName"), b, "h").write('\'s SleepIQ<sup>&reg;</sup> account!</h2><div class="buttons-section"><button class="big complete">Done</button></div>')
                }

                function d(a, b) {
                    return a.write("<h2>Thank you for setting up <br> your SleepIQ<sup>&reg;</sup> account ").reference(b.get("sideName"), b, "h").write('!</h2><h3>Does someone special sleep on the <br> other side of the bed?</h3><div class="buttons-section"><button class="big add-another">Yes</button><button class="big white complete">Nope, it\'s all mine!</button></div>')
                }
                return a.register("templates/childviews/bed-complete", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/bed-complete", b, c)
                }
            }
        }), define("app/ui/views/childviews/BedCompleteView", ["require", "lavaca/mvc/View", "lavaca/mvc/Router", "app/models/StateModel", "app/models/BedCollection", "app/models/FamilyModel", "app/ui/widgets/FormValidator", "app/models/AccountModel", "app/utils/MixPanelManager", "app/models/validations/setup-bed", "$", "rdust!templates/childviews/bed-complete"], function(a) {
            function b() {
                f.prototype.trackThankYou(this.model.toObject(), null, "All Mine"), this.model.trigger("registrationComplete")
            }

            function c() {
                f.prototype.trackThankYou(this.model.toObject(), null, "Do It For Them"), this.swapped = !this.swapped, this.model.set("swapped", this.swapped), this.model.trigger("swapSide"), this.model.trigger("sleeperSetup")
            }

            function d() {
                this.render()
            }
            var e = a("lavaca/mvc/View"),
                f = (a("lavaca/mvc/Router"), a("app/models/StateModel"), a("app/models/BedCollection"), a("app/models/FamilyModel"), a("app/ui/widgets/FormValidator"), a("app/models/AccountModel"), a("app/utils/MixPanelManager")),
                g = a("app/models/validations/setup-bed"),
                h = (a("$"), a("rdust!templates/childviews/bed-complete")),
                i = e.extend(function() {
                    e.apply(this, arguments), this.mapEvent({
                        ".complete": {
                            tap: b
                        },
                        ".add-another": {
                            tap: c
                        },
                        model: {
                            redrawBedComplete: d
                        }
                    })
                }, {
                    className: "registration-bed-complete",
                    autoRender: !0,
                    swapped: !1,
                    generateHtml: function(a) {
                        return a && (a.validations = g), new Promise(function(b) {
                            h.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return i
        }), define("rdust!templates/pageviews/registration", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="content" data-current-index="').exists(b.get("tabIndex"), b, {
                        "else": c,
                        block: d
                    }, null).write('">').exists(b.get("isChild"), b, {
                        "else": e,
                        block: j
                    }, null).write("</div>")
                }

                function c(a) {
                    return a.write("0")
                }

                function d(a, b) {
                    return a.reference(b.get("tabIndex"), b, "h")
                }

                function e(a, b) {
                    return a.exists(b.get("selectedBedId"), b, {
                        "else": f,
                        block: i
                    }, null)
                }

                function f(a, b) {
                    return a.exists(b.get("skipActivation"), b, {
                        "else": g,
                        block: h
                    }, null)
                }

                function g(a) {
                    return a.write('<div data-index="0" class="child overflow-scroll-inner account-creation-container focused"></div><div data-index="1" class="child overflow-scroll-inner bed-setup-container"></div><div data-index="2" class="child overflow-scroll-inner create-profile-container"></div>')
                }

                function h(a) {
                    return a.write('<div data-index="0" class="child overflow-scroll-inner bed-setup-container focused"></div><div data-index="1" class="child overflow-scroll-inner bed-side-container"></div><div data-index="2" class="child overflow-scroll-inner create-profile-container"></div><div data-index="3" class="child overflow-scroll-inner bed-complete-container"></div>')
                }

                function i(a) {
                    return a.write('<div data-index="0" class="child overflow-scroll-inner bed-setup-container focused bed-selected"></div><div data-index="1" class="child overflow-scroll-inner bed-side-container"></div><div data-index="2" class="child overflow-scroll-inner create-profile-container"></div><div data-index="3" class="child overflow-scroll-inner bed-complete-container"></div>')
                }

                function j(a) {
                    return a.write('<div class="no-permission"><h2>Your parents have not finished registering all the beds.</h2><button class="logout-button logout-no-permission">Logout</button></div>')
                }
                return a.register("templates/pageviews/registration", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/registration", b, c)
                }
            }
        }), define("app/ui/views/pageviews/RegistrationView", ["require", "./BaseView", "../childviews/SetupAccountView", "../childviews/SetupBedView", "../childviews/SetupProfileView", "../childviews/SetupBedSideView", "../childviews/BedCompleteView", "app/models/StateModel", "lavaca/net/History", "app/models/BedCollection", "lavaca/mvc/Router", "mout/object/get", "app/models/FamilyModel", "rdust!templates/pageviews/registration", "app/ui/views/childviews/DiscreteProgressView", "$", "app/utils/MixPanelManager", "rdust!templates/headers/back-header"], function(a) {
            function b() {
                var a = this.model.get("beds"),
                    b = !1;
                return a.forEach(function(a) {
                    a.isSetup || (b = !0)
                }), b && !this.model.get("selectedBedId")
            }

            function c(a) {
                try {
                    var b = w(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var c = b.prev();
                    c.val(""), c.removeClass("invalid valid"), c.focus()
                } catch (d) {
                    console.log(d)
                }
            }

            function d() {
                this.model.currentTabIndex > 0 ? this.goPrev() : this.historyGoBack()
            }

            function e() {
                switch (this.model.currentTabIndex) {
                    case 0:
                        return 3 === this.model.viewCount ? "account" : "bed";
                    case 1:
                        return 3 === this.model.viewCount ? "bed" : "profile";
                    case 2:
                        return "profile";
                    default:
                        return "none"
                }
            }

            function f() {
                if (this.model.get("beds")) {
                    var a = !0;
                    return this.model.get("beds").forEach(function(b) {
                        (!b.isSetup || b.bedId && "0" === b.bedId) && (a = !1)
                    }), !a && console.warn("Not all beds have been set up."), a
                }
                return !1
            }

            function g() {
                t.getSleepers().then(function(a) {
                    var b = Array.isArray(a) ? a.map(function(a) {
                        return a.toObject()
                    }) : null;
                    x.prototype.trackAccountRegistrationAddSleeperIncomplete(this.model.toObject(), b, "Back")
                }.bind(this), function() {
                    x.prototype.trackAccountRegistrationAddSleeperIncomplete(this.model.toObject(), null, "Back")
                }.bind(this))
            }

            function h() {
                Modernizr.localstorage && localStorage.removeItem("registrationState"), p.trigger("logout"), i.call(this)
            }

            function i() {
                this.model.refetch().then(function() {
                    this.render()
                }.bind(this))
            }
            var j = a("./BaseView"),
                k = a("../childviews/SetupAccountView"),
                l = a("../childviews/SetupBedView"),
                m = a("../childviews/SetupProfileView"),
                n = a("../childviews/SetupBedSideView"),
                o = a("../childviews/BedCompleteView"),
                p = a("app/models/StateModel"),
                q = a("lavaca/net/History"),
                r = a("app/models/BedCollection"),
                s = a("lavaca/mvc/Router"),
                t = (a("mout/object/get"), a("app/models/FamilyModel")),
                u = a("rdust!templates/pageviews/registration"),
                v = a("app/ui/views/childviews/DiscreteProgressView"),
                w = a("$"),
                x = a("app/utils/MixPanelManager");
            a("rdust!templates/headers/back-header");
            var y = j.extend(function() {
                j.apply(this, arguments), this.mapChildView({
                    ".progress": {
                        TView: v
                    }
                }), this.mapEvent({
                    model: {
                        nextSection: this.goNext,
                        registrationComplete: this.registrationComplete,
                        headerChange: this.headerChange,
                        sleeperSetup: this.goToSleeperSetup
                    },
                    "input, select": {
                        validation: this.onFieldValidation
                    },
                    ".clear": {
                        tap: c
                    },
                    "button.logout-button.logout-no-permission": {
                        tap: h.bind(this)
                    },
                    ext: {
                        stateModel: {
                            object: p,
                            events: {
                                backButton: d.bind(this)
                            }
                        }
                    }
                })
            }, {
                className: "registration",
                progressView: !1,
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        u.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    p.set("ignoreBack", !0), this.progressView = !1, this.model && this.model.highlightCorrectViewFromCache(), this.drawChildViews(), this.updateHeader(), this.initProgress(), this.model.set("currentTab", e.call(this)), j.prototype.onRenderSuccess.apply(this, arguments)
                },
                drawChildViews: function() {
                    var a = {
                        ".bed-setup-container": {
                            TView: l,
                            model: this.model
                        },
                        ".create-profile-container": {
                            TView: m,
                            model: this.model
                        },
                        ".bed-side-container": {
                            TView: n,
                            model: this.model
                        },
                        ".bed-complete-container": {
                            TView: o,
                            model: this.model
                        }
                    };
                    this.model.get("selectedBedId") || this.model.get("skipActivation") || (a[".account-creation-container"] = {
                        TView: k,
                        model: this.model
                    }, this.model.viewCount = 4), this.mapChildView(a), this.render(".content"), setTimeout(function() {
                        this.model && this.model.get("selectedBedId") && this.el.find(".content").attr("data-current-index", this.model.currentTabIndex), this.el.find(".content .child[data-index=" + this.model.currentTabIndex + "]").addClass("focused").trigger("focused")
                    }.bind(this), 200)
                },
                initProgress: function() {
                    try {
                        var a = this.getChildViews(".progress");
                        this.progressView = a[0], this.progressView && this.progressView.init(this.model.viewCount), setTimeout(function() {
                            this.progressView && this.progressView.updateProgress((this.model.currentTabIndex + 1) * (100 / this.model.viewCount))
                        }.bind(this), 500)
                    } catch (b) {}
                },
                headerChange: function() {
                    this.render(".header-container")
                },
                onFieldValidation: function(a, b) {
                    b.isInvalid ? w(a.currentTarget).closest(".section").toggleClass("invalid", "blur" === b.eventType).removeClass("valid") : b.isInvalid || w(a.currentTarget).closest(".section").addClass("valid").removeClass("invalid")
                },
                goNext: function() {
                    this.model.currentTabIndex < this.model.viewCount - 1 && (this.model.currentTabIndex++, this.model.set("currentTab", e.call(this)), this.model.set("tabIndex", this.model.currentTabIndex)), this.el.find(".content").attr("data-current-index", this.model.currentTabIndex), this.el.find(".content .child[data-index=" + this.model.currentTabIndex + "]").trigger("focused"), this.updateHeader(), this.progressView && this.progressView.updateProgress((this.model.currentTabIndex + 1) * (100 / this.model.viewCount))
                },
                goToSleeperSetup: function() {
                    this.model.currentTabIndex = 1, this.model.set("currentTab", e.call(this)), this.model.set("tabIndex", this.model.currentTabIndex), this.el.find(".content").attr("data-current-index", this.model.currentTabIndex), this.el.find(".content .child[data-index=" + this.model.currentTabIndex + "]").trigger("focused")
                },
                goPrev: function(a) {
                    if ((3 === this.model.viewCount && 2 === this.model.currentTabIndex || 2 === this.model.viewCount && 1 === this.model.currentTabIndex) && !a) {
                        var b = this.getChildViews(".create-profile-container");
                        b.forEach(function(a) {
                            a && "function" == typeof a.updateSleepers && a.updateSleepers()
                        }.bind(this))
                    }
                    this.model.currentTabIndex > 0 && (this.model.currentTabIndex--, this.model.set("currentTab", e.call(this)), this.model.set("tabIndex", this.model.currentTabIndex)), this.el.find(".content").attr("data-current-index", this.model.currentTabIndex), this.el.find(".content .child[data-index=" + this.model.currentTabIndex + "]").trigger("focused"), this.updateHeader(), this.progressView && this.progressView.updateProgress((this.model.currentTabIndex + 1) * (100 / this.model.viewCount))
                },
                updateHeader: function() {
                    var a = 3 === this.model.viewCount ? "Register Account" : "Bed Details";
                    switch (this.model.currentTabIndex) {
                        case 1:
                            a = 3 === this.model.viewCount ? "Bed Details" : "Sleeper Details";
                            break;
                        case 2:
                            a = "Sleeper Details"
                    }
                    this.model && this.model.set("headerTitle", a), this.render(".header-container")
                },
                onTapBack: function(a) {
                    return a.preventDefault(), 1 === this.progressView.currentStep && Modernizr.webview ? (s.exec("/"), void 0) : (1 == this.model.currentTabIndex && g.call(this), this.model.currentTabIndex > 0 || this.model.currentTabIndex >= 0 && this.model.get("accountIsActive") ? this.goPrev() : this.historyGoBack(), void 0)
                },
                historyGoBack: function() {
                    q.length > 0 ? q.back() : this.model && this.model.hasOneBedSetUpCheck() ? s.exec("/") : q.back()
                },
                registrationComplete: function() {
                    if (w("#view-root").toggleClass("new-bed", f.call(this)), this.model.get("selectedBedId")) t.fetch().then(function() {
                        r.fetch().then(function() {
                            r.checkIfAllBedsSetUp() && this.model && this.model.setRegistrationState(13), this.historyGoBack()
                        }.bind(this), function() {
                            this.historyGoBack()
                        }.bind(this))
                    }.bind(this), function() {
                        r.fetch().then(function() {
                            r.checkIfAllBedsSetUp() && this.model && this.model.setRegistrationState(13), this.historyGoBack()
                        }.bind(this), function() {
                            this.historyGoBack()
                        }.bind(this))
                    }.bind(this));
                    else {
                        var a = b.call(this);
                        a ? (this.model.setRegistrationState(11), this.model.multiBedSetupCacheReset(), this.model.set("bed", null), this.model.set("bedIndex", null), this.render(".bed-setup-container"), this.model.currentTabIndex = 0, this.model.set("currentTab", e.call(this)), this.model.set("tabIndex", this.model.currentTabIndex), this.el.find(".content").attr("data-current-index", this.model.currentTabIndex), this.el.find(".content .child[data-index=" + this.model.currentTabIndex + "]").trigger("focused")) : (this.model.setRegistrationState(13), t.fetch().then(function() {
                            r.fetch().then(function() {
                                s.exec("/registration/complete")
                            }, function() {
                                s.exec("/registration/complete")
                            })
                        }.bind(this), function() {
                            r.fetch().then(function() {
                                s.exec("/registration/complete")
                            }, function() {
                                s.exec("/registration/complete")
                            })
                        }.bind(this)))
                    }
                },
                dispose: function() {
                    p.set("ignoreBack", !1), j.prototype.dispose.apply(this, arguments)
                }
            });
            return y
        }), define("app/net/RegistrationController", ["require", "app/ui/views/pageviews/RegistrationOrderLookupView", "app/ui/views/pageviews/RegistrationCompleteView", "app/ui/views/pageviews/RegistrationView", "app/models/AccountModel", "app/models/FamilyModel", "app/net/BaseController", "app/models/StateModel", "app/models/AuthModel", "app/models/RegistrationViewModel", "app/env/Config", "app/utils/MixPanelManager"], function(a) {
            function b(a) {
                f.getBeds().then(function(b) {
                    var c = b;
                    g.getSleepers().then(function(b) {
                        m.prototype.trackAccountRegistrationInitiation(c, Array.isArray(b) ? b.map(function(a) {
                            return a.toObject()
                        }) : null, a)
                    }.bind(this), function() {
                        m.prototype.trackAccountRegistrationInitiation(c, null, a)
                    }.bind(this))
                }.bind(this), function() {
                    m.prototype.trackAccountRegistrationInitiation(null, null, a)
                }.bind(this))
            }
            var c = a("app/ui/views/pageviews/RegistrationOrderLookupView"),
                d = a("app/ui/views/pageviews/RegistrationCompleteView"),
                e = a("app/ui/views/pageviews/RegistrationView"),
                f = a("app/models/AccountModel"),
                g = a("app/models/FamilyModel"),
                h = a("app/net/BaseController"),
                i = a("app/models/StateModel"),
                j = a("app/models/AuthModel"),
                k = a("app/models/RegistrationViewModel"),
                l = a("app/env/Config"),
                m = a("app/utils/MixPanelManager"),
                n = h.extend(function() {
                    $("html").attr("data-controller", "RegistrationController"), h.apply(this, arguments)
                }, {
                    index: function(a, c) {
                        return j && j.get("accountKey") && "" !== j.get("accountKey") && !g.count() && !a.hasFetched ? g.fetch().then(function() {
                            a ? a.hasFetched = !0 : a = {
                                hasFetched: !0
                            };
                            var b = a && a.url ? a.url : "/registration?skipAcc=true";
                            this.redirect(b, null, a)
                        }.bind(this), function() {
                            a ? a.hasFetched = !0 : a = {
                                hasFetched: !0
                            };
                            var b = a && a.url ? a.url : "/registration?skipAcc=true";
                            this.redirect(b, null, a)
                        }.bind(this)) : "string" == typeof k.get("selectedBedId") && "13" === i.getRegistrationState() ? this.redirect("/") : k.allBedsSetUpCheck() ? (k.setRegistrationState(13), this.redirect("/")) : (a && 0 == a.url.indexOf("/redirectedregistration") && (a.token || (a.token = 0), m.prototype.setRegistrationPath("Email"), Modernizr.android && (window.location.href = l.url_scheme + "registration/" + a.orderId + "/" + a.email + "/" + a.token, setTimeout(function() {
                            window.location.href = l.playstore_url
                        }, 50)), Modernizr.ios && (window.location.href = l.url_scheme + "registration/" + a.orderId + "/" + a.email + "/" + a.token, setTimeout(function() {
                            window.location.href = l.appstore_url
                        }, 50))), a && (a.bedId && k.set("selectedBedId", a.bedId), a.orderId && k.set("orderId", a.orderId), a.email && k.set("email", a.email), a.token && k.set("orderToken", a.token), a.skipAcc && k.set("skipActivation", !0)), k.checkIfChild(), j && (!j.get("accountKey") || "" === j.get("accountKey")) && k.get("email") && k.get("orderId") ? k.validateOrder().then(function() {
                            k.fetchRegistrationCache().then(function() {
                                return k.set("skipActivation", !0), k.set("accountIsActive", !0), m.prototype.hasRegistrationPath() && b.call(this, k.toObject()), this.view(null, e, k).then(this.updateState(c, "Registration", a.url, null, !0))
                            }.bind(this), function() {
                                return m.prototype.setRegistrationPath("Register Action"), b.call(this, k.toObject()), this.view(null, e, k).then(this.updateState(c, "Registration", a.url, null, !0))
                            }.bind(this))
                        }.bind(this), function(a) {
                            if (a && a.status) switch (a.status) {
                                case 400:
                                    this.redirect("/", null, {
                                        orderActiveRedirect: !0
                                    });
                                    break;
                                case 404:
                                    window.customAlert.alert("Unable to find the order")
                            }
                            return this.redirect("/")
                        }.bind(this)) : k.fetchRegistrationCache().then(function() {
                            return k.set("skipActivation", !0), k.set("accountIsActive", !0), this.view(null, e, k).then(this.updateState(c, "Registration", a.url, null, !0))
                        }.bind(this), function() {
                            return this.view(null, e, k).then(this.updateState(c, "Registration", a.url, null, !0))
                        }.bind(this)), void 0)
                    },
                    order: function(a, b) {
                        return j && j.get("accountKey") && "" !== j.get("accountKey") ? this.redirect("/") : (k.clearAll(), this.view(null, c, k).then(this.updateState(b, "Order Lookup", a.url)))
                    },
                    "continue": function() {
                        var a = this,
                            b = function(a) {
                                if ("" == a) return {};
                                for (var b = {}, c = 0; c < a.length; ++c) {
                                    var d = a[c].split("=", 2);
                                    b[d[0]] = 1 == d.length ? "" : decodeURIComponent(d[1].replace(/\+/g, " "))
                                }
                                return b
                            }(window.location.hash.substr(1).split(/&|\?/));
                        return b.username && b.password ? f.login(b.username, b.password).then(function() {
                            return b.bedId ? a.redirect("/registration/bedId=" + b.bedId) : a.redirect("/registration")
                        }, function() {
                            return a.redirect("/")
                        }) : a.redirect("/")
                    },
                    complete: function(a, b) {
                        return Modernizr.webview && (document.location = j.get("username") ? "sleepiq://login?email=" + j.get("username") : "sleepiq://login"), k.setRegistrationState(13), k.clearAll(), this.view(null, d, k).then(this.updateState(b, "Order Lookup", a.url, null, !0))
                    }
                });
            return n
        }), define("app/ui/views/modalviews/BaseModalView", ["require", "app/ui/views/pageviews/BaseView", "lavaca/mvc/Router", "lavaca/mvc/View", "app/models/StateModel", "lavaca/net/History", "app/ModalViewManager", "rdust!templates/controlviews/modal"], function(a) {
            var b = a("app/ui/views/pageviews/BaseView"),
                c = a("lavaca/mvc/Router"),
                d = a("lavaca/mvc/View"),
                e = a("app/models/StateModel"),
                f = a("lavaca/net/History"),
                g = a("app/ModalViewManager");
            a("rdust!templates/controlviews/modal");
            var h = b.extend(function() {
                b.apply(this, arguments)
            }, {
                pageTransition: {
                    "in": function(a) {
                        return new Promise(function(b) {
                            var c = "pt-page-moveFromRight header-items-in";
                            a.nextAnimationEnd(function() {
                                return a.removeClass(c), b()
                            }).addClass(c)
                        }.bind(this))
                    },
                    out: function(a) {
                        return new Promise(function(b) {
                            var c = "pt-page-moveToLeft header-items-out";
                            a.nextAnimationEnd(function() {
                                return b()
                            }).addClass(c)
                        }.bind(this))
                    },
                    inReverse: function(a) {
                        return new Promise(function(b) {
                            var c = "pt-page-moveFromLeft header-items-in";
                            a.nextAnimationEnd(function() {
                                return a.removeClass(c), b()
                            }).addClass(c)
                        }.bind(this))
                    },
                    outReverse: function(a) {
                        return new Promise(function(b) {
                            var c = "pt-page-moveToRight header-items-out";
                            a.nextAnimationEnd(function() {
                                return b()
                            }).addClass(c)
                        }.bind(this))
                    }
                },
                onTapCancel: function(a) {
                    a && (a.preventDefault(), a.stopPropagation()), this.forceExit()
                },
                forceExit: function() {
                    return this.exit(!0)
                },
                onTapBack: function(a, b) {
                    a && (a.preventDefault(), a.stopPropagation()), b = b || {}, g.isRoutingBack = !0;
                    var d = function() {
                        g.isRoutingBack = !1
                    };
                    if (!(g.breadcrumbs.length > 1)) return g.isOpen = !1, g.currentView = !1, this.forceExit().then(d, d);
                    g.breadcrumbs.pop();
                    var e = g.breadcrumbs[g.breadcrumbs.length - 1];
                    g.breadcrumbs.pop(), c.exec(e, null, b).then(d, d)
                },
                enter: function(a, b) {
                    var c = g.isRoutingBack;
                    return d.prototype.enter.apply(this, arguments).then(function() {
                        var a, d = c ? this.pageTransition.inReverse : this.pageTransition["in"],
                            e = c ? this.pageTransition.outReverse : this.pageTransition.out,
                            h = -1;
                        if (1 != g.breadcrumbs.length || g.isRoutingBack || (d = function(a) {
                                return new Promise(function(b) {
                                    a.addClass("show-ie");
                                    var c = "pt-page-moveFromBottomFade";
                                    a.nextAnimationEnd(function() {
                                        return a.removeClass(c), b()
                                    }).addClass(c)
                                }.bind(this))
                            }), c ? f.modalAnimationBreadcrumb.length > 0 && (this.pageTransition = f.modalAnimationBreadcrumb.pop()) : f.modalAnimationBreadcrumb.push(this.pageTransition), b.length)
                            for (h = -1; a = b[++h];) a.el.removeClass("current"), e.call(this, a.el), a.exitPromise && a.exitPromise.resolve();
                        d.call(this, this.el).then(function() {
                            this.trigger("entercomplete"), this.el.addClass("current")
                        }.bind(this))
                    }.bind(this))
                },
                exit: function(a, b) {
                    b = b || [];
                    var c = g.isRoutingBack ? this.pageTransition.outReverse : b.length ? b[0].pageTransition.out : "";
                    return g.isRoutingBack && !b.length && (this.pageTransition = f.modalAnimationBreadcrumb.pop(), c = this.pageTransition.outReverse), "boolean" == typeof a && a && (c = function(a) {
                        return new Promise(function(b) {
                            var c = "pt-page-moveToBottomFade";
                            a.nextAnimationEnd(function() {
                                return b()
                            }).addClass(c)
                        }.bind(this))
                    }, e.trigger("closeModal")), c ? (this.exitPromise = new $.Deferred, c.call(this, this.el).then(function() {
                        d.prototype.exit.apply(this, arguments).then(function() {
                            return this.exitPromise.resolve().then(function() {
                                "boolean" == typeof a && a && g.flush()
                            }.bind(this))
                        }.bind(this)), this.el.removeClass("current")
                    }.bind(this)), b.length || c.call(this, this.el), this.exitPromise) : (this.el.removeClass("current"), d.prototype.exit.apply(this, arguments))
                }
            });
            return h
        }), define("app/ui/views/bindingviews/BaseBindingView", ["require", "app/ui/views/modalviews/BaseModalView", "sccomm/ConnectedDeviceStateModel", "app/models/BindingStateModel", "app/models/StateModel", "lavaca/mvc/Router"], function(a) {
            function b() {
                h.exec("/binding/exit")
            }

            function c(a) {
                var b = this.el.find(a.currentTarget).attr("data-href");
                this.execNext(b)
            }
            var d = a("app/ui/views/modalviews/BaseModalView"),
                e = a("sccomm/ConnectedDeviceStateModel"),
                f = a("app/models/BindingStateModel"),
                g = a("app/models/StateModel"),
                h = a("lavaca/mvc/Router"),
                i = d.extend(function() {
                    d.apply(this, arguments), this.mapEvent({
                        ".modal-link-next": {
                            tap: c
                        },
                        ".close-modal": {
                            tap: b
                        }
                    })
                }, {
                    onRenderSuccess: function() {
                        this.classNameAppend && this.el.addClass(this.classNameAppend), "first-screen" == this.classNameAppend && this.el.find("button.back").removeClass("back").addClass("close-modal"), d.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    execNext: function(a) {
                        if (this.constructorName === f.get("viewToExitAfter")) "ScanForBedView" === f.get("viewToExitAfter") ? h.exec("/binding/softexit") : h.exec("/binding/complete");
                        else if (Modernizr.hasble && !Modernizr.isbleon) {
                            f.writeMixPanel("PairingTrouble", {
                                troubleIssue: "BluetoothOff"
                            });
                            var b = "Pairing your bed requires Bluetooth to be on.  You will need to turn Bluetooth on before continuing.";
                            navigator && navigator.notification ? navigator.notification.alert(b, null, "SleepIQ®", "OK") : alert(b)
                        } else h.exec(a)
                    },
                    isDemo: function() {
                        return e.get("isDemo") || g.get("demoMode")
                    },
                    okOrCancel: function(a, b) {
                        var c = $.Deferred();
                        return window.navigator && window.navigator.notification ? navigator.notification.confirm(b, function(a) {
                            2 == a ? c.resolve() : c.reject()
                        }.bind(this), "SleepIQ®", ["Cancel", "Ok"]) : c.resolve(), c
                    }
                });
            return i
        }), define("rdust!templates/bindingviews/BindingWelcomeView", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="container"><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><h1>Welcome to bed pairing</h1><p>Bed pairing connects your smart device to your firmness control system, allowing you to control your bed.</p><p>This process will take about 5&ndash;10 minutes, and must be completed all at once.</p><p>You will need a working outlet near your bed (a surge protector is recommended).</p></div></div><div class="container-actions two-ctas"><button class="get-started right">Get Started</button><button class="modal-link text-only left" data-href="/binding/exit">Exit</button></div></div></div>')
                }
                return a.register("templates/bindingviews/BindingWelcomeView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/BindingWelcomeView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/BindingWelcomeView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/BindingStateModel", "lavaca/mvc/Router", "sccomm/ConnectedDeviceStateModel", "rdust!templates/bindingviews/BindingWelcomeView"], function(a) {
            function b() {
                return Modernizr.hasble || f.get("isDemo") ? Modernizr.isbleon || f.get("isDemo") ? ((Modernizr.hasble && Modernizr.isbleon || f.get("isDemo")) && (d.initProgress(), f.get("isDemo") && f.get("capabilities").apply({
                    hasPump: !0,
                    hasFoundation: !1,
                    hasSleepExpert: !0,
                    hasTemperatureEngine: !1,
                    hasProxy: !0,
                    hasBridge: !0,
                    hasSplit: !1,
                    hasDualBoard: !1,
                    hasMassageAndLighting: !1,
                    hasFootControl: !1,
                    isAdult: !1,
                    isK1: !1,
                    isK2: !0,
                    hasOutletConfigured: !1
                }), d.writeMixPanel("BedPairing", {
                    pairingAction: "StartPairing"
                }), this.execNext("/binding/checkhoses")), void 0) : (d.writeMixPanel("PairingTrouble", {
                    troubleIssue: "BluetoothOff"
                }), window.customAlert.alert("This functionality requires Bluetooth to be turned ON and for you to be within 8ft of your bed.", null, "SleepIQ®", "OK"), void 0) : (window.customAlert.alert("This functionality requires Bluetooth low energy.", null, "SleepIQ®", "OK"), void 0)
            }
            var c = a("app/ui/views/bindingviews/BaseBindingView"),
                d = a("app/models/BindingStateModel"),
                e = a("lavaca/mvc/Router"),
                f = a("sccomm/ConnectedDeviceStateModel"),
                g = a("rdust!templates/bindingviews/BindingWelcomeView"),
                h = c.extend(function() {
                    c.apply(this, arguments), this.mapEvent({
                        "button.get-started": {
                            tap: b
                        }
                    })
                }, {
                    constructorName: "BindingWelcomeView",
                    template: "templates/bindingviews/BindingWelcomeView",
                    className: "binding-common bindingwelcome",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = d.get("title") || "Pair Bed", new Promise(function(b) {
                            g.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onTapBack: function() {
                        "first-screen" == this.classNameAppend ? e.exec("/binding/exit") : c.prototype.onTapBack.apply(this, arguments)
                    }
                });
            return h
        }), define("rdust!templates/bindingviews/CheckHosesView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><img class="full-width" src="').exists(b.get("isK1"), b, {
                        "else": c,
                        block: d
                    }, null).write('" /><div class="container-content-padding"><p>Please ensure your bed is fully assembled as instructed in the assemble guide before continuing.</p><p>Plug in your pump to a working outlet and ensure that all hoses are fully connected.</p></div></div><div class="container-actions"><button class="modal-link-next continue" data-href="/binding/scanforbed">Continue</button></div></div></div>')
                }

                function c(a) {
                    return a.write("./assets/img/hoses.png")
                }

                function d(a) {
                    return a.write("./assets/img/hoses_k1.png")
                }
                return a.register("templates/bindingviews/CheckHosesView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/CheckHosesView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/CheckHosesView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/BedCollection", "app/models/BindingStateModel", "rdust!templates/bindingviews/CheckHosesView"], function(a) {
            function b() {
                e.writeMixPanel("BedPairing", {
                    pairingAction: "ContinuePairing"
                })
            }
            var c = a("app/ui/views/bindingviews/BaseBindingView"),
                d = a("app/models/BedCollection"),
                e = a("app/models/BindingStateModel"),
                f = a("rdust!templates/bindingviews/CheckHosesView"),
                g = c.extend(function() {
                    c.apply(this, arguments), this.mapEvent({
                        "button.continue": {
                            tap: b.bind(this)
                        }
                    })
                }, {
                    constructorName: "CheckHosesView",
                    className: "binding-common checkhoses",
                    generateHtml: function(a) {
                        a = a || {}, a.title = e.get("title") || "Pair Bed", a.content = "Please ensure your bed is fully assembled as instructed in the assemble guide before continuing.";
                        var b = d.getCurrentBedModel();
                        return b.get("isAdult") && (a.content = "Please ensure your bed is fully assembled as instructed in the assemble guide before continuing."), a.isK1 = b.get("isK1"), e.initProgress(), new Promise(function(b) {
                            f.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return g
        }), define("rdust!templates/bindingviews/ScanQRForBedView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><p>Scan the QR code on your Firmness Control System</p><button class="scan">Scan Now</button></div></div><div class="container-actions"><button class="text-only">Having trouble?</button><button class="modal-link" data-href="/binding/manualbedmacaddress">Enter information manually</button><button class="modal-link" data-href="/binding/scanforbed">Find bed using Bluetooth</button></div></div></div>')
                }
                return a.register("templates/bindingviews/ScanQRForBedView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ScanQRForBedView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ScanQRForBedView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/BindingStateModel", "sccomm/CommunicationHelpers", "sccomm/ConnectedDeviceStateModel", "lavaca/mvc/Router", "rdust!templates/bindingviews/ScanQRForBedView"], function(a) {
            function b(a) {
                return f.isMacAddress(a)
            }

            function c() {
                window.cordova && window.cordova.plugins.barcodeScanner && !this.isScanning && (this.isScanning = !0, window.cordova.plugins.barcodeScanner.scan(function(a) {
                    console.log("We got a barcode\nResult: " + a.text + "\n" + "Format: " + a.format + "\n" + "Cancelled: " + a.cancelled), this.isScanning = !1;
                    var c = a.text;
                    b.call(this, c) && (g.set("macAddress", c), h.exec("/binding/bedisengaging"))
                }, function(a) {
                    this.isScanning = !1, console.log("Scanning failed: " + a)
                }))
            }
            var d = a("app/ui/views/bindingviews/BaseBindingView"),
                e = a("app/models/BindingStateModel"),
                f = a("sccomm/CommunicationHelpers"),
                g = a("sccomm/ConnectedDeviceStateModel"),
                h = a("lavaca/mvc/Router"),
                i = a("rdust!templates/bindingviews/ScanQRForBedView"),
                j = d.extend(function() {
                    d.apply(this, arguments), this.mapEvent({
                        "button.scan": {
                            tap: c
                        }
                    })
                }, {
                    constructorName: "ScanQRForBedView",
                    template: "templates/bindingviews/ScanQRForBedView",
                    className: "binding-common scanqrforbed",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = e.get("title") || "Pair Bed", new Promise(function(b) {
                            i.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return j
        }), define("rdust!templates/bindingviews/ScanForBedView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view" data-label="Scanning for beds"></div><div class="container-content"><div class="container-content-padding"><p class="info left">').reference(b.get("infoMessage"), b, "h").write('</p><div class="content overflow-scroll pad-top"><div class="item-list overflow-scroll-inner">').exists(b.get("itemsKids"), b, {
                        block: c
                    }, null).write('<div class="kid-list">').section(b.get("itemsKids"), b, {
                        block: d
                    }, null).write("</div>").exists(b.get("itemsAdults"), b, {
                        block: o
                    }, null).write('<div class="adult-list">').section(b.get("itemsAdults"), b, {
                        block: p
                    }, null).write("</div>").notexists(b.get("items"), b, {
                        block: A
                    }, null).write('</div></div></div></div><div class="container-actions two-ctas"><p>').reference(b.get("lowerInfoMessage"), b, "h").write('</p><button class="retry right">Rescan</button><button class="modal-link text-only left" data-href="/binding/manualbedmacaddress">Enter Manually</button></div></div></div>')
                }

                function c(a) {
                    return a.write('<div class="item-heading">Kid Beds</div>')
                }

                function d(a, b) {
                    return a.write('<div class="item').exists(b.get("notSelectable"), b, {
                        block: e
                    }, null).exists(b.get("isClosest"), b, {
                        block: f
                    }, null).write('"data-address="').reference(b.get("address"), b, "h").write('"data-macaddress="').reference(b.get("macAddress"), b, "h").write('"data-type="').exists(b.get("isK1"), b, {
                        block: g
                    }, null).exists(b.get("isK2"), b, {
                        block: h
                    }, null).exists(b.get("isAdult"), b, {
                        block: i
                    }, null).write('"data-capabilities="').reference(b.get("capabilitiesJSON"), b, "h").write('"><span class="name">').reference(b.get("name"), b, "h").write('</span><span class="type">').exists(b.getPath(!1, ["capabilities", "isChamberTypeValid"]), b, {
                        "else": j,
                        block: k
                    }, null).write("</span></div>")
                }

                function e(a) {
                    return a.write(" notSelectable")
                }

                function f(a) {
                    return a.write(" closest")
                }

                function g(a) {
                    return a.write("K1")
                }

                function h(a) {
                    return a.write("K2")
                }

                function i(a) {
                    return a.write("Adult")
                }

                function j(a) {
                    return a.write("Unknown")
                }

                function k(a, b) {
                    return a.exists(b.get("isK1"), b, {
                        block: l
                    }, null).exists(b.get("isK2"), b, {
                        block: m
                    }, null).exists(b.get("isAdult"), b, {
                        block: n
                    }, null)
                }

                function l(a) {
                    return a.write("K1")
                }

                function m(a) {
                    return a.write("K2")
                }

                function n(a) {
                    return a.write("Adult")
                }

                function o(a) {
                    return a.write('<div class="item-heading">Adult Beds</div>')
                }

                function p(a, b) {
                    return a.write('<div class="item').exists(b.get("notSelectable"), b, {
                        block: q
                    }, null).exists(b.get("isClosest"), b, {
                        block: r
                    }, null).write('"data-address="').reference(b.get("address"), b, "h").write('"data-macaddress="').reference(b.get("macAddress"), b, "h").write('"data-type="').exists(b.get("isK1"), b, {
                        block: s
                    }, null).exists(b.get("isK2"), b, {
                        block: t
                    }, null).exists(b.get("isAdult"), b, {
                        block: u
                    }, null).write('"data-capabilities="').reference(b.get("capabilitiesJSON"), b, "h").write('"><span class="name">').reference(b.get("name"), b, "h").write('</span><span class="type">').exists(b.getPath(!1, ["capabilities", "isChamberTypeValid"]), b, {
                        "else": v,
                        block: w
                    }, null).write("</span></div>")
                }

                function q(a) {
                    return a.write(" notSelectable")
                }

                function r(a) {
                    return a.write(" closest")
                }

                function s(a) {
                    return a.write("K1")
                }

                function t(a) {
                    return a.write("K2")
                }

                function u(a) {
                    return a.write("Adult")
                }

                function v(a) {
                    return a.write("Unknown")
                }

                function w(a, b) {
                    return a.exists(b.get("isK1"), b, {
                        block: x
                    }, null).exists(b.get("isK2"), b, {
                        block: y
                    }, null).exists(b.get("isAdult"), b, {
                        block: z
                    }, null)
                }

                function x(a) {
                    return a.write("K1")
                }

                function y(a) {
                    return a.write("K2")
                }

                function z(a) {
                    return a.write("Adult")
                }

                function A(a) {
                    return a.write('<div class="no-items-found"><p>We did not detect any beds nearby.</p><p>Please make sure the bed you are trying to pair is plugged in and you are within 8 feet of the bed, then rescan.</p></div>')
                }
                return a.register("templates/bindingviews/ScanForBedView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ScanForBedView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ScanForBedView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/BedCollection", "app/models/BindingStateModel", "sccomm/ConnectedDeviceStateModel", "sccomm/CommunicationHelpers", "sccomm/DeviceCommunication", "app/models/AccountModel", "mout/array/sort", "app/ui/views/childviews/LoadingAnimationView", "app/utils/MixPanelManager", "rdust!templates/bindingviews/ScanForBedView"], function(a) {
            function b() {
                for (var a = k.get("scanResults"), b = [], c = [], d = i.getCurrentBedModel(), e = 0; e < a.length; e++) a[e].isClosest = 0 == e, a[e].name = i.getNameForMacAddress(a[e].macAddress), d.get("bedId") && (a[e].notSelectable = d.get("isK1") && !a[e].isK1 || d.get("isK2") && !a[e].isK2 || d.get("isAdult") && !a[e].isAdult || i.isMacAddressOnAccount(a[e].macAddress)), a[e].isAdult ? c.push(a[e]) : b.push(a[e]);
                return this.model.set("itemsKids", b), this.model.set("itemsAdults", c), a = n(a, function(a, b) {
                    var c = a.isAdult || "",
                        d = b.isAdult || "";
                    return c - d
                })
            }

            function c() {
                this.el.addClass("busy"), m.scan("bed").then(function() {
                    j.writeMixPanel("BedScanning"), this.el && this.model && (this.el.removeClass("busy"), this.model.set("items", b.call(this)), this.render(".item-list"))
                }.bind(this))
            }

            function d(a) {
                return l.isMacAddress(a)
            }

            function e(a, b, c) {
                var d = i.getCurrentBedModel();
                return d.get("bedId") && d.get("model") ? i.isMacAddressOnAccount(c) ? (window.customAlert.alert("This bed is already paired to a bed account", null, "SleepIQ®", "OK"), !1) : d.get("isK2") && !a.isK2 ? (window.customAlert.alert("You cannot pair the selected " + b + " bed to a K2 bed account", null, "SleepIQ®", "OK"), !1) : d.get("isK1") && !a.isK1 ? (window.customAlert.alert("You cannot pair the selected " + b + " bed to a K1 bed account", null, "SleepIQ®", "OK"), !1) : d.get("isAdult") && !a.isAdult ? (window.customAlert.alert("You cannot pair the selected " + b + " bed to an Adult bed account", null, "SleepIQ®", "OK"), !1) : !0 : !0
            }

            function f() {
                this.model.set("items", []), this.render(".item-list"), j.writeMixPanel("BedPairing", {
                    pairingAction: "Rescan"
                }), c.call(this)
            }

            function g(a) {
                var b = this.el.find(a.currentTarget),
                    c = b.attr("data-address"),
                    f = b.attr("data-type"),
                    g = b.attr("data-macaddress"),
                    h = JSON.parse(b.attr("data-capabilities") || "{}");
                d.call(this, g) && e.call(this, h, f, g) && (k.get("capabilities").apply(h), k.set("address", c), k.set("macAddress", g), k.trigger("bedMacAddressSelected"), p.prototype.setCurrentBedPairingId(g), j.writeMixPanel("BedPairing", {
                    pairingAction: "PumpSelected"
                }), h && h.isAdult ? this.execNext("/binding/verifybedmacaddress") : this.execNext("/binding/verifyselectedbed"))
            }
            var h = a("app/ui/views/bindingviews/BaseBindingView"),
                i = a("app/models/BedCollection"),
                j = a("app/models/BindingStateModel"),
                k = a("sccomm/ConnectedDeviceStateModel"),
                l = a("sccomm/CommunicationHelpers"),
                m = a("sccomm/DeviceCommunication"),
                n = (a("app/models/AccountModel"), a("mout/array/sort")),
                o = a("app/ui/views/childviews/LoadingAnimationView"),
                p = a("app/utils/MixPanelManager"),
                q = a("rdust!templates/bindingviews/ScanForBedView"),
                r = h.extend(function() {
                    h.apply(this, arguments), this.mapEvent({
                        ".item-list .item": {
                            tap: g
                        },
                        "button.retry": {
                            tap: f
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: o,
                            model: {}
                        }
                    })
                }, {
                    constructorName: "ScanForBedView",
                    template: "templates/bindingviews/ScanForBedView",
                    className: "binding-common scanforbed busy",
                    generateHtml: function(a) {
                        a = a || {}, a.title = j.get("title") || "Pair Bed", this.isDemo() && (a.items = [{
                            name: "cc:12:34:a2:b4:ff",
                            macAddress: "cc:12:34:a2:b4:ff",
                            type: "k2",
                            isK1: !1,
                            isK2: !0,
                            isAdult: !1,
                            capabilities: {
                                isRightChamber: !0,
                                rightChamberType: 1,
                                isLeftChamber: !0,
                                leftChamberType: 2,
                                isK1: !1,
                                isK2: !0,
                                isAdult: !1
                            }
                        }, {
                            name: "cc:12:34:a2:b4:fe",
                            macAddress: "cc:12:34:a2:b4:fe",
                            type: "x12",
                            isK1: !1,
                            isK2: !1,
                            isAdult: !0,
                            capabilities: {
                                isRightChamber: !0,
                                rightChamberType: 0,
                                isLeftChamber: !0,
                                leftChamberType: 0,
                                isK1: !1,
                                isK2: !1,
                                isAdult: !0
                            }
                        }], a.itemsKids = [{
                            name: "cc:12:34:a2:b4:ff",
                            macAddress: "cc:12:34:a2:b4:ff",
                            type: "k2",
                            isK1: !1,
                            isK2: !0,
                            isAdult: !1,
                            capabilities: {
                                isRightChamber: !0,
                                rightChamberType: 1,
                                isLeftChamber: !0,
                                leftChamberType: 2,
                                isK1: !1,
                                isK2: !0,
                                isAdult: !1
                            }
                        }], a.itemsAdults = [{
                            name: "cc:12:34:a2:b4:fe",
                            macAddress: "cc:12:34:a2:b4:fe",
                            type: "x12",
                            isK1: !1,
                            isK2: !1,
                            isAdult: !0,
                            capabilities: {
                                isRightChamber: !0,
                                rightChamberType: 0,
                                isLeftChamber: !0,
                                leftChamberType: 0,
                                isK1: !1,
                                isK2: !1,
                                isAdult: !0
                            }
                        }]);
                        var b = i.getCurrentBedModel();
                        return a.infoMessage = b.get("model") ? "Please select the bed you would like to pair with your " + b.get("model") + " bed account. If you are not sure which to choose, unplug all pumps except the one you are pairing and rescan." : "Please select the bed you would like to connect to. If you are not sure which to choose, unplug all pumps except the one you are trying to connect to and rescan.", a.lowerInfoMessage = b.get("model") ? "Make sure you are near the bed you are trying to pair." : "Make sure you are near the bed you are trying to connect to.", new Promise(function(b) {
                            q.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        this.classNameAppend && this.el.addClass(this.classNameAppend), c.call(this), h.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        h.prototype.dispose.apply(this, arguments)
                    },
                    onTapBack: function() {
                        k.trigger("bedMacAddressSelected"), h.prototype.onTapBack.apply(this, arguments)
                    }
                });
            return r
        }), define("rdust!templates/bindingviews/VerifySelectedBedView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view" data-label="Connecting"></div><div class="container-content"><img class="full-width" src="./assets/img/pump_leds.png" /><div class="container-content-padding"><p>Are four LED lights on the back of your pump blinking?</p></div></div><div class="container-actions two-ctas"><button class="yes right">Yes</button><button class="modal-link secondary left" data-href="/binding/manualbedmacaddress">No</button></div></div></div>')
                }
                return a.register("templates/bindingviews/VerifySelectedBedView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/VerifySelectedBedView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/VerifySelectedBedView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/DeviceCommunication", "app/models/BedCollection", "sccomm/ConnectedDeviceStateModel", "app/ui/views/childviews/LoadingAnimationView", "app/models/BindingStateModel", "rdust!templates/bindingviews/VerifySelectedBedView"], function(a) {
            function b() {
                this.hasTappedNext || (this.hasTappedNext = !0, this.hasTappedNextTimeout = setTimeout(function() {
                    this.hasTappedNext = !1
                }.bind(this), 500), k.writeMixPanel("BedPairing", {
                    pairingAction: "LightsOnYes",
                    lightBlinkingAction: !0
                }), h.bindMacAddressForCurrentBed(i.get("macAddress")).then(function() {
                    this.execNext("/binding/bedisengaging")
                }.bind(this), function() {
                    window.customAlert.alert("The server could not associate the bed to your account.", null, "SleepIQ®", "OK")
                }.bind(this)))
            }

            function c() {
                var a = $.Deferred();
                return g.open().then(function() {
                    g.pumpSetLEDOverrideBlink().then(function() {
                        a.resolve()
                    }.bind(this), function() {
                        a.reject()
                    }.bind(this))
                }.bind(this), function() {
                    a.reject()
                }.bind(this)), a
            }

            function d() {
                var a = $.Deferred();
                return g.open().then(function() {
                    g.pumpSetLEDOverrideRevert().then(function() {
                        a.resolve()
                    }.bind(this), function() {
                        a.reject()
                    }.bind(this))
                }.bind(this), function() {
                    a.reject()
                }.bind(this)), a
            }

            function e() {
                k.writeMixPanel("BedPairing", {
                    pairingAction: "LightsOnNo",
                    lightBlinkingAction: !0
                })
            }
            var f = a("app/ui/views/bindingviews/BaseBindingView"),
                g = a("sccomm/DeviceCommunication"),
                h = a("app/models/BedCollection"),
                i = a("sccomm/ConnectedDeviceStateModel"),
                j = a("app/ui/views/childviews/LoadingAnimationView"),
                k = a("app/models/BindingStateModel"),
                l = a("rdust!templates/bindingviews/VerifySelectedBedView"),
                m = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        "button.yes": {
                            tap: b
                        },
                        "button.modal-link.secondary.left": {
                            tap: e
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: j,
                            model: {}
                        }
                    })
                }, {
                    constructorName: "VerifySelectedBedView",
                    template: "templates/bindingviews/VerifySelectedBedView",
                    className: "binding-common verifyselectedbed busy",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = k.get("title") || "Pair Bed", a.macAddress = i.get("macAddress"), new Promise(function(b) {
                            l.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        c.call(this).always(function() {
                            this.el.removeClass("busy")
                        }.bind(this)), f.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        d.call(this), f.prototype.dispose.apply(this, arguments)
                    }
                });
            return m
        }), define("rdust!templates/bindingviews/VerifyBedMacAddressView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><img class="full-width" src="./assets/img/pump_mac_blueArrows_gradient.png" /><div class="container-content-padding"><p>Please verify that the following mac address matches the one on your pump</p><h1>').reference(b.get("macAddress"), b, "h").write('</h1></div></div><div class="container-actions two-ctas"><button class="yes right">Yes, they match</button><button class="modal-link secondary left" data-href="/binding/manualbedmacaddress">No</button></div></div></div>')
                }
                return a.register("templates/bindingviews/VerifyBedMacAddressView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/VerifyBedMacAddressView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/VerifyBedMacAddressView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/ConnectedDeviceStateModel", "app/models/BedCollection", "app/models/BindingStateModel", "rdust!templates/bindingviews/VerifyBedMacAddressView"], function(a) {
            function b() {
                this.hasTappedNext || (this.hasTappedNext = !0, this.hasTappedNextTimeout = setTimeout(function() {
                    this.hasTappedNext = !1
                }.bind(this), 500), e.bindMacAddressForCurrentBed(d.get("macAddress")).then(function() {
                    this.execNext("/binding/bedisengaging")
                }.bind(this), function() {
                    window.customAlert.alert("The server could not associate the bed to your account.", null, "SleepIQ®", "OK")
                }.bind(this)))
            }
            var c = a("app/ui/views/bindingviews/BaseBindingView"),
                d = a("sccomm/ConnectedDeviceStateModel"),
                e = a("app/models/BedCollection"),
                f = a("app/models/BindingStateModel"),
                g = a("rdust!templates/bindingviews/VerifyBedMacAddressView"),
                h = c.extend(function() {
                    c.apply(this, arguments), this.mapEvent({
                        "button.yes": {
                            tap: b
                        }
                    })
                }, {
                    constructorName: "VerifyBedMacAddressView",
                    template: "templates/bindingviews/VerifyBedMacAddressView",
                    className: "binding-common verifybedmacaddress",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = f.get("title") || "Pair Bed", a.macAddress = d.get("macAddress"), new Promise(function(b) {
                            g.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        c.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        c.prototype.dispose.apply(this, arguments)
                    }
                });
            return h
        }),
        function(a, b) {
            "function" == typeof define && define.amd ? define("app/utils/formatter", [], function() {
                return a.returnExportsGlobal = b()
            }) : "object" == typeof exports ? module.exports = b() : a.Formatter = b()
        }(this, function() {
            var a = function() {
                    var a = {},
                        b = 4,
                        c = new RegExp("{{([^}]+)}}", "g"),
                        d = function(a) {
                            for (var b, d = []; b = c.exec(a);) d.push(b);
                            return d
                        };
                    return a.parse = function(a) {
                        var c = {
                                inpts: {},
                                chars: {}
                            },
                            e = d(a),
                            f = a.length,
                            g = 0,
                            h = 0,
                            i = 0,
                            j = function(a) {
                                for (var d = a.length, e = 0; d > e; e++) c.inpts[h] = a.charAt(e), h++;
                                g++, i += a.length + b - 1
                            };
                        for (i; f > i; i++) g < e.length && i === e[g].index ? j(e[g][1]) : c.chars[i - g * b] = a.charAt(i);
                        return c.mLength = i - g * b, c
                    }, a
                }(),
                b = function() {
                    var a = {};
                    return "undefined" != typeof navigator ? navigator.userAgent : null, a.extend = function(a) {
                        for (var b = 1; b < arguments.length; b++)
                            for (var c in arguments[b]) a[c] = arguments[b][c];
                        return a
                    }, a.addChars = function(a, b, c) {
                        return a.substr(0, c) + b + a.substr(c, a.length)
                    }, a.removeChars = function(a, b, c) {
                        return a.substr(0, b) + a.substr(c, a.length)
                    }, a.isBetween = function(a, b) {
                        return b.sort(function(a, b) {
                            return a - b
                        }), a > b[0] && a < b[1]
                    }, a.addListener = function(a, b, c) {
                        return "undefined" != typeof a.addEventListener ? a.addEventListener(b, c, !1) : a.attachEvent("on" + b, c)
                    }, a.preventDefault = function(a) {
                        return a.preventDefault ? a.preventDefault() : a.returnValue = !1
                    }, a.getClip = function(a) {
                        return a.clipboardData ? a.clipboardData.getData("Text") : window.clipboardData ? window.clipboardData.getData("Text") : void 0
                    }, a.getMatchingKey = function(a, b, c) {
                        for (var d in c) {
                            var e = c[d];
                            if (a === e.which && b === e.keyCode) return d
                        }
                    }, a.isDelKeyDown = function(b, c) {
                        var d = {
                            backspace: {
                                which: 8,
                                keyCode: 8
                            },
                            "delete": {
                                which: 46,
                                keyCode: 46
                            }
                        };
                        return a.getMatchingKey(b, c, d)
                    }, a.isDelKeyPress = function(b, c) {
                        var d = {
                            backspace: {
                                which: 8,
                                keyCode: 8,
                                shiftKey: !1
                            },
                            "delete": {
                                which: 0,
                                keyCode: 46
                            }
                        };
                        return a.getMatchingKey(b, c, d)
                    }, a.isSpecialKeyPress = function(b, c) {
                        var d = {
                            tab: {
                                which: 0,
                                keyCode: 9
                            },
                            enter: {
                                which: 13,
                                keyCode: 13
                            },
                            end: {
                                which: 0,
                                keyCode: 35
                            },
                            home: {
                                which: 0,
                                keyCode: 36
                            },
                            leftarrow: {
                                which: 0,
                                keyCode: 37
                            },
                            uparrow: {
                                which: 0,
                                keyCode: 38
                            },
                            rightarrow: {
                                which: 0,
                                keyCode: 39
                            },
                            downarrow: {
                                which: 0,
                                keyCode: 40
                            },
                            F5: {
                                which: 116,
                                keyCode: 116
                            }
                        };
                        return a.getMatchingKey(b, c, d)
                    }, a.isModifier = function(a) {
                        return a.ctrlKey || a.altKey || a.metaKey
                    }, a.forEach = function(a, b, c) {
                        if (a.hasOwnProperty("length"))
                            for (var d = 0, e = a.length; e > d && b.call(c, a[d], d, a) !== !1; d++);
                        else
                            for (var f in a)
                                if (a.hasOwnProperty(f) && b.call(c, a[f], f, a) === !1) break
                    }, a
                }(),
                c = function(a, b) {
                    function c(c) {
                        var e = [],
                            f = [];
                        b.forEach(c, function(c) {
                            b.forEach(c, function(b, c) {
                                var g = a.parse(b),
                                    h = d(c);
                                return e.push(h), f.push(g), !1
                            })
                        });
                        var g = function(a) {
                            var c;
                            return b.forEach(e, function(b, d) {
                                return b.test(a) ? (c = d, !1) : void 0
                            }), void 0 === c ? null : f[c]
                        };
                        return {
                            getPattern: g,
                            patterns: f,
                            matchers: e
                        }
                    }
                    var d = function(a) {
                        return "*" === a ? /.*/ : new RegExp(a)
                    };
                    return c
                }(a, b),
                d = function() {
                    var a = {};
                    return a.get = function(a) {
                        if ("number" == typeof a.selectionStart) return {
                            begin: a.selectionStart,
                            end: a.selectionEnd
                        };
                        var b = document.selection.createRange();
                        if (b && b.parentElement() === a) {
                            var c = a.createTextRange(),
                                d = a.createTextRange(),
                                e = a.value.length;
                            return c.moveToBookmark(b.getBookmark()), d.collapse(!1), c.compareEndPoints("StartToEnd", d) > -1 ? {
                                begin: e,
                                end: e
                            } : {
                                begin: -c.moveStart("character", -e),
                                end: -c.moveEnd("character", -e)
                            }
                        }
                        return {
                            begin: 0,
                            end: 0
                        }
                    }, a.set = function(a, b) {
                        if ("object" != typeof b && (b = {
                                begin: b,
                                end: b
                            }), a.setSelectionRange) a.focus(), a.setSelectionRange(b.begin, b.end);
                        else if (a.createTextRange) {
                            var c = a.createTextRange();
                            c.collapse(!0), c.moveEnd("character", b.end), c.moveStart("character", b.begin), c.select()
                        }
                    }, a
                }(),
                e = function(a, b, c) {
                    function d(b, d) {
                        var f = this;
                        if (f.el = b, !f.el) throw new TypeError("Must provide an existing element");
                        if (f.opts = c.extend({}, e, d), "undefined" != typeof f.opts.pattern && (f.opts.patterns = f._specFromSinglePattern(f.opts.pattern), delete f.opts.pattern), "undefined" == typeof f.opts.patterns) throw new TypeError("Must provide a pattern or array of patterns");
                        f.patternMatcher = a(f.opts.patterns), f._updatePattern(), f.hldrs = {}, f.focus = 0, c.addListener(f.el, "keydown", function(a) {
                            f._keyDown(a)
                        }), c.addListener(f.el, "paste", function(a) {
                            f._paste(a)
                        }), f.opts.persistent && (f._processKey("", !1), f.el.blur(), c.addListener(f.el, "focus", function(a) {
                            f._focus(a)
                        }), c.addListener(f.el, "click", function(a) {
                            f._focus(a)
                        }), c.addListener(f.el, "touchstart", function(a) {
                            f._focus(a)
                        }))
                    }
                    var e = {
                            persistent: !1,
                            repeat: !1,
                            placeholder: " "
                        },
                        f = {
                            9: /[0-9]/,
                            a: /[A-Za-z]/,
                            "*": /[A-Za-z0-9]/
                        };
                    return d.addInptType = function(a, b) {
                        f[a] = b
                    }, d.prototype.resetPattern = function(c) {
                        this.opts.patterns = c ? this._specFromSinglePattern(c) : this.opts.patterns, this.sel = b.get(this.el), this.val = this.el.value, this.delta = 0, this._removeChars(), this.patternMatcher = a(this.opts.patterns);
                        var d = this.patternMatcher.getPattern(this.val);
                        this.mLength = d.mLength, this.chars = d.chars, this.inpts = d.inpts, this._processKey("", !1, !0)
                    }, d.prototype._updatePattern = function() {
                        var a = this.patternMatcher.getPattern(this.val);
                        a && (this.mLength = a.mLength, this.chars = a.chars, this.inpts = a.inpts)
                    }, d.prototype._keyDown = function(a) {
                        var b = a.which || a.keyCode,
                            d = c.isSpecialKeyPress(a.which, a.keyCode);
                        return b && c.isDelKeyDown(a.which, a.keyCode) ? (this._processKey(null, b), c.preventDefault(a)) : d || c.isModifier(a) ? void 0 : (this._processKey(String.fromCharCode(b), !1), c.preventDefault(a))
                    }, d.prototype._keyPress = function(a) {
                        var b, d;
                        return b = a.which || a.keyCode, d = c.isSpecialKeyPress(a.which, a.keyCode), c.isDelKeyPress(a.which, a.keyCode) || d || c.isModifier(a) ? void 0 : (this._processKey(String.fromCharCode(b), !1), c.preventDefault(a))
                    }, d.prototype._paste = function(a) {
                        return this._processKey(c.getClip(a), !1), c.preventDefault(a)
                    }, d.prototype._focus = function() {
                        var a = this;
                        setTimeout(function() {
                            var c = b.get(a.el),
                                d = c.end > a.focus,
                                e = 0 === c.end;
                            (d || e) && b.set(a.el, a.focus)
                        }, 0)
                    }, d.prototype._processKey = function(a, d, e) {
                        if (this.sel = b.get(this.el), this.val = this.el.value, this.delta = 0, this.sel.begin !== this.sel.end) this.delta = -1 * Math.abs(this.sel.begin - this.sel.end), this.val = c.removeChars(this.val, this.sel.begin, this.sel.end);
                        else if (d && 46 === d) this._delete();
                        else if (d && this.sel.begin - 1 >= 0) this.val = c.removeChars(this.val, this.sel.end - 1, this.sel.end), this.delta -= 1;
                        else if (d) return !0;
                        d || (this.val = c.addChars(this.val, a, this.sel.begin), this.delta += a.length), this._formatValue(e)
                    }, d.prototype._delete = function() {
                        for (; this.chars[this.sel.begin];) this._nextPos();
                        this.sel.begin < this.val.length && (this._nextPos(), this.val = c.removeChars(this.val, this.sel.end - 1, this.sel.end), this.delta = -1)
                    }, d.prototype._nextPos = function() {
                        this.sel.end++, this.sel.begin++
                    }, d.prototype._formatValue = function(a) {
                        this.newPos = this.sel.end + this.delta, this._removeChars(), this._updatePattern(), this._validateInpts(), this._addChars(), this.el.value = this.val.substr(0, this.mLength), ("undefined" == typeof a || a === !1) && b.set(this.el, this.newPos)
                    }, d.prototype._removeChars = function() {
                        this.sel.end > this.focus && (this.delta += this.sel.end - this.focus);
                        for (var a = 0, b = 0; b <= this.mLength; b++) {
                            var d, e = this.chars[b],
                                f = this.hldrs[b],
                                g = b + a;
                            g = b >= this.sel.begin ? g + this.delta : g, d = this.val.charAt(g), (e && e === d || f && f === d) && (this.val = c.removeChars(this.val, g, g + 1), a--)
                        }
                        this.hldrs = {}, this.focus = this.val.length
                    }, d.prototype._validateInpts = function() {
                        for (var a = 0; a < this.val.length; a++) {
                            var b = this.inpts[a],
                                d = !f[b],
                                e = !d && !f[b].test(this.val.charAt(a)),
                                g = this.inpts[a];
                            (d || e) && g && (this.val = c.removeChars(this.val, a, a + 1), this.focusStart--, this.newPos--, this.delta--, a--)
                        }
                    }, d.prototype._addChars = function() {
                        if (this.opts.persistent) {
                            for (var a = 0; a <= this.mLength; a++) this.val.charAt(a) || (this.val = c.addChars(this.val, this.opts.placeholder, a), this.hldrs[a] = this.opts.placeholder), this._addChar(a);
                            for (; this.chars[this.focus];) this.focus++
                        } else
                            for (var b = 0; b <= this.val.length; b++) {
                                if (this.delta <= 0 && b === this.focus) return !0;
                                this._addChar(b)
                            }
                    }, d.prototype._addChar = function(a) {
                        var b = this.chars[a];
                        return b ? (c.isBetween(a, [this.sel.begin - 1, this.newPos + 1]) && (this.newPos++, this.delta++), a <= this.focus && this.focus++, this.hldrs[a] && (delete this.hldrs[a], this.hldrs[a + 1] = this.opts.placeholder), this.val = c.addChars(this.val, b, a), void 0) : !0
                    }, d.prototype._specFromSinglePattern = function(a) {
                        return [{
                            "*": a
                        }]
                    }, d
                }(c, d, b);
            return e
        }), define("rdust!templates/bindingviews/ManualBedMacAddressView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><img class="full-width" src="./assets/img/pump_mac_blueArrows_gradient.png" /><div class="container-content-padding"><p>Enter the number found on the bottom of your bed&rsquo;s firmness control system.</p><p><input autocomplete="off" autocorrect="off" type="text" class="macaddress binding" value="" needsclick/></p></div></div><div class="container-actions"><p class="error error-message"></p><button class="continue right">Continue</button><button class="error exit text-only left">Finish Pairing Later</button></div></div></div>')
                }
                return a.register("templates/bindingviews/ManualBedMacAddressView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ManualBedMacAddressView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ManualBedMacAddressView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/ConnectedDeviceStateModel", "app/models/BedCollection", "lavaca/mvc/Router", "sccomm/CommunicationHelpers", "app/models/BindingStateModel", "sccomm/DeviceCommunication", "app/models/AccountModel", "app/utils/formatter", "$", "rdust!templates/bindingviews/ManualBedMacAddressView"], function(a) {
            function b() {
                this.el.find(".container-actions .error").hide()
            }

            function c() {
                this.okOrCancel("SleepIQ® Technology", "If you exit pairing before completing the process, you will not be able to control your bed or receive SleepIQ® data. Please contact Customer Service at 1-888-484-9263 if you are having any issues. Are you sure you want to exit?").then(function() {
                    j.exec("/binding/exit")
                }.bind(this))
            }

            function d(a, b, c) {
                var d = i.getCurrentBedModel();
                return i.isMacAddressOnAccount(c) ? (window.customAlert.alert("This bed is already paired to a bed account", null, "SleepIQ®", "OK"), !1) : d.get("isK2") && !a.isK2 ? (window.customAlert.alert("You cannot pair the selected " + b + " bed to a K2 bed account", null, "SleepIQ®", "OK"), !1) : d.get("isK1") && !a.isK1 ? (window.customAlert.alert("You cannot pair the selected " + b + " bed to a K1 bed account", null, "SleepIQ®", "OK"), !1) : d.get("isAdult") && !a.isAdult ? (window.customAlert.alert("You cannot pair the selected " + b + " bed to an Adult bed account", null, "SleepIQ®", "OK"), !1) : !0
            }

            function e(a) {
                var b = o.Deferred();
                return k.isMacAddress(a) ? (this.isDemo() && b.resolve(), m.getAddressFromMacAddress(a).then(function() {
                    var c = h.get("capabilities").toObject();
                    d.call(this, c, c.type, a) ? i.bindMacAddressForCurrentBed(a).then(function() {
                        b.resolve()
                    }.bind(this), function() {
                        b.reject("Could not update the server")
                    }.bind(this)) : b.reject("Wrong Bed Selected")
                }.bind(this), function() {
                    l.writeMixPanel("PairingTrouble", {
                        troubleIssue: "MACNotFound",
                        macAddress: a
                    }), b.reject("MAC address does not match any nearby pumps. Please ensure number matches the one on pump. Make sure you are within 8 feet of your bed.")
                }.bind(this))) : b.reject("Invalid MAC address. Please enter number exactly as it appears on your pump."), b
            }

            function f() {
                if (!this.hasTappedNext) {
                    this.hasTappedNext = !0, this.hasTappedNextTimeout = setTimeout(function() {
                        this.hasTappedNext = !1
                    }.bind(this), 500);
                    var a = this.el.find("input.macaddress").val();
                    e.call(this, a).then(function() {
                        h.set("macAddress", a), this.execNext("/binding/bedisengaging")
                    }.bind(this), function(a) {
                        this.el.find(".error-message").text(a), this.el.find(".container-actions .error").show(), this.el.find(".container-actions").addClass("two-ctas")
                    }.bind(this))
                }
            }
            var g = a("app/ui/views/bindingviews/BaseBindingView"),
                h = a("sccomm/ConnectedDeviceStateModel"),
                i = a("app/models/BedCollection"),
                j = a("lavaca/mvc/Router"),
                k = a("sccomm/CommunicationHelpers"),
                l = a("app/models/BindingStateModel"),
                m = a("sccomm/DeviceCommunication"),
                n = (a("app/models/AccountModel"), a("app/utils/formatter")),
                o = a("$"),
                p = a("rdust!templates/bindingviews/ManualBedMacAddressView"),
                q = g.extend(function() {
                    g.apply(this, arguments), this.mapEvent({
                        "button.continue": {
                            tap: f
                        },
                        ".exit": {
                            tap: c.bind(this)
                        },
                        ".macaddress": {
                            focus: b.bind(this)
                        }
                    })
                }, {
                    constructorName: "ManualBedMacAddressView",
                    template: "templates/bindingviews/ManualBedMacAddressView",
                    className: "binding-common manualbedmacaddress",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = l.get("title") || "Pair Bed", new Promise(function(b) {
                            p.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        new n(this.el.find("input.macaddress")[0], {
                            pattern: "{{**}}:{{**}}:{{**}}:{{**}}:{{**}}:{{**}}",
                            persistent: !1
                        }), g.prototype.onRenderSuccess.apply(this, arguments)
                    }
                });
            return q
        }), define("rdust!templates/bindingviews/BedIsEngagingView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><p>Your bed’s DualAir™ technology is now engaging. This may take a few minutes.</p><p class="second-chamber">Chamber two is engaging.</p><div class="progress"></div></div></div><div class="container-actions"><div class="error"><button class="retry">Retry</button></div><div class="possible-error"><p>We are not detecting any air pressure in your chamber. Please check your hose connections.</p><button class="halt">Pause</button><button class="exit text-only">Exit Pairing</button></div></div></div></div>')
                }
                return a.register("templates/bindingviews/BedIsEngagingView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/BedIsEngagingView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/BedIsEngagingView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/ConnectedDeviceStateModel", "sccomm/DeviceCommunication", "app/ui/views/childviews/ProgressDonutView", "app/models/BindingStateModel", "lavaca/mvc/Router", "moment", "rdust!templates/bindingviews/BedIsEngagingView"], function(a) {
            function b() {
                this.el.find(".second-chamber").css("visibility", "hidden"), this.el.find(".container-actions .error").hide(), f.call(this)
            }

            function c() {
                this.lastPercentage = null, this.lastChangeTime = null, this.el.find(".possible-error").hide(), m.pumpSetForceIdle()
            }

            function d() {
                this.okOrCancel("SleepIQ® Technology", "If you exit pairing before completing the process, you will not be able to control your bed or receive SleepIQ® data. Please contact Customer Service at 1-888-484-9263 if you are having any issues. Are you sure you want to exit?").then(function() {
                    c.call(this), p.exec("/binding/exit")
                }.bind(this))
            }

            function e(a) {
                a > 100 && (a = 100), this.lastChangeTime || (this.lastChangeTime = new Date);
                var b = q().diff(this.lastChangeTime);
                console.log("timeDiff: " + b), this.lastPercentage != a ? (console.log("changed: " + a), this.lastPercentage = a, this.lastChangeTime = new Date) : b > u && (console.log("stalled"), this.el.find(".possible-error").show());
                var c = this.getChildViews(".progress")[0];
                c && c.setPercentage(a)
            }

            function f() {
                j.call(this).then(function() {
                    o.writeMixPanel("DualAirEngagement"), o.set("startBedEngagingTime", null), i.call(this)
                }.bind(this), function() {
                    this.el.find(".possible-error").hide(), this.el.find(".container-actions .error").show(), o.writeMixPanel("PairingTrouble", {
                        troubleIssue: "DualAirNotEngaging"
                    })
                }.bind(this))
            }

            function g(a, b) {
                for (var c = 0; c < a.length; c++)
                    if (a[c].side == b) return c;
                return -1
            }

            function h() {
                var a = $.Deferred(),
                    b = [];
                return this.isDemo() ? (b = [{
                    side: 0,
                    sleepnumber: 0
                }], a.resolve(b)) : m.open().then(function(c) {
                    c && c.isRightChamber && (0 == c.rightChamberType || 1 == c.rightChamberType) && b.push({
                        side: 0,
                        sleepnumber: 0
                    }), c && c.isLeftChamber && (0 == c.leftChamberType || 1 == c.leftChamberType) && b.push({
                        side: 1,
                        sleepnumber: 0
                    }), console.log(b), m.pumpGetState().then(function(c) {
                        if (c.returnObject.rightSide) {
                            var d = b[g.call(this, b, 0)];
                            d && (d.sleepnumber = c.returnObject.rightSide)
                        }
                        if (c.returnObject.leftSide) {
                            var e = b[g.call(this, b, 1)];
                            e && (e.sleepnumber = c.returnObject.leftSide)
                        }
                        console.log(b), a.resolve(b)
                    }.bind(this), function() {
                        a.reject()
                    }.bind(this))
                }.bind(this), function() {
                    a.reject()
                }.bind(this)), a
            }

            function i() {
                this.isDisposed || (e.call(this, 100), this.timeout = setTimeout(function() {
                    var a = l.get("capabilities").toObject();
                    a && a.hasSleepExpert ? this.execNext("/binding/scanforwifi") : a && !a.hasSleepExpert && (a.isK1 || a.isK2) ? p.exec("/binding/verifysleepiq") : p.exec("/binding/bindingcomplete")
                }.bind(this), 2e3))
            }

            function j() {
                var a = $.Deferred(),
                    b = 0,
                    c = 0;
                return h.call(this).then(function(d) {
                    var f = d;
                    f && 0 !== f.length || a.resolve(), f && f.length >= 1 && (f[0] && (c = f[0].side, b = f[0].sleepnumber), console.log("side:" + c + " inflateTo:" + t + " start:" + b), m.pumpEngageChamber(c).then(function(d) {
                        e.call(this, d), 1 === f.length ? a.resolve() : setTimeout(function() {
                            2 === f.length && (this.el.find(".second-chamber").css("visibility", "visible"), e.call(this, 0), f[1] && (c = f[1].side, b = f[1].sleepnumber), console.log("side:" + c + " inflateTo:" + t + " start:" + b), m.pumpEngageChamber(c).then(function(b) {
                                e.call(this, b), a.resolve()
                            }.bind(this), function(b) {
                                e.call(this, b), a.reject()
                            }.bind(this)).progress(function(a) {
                                e.call(this, a)
                            }.bind(this)))
                        }.bind(this), 1e3)
                    }.bind(this), function(b) {
                        e.call(this, b), a.reject()
                    }.bind(this)).progress(function(a) {
                        e.call(this, a)
                    }.bind(this)))
                }.bind(this), function() {
                    a.reject()
                }.bind(this)), a
            }
            var k = a("app/ui/views/bindingviews/BaseBindingView"),
                l = a("sccomm/ConnectedDeviceStateModel"),
                m = a("sccomm/DeviceCommunication"),
                n = a("app/ui/views/childviews/ProgressDonutView"),
                o = a("app/models/BindingStateModel"),
                p = a("lavaca/mvc/Router"),
                q = a("moment"),
                r = a("rdust!templates/bindingviews/BedIsEngagingView"),
                s = k.extend(function() {
                    k.apply(this, arguments), this.mapChildView({
                        ".progress": {
                            TView: n,
                            model: {}
                        }
                    }), this.mapEvent({
                        ".retry": {
                            tap: b.bind(this)
                        },
                        ".halt": {
                            tap: c.bind(this)
                        },
                        ".exit": {
                            tap: d.bind(this)
                        }
                    })
                }, {
                    constructorName: "BedIsEngagingView",
                    template: "templates/bindingviews/BedIsEngagingView",
                    className: "binding-common bedisengaging",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = o.get("title") || "Pair Bed", new Promise(function(b) {
                            r.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        f.call(this), k.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        this.isDisposed = !0, m.pumpSetHaltSleepNumberWithProgress(), clearTimeout(this.timeout), k.prototype.dispose.apply(this, arguments)
                    }
                }),
                t = 50,
                u = 48e4;
            return s
        }), define("rdust!templates/bindingviews/CompleteBedAssemblyView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><p>Please complete your bed assembly as instructed in the assembly guide before continuing</p><p>Photo of guide</p></div></div><div class="container-actions"><button class="modal-link-next" data-href="/binding/scanforwifi">Continue, bed is assembled</button></div></div></div>')
                }
                return a.register("templates/bindingviews/CompleteBedAssemblyView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/CompleteBedAssemblyView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/CompleteBedAssemblyView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/BindingStateModel", "rdust!templates/bindingviews/CompleteBedAssemblyView"], function(a) {
            var b = a("app/ui/views/bindingviews/BaseBindingView"),
                c = a("app/models/BindingStateModel"),
                d = a("rdust!templates/bindingviews/CompleteBedAssemblyView"),
                e = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    constructorName: "CompleteBedAssemblyView",
                    template: "templates/bindingviews/CompleteBedAssemblyView",
                    className: "binding-common completebedassembly",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = c.get("title") || "Pair Bed", new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return e
        }), define("rdust!templates/bindingviews/VerifySleepIQView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view"></div><div class="container-content"><div class="container-content-padding"><div class="initial"><p>Please verify that the SleepIQ<sup>&reg;</sup> Processor is in place and then unplug you pump, plug it back in and wait for the first two lights to stop blinking.</p><p><img class="full-width" src="./assets/img/sleepIQ_processor.png" /></p></div><div class="error"><p>We are having trouble connecting to your SleepIQ<sup>&reg;</sup> technology. Please contact Customer Service at 1-888-484-9263 to complete set up.</p><p>Don&rsquo;t worry, you can still control you bed.</p></div></div></div><div class="container-actions"><div class="initial"><button class="retry">OK, the lights stopped</button><button class="skip-this-step text-only">Set Up SleepIQ<sup>&reg;</sup> Later</button></div><div class="error"><button class="continue">Continue</button></div></div></div></div>')
                }
                return a.register("templates/bindingviews/VerifySleepIQView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/VerifySleepIQView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/VerifySleepIQView", ["require", "app/ui/views/bindingviews/BaseBindingView", "lavaca/mvc/Router", "sccomm/ConnectedDeviceStateModel", "sccomm/DeviceCommunication", "app/models/BindingStateModel", "app/ui/views/childviews/LoadingAnimationView", "rdust!templates/bindingviews/VerifySleepIQView"], function(a) {
            function b() {
                this.el.addClass("busy"), f.call(this).then(function() {
                    this.isDisposed || this.execNext("/binding/scanforwifi")
                }.bind(this), function() {
                    k.writeMixPanel("PairingTrouble", {
                        troubleIssue: "SleepIQProcessorNotDetected"
                    }), this.el.find(".container-content .initial, .container-actions .initial").hide(), this.el.find(".container-content .error, .container-actions .error").show()
                }.bind(this)).always(function() {
                    this.el.removeClass("busy")
                }.bind(this))
            }

            function c() {
                e.call(this)
            }

            function d() {
                this.okOrCancel("SleepIQ® Technology", "In order to get your SleepIQ® data, you must complete SleepIQ® set up in Bed Settings. Please contact Customer Service at 1-888-484-9263 if you are having any issues.").then(function() {
                    e.call(this)
                }.bind(this))
            }

            function e() {
                var a = i.get("capabilities").toObject();
                a && a.isK2 ? this.execNext("/binding/headtiltisengaging") : h.exec("/binding/complete")
            }

            function f() {
                var a = $.Deferred();
                return j.close().then(function() {
                    j.open().then(function(b) {
                        b && b.hasSleepExpert ? a.resolve() : a.reject()
                    }.bind(this), function() {
                        a.reject()
                    }.bind(this))
                }.bind(this)), a
            }
            var g = a("app/ui/views/bindingviews/BaseBindingView"),
                h = a("lavaca/mvc/Router"),
                i = a("sccomm/ConnectedDeviceStateModel"),
                j = a("sccomm/DeviceCommunication"),
                k = a("app/models/BindingStateModel"),
                l = a("app/ui/views/childviews/LoadingAnimationView"),
                m = a("rdust!templates/bindingviews/VerifySleepIQView"),
                n = g.extend(function() {
                    g.apply(this, arguments), this.mapEvent({
                        ".skip-this-step": {
                            tap: d.bind(this)
                        },
                        ".retry": {
                            tap: b.bind(this)
                        },
                        ".continue": {
                            tap: c.bind(this)
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: l,
                            model: {}
                        }
                    })
                }, {
                    constructorName: "VerifySleepIQView",
                    template: "templates/bindingviews/VerifySleepIQView",
                    className: "binding-common verifysleepiq",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = k.get("title") || "Pair Bed", new Promise(function(b) {
                            m.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        k.writeMixPanel("PairingTrouble", {
                            troubleIssue: "SleepIQProcessorNotDetected"
                        })
                    },
                    dispose: function() {
                        this.isDisposed = !0, g.prototype.dispose.apply(this, arguments)
                    }
                });
            return n
        }), define("app/models/WifiNetworksModel", ["require", "lavaca/mvc/Model", "app/service/WifiService", "app/models/BindingStateModel", "sccomm/ConnectedDeviceStateModel", "app/models/StateModel", "sccomm/DeviceCommunication"], function(a) {
            var b = a("lavaca/mvc/Model"),
                c = a("app/service/WifiService"),
                d = a("app/models/BindingStateModel"),
                e = a("sccomm/ConnectedDeviceStateModel"),
                f = a("app/models/StateModel"),
                g = a("sccomm/DeviceCommunication"),
                h = b.extend(function() {
                    b.call(this, arguments)
                }, {
                    reset: function() {
                        this.set("scanNetworks", null), this.set("networks", null), this.resetVerification()
                    },
                    resetVerification: function() {
                        this.set("hasAddNetworkAndReturnConfig", !1), this.set("hasSendNetworkConfig", !1)
                    },
                    getWifiNetworksOnAccount: function() {
                        return c.getWifi().then(function(a) {
                            this.set("networks", a.networks)
                        }.bind(this))
                    },
                    scanForWifiNetworks: function() {
                        var a = $.Deferred();
                        return Modernizr.hasble ? g.expertScanForWifiNetworks().then(function(b) {
                            this.set("scanNetworks", b), a.resolve()
                        }.bind(this), function(b) {
                            a.reject(b)
                        }) : setTimeout(function() {
                            this.set("scanNetworks", [{
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobilea"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile Guest"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }, {
                                bssid: "06:18:0a:36:d9:b2",
                                security: "WPA2",
                                signal: -49,
                                ssid: "Mutual Mobile"
                            }]), a.resolve()
                        }.bind(this), 500), a
                    },
                    addNetwork: function() {
                        return c.addWifi({
                            ssid: this.get("selectedNetwork"),
                            password: this.get("networkPassword")
                        })
                    },
                    getWifiConfig: function() {
                        return c.getWifiConfig()
                    },
                    addNetworkAndReturnConfig: function() {
                        return c.addWifiAndReturnConfig({
                            ssid: this.get("selectedNetwork"),
                            password: this.get("networkPassword")
                        })
                    },
                    deleteNetwork: function(a) {
                        var b = 0;
                        if (this.get("networks")) {
                            for (var d in this.get("networks")) this.get("networks")[d].wifiId === a && (b = d);
                            this.get("networks").splice(b, 1)
                        }
                        if (a) return c.deleteWifi(a);
                        var e = $.Deferred();
                        return e.resolve()
                    },
                    sendNetworkConfig: function(a) {
                        if (1 == this.get("hasSendNetworkConfig")) {
                            var b = $.Deferred();
                            return b.resolve(), b
                        }
                        return g.setKeyedValue("SWCF", a)
                    },
                    getVersionsFromNetwork: function() {
                        var a = $.Deferred(),
                            b = e.get("macAddress").replace(/:/g, "");
                        return c.getVersions(b).then(function(b) {
                            console.log("Got versions from api ", b), this.set("latestVersions", b), a.resolve(b)
                        }.bind(this), function() {
                            a.reject()
                        }.bind(this)), a
                    },
                    getVersions: function() {
                        var a = $.Deferred(),
                            b = {
                                pump: {},
                                BAMIT: "",
                                RFS: ""
                            };
                        return g.pumpGetSoftwareVersion().then(function(a) {
                            return b.pump = a.returnObject, console.log("Got pump version"), g.expertGetBAMITVersion()
                        }.bind(this), function() {
                            a.reject({
                                Message: "There was an error getting pump software version. Try again."
                            })
                        }.bind(this)).then(function(a) {
                            return b.BAMIT = a, console.log("Got BAMIT version"), g.expertGetRFSVersion()
                        }.bind(this), function() {
                            a.reject({
                                Message: "There was an error getting BAMIT version. Try again."
                            })
                        }.bind(this)).then(function(c) {
                            b.RFS = c, console.log("Got RFS version"), console.log(b), this.set("pumpVersions", b), a.resolve(b)
                        }.bind(this), function() {
                            a.reject({
                                Message: "There was an error getting BAMIT version. Try again."
                            })
                        }.bind(this)), a
                    },
                    getNetworkStatus: function() {
                        var a = $.Deferred(),
                            b = this.get("verificationState"),
                            c = setInterval(function() {
                                g.expertGetSystemStatus().then(function(e) {
                                    b.isWifiConnected = e.returnObject.isWifiConnected, b.wifiStatus = e.returnObject.isWifiConnected ? "success" : "loading", b.isInternetConnected = e.returnObject.isInternetConnected, b.internetStatus = e.returnObject.isInternetConnected ? "success" : "loading", b.isServerConnected = e.returnObject.isServerConnected, e.returnObject && e.returnObject.isWifiConnected && e.returnObject.isInternetConnected && (a.resolve(e.returnObject), clearInterval(c), clearTimeout(f)), this.set("verificationState", b), this.set("errorString", e.returnObject.errorString), d.trigger("verificationStateChange")
                                }.bind(this), function() {
                                    return this.statusFailureCount++, console.log("expertGetSystemStatus failed:" + this.statusFailureCount), this.statusFailureCount > 2 ? (clearInterval(c), clearTimeout(f), a.reject(this.get("verificationState")), a) : (e.get("isConnected") || g.open(), void 0)
                                }.bind(this))
                            }.bind(this), 1500),
                            f = setTimeout(function() {
                                return clearInterval(c), a.reject(this.get("verificationState")), a
                            }.bind(this), 16e4);
                        return a
                    },
                    updateProgress: function() {
                        var a = $.Deferred(),
                            b = {
                                network: 0,
                                update: 0,
                                SE: 1,
                                PUMP: 1,
                                downloading: !1,
                                installing: !1
                            },
                            c = this.get("latestVersions"),
                            e = this.get("pumpVersions"),
                            f = this.get("verificationState"),
                            h = "None";
                        c.rfsVersion.toLowerCase() !== e.RFS.toLowerCase() && (h = "RFS"), c.appVersion2.toLowerCase() !== e.BAMIT.toLowerCase() && (h = "BAMIT");
                        var i = 20,
                            j = 2e4;
                        switch (h) {
                            case "None":
                                i = 3;
                                break;
                            case "RFS":
                                i = 20, f.updateInProgress = !0, f.downloadInProgress = !0, this.set("verificationState", f), d.trigger("verificationStateChange");
                                break;
                            case "BAMIT":
                                i = 20, f.updateInProgress = !0, f.downloadInProgress = !0, this.set("verificationState", f), d.trigger("verificationStateChange");
                                break;
                            default:
                                i = 5
                        }
                        console.log("update timeout", i, h);
                        var k, l = function() {
                                var a = $.Deferred();
                                return console.log("Reconnect"), g.close().then(function() {
                                    g.open().then(function() {
                                        console.log("Reconnect - SUCCESS"), a.resolve()
                                    }.bind(this), function() {
                                        a.reject()
                                    }.bind(this))
                                }.bind(this), function() {
                                    a.reject()
                                }.bind(this)), a
                            },
                            m = function() {
                                var a = this.get("verificationState");
                                return console.log("update state", b), 1 == b.network && 0 == b.update ? (a.updateInProgress = !1, a.downloadInProgress = !1, a.installInProgress = !1, this.set("verificationState", a), d.trigger("verificationStateChange"), !0) : (b.installing ? (a.updateInProgress = !0, a.downloadInProgress = !1, a.installInProgress = !0) : 5 == b.network || 6 == b.network ? (a.updateInProgress = !0, a.downloadInProgress = !0, a.installInProgress = !1, b.downloading = !0) : b.downloading && 0 == b.SE && (b.installing = !0, a.updateInProgress = !0, a.downloadInProgress = !1, a.installInProgress = !0), this.set("verificationState", a), d.trigger("verificationStateChange"), !1)
                            }.bind(this),
                            n = function() {
                                var a = $.Deferred();
                                return console.log("Get pump status"), g.pumpGetStatus().then(function() {
                                    b.PUMP = 1, console.log("Get pump status - SUCCESS"), console.log("Get SE status"), g.expertGetSystemStatus().then(function(c) {
                                        console.log("Get SE SUCCESS"), console.log(c), b.network = c.returnObject.serverStatusKey, g.expertGetStatusFrimwareUpdate().then(function(c) {
                                            b.SE = 0, b.update = c[0] > 0 || c[1] > 0, console.log("SFWU"), console.log(c, b), a.resolve()
                                        }.bind(this), function() {
                                            b.SE = 0, a.resolve()
                                        }.bind(this))
                                    }.bind(this), function() {
                                        b.SE = 0, a.resolve()
                                    }.bind(this))
                                }.bind(this), function() {
                                    b.PUMP = 0, l().then(function() {
                                        a.resolve()
                                    }.bind(this), function() {
                                        a.resolve()
                                    }.bind(this))
                                }), a
                            },
                            o = setTimeout(function() {
                                console.log("Timeouted"), f.updateInProgress = !1, f.downloadInProgress = !1, f.installInProgress = !1, d.trigger("verificationStateChange"), a.reject(), clearTimeout(k)
                            }, 60 * 1e3 * i),
                            p = function() {
                                k = setTimeout(function() {
                                    console.log("Run loop"), m() ? (console.log("READY!!!"), a.resolve(), clearTimeout(o)) : (console.log("checking state"), n().then(function() {
                                        p()
                                    }.bind(this), function() {
                                        p()
                                    }.bind(this)))
                                }.bind(this), j)
                            };
                        return p(), a
                    },
                    initVerification: function() {
                        var a = {
                            config: null,
                            isNetworkAdded: !1,
                            isBedLocated: !1,
                            bedLocatedStatus: "loading",
                            isCommunicating: !1,
                            communicatingStatus: "loading",
                            isConfigSent: !1,
                            isWifiConnected: !1,
                            wifiStatus: "loading",
                            isInternetConnected: !1,
                            internetStatus: "loading",
                            isServerConnected: !1,
                            serverStatus: "loading",
                            isVerified: !1,
                            updateInProgress: !1,
                            downloadInProgress: !1,
                            installInProgress: !1
                        };
                        this.set("verificationState", a), d.trigger("verificationStateChange")
                    },
                    cancelWifiVerification: function() {
                        this.trigger("cancelVerification")
                    },
                    wifiVerification: function() {
                        function a() {
                            this.off("cancelVerification"), f.off("pause")
                        }
                        this.initVerification();
                        var b = $.Deferred(),
                            c = this.get("verificationState"),
                            e = !1;
                        return this.on("cancelVerification", function() {
                            return console.log("cancel Verification cancel"), e = !0, b.reject({
                                shouldIgnore: !0,
                                Message: "Verification Canceled"
                            }), b
                        }.bind(this)), f.on("pause", function() {
                            return console.log("cancel Verification pause", c.internetStatus), "loading" === c.internetStatus && (e = !0, b.reject({
                                shouldIgnore: !0,
                                Message: "Verification Canceled"
                            })), b
                        }.bind(this)), console.log("getting config"), this.addNetworkAndReturnConfig().then(function(a) {
                            return e ? (console.log("skipping open"), void 0) : (console.log("got config"), console.log("opening"), this.set("hasAddNetworkAndReturnConfig", !0), c.config = a, c.isNetworkAdded = !0, this.set("verificationState", c), this.getVersionsFromNetwork().then(function() {
                                return g.open().then(function() {
                                    return this.getVersions()
                                }.bind(this), function() {
                                    b.reject({
                                        Message: "There was an error sending the configuration to the server. Try again."
                                    })
                                })
                            }.bind(this), function() {
                                b.reject({
                                    Message: "There was an error sending the configuration to the server. Try again."
                                })
                            }))
                        }.bind(this), function() {
                            return e ? void 0 : (console.log("getting config error"), a.call(this), b.reject({
                                Message: "There was an error sending the configuration to the server. Try again."
                            }), b)
                        }.bind(this)).then(function() {
                            return e ? (console.log("skipping send config"), void 0) : (console.log("opened"), console.log("sending config"), c.isBedLocated = !0, c.bedLocatedStatus = "success", c.isCommunicating = !0, c.communicatingStatus = "success", d.trigger("verificationStateChange"), this.set("verificationState", c), this.sendNetworkConfig(c.config))
                        }.bind(this), function() {
                            return e ? void 0 : (console.log("opening error"), a.call(this), b.reject({
                                Message: "There was an error communicating with the bed. Try again."
                            }), b)
                        }.bind(this)).then(function() {
                            return e ? (console.log("skipping get network status"), void 0) : (console.log("sent config"), console.log("get status"), this.set("hasSendNetworkConfig", !0), c.isConfigSent = !0, this.set("verificationState", c), this.statusFailureCount = 0, d.trigger("verificationStateChange"), this.getNetworkStatus())
                        }.bind(this), function() {
                            return e ? void 0 : (console.log("sending config error"), a.call(this), b.reject({
                                Message: "There was an error sending the configuration to the bed. Try again."
                            }), b)
                        }.bind(this)).then(function() {
                            return e ? (console.log("skipping final resolve"), void 0) : (console.log("got internet"), this.updateProgress())
                        }.bind(this), function() {
                            return e ? void 0 : (console.log("get status error"), a.call(this), b.reject({
                                Message: "There was an error getting the connection status from the bed. Try again."
                            }), b)
                        }.bind(this)).then(function() {
                            if (e) {
                                console.log("skipping final resolve"), console.log("got status final");
                                var c = this.get("verificationState");
                                c.isVerified = !0, c.serverStatus = "success", this.set("verificationState", c), d.trigger("verificationStateChange"), a.call(this), b.resolve()
                            } else {
                                console.log("got status final");
                                var c = this.get("verificationState");
                                c.isVerified = !0, c.serverStatus = "success", this.set("verificationState", c), d.trigger("verificationStateChange"), a.call(this), b.resolve()
                            }
                        }.bind(this), function() {
                            return c.serverStatus = "fail", d.trigger("verificationStateChange"), e ? void 0 : (console.log("get update error"), a.call(this), b.reject({
                                Message: "There was an error getting the connection status from the bed. Try again."
                            }), b)
                        }.bind(this)), b
                    }
                });
            return new h
        }), define("rdust!templates/bindingviews/WifiPasswordView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="password-back back">Back</button><title>').reference(b.get("title"), b, "h").write('</title><button class="password-next next">Done</button></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding form">').exists(b.get("hiddenNetwork"), b, {
                        "else": c,
                        block: d
                    }, null).write('<div id="wifi-pass"  class="input-wrapper password-wrapper"><label class="">Password</label><input type="password" autocomplete="off" autocorrect="off" autocapitalize="off" maxlength="256" needsclick /><span class="clear"></span></div>').exists(b.get("hiddenNetwork"), b, {
                        block: e
                    }, null).write('</div></div><div class="container-actions"></div></div></div>')
                }

                function c(a, b) {
                    return a.write('<p class="selected-network">Enter password for ').reference(b.get("selectedNetwork"), b, "h").write("</p>")
                }

                function d(a) {
                    return a.write('<p class="selected-network">Enter the info for the WiFi network your bed will connect to.</p><div id="wifi-ssid"  class="input-wrapper ssid-wrapper"><label class="">Network Name</label><input type="text" autocomplete="off" autocorrect="off" autocapitalize="off" maxlength="256" needsclick /><span class="clear"></span></div>')
                }

                function e(a, b) {
                    return a.write('<div class="input-wrapper" id="advanced"><input name="adv" type="checkbox" id="adv"/><label for="adv">See Advanced Options</label></div><div id="wifi-type" class="input-wrapper type-wrapper"><label for="security" class="').exists(b.get("security"), b, {
                        block: f
                    }, null).write('">Network Security</label><select id="type" name="security" needsclick>').helper("select", b, {
                        block: g
                    }, {
                        key: l
                    }).write('</select><p class="error-message"></p></br></div>')
                }

                function f(a) {
                    return a.write("reveal")
                }

                function g(a, b) {
                    return a.write('<option value="" disabled selected></option><option value="wpa" ').helper("eq", b, {
                        block: h
                    }, {
                        value: "WPA"
                    }).write('>WPA</option><option value="wpa2" ').helper("eq", b, {
                        block: i
                    }, {
                        value: "WPA2"
                    }).write('>WPA2 Personal</option><option value="wpa2e" ').helper("eq", b, {
                        block: j
                    }, {
                        value: "WPA2E"
                    }).write('>WPA2 Enterprise</option><option value="wep" ').helper("eq", b, {
                        block: k
                    }, {
                        value: "WEP"
                    }).write(">WEP</option>")
                }

                function h(a) {
                    return a.write("selected")
                }

                function i(a) {
                    return a.write("selected")
                }

                function j(a) {
                    return a.write("selected")
                }

                function k(a) {
                    return a.write("selected")
                }

                function l(a, b) {
                    return a.reference(b.get("security"), b, "h")
                }
                return a.register("templates/bindingviews/WifiPasswordView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/WifiPasswordView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/WifiPasswordView", ["require", "lavaca/mvc/View", "app/models/WifiNetworksModel", "app/models/BindingStateModel", "$", "rdust!templates/bindingviews/WifiPasswordView"], function(a) {
            function b(a) {
                a && a.attribute && "selectedNetwork" === a.attribute && (this.model = p, this.render(".selected-network"))
            }

            function c(a) {
                var b = r(a.currentTarget);
                try {
                    var c = b.siblings().closest("label");
                    c.removeClass("reveal");
                    var d = b.siblings().closest("input");
                    d.val(""), d.focus()
                } catch (e) {
                    console.log(e)
                }
            }

            function d(a) {
                a.stopPropagation(), a.preventDefault(), this.parentView.popView()
            }

            function e() {
                this.advanced = !this.advanced, r("#wifi-type").toggle(this.advanced)
            }

            function f(a) {
                p.set("security", a.currentTarget.value), this.model.set("security", a.currentTarget.value), this.render("#wifi-type label")
            }

            function g(a) {
                a.preventDefault()
            }

            function h(a) {
                var b = r(a.currentTarget);
                a.currentTarget.value.length > 0 ? (b.siblings().closest("label").addClass("reveal"), this.el.find("button.next").show()) : (b.siblings().closest("label").removeClass("reveal"), this.el.find("button.next").hide()), 13 === a.keyCode && (n.call(this), cordova && cordova.plugins && cordova.plugins.Keyboard && cordova.plugins.Keyboard.close())
            }

            function i() {
                return p.get("networkPassword") && p.get("networkPassword").length > 5 && p.get("networkPassword").length <= 256
            }

            function j() {
                return p.get("selectedNetwork") && p.get("selectedNetwork").length > 0 && p.get("selectedNetwork").length <= 256 && " " !== p.get("selectedNetwork")[0] && /[a-z0-9]/i.test(p.get("selectedNetwork"))
            }

            function k() {
                return p.get("security") && p.get("security").length > 0
            }

            function l() {
                this.hasTappedNext || (this.hasTappedNext = !0, this.hasTappedNextTimeout = setTimeout(function() {
                    this.hasTappedNext = !1
                }.bind(this), 500), n.call(this))
            }

            function m() {
                p.resetVerification(), this.parentView.pushView(".wifiverification-view")
            }

            function n() {
                if (p.set("networkPassword", r("#wifi-pass input").val()), p.get("hiddenNetwork")) {
                    var a = r("#wifi-ssid input").val();
                    if (p.set("selectedNetwork", a), j.call(this))
                        if (this.advanced)
                            if (k.call(this))
                                if (p.get("networkPassword"))
                                    if (i.call(this)) m.call(this);
                                    else {
                                        var b = "Your password needs to be at least 6 characters.";
                                        navigator && navigator.notification ? navigator.notification.alert(b, null, "Password", "OK") : alert(b)
                                    }
                    else m.call(this);
                    else {
                        var b = "You need to select network security.";
                        navigator && navigator.notification ? navigator.notification.alert(b, null, "Password", "OK") : alert(b)
                    } else if (p.get("networkPassword"))
                        if (i.call(this)) m.call(this);
                        else {
                            var b = "Your password needs to be at least 6 characters.";
                            navigator && navigator.notification ? navigator.notification.alert(b, null, "Password", "OK") : alert(b)
                        }
                    else m.call(this);
                    else {
                        var b = "You need to enter valid network name.";
                        navigator && navigator.notification ? navigator.notification.alert(b, null, "Network Name", "OK") : alert(b)
                    }
                } else if (i.call(this)) m.call(this);
                else {
                    var b = "Your password needs to be at least 6 characters.";
                    navigator && navigator.notification ? navigator.notification.alert(b, null, "Password", "OK") : alert(b)
                }
            }
            var o = a("lavaca/mvc/View"),
                p = a("app/models/WifiNetworksModel"),
                q = a("app/models/BindingStateModel"),
                r = a("$"),
                s = a("rdust!templates/bindingviews/WifiPasswordView"),
                t = o.extend(function() {
                    o.apply(this, arguments), this.mapEvent({
                        input: {
                            keyup: h.bind(this),
                            blur: g.bind(this)
                        },
                        'input[type="checkbox"]': {
                            change: e
                        },
                        "#type": {
                            change: f
                        },
                        "button.password-back": {
                            tap: d
                        },
                        "button.password-next": {
                            tap: l
                        },
                        ".clear": {
                            tap: c
                        },
                        ext: {
                            WifiNetworksModel: {
                                object: p,
                                events: {
                                    change: b.bind(this)
                                }
                            }
                        }
                    }), this.model = p
                }, {
                    constructorName: "WifiPasswordView",
                    autoRender: !0,
                    advanced: !1,
                    template: "templates/bindingviews/WifiPasswordView",
                    className: "binding-common wifipassword",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = q.get("title") || "Pair Bed", new Promise(function(b) {
                            s.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return t
        }), define("rdust!templates/bindingviews/WifiVerificationView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="updating-container">').exists(b.getPath(!1, ["verificationState", "updateInProgress"]), b, {
                        block: c
                    }, null).write('</div><div class="container"><header><button class="verification-back back-style">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><p>Your network status is being determined. This may take a couple of minutes.</p><ul class="status-container"><li class="step check located" data-status="').reference(b.getPath(!1, ["verificationState", "bedLocatedStatus"]), b, "h").write('"><i></i><span>Bed Located</span></li><li class="step check communicating" data-status="').reference(b.getPath(!1, ["verificationState", "communicatingStatus"]), b, "h").write('"><i></i><span>Communicating With Bed</span></li><li class="step check network" data-status="').reference(b.getPath(!1, ["verificationState", "wifiStatus"]), b, "h").write('"><i></i><span>Wifi Network Connection</span></li><li class="step check internet" data-status="').reference(b.getPath(!1, ["verificationState", "internetStatus"]), b, "h").write('"><i></i><span>Accessing Internet</span></li><li class="step check server" data-status="').reference(b.getPath(!1, ["verificationState", "serverStatus"]), b, "h").write('"><i></i><span>Server Status</span></li>').exists(b.getPath(!1, ["verificationState", "isVerified"]), b, {
                        block: f
                    }, null).write('</ul></div></div><div class="container-actions"><div class="error"><p class="error-string error-message">Could not connect to server</p><button class="rescan">Scan for Wifi Networks</button><button class="retry text-only half-inline">Retry</button><button class="skip-this-step text-only half-inline grey2">Set Up WiFi Later</button></div></div></div></div>')
                }

                function c(a, b) {
                    return a.write('<div class="updating"><div class="text"><p class="title">Updating Software</p><p class="description">This may take a few minutes. Please do not unplug the pump during this update.</p><br>').exists(b.getPath(!1, ["verificationState", "downloadInProgress"]), b, {
                        block: d
                    }, null).exists(b.getPath(!1, ["verificationState", "installInProgress"]), b, {
                        block: e
                    }, null).write('<div class="ptr-loader"></div></div></div>')
                }

                function d(a) {
                    return a.write('<p class="action">Downloading...</p>')
                }

                function e(a) {
                    return a.write('<p class="action">Installing...</p>')
                }

                function f(a) {
                    return a.write('<li class="step all" data-status="success"><i></i><span>All set!</span></li>')
                }
                return a.register("templates/bindingviews/WifiVerificationView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/WifiVerificationView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/WifiVerificationView", ["require", "lavaca/mvc/View", "app/models/WifiNetworksModel", "app/models/BindingStateModel", "sccomm/ConnectedDeviceStateModel", "lavaca/mvc/Router", "app/ui/views/childviews/LoadingAnimationView", "rdust!templates/bindingviews/WifiVerificationView"], function(a) {
            function b() {
                this.model = k.toObject(), this.render(".status-container"), this.render(".updating-container")
            }

            function c(a) {
                a.stopPropagation(), a.preventDefault(), this.init()
            }

            function d(a) {
                a.stopPropagation(), a.preventDefault(), this.el.find(".container-actions .error").hide(), this.parentView.rescan(), 1 == this.parentView.viewStack.length ? this.parentView.popView() : 2 == this.parentView.viewStack.length && (this.parentView.popView(), this.parentView.popView())
            }

            function e() {
                clearTimeout(this.timeout), k.cancelWifiVerification(), this.el.find(".container-actions .error").hide(), this.parentView.popView()
            }

            function f(a) {
                a.stopPropagation(), a.preventDefault(), "onlyWifi" === l.get("action") ? n.exec("/binding/exit") : this.parentView.okOrCancel("SleepIQ® Technology", "If you don’t set up WiFi, we won’t be able to get your SleepIQ® score. To get the most out of your bed, make sure to set up WiFi in your bed settings").then(function() {
                    var a = m.get("capabilities").toObject();
                    a && a.isK2 ? this.parentView.execNext("/binding/headtiltisengaging") : n.exec("/binding/exit")
                }.bind(this))
            }

            function g() {}

            function h(a) {
                var b = {
                    selectedNetwork: k.get("selectedNetwork"),
                    isPasswordProtected: k.get("isPasswordProtected"),
                    security: k.get("security"),
                    success: !1
                };
                l.writeMixPanel("PairingTrouble", {
                    troubleIssue: "WiFiConnectionFailure"
                }), l.writeMixPanel("WiFiNetworkSetup", b), this.isDisposed || (this.el.find(".container-actions .error-string").text(k.get("errorString")), this.el.find('[data-status="loading"]').attr("data-status", "fail"), this.el.find(".container-actions .error").show(), (!a || a && !a.shouldIgnore) && (a = a && a.Message ? a.Message : "Something went wrong sending the signal. Try again.", navigator && navigator.notification ? navigator.notification.alert(a, null, "Error", "OK") : alert(a)))
            }

            function i() {
                this.isDisposed || (this.timeout = setTimeout(function() {
                    this.parentView.execNext("/binding/baseline")
                }.bind(this), 2e3))
            }
            var j = a("lavaca/mvc/View"),
                k = a("app/models/WifiNetworksModel"),
                l = a("app/models/BindingStateModel"),
                m = a("sccomm/ConnectedDeviceStateModel"),
                n = a("lavaca/mvc/Router");
            LoadingAnimationView = a("app/ui/views/childviews/LoadingAnimationView");
            var o = a("rdust!templates/bindingviews/WifiVerificationView"),
                p = j.extend(function() {
                    j.apply(this, arguments), this.model = k, k.initVerification(), this.mapEvent({
                        ".troubleshoot": {
                            tap: g.bind(this)
                        },
                        "button.verification-back": {
                            tap: e
                        },
                        ".skip-this-step": {
                            tap: f.bind(this)
                        },
                        ".retry": {
                            tap: c
                        },
                        ".rescan": {
                            tap: d
                        },
                        ext: {
                            bindingState: {
                                object: l,
                                events: {
                                    verificationStateChange: b.bind(this)
                                }
                            }
                        }
                    }), this.mapChildView({
                        ".ptr-loader": {
                            TView: LoadingAnimationView,
                            model: {}
                        }
                    })
                }, {
                    constructorName: "WifiVerificationView",
                    autoRender: !0,
                    template: "templates/bindingviews/WifiVerificationView",
                    className: "binding-common wifiverification",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = l.get("title") || "Pair Bed", new Promise(function(b) {
                            o.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        "onlyWifi" === l.get("action") && this.el.find(".skip-this-step").text("Cancel"), j.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        clearTimeout(this.timeout), this.isDisposed = !0, j.prototype.dispose.apply(this, arguments)
                    },
                    init: function() {
                        if (this.el.find(".container-actions .error").hide(), this.parentView.isDemo()) {
                            var a = {
                                config: null,
                                isNetworkAdded: !1,
                                isBedLocated: !1,
                                bedLocatedStatus: "success",
                                isCommunicating: !1,
                                communicatingStatus: "success",
                                isConfigSent: !1,
                                isWifiConnected: !1,
                                wifiStatus: "success",
                                isInternetConnected: !1,
                                internetStatus: "success",
                                isServerConnected: !1,
                                serverStatus: "success",
                                isVerified: !0
                            };
                            k.set("verificationState", a), i.call(this)
                        } else k.wifiVerification().then(function() {
                            var a = {
                                selectedNetwork: k.get("selectedNetwork"),
                                isPasswordProtected: k.get("isPasswordProtected"),
                                security: k.get("security"),
                                success: !0
                            };
                            l.writeMixPanel("WiFiNetworkSetup", a), i.call(this)
                        }.bind(this), function(a) {
                            h.call(this, a)
                        }.bind(this))
                    }
                });
            return p
        }), define("rdust!templates/bindingviews/ScanForWifiView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view" data-label="Scanning for WiFi networks"></div><div class="container-content results"><div class="container-content-padding"><div class="content overflow-scroll"><div class="overflow-scroll-inner"><div class="known-networks info">').exists(b.get("networks"), b, {
                        block: c
                    }, null).write("</div><br/>").exists(b.get("scanNetworks"), b, {
                        "else": e,
                        block: f
                    }, null).write('</ul></div></div></div></div><div class="container-actions two-ctas"><button class="retry right">Rescan</button><button class="hidden-network right">Add Hidden Network</button><button class="skip-this-step text-only left">Set Up WiFi Later</button></div></div></div><div class="wifiverification-view"></div><div class="wifipassword-view"></div>')
                }

                function c(a, b) {
                    return a.write('<div class="subheader">Previously Connected Networks</div><ul class="item-list saved-networks">').section(b.get("networks"), b, {
                        block: d
                    }, null).write('</ul><p class="instructions">Remove unused networks for better network stability.</p>')
                }

                function d(a, b) {
                    return a.write('<li class="item wifi-network-saved" data-bssid="').reference(b.get("bssid"), b, "h").write('" data-network-name="').reference(b.get("ssid"), b, "h").write('" data-security="').reference(b.get("security"), b, "h").write('" data-open="false">').reference(b.get("ssid"), b, "h").write('<span data-network-id="').reference(b.get("wifiId"), b, "h").write('" class="delete">Remove</span></li>')
                }

                function e(a) {
                    return a.write('<li class="busy no-networks">Unable to find any networks. <br />Please click Rescan. If this persists, please contact Customer Service.</li>')
                }

                function f(a, b) {
                    return a.write('<p class="title">Select the WIFI network you want to use with your Sleep Number bed.</p><div class="subheader">Available Networks</div><ul class="item-list scanned-networks">').section(b.get("scanNetworks"), b, {
                        block: g
                    }, null)
                }

                function g(a, b) {
                    return a.write('<li class="item busy wifi-network" data-bssid="').reference(b.get("bssid"), b, "h").write('" data-network-name="').reference(b.get("ssid"), b, "h").write('" data-security="').reference(b.get("security"), b, "h").write('">').reference(b.get("ssid"), b, "h").write("</li>")
                }
                return a.register("templates/bindingviews/ScanForWifiView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ScanForWifiView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ScanForWifiView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/WifiNetworksModel", "app/ui/views/childviews/LoadingAnimationView", "app/ui/views/bindingviews/WifiPasswordView", "app/ui/views/bindingviews/WifiVerificationView", "sccomm/ConnectedDeviceStateModel", "app/models/BindingStateModel", "app/utils/MixPanelManager", "sccomm/DeviceCommunication", "lavaca/mvc/Router", "rdust!templates/bindingviews/ScanForWifiView"], function(a) {
            function b() {
                if ("onlyWifi" === u.get("action")) {
                    var a = {
                        selectedNetwork: null,
                        isPasswordProtected: null,
                        security: null,
                        success: !1
                    };
                    u.writeMixPanel("WiFiNetworkSetup", a), x.exec("/binding/exit")
                } else this.okOrCancel("SleepIQ® Technology", "If you don’t set up WiFi, we won’t be able to get your SleepIQ® score. To get the most out of your bed, make sure to set up WiFi in your bed settings.").then(function() {
                    var a = {
                        selectedNetwork: null,
                        isPasswordProtected: null,
                        security: null,
                        success: !1
                    };
                    u.writeMixPanel("WiFiNetworkSetup", a);
                    var b = t.get("capabilities").toObject();
                    b && b.isK2 ? this.execNext("/binding/headtiltisengaging") : x.exec("/binding/exit")
                }.bind(this))
            }

            function c(a) {
                if (!this.hasTappedNext)
                    if (this.hasTappedNext = !0, this.hasTappedNextTimeout = setTimeout(function() {
                            this.hasTappedNext = !1
                        }.bind(this), 500), a.currentTarget.dataset.other);
                    else {
                        p.set("selectedNetwork", null), p.set("hiddenNetwork", !0);
                        var b = "";
                        p.set("security", b), p.set("isPasswordProtected", !1), f.call(this)
                    }
            }

            function d() {
                this.viewStack = [], this.el.removeClass("success complete error").addClass("loading"), this.hasTappedNext = !1, p.getWifiNetworksOnAccount().then(function() {
                    if (!this.isDisposed) {
                        var a = p.get("networks") || [];
                        !this.hasSkipped && a && a.length >= 1 && "onlyWifi" != u.get("action") ? (this.hasSkipped = !0, v.prototype.setPreviousWiFiNetwork(a[0]), setTimeout(function() {
                            e.call(this), this.el.removeClass("loading").addClass("success complete")
                        }.bind(this), 400)) : !p.get("scanNetworks") || p.get("scanNetworks") && p.get("scanNetworks").length <= 0 ? n.call(this).then(function() {
                            k.call(this)
                        }.bind(this), function b(b) {
                            l.call(this, b)
                        }.bind(this)) : this.el.removeClass("loading").addClass("success complete")
                    }
                }.bind(this), function() {
                    l.call(this, "There was an error getting the existing networks on your account.")
                }.bind(this))
            }

            function e() {
                p.resetVerification(), this.pushView(".wifiverification-view")
            }

            function f() {
                var a = this;
                this.render(".wifipassword-view").then(function() {
                    a.pushView(".wifipassword-view")
                })
            }

            function g() {
                this.hasTappedNext || (this.hasTappedNext = !0, this.hasTappedNextTimeout = setTimeout(function() {
                    this.hasTappedNext = !1
                }.bind(this), 500), p.set("selectedNetwork", null), p.set("networkPassword", null), e.call(this))
            }

            function h(a) {
                if (!this.hasTappedNext)
                    if (this.hasTappedNext = !0, this.hasTappedNextTimeout = setTimeout(function() {
                            this.hasTappedNext = !1
                        }.bind(this), 500), a.currentTarget.dataset.other);
                    else {
                        $(a.currentTarget).addClass("selected").siblings().removeClass("selected"), p.set("selectedNetwork", this.el.find(a.currentTarget).attr("data-network-name")), p.set("hiddenNetwork", !1);
                        var b = a.currentTarget.dataset.security;
                        p.set("security", b), p.set("isPasswordProtected", "WPA" === b || "WEP" === b || "WPA2" === b), p.get("isPasswordProtected") ? f.call(this) : (p.set("networkPassword", ""), e.call(this))
                    }
            }

            function i(a) {
                a && a.attribute && "networks" === a.attribute && (this.model = p, this.render(".known-networks"))
            }

            function j(a) {
                console.log("delete"), a.stopPropagation(), a.preventDefault();
                var b = a.currentTarget.dataset.networkId,
                    c = $(a.currentTarget),
                    d = c.parent();
                d.siblings() && d.siblings().length ? d.remove() : this.el.find(".known-networks").remove(), p.deleteNetwork(b)
            }

            function k() {
                this.isDisposed || (this.el.removeClass("loading").addClass("success complete"), this.render(".results"))
            }

            function l(a) {
                this.isDisposed || (a = a || "Something went wrong fetching networks.", navigator && navigator.notification ? navigator.notification.alert(a, null, "Error", "OK") : alert(a), this.el.addClass("error complete").removeClass("loading"), this.render(".results"))
            }

            function m() {
                u.writeMixPanel("BedPairing", {
                    pairingAction: "Rescan"
                }), p.reset(), d.call(this)
            }

            function n() {
                var a = $.Deferred();
                return this.el.removeClass("success complete error").addClass("loading"), this.scanTimeout = setTimeout(function() {
                    return a.reject("Scanning wifi networks reached the timeout. Make sure you are within range of the bed and try again."), a
                }.bind(this), 6e4), Modernizr.hasble ? w.expertScanForWifiNetworks().then(function(b) {
                    return clearTimeout(this.scanTimeout), p.set("scanNetworks", b), a.resolve(), a
                }.bind(this), function(b) {
                    return clearTimeout(this.scanTimeout), a.reject(b), a
                }) : setTimeout(function() {
                    return clearTimeout(this.scanTimeout), p.set("scanNetworks", [{
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobilea"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile Guest"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }, {
                        bssid: "06:18:0a:36:d9:b2",
                        security: "WPA2",
                        signal: -49,
                        ssid: "Mutual Mobile"
                    }]), a.resolve(), a
                }.bind(this), 500), a
            }
            var o = a("app/ui/views/bindingviews/BaseBindingView"),
                p = a("app/models/WifiNetworksModel"),
                q = a("app/ui/views/childviews/LoadingAnimationView"),
                r = a("app/ui/views/bindingviews/WifiPasswordView"),
                s = a("app/ui/views/bindingviews/WifiVerificationView"),
                t = a("sccomm/ConnectedDeviceStateModel"),
                u = a("app/models/BindingStateModel"),
                v = a("app/utils/MixPanelManager"),
                w = a("sccomm/DeviceCommunication"),
                x = a("lavaca/mvc/Router"),
                y = a("rdust!templates/bindingviews/ScanForWifiView"),
                z = o.extend(function() {
                    o.apply(this, arguments), this.mapEvent({
                        ".scanned-networks.item-list .item": {
                            tap: h
                        },
                        ".saved-networks.item-list .item": {
                            tap: g
                        },
                        ".delete": {
                            tap: j.bind(this)
                        },
                        ".retry": {
                            tap: m.bind(this)
                        },
                        ".skip-this-step": {
                            tap: b.bind(this)
                        },
                        ".hidden-network": {
                            tap: c.bind(this)
                        },
                        ext: {
                            WifiNetworksModel: {
                                object: p,
                                events: {
                                    change: i.bind(this)
                                }
                            }
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: q,
                            model: {}
                        },
                        ".wifipassword-view": {
                            TView: r,
                            model: {}
                        },
                        ".wifiverification-view": {
                            TView: s,
                            model: {}
                        }
                    }), this.model = p, p.set("selectedNetwork", null), p.set("networkPassword", null)
                }, {
                    constructorName: "ScanForWifiView",
                    template: "templates/bindingviews/ScanForWifiView",
                    className: "binding-common scanforwifi loading",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = u.get("title") || "Pair Bed", new Promise(function(b) {
                            y.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        d.call(this), "onlyWifi" === u.get("action") && this.el.find(".skip-this-step").text("Cancel"), o.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        this.scanTimeout && clearTimeout(this.scanTimeout), this.isDisposed = !0, this.viewStack = [], o.prototype.dispose.apply(this, arguments)
                    },
                    onTapBack: function(a) {
                        this.viewStack.length > 1 ? (a && (a.preventDefault(), a.stopPropagation()), this.popView()) : "first-screen" == this.classNameAppend ? x.exec("/binding/exit") : o.prototype.onTapBack.apply(this, arguments)
                    },
                    verify: function() {
                        var a = this.getChildViews(".wifiverification-view")[0];
                        a && a.init()
                    },
                    viewStack: [],
                    pushView: function(a) {
                        ".wifiverification-view" === a && this.verify(), this.el.find(a).show(), setTimeout(function() {
                            this.el.find(a).removeClass("header-items-out").addClass("show header-items-in"), setTimeout(function() {
                                0 == this.viewStack.length ? this.el.find(">.container").hide() : this.viewStack.length > 0 && this.el.find(this.viewStack[this.viewStack.length - 1] + "").hide(), this.viewStack.push(a)
                            }.bind(this), 300)
                        }.bind(this), 10)
                    },
                    popView: function() {
                        1 == this.viewStack.length ? this.el.find(">.container").show() : this.viewStack.length > 1 && this.el.find(this.viewStack[this.viewStack.length - 2] + "").show(), this.el.find(this.viewStack[this.viewStack.length - 1]).removeClass("show header-items-in").addClass("header-items-out");
                        var a = this.viewStack[this.viewStack.length - 1];
                        this.viewStack.pop(), setTimeout(function() {
                            this.el.find(a).hide()
                        }.bind(this), 300)
                    },
                    rescan: function() {
                        p.reset(), d.call(this)
                    }
                });
            return z
        }),
        function(a) {
            function b(a) {
                var b = a.length,
                    d = c.type(a);
                return "function" === d || c.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === d || 0 === b || "number" == typeof b && b > 0 && b - 1 in a
            }
            if (!a.jQuery) {
                var c = function(a, b) {
                    return new c.fn.init(a, b)
                };
                c.isWindow = function(a) {
                    return null != a && a == a.window
                }, c.type = function(a) {
                    return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? e[g.call(a)] || "object" : typeof a
                }, c.isArray = Array.isArray || function(a) {
                    return "array" === c.type(a)
                }, c.isPlainObject = function(a) {
                    var b;
                    if (!a || "object" !== c.type(a) || a.nodeType || c.isWindow(a)) return !1;
                    try {
                        if (a.constructor && !f.call(a, "constructor") && !f.call(a.constructor.prototype, "isPrototypeOf")) return !1
                    } catch (d) {
                        return !1
                    }
                    for (b in a);
                    return void 0 === b || f.call(a, b)
                }, c.each = function(a, c, d) {
                    var e, f = 0,
                        g = a.length,
                        h = b(a);
                    if (d) {
                        if (h)
                            for (; g > f && (e = c.apply(a[f], d), e !== !1); f++);
                        else
                            for (f in a)
                                if (e = c.apply(a[f], d), e === !1) break
                    } else if (h)
                        for (; g > f && (e = c.call(a[f], f, a[f]), e !== !1); f++);
                    else
                        for (f in a)
                            if (e = c.call(a[f], f, a[f]), e === !1) break; return a
                }, c.data = function(a, b, e) {
                    if (void 0 === e) {
                        var f = a[c.expando],
                            g = f && d[f];
                        if (void 0 === b) return g;
                        if (g && b in g) return g[b]
                    } else if (void 0 !== b) {
                        var f = a[c.expando] || (a[c.expando] = ++c.uuid);
                        return d[f] = d[f] || {}, d[f][b] = e, e
                    }
                }, c.removeData = function(a, b) {
                    var e = a[c.expando],
                        f = e && d[e];
                    f && c.each(b, function(a, b) {
                        delete f[b]
                    })
                }, c.extend = function() {
                    var a, b, d, e, f, g, h = arguments[0] || {},
                        i = 1,
                        j = arguments.length,
                        k = !1;
                    for ("boolean" == typeof h && (k = h, h = arguments[i] || {}, i++), "object" != typeof h && "function" !== c.type(h) && (h = {}), i === j && (h = this, i--); j > i; i++)
                        if (null != (f = arguments[i]))
                            for (e in f) a = h[e], d = f[e], h !== d && (k && d && (c.isPlainObject(d) || (b = c.isArray(d))) ? (b ? (b = !1, g = a && c.isArray(a) ? a : []) : g = a && c.isPlainObject(a) ? a : {}, h[e] = c.extend(k, g, d)) : void 0 !== d && (h[e] = d));
                    return h
                }, c.queue = function(a, d, e) {
                    function f(a, c) {
                        var d = c || [];
                        return null != a && (b(Object(a)) ? function(a, b) {
                            for (var c = +b.length, d = 0, e = a.length; c > d;) a[e++] = b[d++];
                            if (c !== c)
                                for (; void 0 !== b[d];) a[e++] = b[d++];
                            return a.length = e, a
                        }(d, "string" == typeof a ? [a] : a) : [].push.call(d, a)), d
                    }
                    if (a) {
                        d = (d || "fx") + "queue";
                        var g = c.data(a, d);
                        return e ? (!g || c.isArray(e) ? g = c.data(a, d, f(e)) : g.push(e), g) : g || []
                    }
                }, c.dequeue = function(a, b) {
                    c.each(a.nodeType ? [a] : a, function(a, d) {
                        b = b || "fx";
                        var e = c.queue(d, b),
                            f = e.shift();
                        "inprogress" === f && (f = e.shift()), f && ("fx" === b && e.unshift("inprogress"), f.call(d, function() {
                            c.dequeue(d, b)
                        }))
                    })
                }, c.fn = c.prototype = {
                    init: function(a) {
                        if (a.nodeType) return this[0] = a, this;
                        throw new Error("Not a DOM node.")
                    },
                    offset: function() {
                        var b = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {
                            top: 0,
                            left: 0
                        };
                        return {
                            top: b.top + (a.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),
                            left: b.left + (a.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)
                        }
                    },
                    position: function() {
                        function a() {
                            for (var a = this.offsetParent || document; a && "html" === !a.nodeType.toLowerCase && "static" === a.style.position;) a = a.offsetParent;
                            return a || document
                        }
                        var b = this[0],
                            a = a.apply(b),
                            d = this.offset(),
                            e = /^(?:body|html)$/i.test(a.nodeName) ? {
                                top: 0,
                                left: 0
                            } : c(a).offset();
                        return d.top -= parseFloat(b.style.marginTop) || 0, d.left -= parseFloat(b.style.marginLeft) || 0, a.style && (e.top += parseFloat(a.style.borderTopWidth) || 0, e.left += parseFloat(a.style.borderLeftWidth) || 0), {
                            top: d.top - e.top,
                            left: d.left - e.left
                        }
                    }
                };
                var d = {};
                c.expando = "velocity" + (new Date).getTime(), c.uuid = 0;
                for (var e = {}, f = e.hasOwnProperty, g = e.toString, h = "Boolean Number String Function Array Date RegExp Object Error".split(" "), i = 0; i < h.length; i++) e["[object " + h[i] + "]"] = h[i].toLowerCase();
                c.fn.init.prototype = c.fn, a.Velocity = {
                    Utilities: c
                }
            }
        }(window),
        function(a) {
            "object" == typeof module && "object" == typeof module.exports ? module.exports = a() : "function" == typeof define && define.amd ? define("velocity", a) : a()
        }(function() {
            return function(a, b, c, d) {
                function e(a) {
                    for (var b = -1, c = a ? a.length : 0, d = []; ++b < c;) {
                        var e = a[b];
                        e && d.push(e)
                    }
                    return d
                }

                function f(a) {
                    return p.isWrapped(a) ? a = [].slice.call(a) : p.isNode(a) && (a = [a]), a
                }

                function g(a) {
                    var b = m.data(a, "velocity");
                    return null === b ? d : b
                }

                function h(a) {
                    return function(b) {
                        return Math.round(b * a) * (1 / a)
                    }
                }

                function i(a, c, d, e) {
                    function f(a, b) {
                        return 1 - 3 * b + 3 * a
                    }

                    function g(a, b) {
                        return 3 * b - 6 * a
                    }

                    function h(a) {
                        return 3 * a
                    }

                    function i(a, b, c) {
                        return ((f(b, c) * a + g(b, c)) * a + h(b)) * a
                    }

                    function j(a, b, c) {
                        return 3 * f(b, c) * a * a + 2 * g(b, c) * a + h(b)
                    }

                    function k(b, c) {
                        for (var e = 0; p > e; ++e) {
                            var f = j(c, a, d);
                            if (0 === f) return c;
                            var g = i(c, a, d) - b;
                            c -= g / f
                        }
                        return c
                    }

                    function l() {
                        for (var b = 0; t > b; ++b) x[b] = i(b * u, a, d)
                    }

                    function m(b, c, e) {
                        var f, g, h = 0;
                        do g = c + (e - c) / 2, f = i(g, a, d) - b, f > 0 ? e = g : c = g; while (Math.abs(f) > r && ++h < s);
                        return g
                    }

                    function n(b) {
                        for (var c = 0, e = 1, f = t - 1; e != f && x[e] <= b; ++e) c += u;
                        --e;
                        var g = (b - x[e]) / (x[e + 1] - x[e]),
                            h = c + g * u,
                            i = j(h, a, d);
                        return i >= q ? k(b, h) : 0 == i ? h : m(b, c, c + u)
                    }

                    function o() {
                        y = !0, (a != c || d != e) && l()
                    }
                    var p = 4,
                        q = .001,
                        r = 1e-7,
                        s = 10,
                        t = 11,
                        u = 1 / (t - 1),
                        v = "Float32Array" in b;
                    if (4 !== arguments.length) return !1;
                    for (var w = 0; 4 > w; ++w)
                        if ("number" != typeof arguments[w] || isNaN(arguments[w]) || !isFinite(arguments[w])) return !1;
                    a = Math.min(a, 1), d = Math.min(d, 1), a = Math.max(a, 0), d = Math.max(d, 0);
                    var x = v ? new Float32Array(t) : new Array(t),
                        y = !1,
                        z = function(b) {
                            return y || o(), a === c && d === e ? b : 0 === b ? 0 : 1 === b ? 1 : i(n(b), c, e)
                        };
                    z.getControlPoints = function() {
                        return [{
                            x: a,
                            y: c
                        }, {
                            x: d,
                            y: e
                        }]
                    };
                    var A = "generateBezier(" + [a, c, d, e] + ")";
                    return z.toString = function() {
                        return A
                    }, z
                }

                function j(a, b) {
                    var c = a;
                    return p.isString(a) ? t.Easings[a] || (c = !1) : c = p.isArray(a) && 1 === a.length ? h.apply(null, a) : p.isArray(a) && 2 === a.length ? u.apply(null, a.concat([b])) : p.isArray(a) && 4 === a.length ? i.apply(null, a) : !1, c === !1 && (c = t.Easings[t.defaults.easing] ? t.defaults.easing : s), c
                }

                function k(a) {
                    if (a) {
                        var b = (new Date).getTime(),
                            c = t.State.calls.length;
                        c > 1e4 && (t.State.calls = e(t.State.calls));
                        for (var f = 0; c > f; f++)
                            if (t.State.calls[f]) {
                                var h = t.State.calls[f],
                                    i = h[0],
                                    j = h[2],
                                    n = h[3],
                                    o = !!n,
                                    q = null;
                                n || (n = t.State.calls[f][3] = b - 16);
                                for (var r = Math.min((b - n) / j.duration, 1), s = 0, u = i.length; u > s; s++) {
                                    var w = i[s],
                                        y = w.element;
                                    if (g(y)) {
                                        var z = !1;
                                        if (j.display !== d && null !== j.display && "none" !== j.display) {
                                            if ("flex" === j.display) {
                                                var A = ["-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex"];
                                                m.each(A, function(a, b) {
                                                    v.setPropertyValue(y, "display", b)
                                                })
                                            }
                                            v.setPropertyValue(y, "display", j.display)
                                        }
                                        j.visibility !== d && "hidden" !== j.visibility && v.setPropertyValue(y, "visibility", j.visibility);
                                        for (var B in w)
                                            if ("element" !== B) {
                                                var C, D = w[B],
                                                    E = p.isString(D.easing) ? t.Easings[D.easing] : D.easing;
                                                if (1 === r) C = D.endValue;
                                                else {
                                                    var F = D.endValue - D.startValue;
                                                    if (C = D.startValue + F * E(r, j, F), !o && C === D.currentValue) continue
                                                }
                                                if (D.currentValue = C, "tween" === B) q = C;
                                                else {
                                                    if (v.Hooks.registered[B]) {
                                                        var G = v.Hooks.getRoot(B),
                                                            H = g(y).rootPropertyValueCache[G];
                                                        H && (D.rootPropertyValue = H)
                                                    }
                                                    var I = v.setPropertyValue(y, B, D.currentValue + (0 === parseFloat(C) ? "" : D.unitType), D.rootPropertyValue, D.scrollData);
                                                    v.Hooks.registered[B] && (g(y).rootPropertyValueCache[G] = v.Normalizations.registered[G] ? v.Normalizations.registered[G]("extract", null, I[1]) : I[1]), "transform" === I[0] && (z = !0)
                                                }
                                            }
                                        j.mobileHA && g(y).transformCache.translate3d === d && (g(y).transformCache.translate3d = "(0px, 0px, 0px)", z = !0), z && v.flushTransformCache(y)
                                    }
                                }
                                j.display !== d && "none" !== j.display && (t.State.calls[f][2].display = !1), j.visibility !== d && "hidden" !== j.visibility && (t.State.calls[f][2].visibility = !1), j.progress && j.progress.call(h[1], h[1], r, Math.max(0, n + j.duration - b), n, q), 1 === r && l(f)
                            }
                    }
                    t.State.isTicking && x(k)
                }

                function l(a, b) {
                    if (!t.State.calls[a]) return !1;
                    for (var c = t.State.calls[a][0], e = t.State.calls[a][1], f = t.State.calls[a][2], h = t.State.calls[a][4], i = !1, j = 0, k = c.length; k > j; j++) {
                        var l = c[j].element;
                        if (b || f.loop || ("none" === f.display && v.setPropertyValue(l, "display", f.display), "hidden" === f.visibility && v.setPropertyValue(l, "visibility", f.visibility)), f.loop !== !0 && (m.queue(l)[1] === d || !/\.velocityQueueEntryFlag/i.test(m.queue(l)[1])) && g(l)) {
                            g(l).isAnimating = !1, g(l).rootPropertyValueCache = {};
                            var n = !1;
                            m.each(v.Lists.transforms3D, function(a, b) {
                                var c = /^scale/.test(b) ? 1 : 0,
                                    e = g(l).transformCache[b];
                                g(l).transformCache[b] !== d && new RegExp("^\\(" + c + "[^.]").test(e) && (n = !0, delete g(l).transformCache[b])
                            }), f.mobileHA && (n = !0, delete g(l).transformCache.translate3d), n && v.flushTransformCache(l), v.Values.removeClass(l, "velocity-animating")
                        }
                        if (!b && f.complete && !f.loop && j === k - 1) try {
                            f.complete.call(e, e)
                        } catch (o) {
                            setTimeout(function() {
                                throw o
                            }, 1)
                        }
                        h && f.loop !== !0 && h(e), g(l) && f.loop === !0 && !b && (m.each(g(l).tweensContainer, function(a, b) {
                            /^rotate/.test(a) && 360 === parseFloat(b.endValue) && (b.endValue = 0, b.startValue = 360), /^backgroundPosition/.test(a) && 100 === parseFloat(b.endValue) && "%" === b.unitType && (b.endValue = 0, b.startValue = 100)
                        }), t(l, "reverse", {
                            loop: !0,
                            delay: f.delay
                        })), f.queue !== !1 && m.dequeue(l, f.queue)
                    }
                    t.State.calls[a] = !1;
                    for (var p = 0, q = t.State.calls.length; q > p; p++)
                        if (t.State.calls[p] !== !1) {
                            i = !0;
                            break
                        }
                    i === !1 && (t.State.isTicking = !1, delete t.State.calls, t.State.calls = [])
                }
                var m, n = function() {
                        if (c.documentMode) return c.documentMode;
                        for (var a = 7; a > 4; a--) {
                            var b = c.createElement("div");
                            if (b.innerHTML = "<!--[if IE " + a + "]><span></span><![endif]-->", b.getElementsByTagName("span").length) return b = null, a
                        }
                        return d
                    }(),
                    o = function() {
                        var a = 0;
                        return b.webkitRequestAnimationFrame || b.mozRequestAnimationFrame || function(b) {
                            var c, d = (new Date).getTime();
                            return c = Math.max(0, 16 - (d - a)), a = d + c, setTimeout(function() {
                                b(d + c)
                            }, c)
                        }
                    }(),
                    p = {
                        isString: function(a) {
                            return "string" == typeof a
                        },
                        isArray: Array.isArray || function(a) {
                            return "[object Array]" === Object.prototype.toString.call(a)
                        },
                        isFunction: function(a) {
                            return "[object Function]" === Object.prototype.toString.call(a)
                        },
                        isNode: function(a) {
                            return a && a.nodeType
                        },
                        isNodeList: function(a) {
                            return "object" == typeof a && /^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(a)) && a.length !== d && (0 === a.length || "object" == typeof a[0] && a[0].nodeType > 0)
                        },
                        isWrapped: function(a) {
                            return a && (a.jquery || b.Zepto && b.Zepto.zepto.isZ(a))
                        },
                        isSVG: function(a) {
                            return b.SVGElement && a instanceof b.SVGElement
                        },
                        isEmptyObject: function(a) {
                            for (var b in a) return !1;
                            return !0
                        }
                    },
                    q = !1;
                if (a.fn && a.fn.jquery ? (m = a, q = !0) : m = b.Velocity.Utilities, 8 >= n && !q) throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");
                if (7 >= n) return jQuery.fn.velocity = jQuery.fn.animate, void 0;
                var r = 400,
                    s = "swing",
                    t = {
                        State: {
                            isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
                            isAndroid: /Android/i.test(navigator.userAgent),
                            isGingerbread: /Android 2\.3\.[3-7]/i.test(navigator.userAgent),
                            isChrome: b.chrome,
                            isFirefox: /Firefox/i.test(navigator.userAgent),
                            prefixElement: c.createElement("div"),
                            prefixMatches: {},
                            scrollAnchor: null,
                            scrollPropertyLeft: null,
                            scrollPropertyTop: null,
                            isTicking: !1,
                            calls: []
                        },
                        CSS: {},
                        Utilities: m,
                        Redirects: {},
                        Easings: {},
                        Promise: b.Promise,
                        defaults: {
                            queue: "",
                            duration: r,
                            easing: s,
                            begin: d,
                            complete: d,
                            progress: d,
                            display: d,
                            visibility: d,
                            loop: !1,
                            delay: !1,
                            mobileHA: !0,
                            _cacheValues: !0
                        },
                        init: function(a) {
                            m.data(a, "velocity", {
                                isSVG: p.isSVG(a),
                                isAnimating: !1,
                                computedStyle: null,
                                tweensContainer: null,
                                rootPropertyValueCache: {},
                                transformCache: {}
                            })
                        },
                        hook: null,
                        mock: !1,
                        version: {
                            major: 1,
                            minor: 2,
                            patch: 2
                        },
                        debug: !1
                    };
                b.pageYOffset !== d ? (t.State.scrollAnchor = b, t.State.scrollPropertyLeft = "pageXOffset", t.State.scrollPropertyTop = "pageYOffset") : (t.State.scrollAnchor = c.documentElement || c.body.parentNode || c.body, t.State.scrollPropertyLeft = "scrollLeft", t.State.scrollPropertyTop = "scrollTop");
                var u = function() {
                    function a(a) {
                        return -a.tension * a.x - a.friction * a.v
                    }

                    function b(b, c, d) {
                        var e = {
                            x: b.x + d.dx * c,
                            v: b.v + d.dv * c,
                            tension: b.tension,
                            friction: b.friction
                        };
                        return {
                            dx: e.v,
                            dv: a(e)
                        }
                    }

                    function c(c, d) {
                        var e = {
                                dx: c.v,
                                dv: a(c)
                            },
                            f = b(c, .5 * d, e),
                            g = b(c, .5 * d, f),
                            h = b(c, d, g),
                            i = 1 / 6 * (e.dx + 2 * (f.dx + g.dx) + h.dx),
                            j = 1 / 6 * (e.dv + 2 * (f.dv + g.dv) + h.dv);
                        return c.x = c.x + i * d, c.v = c.v + j * d, c
                    }
                    return function d(a, b, e) {
                        var f, g, h, i = {
                                x: -1,
                                v: 0,
                                tension: null,
                                friction: null
                            },
                            j = [0],
                            k = 0,
                            l = 1e-4,
                            m = .016;
                        for (a = parseFloat(a) || 500, b = parseFloat(b) || 20, e = e || null, i.tension = a, i.friction = b, f = null !== e, f ? (k = d(a, b), g = k / e * m) : g = m;;)
                            if (h = c(h || i, g), j.push(1 + h.x), k += 16, !(Math.abs(h.x) > l && Math.abs(h.v) > l)) break;
                        return f ? function(a) {
                            return j[0 | a * (j.length - 1)]
                        } : k
                    }
                }();
                t.Easings = {
                    linear: function(a) {
                        return a
                    },
                    swing: function(a) {
                        return .5 - Math.cos(a * Math.PI) / 2
                    },
                    spring: function(a) {
                        return 1 - Math.cos(4.5 * a * Math.PI) * Math.exp(6 * -a)
                    }
                }, m.each([
                    ["ease", [.25, .1, .25, 1]],
                    ["ease-in", [.42, 0, 1, 1]],
                    ["ease-out", [0, 0, .58, 1]],
                    ["ease-in-out", [.42, 0, .58, 1]],
                    ["easeInSine", [.47, 0, .745, .715]],
                    ["easeOutSine", [.39, .575, .565, 1]],
                    ["easeInOutSine", [.445, .05, .55, .95]],
                    ["easeInQuad", [.55, .085, .68, .53]],
                    ["easeOutQuad", [.25, .46, .45, .94]],
                    ["easeInOutQuad", [.455, .03, .515, .955]],
                    ["easeInCubic", [.55, .055, .675, .19]],
                    ["easeOutCubic", [.215, .61, .355, 1]],
                    ["easeInOutCubic", [.645, .045, .355, 1]],
                    ["easeInQuart", [.895, .03, .685, .22]],
                    ["easeOutQuart", [.165, .84, .44, 1]],
                    ["easeInOutQuart", [.77, 0, .175, 1]],
                    ["easeInQuint", [.755, .05, .855, .06]],
                    ["easeOutQuint", [.23, 1, .32, 1]],
                    ["easeInOutQuint", [.86, 0, .07, 1]],
                    ["easeInExpo", [.95, .05, .795, .035]],
                    ["easeOutExpo", [.19, 1, .22, 1]],
                    ["easeInOutExpo", [1, 0, 0, 1]],
                    ["easeInCirc", [.6, .04, .98, .335]],
                    ["easeOutCirc", [.075, .82, .165, 1]],
                    ["easeInOutCirc", [.785, .135, .15, .86]]
                ], function(a, b) {
                    t.Easings[b[0]] = i.apply(null, b[1])
                });
                var v = t.CSS = {
                    RegEx: {
                        isHex: /^#([A-f\d]{3}){1,2}$/i,
                        valueUnwrap: /^[A-z]+\((.*)\)$/i,
                        wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
                        valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi
                    },
                    Lists: {
                        colors: ["fill", "stroke", "stopColor", "color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor"],
                        transformsBase: ["translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ"],
                        transforms3D: ["transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY"]
                    },
                    Hooks: {
                        templates: {
                            textShadow: ["Color X Y Blur", "black 0px 0px 0px"],
                            boxShadow: ["Color X Y Blur Spread", "black 0px 0px 0px 0px"],
                            clip: ["Top Right Bottom Left", "0px 0px 0px 0px"],
                            backgroundPosition: ["X Y", "0% 0%"],
                            transformOrigin: ["X Y Z", "50% 50% 0px"],
                            perspectiveOrigin: ["X Y", "50% 50%"]
                        },
                        registered: {},
                        register: function() {
                            for (var a = 0; a < v.Lists.colors.length; a++) {
                                var b = "color" === v.Lists.colors[a] ? "0 0 0 1" : "255 255 255 1";
                                v.Hooks.templates[v.Lists.colors[a]] = ["Red Green Blue Alpha", b]
                            }
                            var c, d, e;
                            if (n)
                                for (c in v.Hooks.templates) {
                                    d = v.Hooks.templates[c], e = d[0].split(" ");
                                    var f = d[1].match(v.RegEx.valueSplit);
                                    "Color" === e[0] && (e.push(e.shift()), f.push(f.shift()), v.Hooks.templates[c] = [e.join(" "), f.join(" ")])
                                }
                            for (c in v.Hooks.templates) {
                                d = v.Hooks.templates[c], e = d[0].split(" ");
                                for (var a in e) {
                                    var g = c + e[a],
                                        h = a;
                                    v.Hooks.registered[g] = [c, h]
                                }
                            }
                        },
                        getRoot: function(a) {
                            var b = v.Hooks.registered[a];
                            return b ? b[0] : a
                        },
                        cleanRootPropertyValue: function(a, b) {
                            return v.RegEx.valueUnwrap.test(b) && (b = b.match(v.RegEx.valueUnwrap)[1]), v.Values.isCSSNullValue(b) && (b = v.Hooks.templates[a][1]), b
                        },
                        extractValue: function(a, b) {
                            var c = v.Hooks.registered[a];
                            if (c) {
                                var d = c[0],
                                    e = c[1];
                                return b = v.Hooks.cleanRootPropertyValue(d, b), b.toString().match(v.RegEx.valueSplit)[e]
                            }
                            return b
                        },
                        injectValue: function(a, b, c) {
                            var d = v.Hooks.registered[a];
                            if (d) {
                                var e, f, g = d[0],
                                    h = d[1];
                                return c = v.Hooks.cleanRootPropertyValue(g, c), e = c.toString().match(v.RegEx.valueSplit), e[h] = b, f = e.join(" ")
                            }
                            return c
                        }
                    },
                    Normalizations: {
                        registered: {
                            clip: function(a, b, c) {
                                switch (a) {
                                    case "name":
                                        return "clip";
                                    case "extract":
                                        var d;
                                        return v.RegEx.wrappedValueAlreadyExtracted.test(c) ? d = c : (d = c.toString().match(v.RegEx.valueUnwrap), d = d ? d[1].replace(/,(\s+)?/g, " ") : c), d;
                                    case "inject":
                                        return "rect(" + c + ")"
                                }
                            },
                            blur: function(a, b, c) {
                                switch (a) {
                                    case "name":
                                        return t.State.isFirefox ? "filter" : "-webkit-filter";
                                    case "extract":
                                        var d = parseFloat(c);
                                        if (!d && 0 !== d) {
                                            var e = c.toString().match(/blur\(([0-9]+[A-z]+)\)/i);
                                            d = e ? e[1] : 0
                                        }
                                        return d;
                                    case "inject":
                                        return parseFloat(c) ? "blur(" + c + ")" : "none"
                                }
                            },
                            opacity: function(a, b, c) {
                                if (8 >= n) switch (a) {
                                    case "name":
                                        return "filter";
                                    case "extract":
                                        var d = c.toString().match(/alpha\(opacity=(.*)\)/i);
                                        return c = d ? d[1] / 100 : 1;
                                    case "inject":
                                        return b.style.zoom = 1, parseFloat(c) >= 1 ? "" : "alpha(opacity=" + parseInt(100 * parseFloat(c), 10) + ")"
                                } else switch (a) {
                                    case "name":
                                        return "opacity";
                                    case "extract":
                                        return c;
                                    case "inject":
                                        return c
                                }
                            }
                        },
                        register: function() {
                            9 >= n || t.State.isGingerbread || (v.Lists.transformsBase = v.Lists.transformsBase.concat(v.Lists.transforms3D));
                            for (var a = 0; a < v.Lists.transformsBase.length; a++) ! function() {
                                var b = v.Lists.transformsBase[a];
                                v.Normalizations.registered[b] = function(a, c, e) {
                                    switch (a) {
                                        case "name":
                                            return "transform";
                                        case "extract":
                                            return g(c) === d || g(c).transformCache[b] === d ? /^scale/i.test(b) ? 1 : 0 : g(c).transformCache[b].replace(/[()]/g, "");
                                        case "inject":
                                            var f = !1;
                                            switch (b.substr(0, b.length - 1)) {
                                                case "translate":
                                                    f = !/(%|px|em|rem|vw|vh|\d)$/i.test(e);
                                                    break;
                                                case "scal":
                                                case "scale":
                                                    t.State.isAndroid && g(c).transformCache[b] === d && 1 > e && (e = 1), f = !/(\d)$/i.test(e);
                                                    break;
                                                case "skew":
                                                    f = !/(deg|\d)$/i.test(e);
                                                    break;
                                                case "rotate":
                                                    f = !/(deg|\d)$/i.test(e)
                                            }
                                            return f || (g(c).transformCache[b] = "(" + e + ")"), g(c).transformCache[b]
                                    }
                                }
                            }();
                            for (var a = 0; a < v.Lists.colors.length; a++) ! function() {
                                var b = v.Lists.colors[a];
                                v.Normalizations.registered[b] = function(a, c, e) {
                                    switch (a) {
                                        case "name":
                                            return b;
                                        case "extract":
                                            var f;
                                            if (v.RegEx.wrappedValueAlreadyExtracted.test(e)) f = e;
                                            else {
                                                var g, h = {
                                                    black: "rgb(0, 0, 0)",
                                                    blue: "rgb(0, 0, 255)",
                                                    gray: "rgb(128, 128, 128)",
                                                    green: "rgb(0, 128, 0)",
                                                    red: "rgb(255, 0, 0)",
                                                    white: "rgb(255, 255, 255)"
                                                };
                                                /^[A-z]+$/i.test(e) ? g = h[e] !== d ? h[e] : h.black : v.RegEx.isHex.test(e) ? g = "rgb(" + v.Values.hexToRgb(e).join(" ") + ")" : /^rgba?\(/i.test(e) || (g = h.black), f = (g || e).toString().match(v.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ")
                                            }
                                            return 8 >= n || 3 !== f.split(" ").length || (f += " 1"), f;
                                        case "inject":
                                            return 8 >= n ? 4 === e.split(" ").length && (e = e.split(/\s+/).slice(0, 3).join(" ")) : 3 === e.split(" ").length && (e += " 1"), (8 >= n ? "rgb" : "rgba") + "(" + e.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")"
                                    }
                                }
                            }()
                        }
                    },
                    Names: {
                        camelCase: function(a) {
                            return a.replace(/-(\w)/g, function(a, b) {
                                return b.toUpperCase()
                            })
                        },
                        SVGAttribute: function(a) {
                            var b = "width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";
                            return (n || t.State.isAndroid && !t.State.isChrome) && (b += "|transform"), new RegExp("^(" + b + ")$", "i").test(a)
                        },
                        prefixCheck: function(a) {
                            if (t.State.prefixMatches[a]) return [t.State.prefixMatches[a], !0];
                            for (var b = ["", "Webkit", "Moz", "ms", "O"], c = 0, d = b.length; d > c; c++) {
                                var e;
                                if (e = 0 === c ? a : b[c] + a.replace(/^\w/, function(a) {
                                        return a.toUpperCase()
                                    }), p.isString(t.State.prefixElement.style[e])) return t.State.prefixMatches[a] = e, [e, !0]
                            }
                            return [a, !1]
                        }
                    },
                    Values: {
                        hexToRgb: function(a) {
                            var b, c = /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
                                d = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
                            return a = a.replace(c, function(a, b, c, d) {
                                return b + b + c + c + d + d
                            }), b = d.exec(a), b ? [parseInt(b[1], 16), parseInt(b[2], 16), parseInt(b[3], 16)] : [0, 0, 0]
                        },
                        isCSSNullValue: function(a) {
                            return 0 == a || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(a)
                        },
                        getUnitType: function(a) {
                            return /^(rotate|skew)/i.test(a) ? "deg" : /(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(a) ? "" : "px"
                        },
                        getDisplayType: function(a) {
                            var b = a && a.tagName.toString().toLowerCase();
                            return /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(b) ? "inline" : /^(li)$/i.test(b) ? "list-item" : /^(tr)$/i.test(b) ? "table-row" : /^(table)$/i.test(b) ? "table" : /^(tbody)$/i.test(b) ? "table-row-group" : "block"
                        },
                        addClass: function(a, b) {
                            a.classList ? a.classList.add(b) : a.className += (a.className.length ? " " : "") + b
                        },
                        removeClass: function(a, b) {
                            a.classList ? a.classList.remove(b) : a.className = a.className.toString().replace(new RegExp("(^|\\s)" + b.split(" ").join("|") + "(\\s|$)", "gi"), " ")
                        }
                    },
                    getPropertyValue: function(a, c, e, f) {
                        function h(a, c) {
                            function e() {
                                j && v.setPropertyValue(a, "display", "none")
                            }
                            var i = 0;
                            if (8 >= n) i = m.css(a, c);
                            else {
                                var j = !1;
                                if (/^(width|height)$/.test(c) && 0 === v.getPropertyValue(a, "display") && (j = !0, v.setPropertyValue(a, "display", v.Values.getDisplayType(a))), !f) {
                                    if ("height" === c && "border-box" !== v.getPropertyValue(a, "boxSizing").toString().toLowerCase()) {
                                        var k = a.offsetHeight - (parseFloat(v.getPropertyValue(a, "borderTopWidth")) || 0) - (parseFloat(v.getPropertyValue(a, "borderBottomWidth")) || 0) - (parseFloat(v.getPropertyValue(a, "paddingTop")) || 0) - (parseFloat(v.getPropertyValue(a, "paddingBottom")) || 0);
                                        return e(), k
                                    }
                                    if ("width" === c && "border-box" !== v.getPropertyValue(a, "boxSizing").toString().toLowerCase()) {
                                        var l = a.offsetWidth - (parseFloat(v.getPropertyValue(a, "borderLeftWidth")) || 0) - (parseFloat(v.getPropertyValue(a, "borderRightWidth")) || 0) - (parseFloat(v.getPropertyValue(a, "paddingLeft")) || 0) - (parseFloat(v.getPropertyValue(a, "paddingRight")) || 0);
                                        return e(), l
                                    }
                                }
                                var o;
                                o = g(a) === d ? b.getComputedStyle(a, null) : g(a).computedStyle ? g(a).computedStyle : g(a).computedStyle = b.getComputedStyle(a, null), "borderColor" === c && (c = "borderTopColor"), i = 9 === n && "filter" === c ? o.getPropertyValue(c) : o[c], ("" === i || null === i) && (i = a.style[c]), e()
                            }
                            if ("auto" === i && /^(top|right|bottom|left)$/i.test(c)) {
                                var p = h(a, "position");
                                ("fixed" === p || "absolute" === p && /top|left/i.test(c)) && (i = m(a).position()[c] + "px")
                            }
                            return i
                        }
                        var i;
                        if (v.Hooks.registered[c]) {
                            var j = c,
                                k = v.Hooks.getRoot(j);
                            e === d && (e = v.getPropertyValue(a, v.Names.prefixCheck(k)[0])), v.Normalizations.registered[k] && (e = v.Normalizations.registered[k]("extract", a, e)), i = v.Hooks.extractValue(j, e)
                        } else if (v.Normalizations.registered[c]) {
                            var l, o;
                            l = v.Normalizations.registered[c]("name", a), "transform" !== l && (o = h(a, v.Names.prefixCheck(l)[0]), v.Values.isCSSNullValue(o) && v.Hooks.templates[c] && (o = v.Hooks.templates[c][1])), i = v.Normalizations.registered[c]("extract", a, o)
                        }
                        if (!/^[\d-]/.test(i))
                            if (g(a) && g(a).isSVG && v.Names.SVGAttribute(c))
                                if (/^(height|width)$/i.test(c)) try {
                                    i = a.getBBox()[c]
                                } catch (p) {
                                    i = 0
                                } else i = a.getAttribute(c);
                                else i = h(a, v.Names.prefixCheck(c)[0]);
                        return v.Values.isCSSNullValue(i) && (i = 0), t.debug >= 2 && console.log("Get " + c + ": " + i), i
                    },
                    setPropertyValue: function(a, c, d, e, f) {
                        var h = c;
                        if ("scroll" === c) f.container ? f.container["scroll" + f.direction] = d : "Left" === f.direction ? b.scrollTo(d, f.alternateValue) : b.scrollTo(f.alternateValue, d);
                        else if (v.Normalizations.registered[c] && "transform" === v.Normalizations.registered[c]("name", a)) v.Normalizations.registered[c]("inject", a, d), h = "transform", d = g(a).transformCache[c];
                        else {
                            if (v.Hooks.registered[c]) {
                                var i = c,
                                    j = v.Hooks.getRoot(c);
                                e = e || v.getPropertyValue(a, j), d = v.Hooks.injectValue(i, d, e), c = j
                            }
                            if (v.Normalizations.registered[c] && (d = v.Normalizations.registered[c]("inject", a, d), c = v.Normalizations.registered[c]("name", a)), h = v.Names.prefixCheck(c)[0], 8 >= n) try {
                                a.style[h] = d
                            } catch (k) {
                                t.debug && console.log("Browser does not support [" + d + "] for [" + h + "]")
                            } else g(a) && g(a).isSVG && v.Names.SVGAttribute(c) ? a.setAttribute(c, d) : a.style[h] = d;
                            t.debug >= 2 && console.log("Set " + c + " (" + h + "): " + d)
                        }
                        return [h, d]
                    },
                    flushTransformCache: function(a) {
                        function b(b) {
                            return parseFloat(v.getPropertyValue(a, b))
                        }
                        var c = "";
                        if ((n || t.State.isAndroid && !t.State.isChrome) && g(a).isSVG) {
                            var d = {
                                translate: [b("translateX"), b("translateY")],
                                skewX: [b("skewX")],
                                skewY: [b("skewY")],
                                scale: 1 !== b("scale") ? [b("scale"), b("scale")] : [b("scaleX"), b("scaleY")],
                                rotate: [b("rotateZ"), 0, 0]
                            };
                            m.each(g(a).transformCache, function(a) {
                                /^translate/i.test(a) ? a = "translate" : /^scale/i.test(a) ? a = "scale" : /^rotate/i.test(a) && (a = "rotate"), d[a] && (c += a + "(" + d[a].join(" ") + ")" + " ", delete d[a])
                            })
                        } else {
                            var e, f;
                            m.each(g(a).transformCache, function(b) {
                                return e = g(a).transformCache[b], "transformPerspective" === b ? (f = e, !0) : (9 === n && "rotateZ" === b && (b = "rotate"), c += b + e + " ", void 0)
                            }), f && (c = "perspective" + f + " " + c)
                        }
                        v.setPropertyValue(a, "transform", c)
                    }
                };
                v.Hooks.register(), v.Normalizations.register(), t.hook = function(a, b, c) {
                    var e = d;
                    return a = f(a), m.each(a, function(a, f) {
                        if (g(f) === d && t.init(f), c === d) e === d && (e = t.CSS.getPropertyValue(f, b));
                        else {
                            var h = t.CSS.setPropertyValue(f, b, c);
                            "transform" === h[0] && t.CSS.flushTransformCache(f), e = h
                        }
                    }), e
                };
                var w = function() {
                    function a() {
                        return h ? B.promise || null : i
                    }

                    function e() {
                        function a() {
                            function a(a, b) {
                                var c = d,
                                    e = d,
                                    g = d;
                                return p.isArray(a) ? (c = a[0], !p.isArray(a[1]) && /^[\d-]/.test(a[1]) || p.isFunction(a[1]) || v.RegEx.isHex.test(a[1]) ? g = a[1] : (p.isString(a[1]) && !v.RegEx.isHex.test(a[1]) || p.isArray(a[1])) && (e = b ? a[1] : j(a[1], h.duration), a[2] !== d && (g = a[2]))) : c = a, b || (e = e || h.easing), p.isFunction(c) && (c = c.call(f, y, x)), p.isFunction(g) && (g = g.call(f, y, x)), [c || 0, e, g]
                            }

                            function l(a, b) {
                                var c, d;
                                return d = (b || "0").toString().toLowerCase().replace(/[%A-z]+$/, function(a) {
                                    return c = a, ""
                                }), c || (c = v.Values.getUnitType(a)), [d, c]
                            }

                            function n() {
                                var a = {
                                        myParent: f.parentNode || c.body,
                                        position: v.getPropertyValue(f, "position"),
                                        fontSize: v.getPropertyValue(f, "fontSize")
                                    },
                                    d = a.position === I.lastPosition && a.myParent === I.lastParent,
                                    e = a.fontSize === I.lastFontSize;
                                I.lastParent = a.myParent, I.lastPosition = a.position, I.lastFontSize = a.fontSize;
                                var h = 100,
                                    i = {};
                                if (e && d) i.emToPx = I.lastEmToPx, i.percentToPxWidth = I.lastPercentToPxWidth, i.percentToPxHeight = I.lastPercentToPxHeight;
                                else {
                                    var j = g(f).isSVG ? c.createElementNS("http://www.w3.org/2000/svg", "rect") : c.createElement("div");
                                    t.init(j), a.myParent.appendChild(j), m.each(["overflow", "overflowX", "overflowY"], function(a, b) {
                                        t.CSS.setPropertyValue(j, b, "hidden")
                                    }), t.CSS.setPropertyValue(j, "position", a.position), t.CSS.setPropertyValue(j, "fontSize", a.fontSize), t.CSS.setPropertyValue(j, "boxSizing", "content-box"), m.each(["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height"], function(a, b) {
                                        t.CSS.setPropertyValue(j, b, h + "%")
                                    }), t.CSS.setPropertyValue(j, "paddingLeft", h + "em"), i.percentToPxWidth = I.lastPercentToPxWidth = (parseFloat(v.getPropertyValue(j, "width", null, !0)) || 1) / h, i.percentToPxHeight = I.lastPercentToPxHeight = (parseFloat(v.getPropertyValue(j, "height", null, !0)) || 1) / h, i.emToPx = I.lastEmToPx = (parseFloat(v.getPropertyValue(j, "paddingLeft")) || 1) / h, a.myParent.removeChild(j)
                                }
                                return null === I.remToPx && (I.remToPx = parseFloat(v.getPropertyValue(c.body, "fontSize")) || 16), null === I.vwToPx && (I.vwToPx = parseFloat(b.innerWidth) / 100, I.vhToPx = parseFloat(b.innerHeight) / 100), i.remToPx = I.remToPx, i.vwToPx = I.vwToPx, i.vhToPx = I.vhToPx, t.debug >= 1 && console.log("Unit ratios: " + JSON.stringify(i), f), i
                            }
                            if (h.begin && 0 === y) try {
                                h.begin.call(o, o)
                            } catch (r) {
                                setTimeout(function() {
                                    throw r
                                }, 1)
                            }
                            if ("scroll" === C) {
                                var u, w, z, A = /^x$/i.test(h.axis) ? "Left" : "Top",
                                    D = parseFloat(h.offset) || 0;
                                h.container ? p.isWrapped(h.container) || p.isNode(h.container) ? (h.container = h.container[0] || h.container, u = h.container["scroll" + A], z = u + m(f).position()[A.toLowerCase()] + D) : h.container = null : (u = t.State.scrollAnchor[t.State["scrollProperty" + A]], w = t.State.scrollAnchor[t.State["scrollProperty" + ("Left" === A ? "Top" : "Left")]], z = m(f).offset()[A.toLowerCase()] + D), i = {
                                    scroll: {
                                        rootPropertyValue: !1,
                                        startValue: u,
                                        currentValue: u,
                                        endValue: z,
                                        unitType: "",
                                        easing: h.easing,
                                        scrollData: {
                                            container: h.container,
                                            direction: A,
                                            alternateValue: w
                                        }
                                    },
                                    element: f
                                }, t.debug && console.log("tweensContainer (scroll): ", i.scroll, f)
                            } else if ("reverse" === C) {
                                if (!g(f).tweensContainer) return m.dequeue(f, h.queue), void 0;
                                "none" === g(f).opts.display && (g(f).opts.display = "auto"), "hidden" === g(f).opts.visibility && (g(f).opts.visibility = "visible"), g(f).opts.loop = !1, g(f).opts.begin = null, g(f).opts.complete = null, s.easing || delete h.easing, s.duration || delete h.duration, h = m.extend({}, g(f).opts, h);
                                var E = m.extend(!0, {}, g(f).tweensContainer);
                                for (var F in E)
                                    if ("element" !== F) {
                                        var G = E[F].startValue;
                                        E[F].startValue = E[F].currentValue = E[F].endValue, E[F].endValue = G, p.isEmptyObject(s) || (E[F].easing = h.easing), t.debug && console.log("reverse tweensContainer (" + F + "): " + JSON.stringify(E[F]), f)
                                    }
                                i = E
                            } else if ("start" === C) {
                                var E;
                                g(f).tweensContainer && g(f).isAnimating === !0 && (E = g(f).tweensContainer), m.each(q, function(b, c) {
                                    if (RegExp("^" + v.Lists.colors.join("$|^") + "$").test(b)) {
                                        var e = a(c, !0),
                                            f = e[0],
                                            g = e[1],
                                            h = e[2];
                                        if (v.RegEx.isHex.test(f)) {
                                            for (var i = ["Red", "Green", "Blue"], j = v.Values.hexToRgb(f), k = h ? v.Values.hexToRgb(h) : d, l = 0; l < i.length; l++) {
                                                var m = [j[l]];
                                                g && m.push(g), k !== d && m.push(k[l]), q[b + i[l]] = m
                                            }
                                            delete q[b]
                                        }
                                    }
                                });
                                for (var H in q) {
                                    var K = a(q[H]),
                                        L = K[0],
                                        M = K[1],
                                        N = K[2];
                                    H = v.Names.camelCase(H);
                                    var O = v.Hooks.getRoot(H),
                                        P = !1;
                                    if (g(f).isSVG || "tween" === O || v.Names.prefixCheck(O)[1] !== !1 || v.Normalizations.registered[O] !== d) {
                                        (h.display !== d && null !== h.display && "none" !== h.display || h.visibility !== d && "hidden" !== h.visibility) && /opacity|filter/.test(H) && !N && 0 !== L && (N = 0), h._cacheValues && E && E[H] ? (N === d && (N = E[H].endValue + E[H].unitType), P = g(f).rootPropertyValueCache[O]) : v.Hooks.registered[H] ? N === d ? (P = v.getPropertyValue(f, O), N = v.getPropertyValue(f, H, P)) : P = v.Hooks.templates[O][1] : N === d && (N = v.getPropertyValue(f, H));
                                        var Q, R, S, T = !1;
                                        if (Q = l(H, N), N = Q[0], S = Q[1], Q = l(H, L), L = Q[0].replace(/^([+-\/*])=/, function(a, b) {
                                                return T = b, ""
                                            }), R = Q[1], N = parseFloat(N) || 0, L = parseFloat(L) || 0, "%" === R && (/^(fontSize|lineHeight)$/.test(H) ? (L /= 100, R = "em") : /^scale/.test(H) ? (L /= 100, R = "") : /(Red|Green|Blue)$/i.test(H) && (L = 255 * (L / 100), R = "")), /[\/*]/.test(T)) R = S;
                                        else if (S !== R && 0 !== N)
                                            if (0 === L) R = S;
                                            else {
                                                e = e || n();
                                                var U = /margin|padding|left|right|width|text|word|letter/i.test(H) || /X$/.test(H) || "x" === H ? "x" : "y";
                                                switch (S) {
                                                    case "%":
                                                        N *= "x" === U ? e.percentToPxWidth : e.percentToPxHeight;
                                                        break;
                                                    case "px":
                                                        break;
                                                    default:
                                                        N *= e[S + "ToPx"]
                                                }
                                                switch (R) {
                                                    case "%":
                                                        N *= 1 / ("x" === U ? e.percentToPxWidth : e.percentToPxHeight);
                                                        break;
                                                    case "px":
                                                        break;
                                                    default:
                                                        N *= 1 / e[R + "ToPx"]
                                                }
                                            }
                                        switch (T) {
                                            case "+":
                                                L = N + L;
                                                break;
                                            case "-":
                                                L = N - L;
                                                break;
                                            case "*":
                                                L = N * L;
                                                break;
                                            case "/":
                                                L = N / L
                                        }
                                        i[H] = {
                                            rootPropertyValue: P,
                                            startValue: N,
                                            currentValue: N,
                                            endValue: L,
                                            unitType: R,
                                            easing: M
                                        }, t.debug && console.log("tweensContainer (" + H + "): " + JSON.stringify(i[H]), f)
                                    } else t.debug && console.log("Skipping [" + O + "] due to a lack of browser support.")
                                }
                                i.element = f
                            }
                            i.element && (v.Values.addClass(f, "velocity-animating"), J.push(i), "" === h.queue && (g(f).tweensContainer = i, g(f).opts = h), g(f).isAnimating = !0, y === x - 1 ? (t.State.calls.push([J, o, h, null, B.resolver]), t.State.isTicking === !1 && (t.State.isTicking = !0, k())) : y++)
                        }
                        var e, f = this,
                            h = m.extend({}, t.defaults, s),
                            i = {};
                        switch (g(f) === d && t.init(f), parseFloat(h.delay) && h.queue !== !1 && m.queue(f, h.queue, function(a) {
                            t.velocityQueueEntryFlag = !0, g(f).delayTimer = {
                                setTimeout: setTimeout(a, parseFloat(h.delay)),
                                next: a
                            }
                        }), h.duration.toString().toLowerCase()) {
                            case "fast":
                                h.duration = 200;
                                break;
                            case "normal":
                                h.duration = r;
                                break;
                            case "slow":
                                h.duration = 600;
                                break;
                            default:
                                h.duration = parseFloat(h.duration) || 1
                        }
                        t.mock !== !1 && (t.mock === !0 ? h.duration = h.delay = 1 : (h.duration *= parseFloat(t.mock) || 1, h.delay *= parseFloat(t.mock) || 1)), h.easing = j(h.easing, h.duration), h.begin && !p.isFunction(h.begin) && (h.begin = null), h.progress && !p.isFunction(h.progress) && (h.progress = null), h.complete && !p.isFunction(h.complete) && (h.complete = null), h.display !== d && null !== h.display && (h.display = h.display.toString().toLowerCase(), "auto" === h.display && (h.display = t.CSS.Values.getDisplayType(f))), h.visibility !== d && null !== h.visibility && (h.visibility = h.visibility.toString().toLowerCase()), h.mobileHA = h.mobileHA && t.State.isMobile && !t.State.isGingerbread, h.queue === !1 ? h.delay ? setTimeout(a, h.delay) : a() : m.queue(f, h.queue, function(b, c) {
                            return c === !0 ? (B.promise && B.resolver(o), !0) : (t.velocityQueueEntryFlag = !0, a(b), void 0)
                        }), "" !== h.queue && "fx" !== h.queue || "inprogress" === m.queue(f)[0] || m.dequeue(f)
                    }
                    var h, i, n, o, q, s, u = arguments[0] && (arguments[0].p || m.isPlainObject(arguments[0].properties) && !arguments[0].properties.names || p.isString(arguments[0].properties));
                    if (p.isWrapped(this) ? (h = !1, n = 0, o = this, i = this) : (h = !0, n = 1, o = u ? arguments[0].elements || arguments[0].e : arguments[0]), o = f(o)) {
                        u ? (q = arguments[0].properties || arguments[0].p, s = arguments[0].options || arguments[0].o) : (q = arguments[n], s = arguments[n + 1]);
                        var x = o.length,
                            y = 0;
                        if (!/^(stop|finish)$/i.test(q) && !m.isPlainObject(s)) {
                            var z = n + 1;
                            s = {};
                            for (var A = z; A < arguments.length; A++) p.isArray(arguments[A]) || !/^(fast|normal|slow)$/i.test(arguments[A]) && !/^\d/.test(arguments[A]) ? p.isString(arguments[A]) || p.isArray(arguments[A]) ? s.easing = arguments[A] : p.isFunction(arguments[A]) && (s.complete = arguments[A]) : s.duration = arguments[A]
                        }
                        var B = {
                            promise: null,
                            resolver: null,
                            rejecter: null
                        };
                        h && t.Promise && (B.promise = new t.Promise(function(a, b) {
                            B.resolver = a, B.rejecter = b
                        }));
                        var C;
                        switch (q) {
                            case "scroll":
                                C = "scroll";
                                break;
                            case "reverse":
                                C = "reverse";
                                break;
                            case "finish":
                            case "stop":
                                m.each(o, function(a, b) {
                                    g(b) && g(b).delayTimer && (clearTimeout(g(b).delayTimer.setTimeout), g(b).delayTimer.next && g(b).delayTimer.next(), delete g(b).delayTimer)
                                });
                                var D = [];
                                return m.each(t.State.calls, function(a, b) {
                                    b && m.each(b[1], function(c, e) {
                                        var f = s === d ? "" : s;
                                        return f === !0 || b[2].queue === f || s === d && b[2].queue === !1 ? (m.each(o, function(c, d) {
                                            d === e && ((s === !0 || p.isString(s)) && (m.each(m.queue(d, p.isString(s) ? s : ""), function(a, b) {
                                                p.isFunction(b) && b(null, !0)
                                            }), m.queue(d, p.isString(s) ? s : "", [])), "stop" === q ? (g(d) && g(d).tweensContainer && f !== !1 && m.each(g(d).tweensContainer, function(a, b) {
                                                b.endValue = b.currentValue
                                            }), D.push(a)) : "finish" === q && (b[2].duration = 1))
                                        }), void 0) : !0
                                    })
                                }), "stop" === q && (m.each(D, function(a, b) {
                                    l(b, !0)
                                }), B.promise && B.resolver(o)), a();
                            default:
                                if (!m.isPlainObject(q) || p.isEmptyObject(q)) {
                                    if (p.isString(q) && t.Redirects[q]) {
                                        var E = m.extend({}, s),
                                            F = E.duration,
                                            G = E.delay || 0;
                                        return E.backwards === !0 && (o = m.extend(!0, [], o).reverse()), m.each(o, function(a, b) {
                                            parseFloat(E.stagger) ? E.delay = G + parseFloat(E.stagger) * a : p.isFunction(E.stagger) && (E.delay = G + E.stagger.call(b, a, x)), E.drag && (E.duration = parseFloat(F) || (/^(callout|transition)/.test(q) ? 1e3 : r), E.duration = Math.max(E.duration * (E.backwards ? 1 - a / x : (a + 1) / x), .75 * E.duration, 200)), t.Redirects[q].call(b, b, E || {}, a, x, o, B.promise ? B : d)
                                        }), a()
                                    }
                                    var H = "Velocity: First argument (" + q + ") was not a property map, a known action, or a registered redirect. Aborting.";
                                    return B.promise ? B.rejecter(new Error(H)) : console.log(H), a()
                                }
                                C = "start"
                        }
                        var I = {
                                lastParent: null,
                                lastPosition: null,
                                lastFontSize: null,
                                lastPercentToPxWidth: null,
                                lastPercentToPxHeight: null,
                                lastEmToPx: null,
                                remToPx: null,
                                vwToPx: null,
                                vhToPx: null
                            },
                            J = [];
                        m.each(o, function(a, b) {
                            p.isNode(b) && e.call(b)
                        });
                        var K, E = m.extend({}, t.defaults, s);
                        if (E.loop = parseInt(E.loop), K = 2 * E.loop - 1, E.loop)
                            for (var L = 0; K > L; L++) {
                                var M = {
                                    delay: E.delay,
                                    progress: E.progress
                                };
                                L === K - 1 && (M.display = E.display, M.visibility = E.visibility, M.complete = E.complete), w(o, "reverse", M)
                            }
                        return a()
                    }
                };
                t = m.extend(w, t), t.animate = w;
                var x = b.requestAnimationFrame || o;
                return t.State.isMobile || c.hidden === d || c.addEventListener("visibilitychange", function() {
                    c.hidden ? (x = function(a) {
                        return setTimeout(function() {
                            a(!0)
                        }, 16)
                    }, k()) : x = b.requestAnimationFrame || o
                }), a.Velocity = t, a !== b && (a.fn.velocity = w, a.fn.velocity.defaults = t.defaults), m.each(["Down", "Up"], function(a, b) {
                    t.Redirects["slide" + b] = function(a, c, e, f, g, h) {
                        var i = m.extend({}, c),
                            j = i.begin,
                            k = i.complete,
                            l = {
                                height: "",
                                marginTop: "",
                                marginBottom: "",
                                paddingTop: "",
                                paddingBottom: ""
                            },
                            n = {};
                        i.display === d && (i.display = "Down" === b ? "inline" === t.CSS.Values.getDisplayType(a) ? "inline-block" : "block" : "none"), i.begin = function() {
                            j && j.call(g, g);
                            for (var c in l) {
                                n[c] = a.style[c];
                                var d = t.CSS.getPropertyValue(a, c);
                                l[c] = "Down" === b ? [d, 0] : [0, d]
                            }
                            n.overflow = a.style.overflow, a.style.overflow = "hidden"
                        }, i.complete = function() {
                            for (var b in n) a.style[b] = n[b];
                            k && k.call(g, g), h && h.resolver(g)
                        }, t(a, l, i)
                    }
                }), m.each(["In", "Out"], function(a, b) {
                    t.Redirects["fade" + b] = function(a, c, e, f, g, h) {
                        var i = m.extend({}, c),
                            j = {
                                opacity: "In" === b ? 1 : 0
                            },
                            k = i.complete;
                        i.complete = e !== f - 1 ? i.begin = null : function() {
                            k && k.call(g, g), h && h.resolver(g)
                        }, i.display === d && (i.display = "In" === b ? "auto" : "none"), t(this, j, i)
                    }
                }), t
            }(window.jQuery || window.Zepto || window, window, document)
        }), define("rdust!templates/bindingviews/BaselineView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view" data-label=""></div><div class="success-container"><div class="check"></div></div><div class="container-content"><div class="container-content-padding"><p>SleepIQ<sup>&reg;</sup> technology is establishing a baseline for the bed. </p><p>Please remove all objects from the bed so SleepIQ<sup>&reg;</sup> technology can complete set up. </p></div></div><div class="container-actions"><div class="action-required"><p>Is the bed clear?</p><button class="baseline">Yes</button></div><div class="error"><p>SleepIQ<sup>&reg;</sup> was unable to set up/baselining failed</p><button class="retry">Retry</button><button class="skip-this-step text-only">Set Up SleepIQ<sup>&reg;</sup> Later</button></div></div></div></div>')
                }
                return a.register("templates/bindingviews/BaselineView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/BaselineView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/BaselineView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/ConnectedDeviceStateModel", "sccomm/DeviceCommunication", "app/service/BedService", "lavaca/mvc/Router", "app/models/BindingStateModel", "app/models/BedCollection", "app/ui/views/childviews/LoadingAnimationView", "velocity", "rdust!templates/bindingviews/BaselineView"], function(a) {
            function b() {
                this.el.addClass("busy"), this.el.find(".success-container").hide(), this.el.find(".action-required").hide(), this.el.find(".error").hide(), i.call(this)
            }

            function c() {
                var a = k.get("capabilities").toObject();
                a && a.isK2 ? this.execNext("/binding/headtiltisengaging") : this.execNext("/binding/complete")
            }

            function d() {
                "onlyBaseline" === n.get("action") ? (n.writeMixPanel("BedBaseline", {
                    success: !1
                }), m.exec("/binding/exit")) : this.okOrCancel("SleepIQ® Technology", "In order to get your SleepIQ® data, you must complete SleepIQ® set up in Bed Settings. Please contact Customer Service at 1-888-484-9263 if you are having any issues.").then(function() {
                    n.writeMixPanel("BedBaseline", {
                        success: !1
                    }), c.call(this)
                }.bind(this))
            }

            function e(a) {
                if (a && "" != a && "0" != a && 0 != a) return l.baselineBed(a);
                var b = $.Deferred();
                return b.resolve(), b
            }

            function f() {
                var a = $.Deferred(),
                    b = o.getCurrentBedModel();
                return e.call(this, b.get("sleeperLeftId")).then(function() {
                    e.call(this, b.get("sleeperRightId")).then(function() {
                        a.resolve()
                    }.bind(this), function() {
                        return a.reject(), a
                    }.bind(this))
                }.bind(this), function() {
                    return a.reject(), a
                }.bind(this)), a
            }

            function g() {
                n.writeMixPanel("BedBaseline", {
                    success: !0
                }), this.isDisposed || (this.el.find(".loading-animation-view .label").html("SleepIQ<sup>&reg;</sup> technology set up is complete! "), this.el.find(".loading-animation-view .svg-wrapper").hide(), this.el.find(".success-container").show(), this.el.find(".success-container .check").velocity({
                    opacity: "1",
                    scaleX: ["1", "spring"],
                    scaleY: ["1", "spring"]
                }), this.timeout = setTimeout(function() {
                    c.call(this)
                }.bind(this), 2e3))
            }

            function h() {
                n.writeMixPanel("BedBaseline", {
                    success: !1
                }), n.writeMixPanel("PairingTrouble", {
                    troubleIssue: "BaselineFailed"
                }), this.isDisposed || (this.el.removeClass("busy"), this.el.find(".action-required").hide(), this.el.find(".error").show())
            }

            function i() {
                n.set("startTime", moment().format()), this.el.find(".container-actions .action-required").hide(), this.el.addClass("busy"), this.el.find(".loading-animation-view .label").html("SleepIQ<sup>&reg;</sup> technology is completing set-up."), this.isDemo() ? g.call(this) : f.call(this).then(function() {
                    g.call(this)
                }.bind(this), function() {
                    h.call(this)
                }.bind(this))
            }
            var j = a("app/ui/views/bindingviews/BaseBindingView"),
                k = a("sccomm/ConnectedDeviceStateModel"),
                l = (a("sccomm/DeviceCommunication"), a("app/service/BedService")),
                m = a("lavaca/mvc/Router"),
                n = a("app/models/BindingStateModel"),
                o = a("app/models/BedCollection"),
                p = a("app/ui/views/childviews/LoadingAnimationView");
            a("velocity");
            var q = a("rdust!templates/bindingviews/BaselineView"),
                r = j.extend(function() {
                    j.apply(this, arguments), this.mapEvent({
                        "button.baseline": {
                            tap: i
                        },
                        ".retry": {
                            tap: b.bind(this)
                        },
                        ".skip-this-step": {
                            tap: d.bind(this)
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: p,
                            model: {}
                        }
                    })
                }, {
                    constructorName: "BaselineView",
                    template: "templates/bindingviews/BaselineView",
                    className: "binding-common baseline",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = n.get("title") || "Pair Bed", new Promise(function(b) {
                            q.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        "onlyBaseline" == n.get("action") && this.el.find(".skip-this-step").text("Cancel"), j.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        clearTimeout(this.timeout), this.isDisposed = !0, j.prototype.dispose.apply(this, arguments)
                    },
                    onTapBack: function() {
                        "first-screen" == this.classNameAppend ? m.exec("/binding/exit") : j.prototype.onTapBack.apply(this, arguments)
                    }
                });
            return r
        }), define("rdust!templates/bindingviews/HeadTiltIsEngagingView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><p>Your head tilt is now performing a pressure check. This will take several minutes.</p><div class="progress"><div class="bar"></div></div></div></div><div class="container-actions"><div class="error"><button class="retry">Retry</button></div><div class="possible-error"><p>We are not detecting any air pressure in your head tilt chamber. Please check your hose connections.</p><button class="halt">Pause</button><button class="skip-this-step text-only">Setup Headtilt Later</button></div></div></div></div>')
                }
                return a.register("templates/bindingviews/HeadTiltIsEngagingView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/HeadTiltIsEngagingView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/HeadTiltIsEngagingView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/DeviceCommunication", "app/ui/views/childviews/ProgressDonutView", "app/models/BindingStateModel", "lavaca/mvc/Router", "moment", "rdust!templates/bindingviews/HeadTiltIsEngagingView"], function(a) {
            function b() {
                this.execNext("/binding/startoutletbinding")
            }

            function c() {
                this.el.find(".second-chamber").css("visibility", "hidden"), this.el.find(".container-actions .error").hide(), g.call(this)
            }

            function d() {
                this.lastPercentage = null, this.lastChangeTime = null, this.el.find(".possible-error").hide(), m.pumpSetForceIdle()
            }

            function e() {
                "testHeadtilt" === o.get("action") ? (o.writeMixPanel("HeadTiltSetup", {
                    success: !1
                }), p.exec("/binding/exit")) : this.okOrCancel("SleepIQ®", "Make sure to go to settings and finish set up of head tilt in the app so that you can get the most out of your k2 bed.").then(function() {
                    o.writeMixPanel("HeadTiltSetup", {
                        success: !1
                    }), d.call(this), b.call(this)
                }.bind(this))
            }

            function f(a) {
                a > 100 && (a = 100), this.lastPercentage != a ? (this.lastPercentage = a, this.lastChangeTime = new Date) : q().diff(this.lastChangeTime) > u && this.el.find(".possible-error").show();
                var b = this.getChildViews(".progress")[0];
                b && b.setPercentage(a)
            }

            function g() {
                k.call(this).then(function() {
                    j.call(this)
                }.bind(this), function() {
                    o.writeMixPanel("PairingTrouble", {
                        troubleIssue: "HeadTiltPressureIssue"
                    }), this.el.find(".possible-error").hide(), this.el.find(".container-actions .error").show()
                }.bind(this))
            }

            function h(a, b) {
                for (var c = 0; c < a.length; c++)
                    if (a[c].side == b) return c;
                return -1
            }

            function i() {
                var a = $.Deferred(),
                    b = [];
                return this.isDemo() ? (b = [{
                    side: 1,
                    sleepnumber: 0
                }], a.resolve(b)) : m.open().then(function(c) {
                    c && c.isRightChamber && 2 == c.rightChamberType && b.push({
                        side: 0,
                        sleepnumber: 0
                    }), c && c.isLeftChamber && 2 == c.leftChamberType && b.push({
                        side: 1,
                        sleepnumber: 0
                    }), console.log(b), m.pumpGetState().then(function(c) {
                        if (c.returnObject.rightSide && c.returnObject.rightSide <= t) {
                            var d = b[h.call(this, b, 0)];
                            d && (d.sleepnumber = c.returnObject.rightSide)
                        }
                        if (c.returnObject.leftSide && c.returnObject.leftSide <= t) {
                            var e = b[h.call(this, b, 1)];
                            e && (e.sleepnumber = c.returnObject.leftSide)
                        }
                        console.log(b), a.resolve(b)
                    }.bind(this), function() {
                        a.reject()
                    }.bind(this))
                }.bind(this), function() {
                    a.reject()
                }.bind(this)), a
            }

            function j() {
                o.writeMixPanel("HeadTiltSetup", {
                    success: !0
                }), this.isDisposed || (f.call(this, 100), this.timeout = setTimeout(function() {
                    b.call(this)
                }.bind(this), 2e3))
            }

            function k() {
                var a = $.Deferred(),
                    b = 0,
                    c = 1;
                return i.call(this).then(function(d) {
                    var e = d;
                    e && 0 !== e.length || a.resolve(), e && e.length >= 1 && (e[0] && (c = e[0].side, b = e[0].sleepnumber), console.log("side:" + c + " inflateTo:" + t + " start:" + b), m.pumpEngageChamber(c, t).then(function(b) {
                        f.call(this, b), a.resolve()
                    }.bind(this), function(b) {
                        f.call(this, b), a.reject()
                    }.bind(this)).progress(function(a) {
                        f.call(this, a)
                    }.bind(this)))
                }.bind(this), function() {
                    a.reject()
                }.bind(this)), a
            }
            var l = a("app/ui/views/bindingviews/BaseBindingView"),
                m = a("sccomm/DeviceCommunication"),
                n = a("app/ui/views/childviews/ProgressDonutView"),
                o = a("app/models/BindingStateModel"),
                p = a("lavaca/mvc/Router"),
                q = a("moment"),
                r = a("rdust!templates/bindingviews/HeadTiltIsEngagingView"),
                s = l.extend(function() {
                    l.apply(this, arguments), this.mapChildView({
                        ".progress": {
                            TView: n,
                            model: {}
                        }
                    }), this.mapEvent({
                        ".retry": {
                            tap: c.bind(this)
                        },
                        ".halt": {
                            tap: d.bind(this)
                        },
                        ".skip-this-step": {
                            tap: e.bind(this)
                        }
                    })
                }, {
                    constructorName: "HeadTiltIsEngagingView",
                    template: "templates/bindingviews/HeadTiltIsEngagingView",
                    className: "binding-common headtiltisengaging",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = o.get("title") || "Pair Bed", new Promise(function(b) {
                            r.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        g.call(this), "testHeadtilt" === o.get("action") && this.el.find(".skip-this-step").text("Cancel"), l.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        clearTimeout(this.timeout), this.isDisposed = !0, m.pumpSetForceIdle(), l.prototype.dispose.apply(this, arguments)
                    },
                    onTapBack: function() {
                        "first-screen" == this.classNameAppend ? p.exec("/binding/exit") : l.prototype.onTapBack.apply(this, arguments)
                    }
                }),
                t = 15,
                u = 48e4;
            return s
        }), define("rdust!templates/bindingviews/StartOutletBindingView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><img class="full-width" src="./assets/img/outlet_pump_plugs_gradient.png" /><div class="container-content-padding"><p>Please plug your underbed light into the BLE outlet, and then plug the outlet into a working wall outlet within 8 feet of your bed.</p>').notexists(b.get("hasOutletConfigured"), b, {
                        block: c
                    }, null).write('</div></div><div class="container-actions"><button class="continue">Continue</button></div></div></div>')
                }

                function c(a) {
                    return a.write("<p>Make sure that all other unpaired outlets are unplugged.</p>")
                }
                return a.register("templates/bindingviews/StartOutletBindingView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/StartOutletBindingView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/StartOutletBindingView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/ConnectedDeviceStateModel", "sccomm/DeviceCommunication", "app/models/BindingStateModel", "rdust!templates/bindingviews/StartOutletBindingView"], function(a) {
            function b() {
                e.close();
                var a = d.get("capabilities").toObject();
                a && a.hasOutletConfigured ? this.execNext("/binding/connectbedtooutlet") : this.execNext("/binding/scanforoutlet")
            }
            var c = a("app/ui/views/bindingviews/BaseBindingView"),
                d = a("sccomm/ConnectedDeviceStateModel"),
                e = a("sccomm/DeviceCommunication"),
                f = a("app/models/BindingStateModel"),
                g = a("rdust!templates/bindingviews/StartOutletBindingView"),
                h = c.extend(function() {
                    c.apply(this, arguments), this.mapEvent({
                        ".continue": {
                            tap: b
                        }
                    })
                }, {
                    constructorName: "StartOutletBindingView",
                    template: "templates/bindingviews/StartOutletBindingView",
                    className: "binding-common startoutletbinding",
                    generateHtml: function(a) {
                        a = a || {}, a.title = f.get("title") || "Pair Bed";
                        try {
                            var b = d.get("capabilities").toObject();
                            a.hasOutletConfigured = b && b.hasOutletConfigured
                        } catch (c) {
                            a.hasOutletConfigured = !1
                        }
                        return new Promise(function(b) {
                            g.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return h
        }), define("rdust!templates/bindingviews/StartReplacingOutletView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view" data-label="Connecting to bed"></div><div class="container-content"><div class="success"><img class="full-width" src="./assets/img/outlet_pump_plugs_gradient.png" /><div class="container-content-padding"><p>Please plug your underbed light into the BLE outlet, and then plug the outlet into a working wall outlet within 8 feet of your bed.</p></div></div><div class="error"><p>We could not connect to this bed.  Please make sure you are within 8 feet of your bed.</p></div></div><div class="container-actions"><div class="success"><button class="continue">Continue</button></div><div class="error"><button class="retry">Retry</button><button class="skip text-only">Cancel Outlet Replacement</button></div></div></div></div>')
                }
                return a.register("templates/bindingviews/StartReplacingOutletView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/StartReplacingOutletView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/StartReplacingOutletView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/ui/views/childviews/LoadingAnimationView", "lavaca/mvc/Router", "sccomm/ConnectedDeviceStateModel", "sccomm/DeviceCommunication", "app/models/BindingStateModel", "rdust!templates/bindingviews/StartReplacingOutletView"], function(a) {
            function b() {
                this.el.addClass("busy"), this.el.find(".error").hide(), j.openAndRemoveOutlet().then(function() {
                    this.el.removeClass("busy"), this.el.find(".success").show(), this.el.find(".error").hide(), i.get("capabilities").set("hasOutletConfigured", !1)
                }.bind(this), function() {
                    this.el.removeClass("busy"), this.el.find(".success").hide(), this.el.find(".error").show()
                }.bind(this))
            }

            function c() {
                h.exec("/binding/exit")
            }

            function d() {
                b.call(this)
            }

            function e() {
                j.close(), this.execNext("/binding/scanforoutlet")
            }
            var f = a("app/ui/views/bindingviews/BaseBindingView"),
                g = a("app/ui/views/childviews/LoadingAnimationView"),
                h = a("lavaca/mvc/Router"),
                i = a("sccomm/ConnectedDeviceStateModel"),
                j = a("sccomm/DeviceCommunication"),
                k = a("app/models/BindingStateModel"),
                l = a("rdust!templates/bindingviews/StartReplacingOutletView"),
                m = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        ".continue": {
                            tap: e
                        },
                        ".skip": {
                            tap: c
                        },
                        ".retry": {
                            tap: d
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: g,
                            model: {}
                        }
                    })
                }, {
                    constructorName: "StartReplacingOutletView",
                    template: "templates/bindingviews/StartReplacingOutletView",
                    className: "binding-common startreplacingoutlet busy",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = k.get("title") || "Pair Bed", new Promise(function(b) {
                            l.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        b.call(this), f.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        clearTimeout(this.timeout), f.prototype.dispose.apply(this, arguments)
                    },
                    onTapBack: function() {
                        "first-screen" == this.classNameAppend ? h.exec("/binding/exit") : f.prototype.onTapBack.apply(this, arguments)
                    }
                });
            return m
        }), define("rdust!templates/bindingviews/StartTestingOutletView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view" data-label="Connecting to bed"></div><div class="container-content"><div class="success"><div class="container-content-padding"><p>Please make sure the outlet is plugged in and press continue.</p></div></div><div class="error"><p>We could not connect to this bed. Please make sure you are within 8 feet of your bed.</p></div></div><div class="container-actions"><div class="success"><button class="continue">Continue</button></div><div class="error"><button class="retry">Retry</button><button class="skip text-only">Cancel Outlet Testing</button></div></div></div></div>')
                }
                return a.register("templates/bindingviews/StartTestingOutletView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/StartTestingOutletView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/StartTestingOutletView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/ConnectedDeviceStateModel", "app/ui/views/childviews/LoadingAnimationView", "lavaca/mvc/Router", "sccomm/DeviceCommunication", "app/models/BindingStateModel", "rdust!templates/bindingviews/StartTestingOutletView"], function(a) {
            function b() {
                this.el.addClass("busy"), this.el.find(".error").hide(), j.open().then(function() {
                    this.el.removeClass("busy"), this.el.find(".success").show(), this.el.find(".error").hide()
                }.bind(this), function() {
                    this.el.find(".success").hide(), this.el.find(".error").show()
                }.bind(this))
            }

            function c() {
                i.exec("/binding/exit")
            }

            function d() {
                b.call(this)
            }

            function e() {
                j.close();
                var a = g.get("capabilities").toObject();
                a && a.hasOutletConfigured ? this.execNext("/binding/connectbedtooutlet") : this.execNext("/binding/scanforoutlet")
            }
            var f = a("app/ui/views/bindingviews/BaseBindingView"),
                g = a("sccomm/ConnectedDeviceStateModel"),
                h = a("app/ui/views/childviews/LoadingAnimationView"),
                i = a("lavaca/mvc/Router"),
                j = a("sccomm/DeviceCommunication"),
                k = a("app/models/BindingStateModel"),
                l = a("rdust!templates/bindingviews/StartTestingOutletView"),
                m = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        ".continue": {
                            tap: e
                        },
                        ".skip": {
                            tap: c
                        },
                        ".retry": {
                            tap: d
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: h,
                            model: {}
                        }
                    })
                }, {
                    constructorName: "StartTestingOutletView",
                    template: "templates/bindingviews/StartTestingOutletView",
                    className: "binding-common starttestingoutlet busy",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = k.get("title") || "Pair Bed", new Promise(function(b) {
                            l.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        b.call(this), f.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        clearTimeout(this.timeout), f.prototype.dispose.apply(this, arguments)
                    },
                    onTapBack: function() {
                        "first-screen" == this.classNameAppend ? i.exec("/binding/exit") : f.prototype.onTapBack.apply(this, arguments)
                    }
                });
            return m
        }), define("rdust!templates/bindingviews/VerifyConnectedOutletView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view" data-label="Turning on underbed light"></div><div class="container-content"><div class="action-required"><div class="container-content-padding"><p>Is your underbed light on?</p></div></div><div class="error"><img class="full-width" src="./assets/img/outlet_pump_plugs_gradient.png" /><div class="container-content-padding"><p>Ensure that your underbed light is properly plugged into the BLE outlet and the outlet is plugged into a working wall outlet.</p></div></div></div><div class="container-actions two-ctas"><div class="action-required"><button class="modal-link-next right action-yes" data-href="/binding/nameoutlet">Yes</button><button class="secondary left action-no">No</button></div><div class="error"><button class="retry">Test Again</button><button class="skip-this-step text-only">Finish Pairing Later</button></div></div></div></div>')
                }
                return a.register("templates/bindingviews/VerifyConnectedOutletView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/VerifyConnectedOutletView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/VerifyConnectedOutletView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/ConnectedDeviceStateModel", "sccomm/DeviceCommunication", "app/models/BindingStateModel", "app/ui/views/childviews/LoadingAnimationView", "lavaca/mvc/Router", "rdust!templates/bindingviews/VerifyConnectedOutletView"], function(a) {
            function b() {
                return g.get("isDemo") ? (this.el.removeClass("busy"), void 0) : (h.outletSetOutlet12(0, !0).then(function() {
                    this.el.removeClass("busy")
                }.bind(this), function() {}.bind(this)), void 0)
            }

            function c() {
                this.el.find(".action-required").hide(), this.el.find(".error").show()
            }

            function d() {
                this.el.find(".action-required").show(), this.el.find(".error").hide()
            }

            function e() {
                this.okOrCancel("SleepIQ®", "In order to get the most our of your SleepNumber bed, it's important to complete the entire bed pairing process.").then(function() {
                    k.exec("/binding/exit")
                }.bind(this))
            }
            var f = a("app/ui/views/bindingviews/BaseBindingView"),
                g = a("sccomm/ConnectedDeviceStateModel"),
                h = a("sccomm/DeviceCommunication"),
                i = a("app/models/BindingStateModel"),
                j = a("app/ui/views/childviews/LoadingAnimationView"),
                k = a("lavaca/mvc/Router"),
                l = a("rdust!templates/bindingviews/VerifyConnectedOutletView"),
                m = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        ".action-no": {
                            tap: c
                        },
                        ".retry": {
                            tap: d
                        },
                        ".skip-this-step": {
                            tap: e
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: j,
                            model: {}
                        }
                    }), b.call(this)
                }, {
                    constructorName: "VerifyConnectedOutletView",
                    template: "templates/bindingviews/VerifyConnectedOutletView",
                    className: "binding-common verifyconnectedoutlet busy",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = i.get("title") || "Pair Bed", new Promise(function(b) {
                            l.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        clearTimeout(this.timeout), f.prototype.dispose.apply(this, arguments)
                    }
                });
            return m
        }), define("rdust!templates/bindingviews/ScanQRForOutletView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><p>Scan the QR code on your outlet you wish to connect</p><button class="scan">Scan Now</button></div></div><div class="container-actions"><button class="text-only">Having trouble?</button><button class="modal-link" data-href="/binding/scanforoutlet">Find outlet using Bluetooth</button></div></div></div>')
                }
                return a.register("templates/bindingviews/ScanQRForOutletView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ScanQRForOutletView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ScanQRForOutletView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/BindingStateModel", "rdust!templates/bindingviews/ScanQRForOutletView"], function(a) {
            var b = a("app/ui/views/bindingviews/BaseBindingView"),
                c = a("app/models/BindingStateModel"),
                d = a("rdust!templates/bindingviews/ScanQRForOutletView"),
                e = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    constructorName: "ScanQRForOutletView",
                    template: "templates/bindingviews/ScanQRForOutletView",
                    className: "binding-common scanqrforoutlet",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = c.get("title") || "Pair Bed", new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return e
        }), define("rdust!templates/bindingviews/ScanForOutletView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view" data-label="We are now scanning for outlets"></div><div class="container-content"><div class="container-content-padding">').exists(b.get("items"), b, {
                        block: c
                    }, null).write('<div class="content overflow-scroll pad-top"><div class="item-list overflow-scroll-inner">').exists(b.get("items"), b, {
                        block: d
                    }, null).section(b.get("items"), b, {
                        block: e
                    }, null).notexists(b.get("items"), b, {
                        block: f
                    }, null).write('</div></div></div></div><div class="container-actions"><button class="retry right">Rescan</button><p>Make sure you are near the outlet you are trying to pair & you have recently unplugged it & plugged it back in.</p><button class="modal-link text-only half-inline" data-href="/binding/manualoutletmacaddress">Enter Manually</button><button class="skip-this-step text-only half-inline grey2">Finish Pairing Later</button></div></div></div>')
                }

                function c(a) {
                    return a.write('<p class="info left">You have outlets available for pairing. If you are not sure which to choose, unplug all outlets except the one you are pairing and rescan.</p>')
                }

                function d(a) {
                    return a.write('<div class="item-heading">Outlet List</div>')
                }

                function e(a, b) {
                    return a.write('<div class="item" data-address="').reference(b.get("address"), b, "h").write('" data-macaddress="').reference(b.get("macAddress"), b, "h").write('"><span class="name">').reference(b.get("name"), b, "h").write("</span></div>")
                }

                function f(a) {
                    return a.write('<div class="no-items-found"><p>We did not detect any outlets nearby.</p><p>Please make sure the outlet you are trying to pair is plugged in and you are within 8 feet of it.</p></div>')
                }
                return a.register("templates/bindingviews/ScanForOutletView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ScanForOutletView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ScanForOutletView", ["require", "app/ui/views/bindingviews/BaseBindingView", "lavaca/mvc/Router", "app/models/BindingStateModel", "sccomm/ConnectedDeviceStateModel", "sccomm/CommunicationHelpers", "sccomm/DeviceCommunication", "app/ui/views/childviews/LoadingAnimationView", "rdust!templates/bindingviews/ScanForOutletView"], function(a) {
            function b() {
                this.el.addClass("busy"), m.scan("outlet").then(function() {
                    if (j.writeMixPanel("ScanOutlet"), this.el && this.model) {
                        if (this.model.set("items", k.get("scanResults")), this.isDemo() && this.model.set("items", [{
                                name: "cc:12:34:a2:b4:ff",
                                address: "",
                                macAddress: "cc:12:34:a2:b4:ff",
                                type: "k2"
                            }, {
                                name: "cc:12:34:a2:b4:fe",
                                address: "",
                                macAddress: "cc:12:34:a2:b4:fe",
                                type: "k2"
                            }]), this.render(".container-content"), this.model.get("items") && 1 === this.model.get("items").length) {
                            var a = this.model.get("items")[0].address,
                                b = this.model.get("items")[0].macAddress;
                            this.el.find(".loading-animation-view .label").text("Outlet Found"), this.timeout = setTimeout(function() {
                                e.call(this, a, b)
                            }.bind(this), 500)
                        } else this.el.removeClass("busy");
                        0 == this.model.get("items").length && j.writeMixPanel("PairingTrouble", {
                            troubleIssue: "OutletNotDetected"
                        })
                    }
                }.bind(this))
            }

            function c(a) {
                return l.isMacAddress(a)
            }

            function d() {
                this.model.set("items", []), this.render(".item-list"), j.writeMixPanel("BedPairing", {
                    pairingAction: "Rescan"
                }), j.set("startScanOutletTime", moment().format()), b.call(this)
            }

            function e(a, b) {
                this.isDisposed || c.call(this, b) && (k.set("outletAddress", a), k.set("outletMacAddress", b), this.execNext("/binding/connectbedtooutlet"))
            }

            function f(a) {
                var b = this.el.find(a.currentTarget),
                    c = b.attr("data-address"),
                    d = b.attr("data-macaddress");
                e.call(this, c, d)
            }

            function g() {
                "replaceOutlet" === j.get("action") || "testOutlet" === j.get("action") ? (j.writeMixPanel("OutletSetup", {
                    success: !1,
                    bound: !1
                }), i.exec("/binding/exit")) : this.okOrCancel("SleepIQ®", "In order to get the most our of your SleepNumber bed, it's important to complete the entire bed pairing process.").then(function() {
                    j.writeMixPanel("OutletSetup", {
                        success: !1,
                        bound: !1
                    }), i.exec("/binding/exit")
                }.bind(this))
            }
            var h = a("app/ui/views/bindingviews/BaseBindingView"),
                i = a("lavaca/mvc/Router"),
                j = a("app/models/BindingStateModel"),
                k = a("sccomm/ConnectedDeviceStateModel"),
                l = a("sccomm/CommunicationHelpers"),
                m = a("sccomm/DeviceCommunication"),
                n = a("app/ui/views/childviews/LoadingAnimationView"),
                o = a("rdust!templates/bindingviews/ScanForOutletView"),
                p = h.extend(function() {
                    h.apply(this, arguments), this.mapEvent({
                        ".item-list .item": {
                            tap: f
                        },
                        "button.retry": {
                            tap: d
                        },
                        ".skip-this-step": {
                            tap: g
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: n,
                            model: {}
                        }
                    })
                }, {
                    constructorName: "ScanForOutletView",
                    template: "templates/bindingviews/ScanForOutletView",
                    className: "binding-common scanforoutlet busy",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = j.get("title") || "Pair Bed", new Promise(function(b) {
                            o.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        ("replaceOutlet" === j.get("action") || "testOutlet" === j.get("action")) && this.el.find(".skip-this-step").text("Cancel"), b.call(this), h.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        clearTimeout(this.timeout), this.isDisposed = !0, h.prototype.dispose.apply(this, arguments)
                    }
                });
            return p
        }), define("rdust!templates/bindingviews/ManualOutletMacAddressView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><img class="full-width" src="./assets/img/outlet_mac.png" /><div class="container-content-padding"><p>Unplug outlet, enter number on the back, then plug outlet back in.</p><p><input type="text" class="macaddress binding" value="" needsclick/></p></div></div><div class="container-actions"><p class="error error-message"></p><button class="continue">Continue</button></div></div></div>')
                }
                return a.register("templates/bindingviews/ManualOutletMacAddressView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ManualOutletMacAddressView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ManualOutletMacAddressView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/ConnectedDeviceStateModel", "sccomm/CommunicationHelpers", "app/models/BindingStateModel", "sccomm/DeviceCommunication", "app/utils/formatter", "rdust!templates/bindingviews/ManualOutletMacAddressView"], function(a) {
            function b(a) {
                var b = $.Deferred();
                return f.isMacAddress(a) ? (this.isDemo() && b.resolve(), h.getOutletAddressFromMacAddress(a).then(function(a) {
                    b.resolve(a)
                }, function() {
                    g.writeMixPanel("PairingTrouble", {
                        troubleIssue: "MACNotFound",
                        macAddress: a
                    }), b.reject("Not in range")
                })) : b.reject("Not valid"), b
            }

            function c() {
                var a = this.el.find("input.macaddress").val();
                this.el.find(".container-actions .error").hide(), b.call(this, a).then(function(b) {
                    e.set("outletAddress", b), e.set("outletMacAddress", a), this.execNext("/binding/connectbedtooutlet")
                }.bind(this), function(a) {
                    this.el.find(".error-message").text(a), this.el.find(".container-actions .error").show(), this.el.find(".container-actions").addClass("two-ctas")
                }.bind(this))
            }
            var d = a("app/ui/views/bindingviews/BaseBindingView"),
                e = a("sccomm/ConnectedDeviceStateModel"),
                f = a("sccomm/CommunicationHelpers"),
                g = a("app/models/BindingStateModel"),
                h = a("sccomm/DeviceCommunication"),
                i = a("app/utils/formatter"),
                j = a("rdust!templates/bindingviews/ManualOutletMacAddressView"),
                k = d.extend(function() {
                    d.apply(this, arguments), this.mapEvent({
                        "button.continue": {
                            tap: c
                        }
                    })
                }, {
                    constructorName: "ManualOutletMacAddressView",
                    template: "templates/bindingviews/ManualOutletMacAddressView",
                    className: "binding-common manualoutletmacaddress",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = g.get("title") || "Pair Bed", new Promise(function(b) {
                            j.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        new i(this.el.find("input.macaddress")[0], {
                            pattern: "{{**}}:{{**}}:{{**}}:{{**}}:{{**}}:{{**}}",
                            persistent: !1
                        }), d.prototype.onRenderSuccess.apply(this, arguments)
                    }
                });
            return k
        }), define("rdust!templates/bindingviews/ConnectBedToOutletView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><div class="action-label-container"><p class="action-label busy">Connecting pump to outlet...</p><p class="action-label success">Successfully Connected!</p><p class="action-label error">Unable to connect<br /> pump to outlet</p></div><div class="connecting-animation"><div class="bedpump"><div class="bed-check circle-check"></div></div><div class="loading-animation-view" data-dotCount="15" data-dotSize="4" data-animationduration="1500" data-animationgap="100"></div><div class="outlet"><div class="outlet-check circle-check"></div></div><div class="connection-check circle-check"></div></div></div></div><div class="container-actions"><div class="error"><p class="error-message"></p><button class="retry">Retry</button><p>Before retrying, make sure you are near the outlet you are trying to pair & you have recently unplugged it & plugged it back in.</p><button class="skip-this-step text-only">Finish Pairing Later</button></div></div></div></div>')
                }
                return a.register("templates/bindingviews/ConnectBedToOutletView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ConnectBedToOutletView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ConnectBedToOutletView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/ui/views/childviews/LoadingAnimationView", "sccomm/ConnectedDeviceStateModel", "sccomm/DeviceCommunication", "app/models/BindingStateModel", "lavaca/mvc/Router", "rdust!templates/bindingviews/ConnectBedToOutletView"], function(a) {
            function b() {
                this.el.addClass("busy"), this.el.find(".circle-check").removeClass("fail on"), this.el.find(".loading-animation-view").removeClass("fail successful"), this.el.find(".busy").show(), this.el.find(".error").hide(), this.el.find(".success").hide(), g.call(this)
            }

            function c() {
                "replaceOutlet" === l.get("action") || "testOutlet" === l.get("action") ? (l.writeMixPanel("OutletSetup", {
                    success: !1,
                    bound: !1
                }), m.exec("/binding/exit")) : this.okOrCancel("SleepIQ®", "In order to get the most our of your Sleep Number® bed, it's important to complete the entire bed pairing process.").then(function() {
                    l.writeMixPanel("OutletSetup", {
                        success: !1,
                        bound: !1
                    }), m.exec("/binding/exit")
                }.bind(this))
            }

            function d() {
                this.isDisposed || (this.el.removeClass("busy"), this.el.find(".busy").hide(), this.el.find(".success").show(), this.el.find(".circle-check").toggleClass("on"), this.el.find(".loading-animation-view").addClass("successful"), this.timeout = setTimeout(function() {
                    this.execNext("/binding/nameoutlet")
                }.bind(this), 2e3))
            }

            function e() {
                l.writeMixPanel("PairingTrouble", {
                    troubleIssue: "OutletPairing"
                }), this.isDisposed || (this.el.removeClass("busy"), this.el.find(".busy").hide(), this.el.find(".error").show(), this.el.find(".circle-check").addClass("fail on"), this.el.find(".loading-animation-view").addClass("fail"))
            }

            function f() {
                this.isDisposed || (this.el.find(".busy").hide(), this.el.find(".error").show(), this.el.find(".circle-check").addClass("fail on"), this.el.find(".loading-animation-view").addClass("fail"), "testOutlet" != l.get("action") && "replaceOutlet" != l.get("action") ? (j.get("capabilities").set("hasOutletConfigured", !1), k.close(), this.timeout = setTimeout(function() {
                    this.execNext("/binding/scanforoutlet")
                }.bind(this), 2e3)) : this.el.removeClass("busy"))
            }

            function g() {
                if (this.el.find(".busy").show(), this.el.find(".bed-check, .outlet-check").addClass("on"), j.get("isDemo")) return this.timeout = setTimeout(function() {
                    d.call(this)
                }.bind(this), 2e3), void 0;
                var a = j.get("capabilities").toObject();
                a && a.hasOutletConfigured ? k.verifyConnectedOutlet(j.get("macAddress"), 0).then(function() {
                    l.set("outletBound", !0), d.call(this)
                }.bind(this), function(a) {
                    a && this.el.find(".error-message").text(a), l.set("outletBound", !0), f.call(this)
                }.bind(this)).progress(function(a, b, c) {
                    this.el.find(".bed-check").attr("data-status", a), this.el.find(".outlet-check").attr("data-status", b), this.el.find(".connection-check").attr("data-status", c)
                }.bind(this)) : a && !a.hasOutletConfigured && k.configureOutlet(j.get("macAddress"), j.get("outletMacAddress"), 0).then(function() {
                    l.set("outletBound", !1), d.call(this)
                }.bind(this), function(a) {
                    a && this.el.find(".error-message").text(a), l.set("outletBound", !1), e.call(this)
                }.bind(this)).progress(function(a, b, c) {
                    this.el.find(".bed-check").attr("data-status", a), this.el.find(".outlet-check").attr("data-status", b), this.el.find(".connection-check").attr("data-status", c)
                }.bind(this))
            }
            var h = a("app/ui/views/bindingviews/BaseBindingView"),
                i = a("app/ui/views/childviews/LoadingAnimationView"),
                j = a("sccomm/ConnectedDeviceStateModel"),
                k = a("sccomm/DeviceCommunication"),
                l = a("app/models/BindingStateModel"),
                m = a("lavaca/mvc/Router"),
                n = a("rdust!templates/bindingviews/ConnectBedToOutletView"),
                o = h.extend(function() {
                    h.apply(this, arguments), this.mapChildView({
                        ".loading-animation-view": {
                            TView: i,
                            model: {}
                        }
                    }), this.mapEvent({
                        ".retry": {
                            tap: b
                        },
                        ".skip-this-step": {
                            tap: c.bind(this)
                        }
                    })
                }, {
                    constructorName: "ConnectBedToOutletView",
                    template: "templates/bindingviews/ConnectBedToOutletView",
                    className: "binding-common connectbedtooutlet busy",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = l.get("title") || "Pair Bed", new Promise(function(b) {
                            n.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        this.timeout = setTimeout(function() {
                            g.call(this)
                        }.bind(this), 500), ("replaceOutlet" === l.get("action") || "testOutlet" === l.get("action")) && this.el.find(".skip-this-step").text("Cancel"), h.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        clearTimeout(this.timeout), this.isDisposed = !0, h.prototype.dispose.apply(this, arguments)
                    }
                });
            return o
        }), define("rdust!templates/bindingviews/NameOutletView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title><button class="name-outlet-done next-style">Done</button></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><p class="left">Please enter a name for your connected outlet.</p><input type="text" class="name binding" maxlength="15" needsclick/></div></div><div class="container-actions"></div></div></div>')
                }
                return a.register("templates/bindingviews/NameOutletView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/NameOutletView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/NameOutletView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/DeviceCommunication", "sccomm/ConnectedDeviceStateModel", "app/models/BindingStateModel", "lavaca/mvc/Router", "rdust!templates/bindingviews/NameOutletView"], function(a) {
            function b(a) {
                a.currentTarget.value.length > 0 ? (this.model.set("networkPassword", a.currentTarget.value), this.el.find("button.next").show()) : this.el.find("button.next").hide(), 13 === a.keyCode && g.call(this)
            }

            function c() {
                g.call(this)
            }

            function d(a) {
                return a && "string" == typeof a && a.replaceAll(" ", "").length > 0
            }

            function e(a) {
                k.writeMixPanel("OutletSetup", {
                    success: !0,
                    bound: k.get("outletBound"),
                    name: a
                }), l.exec("/binding/complete")
            }

            function f(a, b) {
                var c = $.Deferred();
                return i.open().then(function() {
                    i.outletSetName(a, b).then(function() {
                        c.resolve()
                    }.bind(this), function() {
                        c.reject()
                    }.bind(this))
                }.bind(this), function() {
                    c.reject()
                }.bind(this)), c
            }

            function g() {
                var a = this.el.find("input.name").val();
                if (d.call(this, a)) {
                    if (j.get("isDemo")) return e.call(this), void 0;
                    f.call(this, 0, a).then(function() {
                        e.call(this, a)
                    }.bind(this), function() {
                        var a = "There was an error setting the outlet name.  Make sure you are within 8 feet of your bed and try again.";
                        navigator && navigator.notification ? navigator.notification.alert(a, null, "Outlet Name Error", "OK") : alert(a)
                    }.bind(this))
                } else {
                    var b = "Your outlet name cannot be empty";
                    navigator && navigator.notification ? navigator.notification.alert(b, null, "Outlet Name", "OK") : alert(b)
                }
            }
            var h = a("app/ui/views/bindingviews/BaseBindingView"),
                i = a("sccomm/DeviceCommunication"),
                j = a("sccomm/ConnectedDeviceStateModel"),
                k = a("app/models/BindingStateModel"),
                l = a("lavaca/mvc/Router"),
                m = a("rdust!templates/bindingviews/NameOutletView"),
                n = h.extend(function() {
                    h.apply(this, arguments), this.mapEvent({
                        input: {
                            keyup: b.bind(this),
                            blur: b.bind(this)
                        },
                        ".name-outlet-done": {
                            tap: c
                        }
                    })
                }, {
                    constructorName: "NameOutletView",
                    template: "templates/bindingviews/NameOutletView",
                    className: "binding-common nameoutlet",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = k.get("title") || "Pair Bed", new Promise(function(b) {
                            m.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return n
        }), define("rdust!templates/bindingviews/BindingCompleteView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><h1>Congratulations!</h1><p>').reference(b.get("message"), b, "h", ["s"]).write('</p></div></div><div class="container-actions"><button class="modal-link" data-href="/binding/exit">Go To App</button></div></div></div>')
                }
                return a.register("templates/bindingviews/BindingCompleteView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/BindingCompleteView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/BindingCompleteView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/BindingStateModel", "sccomm/ConnectedDeviceStateModel", "rdust!templates/bindingviews/BindingCompleteView"], function(a) {
            var b = a("app/ui/views/bindingviews/BaseBindingView"),
                c = a("app/models/BindingStateModel");
            a("sccomm/ConnectedDeviceStateModel");
            var d = a("rdust!templates/bindingviews/BindingCompleteView"),
                e = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    constructorName: "BindingCompleteView",
                    template: "templates/bindingviews/BindingCompleteView",
                    className: "binding-common bindingcomplete",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = c.get("title") || "Pair Bed", a.message = c.get("alternateCompleteText") ? c.get("alternateCompleteText") : "Your Sleep Number<sup>&reg;</sup> bed is now paired.", new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return e
        }), define("rdust!templates/bindingviews/ReplaceHardwareView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="content-container"><p>What hardware are you replacing?</p><div class="selection pump"><img class="full-width"/><div class="label">SleepIQ<sup>&reg;</sup> Pump</div></div><div class="selection sleepiq"><img class="full-width"/><div class="label">SleepIQ<sup>&reg;</sup> Processor</div></div></div><button class="continue">Continue</button></div></div>')
                }
                return a.register("templates/bindingviews/ReplaceHardwareView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ReplaceHardwareView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ReplaceHardwareView", ["require", "app/ui/views/bindingviews/BaseBindingView", "lavaca/mvc/Router", "app/models/BindingStateModel", "rdust!templates/bindingviews/ReplaceHardwareView"], function(a) {
            function b(a) {
                var b = this.el.find(a.currentTarget);
                this.el.find(".selection").removeClass("on"), b.addClass("on"), b.hasClass("pump") ? this.nextUrl = "/binding/replacepumpsleepiqcheck" : b.hasClass("sleepiq") && (this.nextUrl = "/binding/replacepumpsleepiqconnectnew")
            }

            function c() {
                this.nextUrl && this.execNext(this.nextUrl)
            }
            var d = a("app/ui/views/bindingviews/BaseBindingView"),
                e = a("lavaca/mvc/Router"),
                f = a("app/models/BindingStateModel"),
                g = a("rdust!templates/bindingviews/ReplaceHardwareView"),
                h = d.extend(function() {
                    d.apply(this, arguments), this.mapEvent({
                        ".selection": {
                            tap: b
                        },
                        ".continue": {
                            tap: c
                        }
                    })
                }, {
                    constructorName: "ReplaceHardwareView",
                    template: "templates/bindingviews/ReplaceHardwareView",
                    className: "binding-common replacehardware",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = f.get("title") || "Pair Bed", new Promise(function(b) {
                            g.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        d.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        d.prototype.dispose.apply(this, arguments)
                    },
                    onTapBack: function() {
                        "first-screen" == this.classNameAppend ? e.exec("/binding/exit") : d.prototype.onTapBack.apply(this, arguments)
                    }
                });
            return h
        }), define("rdust!templates/bindingviews/ReplacePumpSleepiqSwapView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><div class="initial"><p>If your old pump has a SleepIQ<sup>&reg;</sup> processor, remove the SleepIQ<sup>&reg;</sup> processor from your old pump and insert it into your new pump.</p><p>Verify that the SleepIQ<sup>&reg;</sup> computer is in place and then unplug your pump, plug it back in and wait for the first two lights to stop blinking.</p><p><img class="full-width" src="./assets/img/sleepIQ_processor.png" /></p></div></div></div><div class="container-actions"><button class="modal-link-next continue" data-href="/binding/checkhoses">Continue</button></div></div></div>')
                }
                return a.register("templates/bindingviews/ReplacePumpSleepiqSwapView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ReplacePumpSleepiqSwapView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ReplacePumpSleepiqSwapView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/BindingStateModel", "rdust!templates/bindingviews/ReplacePumpSleepiqSwapView"], function(a) {
            var b = a("app/ui/views/bindingviews/BaseBindingView"),
                c = a("app/models/BindingStateModel"),
                d = a("rdust!templates/bindingviews/ReplacePumpSleepiqSwapView"),
                e = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    constructorName: "ReplacePumpSleepiqSwapView",
                    className: "binding-common replacepumpsleepiqswap",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = c.get("title") || "Pair Bed", new Promise(function(b) {
                            d.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        b.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        b.prototype.dispose.apply(this, arguments)
                    }
                });
            return e
        }), define("rdust!templates/bindingviews/ReplacePumpSleepiqConnectNewView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="loading-animation-view" data-label="Checking for SleepIQ<sup>&reg;</sup>"></div><div class="container-content"><div class="container-content-padding"><div class="initial"><p>Insert the new SleepIQ<sup>&reg;</sup> computer in place and then unplug your pump, plug it back in and wait for the first two lights to stop blinking.</p><p><img class="full-width" src="./assets/img/sleepIQ_processor.png" /></p><p>When the first two lights stop blinking, press continue.</p></div><div class="error"><p>We still are not able to find your SleepIQ<sup>&reg;</sup> computer. Please contact support.</p></div></div></div><div class="container-actions"><div class="initial"><button class="continue">Continue</button></div><div class="error"><button class="retry">Retry</button><button class="skip text-only">Cancel and replace later</button></div></div></div></div>')
                }
                return a.register("templates/bindingviews/ReplacePumpSleepiqConnectNewView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ReplacePumpSleepiqConnectNewView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ReplacePumpSleepiqConnectNewView", ["require", "app/ui/views/bindingviews/BaseBindingView", "sccomm/DeviceCommunication", "app/models/BindingStateModel", "lavaca/mvc/Router", "app/ui/views/childviews/LoadingAnimationView", "rdust!templates/bindingviews/ReplacePumpSleepiqConnectNewView"], function(a) {
            function b() {
                this.isDisposed || (this.el.find(".loading-animation-view .label").html("SleepIQ<sup>&reg;</sup> Processor Found"), this.timeout = setTimeout(function() {
                    this.execNext("/binding/scanforwifi")
                }.bind(this), 2e3))
            }

            function c() {
                this.el.removeClass("busy"), this.el.find(".error").show()
            }

            function d() {
                this.okOrCancel("SleepIQ® Technology", "In order to get your SleepIQ® data, you must complete SleepIQ® set up. Please contact Customer Service at 1-888-484-9263 if you are having any issues.").then(function() {
                    i.exec("/binding/exit")
                }.bind(this))
            }

            function e() {
                this.el.addClass("busy"), this.el.find(".initial").hide(), g.open().then(function(a) {
                    a.hasSleepExpert ? b.call(this) : c.call(this)
                }.bind(this), function() {
                    c.call(this)
                }.bind(this))
            }
            var f = a("app/ui/views/bindingviews/BaseBindingView"),
                g = a("sccomm/DeviceCommunication"),
                h = a("app/models/BindingStateModel"),
                i = a("lavaca/mvc/Router"),
                j = a("app/ui/views/childviews/LoadingAnimationView"),
                k = a("rdust!templates/bindingviews/ReplacePumpSleepiqConnectNewView"),
                l = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        "button.retry": {
                            tap: e
                        },
                        "button.continue": {
                            tap: e
                        },
                        "button.skip": {
                            tap: d
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: j,
                            model: {}
                        }
                    })
                }, {
                    constructorName: "ReplacePumpSleepiqConnectNewView",
                    className: "binding-common replacepumpsleepiqconnectnew",
                    generateHtml: function(a) {
                        return a = a || {}, a.title = h.get("title") || "Pair Bed", new Promise(function(b) {
                            k.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        f.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        clearTimeout(this.timeout), this.isDisposed = !0, f.prototype.dispose.apply(this, arguments)
                    }
                });
            return l
        }), define("rdust!templates/bindingviews/ReplacePumpSleepiqCheckView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><div class="initial"><p>Is there a SleepIQ<sup>&reg;</sup> processor in your new pump?</p><p><img class="full-width" src="./assets/img/sleepIQ_processor.png" /></p></div></div></div><div class="container-actions two-ctas"><button class="modal-link-next yes right" data-href="/binding/checkhoses">Yes</button><button class="modal-link-next no secondary left" data-href="/binding/replacepumpsleepiqswap">No</button></div></div></div>')
                }
                return a.register("templates/bindingviews/ReplacePumpSleepiqCheckView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/ReplacePumpSleepiqCheckView", b, c)
                }
            }
        }), define("app/ui/views/bindingviews/ReplacePumpSleepiqCheckView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/BedCollection", "app/models/BindingStateModel", "rdust!templates/bindingviews/ReplacePumpSleepiqCheckView"], function(a) {
            var b = a("app/ui/views/bindingviews/BaseBindingView"),
                c = a("app/models/BedCollection"),
                d = a("app/models/BindingStateModel"),
                e = a("rdust!templates/bindingviews/ReplacePumpSleepiqCheckView"),
                f = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    constructorName: "ReplacePumpSleepiqCheckView",
                    className: "binding-common replacepumpsleepiqcheck",
                    generateHtml: function(a) {
                        a = a || {}, a.title = d.get("title") || "Pair Bed";
                        var b = c.getCurrentBedModel();
                        return b.set("macAddress", ""), new Promise(function(b) {
                            e.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        d.disposeProgress(), b.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    dispose: function() {
                        b.prototype.dispose.apply(this, arguments)
                    }
                });
            return f
        }), define("app/ui/widgets/WifiFormValidator", ["require", "lavaca/ui/Widget", "mout/object/get", "app/utils/debounce", "$"], function(a) {
            function b() {
                this.formValidated = !1, this.animateLabels = this.el.data("animate-labels") || !1, this.emailRegex = /^.{1,}@.{1,}\..{2,}/, this.numberMin = 1, this.uppercaseCharMin = 1, this.lowercaseCharMin = 1, this.lengthMin = 0, this.lengthMax = 0, this.errorMsgClass = ".error-message", this.defaultErrorMessages = {
                    required: "This is a required field.",
                    email: "Please enter a valid email format",
                    length: "This field does not meet the necessary length requirements.",
                    uppercase: "This field does not contain enough uppercase letters.",
                    number: "This field does not contain enough numbers.",
                    exclude: "Certain characters are not allowed",
                    allow: "Certain characters are not allowed.",
                    match: "The value does not equal its matching field."
                }, c.call(this)
            }

            function c() {
                this.el.find('[data-validate-onload="true"]').each(function(a, b) {
                    h.call(this, null, n(b))
                }.bind(this))
            }

            function d(a) {
                var b = n(a.currentTarget);
                f.call(this, b, "keyup"), this.animateLabels && e.call(this, b), !a || 13 !== a.which && "submit" !== a.type || j.call(this)
            }

            function e(a) {
                var b = this.el.find('label[for="' + a.attr("name") + '"]');
                b.toggleClass("reveal", a.val() ? !0 : !1)
            }

            function f(a, b) {
                var c = a.data("validation"),
                    d = c ? c.rules : null,
                    e = !1;
                if (d && d.length) {
                    for (var f = 0; f < d.length; f++) "object" == typeof d[f] ? (d[f].validated = i.call(this, a, d[f]), d[f].validated || (e = !0)) : (e = !1, console.warn("Validation rule is not an object."));
                    return a.trigger("validation", {
                        isInvalid: e,
                        eventType: b
                    }), e
                }
            }

            function g(a, b) {
                var c = this.el.find('label[for="' + a.attr("name") + '"]'),
                    d = a.hasClass("empty") ? "" : "reveal";
                b ? a.removeClass("valid") : (c.removeClass("invalid").addClass(d), a.addClass("valid").removeClass("invalid").nextAll(this.errorMsgClass).first().removeClass("reveal"))
            }

            function h(a, b, c) {
                var d, e = a ? n(a.currentTarget) : b,
                    g = e.data("validation"),
                    h = g ? g.rules : null,
                    i = e.nextAll(this.errorMsgClass).first(),
                    j = void 0 !== c ? c : f.call(this, e, "blur"),
                    k = 0,
                    m = this.el.attr("data-type");
                if (h && h.length) {
                    var o = this.el.find('label[for="' + e.attr("name") + '"]');
                    if (o.toggleClass("invalid", !!j), e.toggleClass("invalid", !!j), j) {
                        g.validated = !1;
                        for (var p = 0; p < h.length; p++) h[p].validated || (k++, d = p);
                        var q;
                        k > 1 ? "password" == h[d].requiredFor ? (q = this.defaultErrorMessages[h[d].type], q = "wep" === m ? l(h[d], "authType.wep.message") || q : l(h[d], "authType.wpa.message") || q, i.text(q).addClass("reveal")) : i.text(g.message || h[d].message || this.defaultErrorMessages[h[d].type]).addClass("reveal") : k && ("password" == h[d].requiredFor ? (q = this.defaultErrorMessages[h[d].type], q = "wep" === m ? l(h[d], "authType.wep.message") || q : l(h[d], "authType.wpa.message") || q, i.text(q).addClass("reveal")) : i.text(h[d].message || this.defaultErrorMessages[h[d].type]).addClass("reveal"))
                    } else g.validated = !0, "string" == typeof e.val() && e.val(e.val().trim()), i.text("").removeClass("reveal");
                    return k > 0 ? !1 : !0
                }
            }

            function i(a, b) {
                var c = this.el.attr("data-type"),
                    d = "true" === this.el.attr("data-enterprise") ? !0 : !1,
                    e = "string" == typeof a.val() ? a.val().trim() : a.val();
                switch (a.toggleClass("empty", "" === e).siblings().toggleClass("empty", "" === e), b.requiredFor) {
                    case "all":
                        return g.call(this, a, !e), !!e;
                    case "wpa2e":
                        return "wpa2e" !== c ? !0 : d ? "none" === c ? !1 : (g.call(this, a, !e), e ? !0 : !1) : !0;
                    case "password":
                        return "none" === c ? (g.call(this, a, !1), !0) : d ? "wep" === c ? e.length < 101 ? (g.call(this, a, !1), !0) : (g.call(this, a, !1), !1) : e.length >= 8 && e.length <= 64 ? (g.call(this, a, !1), !0) : (g.call(this, a, !0), !1) : !0;
                    case "advanced":
                        if (d) {
                            var h = this.el.find(".password");
                            return this.el.attr("data-type", e), f.call(this, h, "blur"), g.call(this, a, !e), e ? !0 : !1
                        }
                        return !0;
                    default:
                        return !1
                }
            }

            function j(a, b) {
                var c = this.el.find("[data-validation]"),
                    d = 0;
                c.each(function(a, b) {
                    h.call(this, null, n(b)) && d++
                }.bind(this)), this.formValidated = c.length === d, this.el.toggleClass("validated", this.formValidated), b && "function" == typeof b && b(this.formValidated)
            }
            var k = a("lavaca/ui/Widget"),
                l = a("mout/object/get"),
                m = a("app/utils/debounce"),
                n = a("$"),
                o = k.extend(function() {
                    k.apply(this, arguments), setTimeout(b.bind(this), 0), this.el.find("input").hammer({
                        stop_browser_behavior: {
                            userSelect: !0
                        }
                    }).on("keyup paste", m(d.bind(this), 10)), this.el.find('input[type="radio"], select').hammer({
                        stop_browser_behavior: {
                            userSelect: !0
                        }
                    }).on("change", h.bind(this)), this.el.find("input, select").hammer({
                        stop_browser_behavior: {
                            userSelect: !0
                        }
                    }).on("blur", h.bind(this)), this.el.on("validateOnload", c.bind(this)), this.el.on("validateForm", j.bind(this))
                }, {
                    dispose: function() {
                        return this.el.find("input").hammer({
                            stop_browser_behavior: {
                                userSelect: !0
                            }
                        }).on("keyup paste", d.bind(this)), this.el.find("select").hammer({
                            stop_browser_behavior: {
                                userSelect: !0
                            }
                        }).on("change", d.bind(this)), this.el.find("input, select").hammer({
                            stop_browser_behavior: {
                                userSelect: !0
                            }
                        }).on("blur", h.bind(this)), this.el.off("validateOnload", c.bind(this)), this.el.off("validateForm", j.bind(this)), k.prototype.dispose.apply(this, arguments)
                    }
                });
            return o
        }), define("app/models/validations/wifi-validations", ["require"], function() {
            return {
                wifi: JSON.stringify({
                    validated: !1,
                    message: "You need to add a wifi name.",
                    rules: [{
                        message: "You need to add a wifi name.",
                        requiredFor: "all"
                    }]
                }),
                username: JSON.stringify({
                    validated: !1,
                    message: "WPA2 Enterprise requires a username.",
                    rules: [{
                        requiredFor: "wpa2e",
                        message: "WPA2 Enterprise requires a username."
                    }]
                }),
                eap: JSON.stringify({
                    validated: !1,
                    message: "EAP is required for WPA2 Enterprise.",
                    rules: [{
                        requiredFor: "wpa2e",
                        message: "EAP is required for WPA2 Enterprise."
                    }]
                }),
                type: JSON.stringify({
                    validated: !1,
                    message: "The network type is required when using advanced settings.",
                    rules: [{
                        requiredFor: "advanced",
                        message: "The network type is required when using advanced settings."
                    }]
                }),
                password: JSON.stringify({
                    validated: !1,
                    message: "The password is invalid.",
                    rules: [{
                        requiredFor: "password",
                        type: "required",
                        authType: {
                            wpa: {
                                min: 8,
                                max: 64,
                                message: "Your password must be between 8 and 64 characters in length."
                            },
                            wep: {
                                min: 0,
                                max: 100,
                                message: "Your password cannot be longer than 100 characters in length."
                            }
                        }
                    }]
                })
            }
        }), define("rdust!templates/bindingviews/WifiDesktopView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="container"><header><button class="back desktop-back">Back</button><title>').reference(b.get("title"), b, "h").write('</title></header><div class="content-wrapper"><div class="container-content"><div class="container-content-padding"><div class="download-instructions"><p>Your browser has downloaded a file named Bam-init.conf to your downloads folder.</p><p>Please transfer this file to an empty USB drive.</p><p>Unplug the power cord to your pump and insert the USB stick into the back of your bed&rsquo;s pump.</p><p>After the pump has been unplugged for at least 10 seconds, reconnect the power to your pump.</p><p>Do not unplug the USB stick until all 5 lights are solid.</p><p>This process typically takes 2 minutes, but could take up to 10 minutes.</p></div><div class="network-list-functionality"><div class="networks">').exists(b.get("networks"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><button class="add primary2">Add a WiFi Network</button></div><div class="network-add-functionality"><p>Add a new WiFi network.</p><form class="form" data-animate-labels="true" data-type="').exists(b.getPath(!1, ["networkModel", "typeString"]), b, {
                        "else": f,
                        block: g
                    }, null).write('" data-enterprise="false"><!-- chrome autofill hack --><input style="display:none;" type="text" name="somefakename" /><input style="display:none;" type="password" name="anotherfakename" /><div class="input-wrapper"><label for="wifi" class="').exists(b.getPath(!1, ["networkModel", "wifiName"]), b, {
                        block: h
                    }, null).write('">Home WiFi Network</label><input autocomplete="false" name="wifi" type="text" id="network-name" maxlength="100" value="').reference(b.getPath(!1, ["networkModel", "wifiName"]), b, "h").write('" data-validation="').reference(b.getPath(!1, ["wifiValidations", "wifi"]), b, "h").write('" needsclick/><span class="clear"></span><div class="error-message"></div></div><div class="input-wrapper"><label for="pass1" class="').exists(b.getPath(!1, ["networkModel", "wifiPassword"]), b, {
                        block: i
                    }, null).write('">Password</label><input autocomplete="false" name="pass1" type="password" id="password"  value="').reference(b.getPath(!1, ["networkModel", "wifiPassword"]), b, "h").write('" maxlength="100" class="password" data-validation="').reference(b.getPath(!1, ["wifiValidations", "password"]), b, "h").write('" needsclick/><span class="clear"></span><div class="error-message"></div></div><div class="toggle-password">Show Password</div><div class="input-wrapper" id="advanced"><input name="adv" type="checkbox" id="adv"/><label for="adv">See Advanced Options</label></div><div class="input-wrapper enterprise-setup"><label for="enterprise" class="').exists(b.getPath(!1, ["networkModel", "type"]), b, {
                        block: j
                    }, null).write('">Network Type</label><select id="type" name="enterprise" data-validation="').reference(b.getPath(!1, ["wifiValidations", "type"]), b, "h").write('" needsclick ><option value="" disabled selected></option><option value="wpa">WPA</option><option value="wpa2">WPA2 Personal</option><option value="wpa2e">WPA2 Enterprise</option><option value="wep">WEP</option></select><div class="error-message"></div></div><div class="input-wrapper wpa2e"><label for="eap" class="').exists(b.getPath(!1, ["networkModel", "eap"]), b, {
                        block: k
                    }, null).write('">Authentication Protocol</label><select id="eap" name="eap" data-validation="').reference(b.getPath(!1, ["wifiValidations", "eap"]), b, "h").write('" needsclick><option value="" disabled selected></option><option value="LEAP">LEAP</option><option value="PEAP">PEAP</option></select><div class="error-message"></div></div><div class="input-wrapper wpa2e"><label for="username" class="').exists(b.getPath(!1, ["networkModel", "identity"]), b, {
                        block: l
                    }, null).write('">Username</label><input name="username" type="text" id="identity" value="').reference(b.getPath(!1, ["networkModel", "identity"]), b, "h").write('" maxlength="64"  data-validation="').reference(b.getPath(!1, ["wifiValidations", "username"]), b, "h").write('" needsclick/><span class="clear"></span><div class="error-message"></div></div></form></div></div></div><div class="container-actions"><div class="network-list-functionality"><button class="download">Download Config File</button></div><div class="network-add-functionality two-ctas"><button class="done">Save Network</button><button class="cancel-add text-only">Cancel</button></div><div class="download-instructions"><button class="ok">OK, All Set</button></div></div></div></div>')
                }

                function c(a) {
                    return a.write("<p>No networks available on your account.</p>")
                }

                function d(a, b) {
                    return a.write('<p>Remove a network from your account or add a new WiFi network below.</p><div class="subheader">Previously Connected Networks</div><ul class="network-list item-list">').section(b.get("networks"), b, {
                        block: e
                    }, null).write("</ul>")
                }

                function e(a, b) {
                    return a.write('<li class="list-item item" data-ssid="').reference(b.get("ssid"), b, "h").write('">').reference(b.get("ssid"), b, "h").write('<span data-network-id="').reference(b.get("wifiId"), b, "h").write('" class="delete">Remove</span></li>')
                }

                function f(a) {
                    return a.write("none")
                }

                function g(a) {
                    return a.write("networkModel.typeString")
                }

                function h(a) {
                    return a.write("reveal")
                }

                function i(a) {
                    return a.write("reveal")
                }

                function j(a) {
                    return a.write("reveal")
                }

                function k(a) {
                    return a.write("reveal")
                }

                function l(a) {
                    return a.write("reveal")
                }
                return a.register("templates/bindingviews/WifiDesktopView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/bindingviews/WifiDesktopView", b, c)
                }
            }
        }),
        function(a, b) {
            var c = /[<>&\r\n"']/gm,
                d = {
                    "<": "lt;",
                    ">": "gt;",
                    "&": "amp;",
                    "\r": "#13;",
                    "\n": "#10;",
                    '"': "quot;",
                    "'": "#39;"
                };
            a.extend({
                fileDownload: function(e, f) {
                    function g() {
                        var b = n.cookieValue;
                        "string" == typeof b && (b = b.toLowerCase());
                        var c = n.cookieName.toLowerCase() + "=" + b;
                        if (document.cookie.toLowerCase().indexOf(c) > -1) {
                            s.onSuccess(e);
                            var d = n.cookieName + "=; path=" + n.cookiePath + "; expires=" + new Date(0).toUTCString() + ";";
                            return n.cookieDomain && (d += " domain=" + n.cookieDomain + ";"), document.cookie = d, i(!1), void 0
                        }
                        if (u || t) try {
                            var f = u ? u.document : h(t);
                            if (f && null !== f.body && f.body.innerHTML.length) {
                                var j = !0;
                                if (w && w.length) {
                                    var k = a(f.body).contents().first();
                                    try {
                                        k.length && k[0] === w[0] && (j = !1)
                                    } catch (l) {
                                        if (!l || -2146828218 != l.number) throw l;
                                        j = !0
                                    }
                                }
                                if (j) return setTimeout(function() {
                                    s.onFail(f.body.innerHTML, e), i(!0)
                                }, 100), void 0
                            }
                        } catch (m) {
                            return s.onFail("", e, m), i(!0), void 0
                        }
                        setTimeout(g, n.checkInterval)
                    }

                    function h(a) {
                        var b = a[0].contentWindow || a[0].contentDocument;
                        return b.document && (b = b.document), b
                    }

                    function i(a) {
                        setTimeout(function() {
                            u && (l && u.close(), k && u.focus && (u.focus(), a && u.close()))
                        }, 0)
                    }

                    function j(a) {
                        return a.replace(c, function(a) {
                            return "&" + d[a]
                        })
                    }
                    var k, l, m, n = a.extend({
                            preparingMessageHtml: null,
                            failMessageHtml: null,
                            androidPostUnsupportedMessageHtml: "Unfortunately your Android browser doesn't support this type of file download. Please try again with a different browser.",
                            dialogOptions: {
                                modal: !0
                            },
                            prepareCallback: function() {},
                            successCallback: function() {},
                            failCallback: function() {},
                            httpMethod: "GET",
                            data: null,
                            checkInterval: 100,
                            cookieName: "fileDownload",
                            cookieValue: "true",
                            cookiePath: "/",
                            cookieDomain: null,
                            popupWindowTitle: "Initiating file download...",
                            encodeHTMLEntities: !0
                        }, f),
                        o = new a.Deferred,
                        p = (navigator.userAgent || navigator.vendor || b.opera).toLowerCase();
                    /ip(ad|hone|od)/.test(p) ? k = !0 : -1 !== p.indexOf("android") ? l = !0 : m = /avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|playbook|silk|iemobile|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(p) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|e\-|e\/|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\-|2|g)|yas\-|your|zeto|zte\-/i.test(p.substr(0, 4));
                    var q = n.httpMethod.toUpperCase();
                    if (l && "GET" !== q && n.androidPostUnsupportedMessageHtml) return a().dialog ? a("<div>").html(n.androidPostUnsupportedMessageHtml).dialog(n.dialogOptions) : alert(n.androidPostUnsupportedMessageHtml), o.reject();
                    var r = null,
                        s = {
                            onPrepare: function(b) {
                                n.preparingMessageHtml ? r = a("<div>").html(n.preparingMessageHtml).dialog(n.dialogOptions) : n.prepareCallback && n.prepareCallback(b)
                            },
                            onSuccess: function(a) {
                                r && r.dialog("close"), n.successCallback(a), o.resolve(a)
                            },
                            onFail: function(b, c, d) {
                                r && r.dialog("close"), n.failMessageHtml && a("<div>").html(n.failMessageHtml).dialog(n.dialogOptions), n.failCallback(b, c, d), o.reject(b, c)
                            }
                        };
                    s.onPrepare(e), null !== n.data && "string" != typeof n.data && (n.data = a.param(n.data));
                    var t, u, v, w;
                    if ("GET" === q) {
                        if (null !== n.data) {
                            var x = e.indexOf("?"); - 1 !== x ? "&" !== e.substring(e.length - 1) && (e += "&") : e += "?", e += n.data
                        }
                        k || l ? (u = b.open(e), u.document.title = n.popupWindowTitle, b.focus()) : m ? b.location(e) : t = a("<iframe>").hide().prop("src", e).appendTo("body")
                    } else {
                        var y = "";
                        null !== n.data && a.each(n.data.replace(/\+/g, " ").split("&"), function() {
                            var a = this.split("="),
                                b = a[0];
                            a.shift();
                            var c = a.join("=");
                            a = [b, c];
                            var d = n.encodeHTMLEntities ? j(decodeURIComponent(a[0])) : decodeURIComponent(a[0]);
                            if (d) {
                                var e = n.encodeHTMLEntities ? j(decodeURIComponent(a[1])) : decodeURIComponent(a[1]);
                                y += '<input type="hidden" name="' + d + '" value="' + e + '" />'
                            }
                        }), m ? (w = a("<form>").appendTo("body"), w.hide().prop("method", n.httpMethod).prop("action", e).html(y)) : (k ? (u = b.open("about:blank"), u.document.title = n.popupWindowTitle, v = u.document, b.focus()) : (t = a("<iframe style='display: none' src='about:blank'></iframe>").appendTo("body"), v = h(t)), v.write("<html><head></head><body><form method='" + n.httpMethod + "' action='" + e + "'>" + y + "</form>" + n.popupWindowTitle + "</body></html>"), w = a(v).find("form")), w.submit()
                    }
                    setTimeout(g, n.checkInterval);
                    var z = o.promise();
                    return z.abort = function() {
                        i(), t.remove()
                    }, z
                }
            })
        }(jQuery, this), define("fileDownload", ["$"], function() {}), define("app/ui/views/bindingviews/WifiDesktopView", ["require", "app/ui/views/bindingviews/BaseBindingView", "app/models/WifiNetworksModel", "app/models/AccountModel", "app/service/WifiService", "app/ui/widgets/WifiFormValidator", "app/models/validations/wifi-validations", "app/models/AuthModel", "mout/string/interpolate", "app/models/BedCollection", "sccomm/CommunicationHelpers", "app/env/Config", "app/service/Service", "$", "lavaca/mvc/Router", "rdust!templates/bindingviews/WifiDesktopView", "fileDownload"], function(a) {
            function b(a) {
                a && a.attribute && "networks" === a.attribute && (this.model.set("networks", t.get("networks")), this.render(".networks"))
            }

            function c() {
                this.el.find(".back").hide(), this.el.find(".network-list-functionality").hide(), this.el.find(".network-add-functionality").show()
            }

            function d() {
                this.el.find(".back").show(), this.el.find(".network-list-functionality").show(), this.el.find(".network-add-functionality").hide()
            }

            function e() {
                d.call(this)
            }

            function f() {
                this.execNext("/binding/exit")
            }

            function g(a) {
                if (0 == this.model.get("networks").length) return window.customAlert.alert("Please add a WiFi network before attempting to download a config file.", null, "SleepIQ®", "OK"), void 0;
                var b = this.model.get("macAddress"),
                    c = b && B.isMacAddress(b);
                c || (b = window.prompt("Please enter your pump's MAC address.", ""), c = b && B.isMacAddress(b)), c ? A.bindMacAddressForCurrentBed(b).then(function() {
                    p.call(this, a).then(function() {
                        this.el.find(".network-list-functionality").hide(), this.el.find(".network-add-functionality").hide(), this.el.find(".download-instructions").show()
                    }.bind(this))
                }.bind(this), function() {
                    window.customAlert.alert("We could not verify your MAC address.", null, "SleepIQ®", "OK")
                }.bind(this)) : null != b && window.customAlert.alert("Please enter a valid MAC address.", null, "SleepIQ®", "OK")
            }

            function h(a) {
                a.stopPropagation(), a.preventDefault();
                var b = a.currentTarget.dataset.networkId;
                t.deleteNetwork(b).then(function() {
                    this.model.set("networks", t.get("networks")), this.render(".networks")
                }.bind(this))
            }

            function i() {
                this.isSaving || (this.isSaving = !0, this.el.find(".form").trigger("validateForm", function(a) {
                    if (a) {
                        var b = j.call(this);
                        this.model.set("networkModel", b), this.model.trigger("wifiChanged");
                        var c = {
                            ssid: b.wifiName,
                            password: b.wifiPassword,
                            identity: b.identity,
                            eap: b.eap
                        };
                        return v.addWifi(c).then(function() {
                            this.isSaving = !1, t.getWifiNetworksOnAccount(), d.call(this)
                        }.bind(this), function(a) {
                            this.isSaving = !1;
                            var b = a && a.responseJSON && a.responseJSON.Error && a.responseJSON.Error.Message ? a.responseJSON.Error.Message : "Something went wrong updating your wifi network. Please try again.";
                            k(b)
                        }.bind(this))
                    }
                }.bind(this)))
            }

            function j() {
                var a = this.el.find("form"),
                    b = {
                        wifiName: a.find("#network-name").val(),
                        wifiPassword: a.find("#password").val() || ""
                    },
                    c = a.find("#identity").val(),
                    d = a.find("#type").val(),
                    e = a.find("#eap").val();
                if (this.advanced) {
                    if ("wpa2e" === d) {
                        if (!(c && c.length > 0)) throw new Error("WPA2 Enterprise requires a valid username.");
                        b.identity = c, e && e.length > 0 && (b.eapString = e.toUpperCase(), b.eap = "LEAP" === b.eapString ? 1 : 0)
                    }
                    if (d && d.length > 0) switch (b.typeString = d, d) {
                        case "wpa":
                            b.type = 0;
                            break;
                        case "wpa2":
                            b.type = 1;
                            break;
                        case "wpa2e":
                            b.type = 2;
                            break;
                        case "wep":
                            b.type = 2
                    }
                }
                return b
            }

            function k(a) {
                window.customAlert.alert(a)
            }

            function l(a) {
                this.type = a.currentTarget.value, this.el.find(".form").attr("data-type", a.currentTarget.value)
            }

            function m() {
                this.el.toggleClass("enterprise"), this.advanced = !this.advanced;
                var a = this.el.find("#type").val() || "none";
                this.advanced || (a = "none"), this.el.find(".form").attr("data-type", a), this.el.find(".form").attr("data-enterprise", this.advanced)
            }

            function n(a) {
                var b = D(a.currentTarget),
                    c = this.el.find(".password"),
                    d = "password" === c.prop("type") ? "text" : "password";
                "password" === d ? b.text("Show Password") : b.text("Hide Password"), c.prop("type", d)
            }

            function o(a) {
                try {
                    var b = D(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var c = b.prev();
                    c.val(""), c.removeClass("invalid valid"), c.focus()
                } catch (d) {
                    console.log(d)
                }
            }

            function p(a, b) {
                var c = D.Deferred();
                if (!y.get("accountKey")) return window.customAlert.alert("There was trouble authenticating your session. Please log out and log back in."), c.reject(), c;
                var d = z(C.getAPIKey(), ["config"], /\{([^}])\}/g) + "?dataType=text&_k=" + y.get("accountKey");
                return v.getWifiConfig().then(function(a) {
                    var b = String(a);
                    if (Modernizr.msie) {
                        b = b.replace(/\n/g, "\r\n");
                        var e = new Blob([b], {
                            type: "text/plain"
                        });
                        window.navigator && window.navigator.msSaveOrOpenBlob(e, "bam-init.conf")
                    } else D.fileDownload(d);
                    c.resolve()
                }.bind(this), function() {
                    b ? (window.customAlert.alert("There was trouble downloading your wifi configuration. Please try again."), c.reject()) : u.login(y.get("username"), y.get("password")).then(function() {
                        p.call(this, a, !0)
                    }.bind(this))
                }.bind(this)), c
            }

            function q() {
                "none" == this.el.find(".network-list-functionality").css("display") ? d.call(this) : E.exec("/binding/exit")
            }

            function r(a) {
                a.preventDefault()
            }
            var s = a("app/ui/views/bindingviews/BaseBindingView"),
                t = a("app/models/WifiNetworksModel"),
                u = a("app/models/AccountModel"),
                v = a("app/service/WifiService"),
                w = a("app/ui/widgets/WifiFormValidator"),
                x = a("app/models/validations/wifi-validations"),
                y = a("app/models/AuthModel"),
                z = a("mout/string/interpolate"),
                A = a("app/models/BedCollection"),
                B = a("sccomm/CommunicationHelpers"),
                C = (a("app/env/Config"), a("app/service/Service")),
                D = a("$"),
                E = a("lavaca/mvc/Router"),
                F = a("rdust!templates/bindingviews/WifiDesktopView");
            a("fileDownload");
            var G = s.extend(function() {
                s.apply(this, arguments), this.mapEvent({
                    'input[type="checkbox"]': {
                        change: m
                    },
                    "#type": {
                        change: l
                    },
                    ".toggle-password": {
                        tap: n
                    },
                    ".done": {
                        tap: i
                    },
                    ".delete": {
                        tap: h.bind(this)
                    },
                    ".download": {
                        tap: g.bind(this)
                    },
                    ".add": {
                        tap: c
                    },
                    ".ok": {
                        tap: f
                    },
                    ".cancel-add": {
                        tap: e
                    },
                    ".clear": {
                        tap: o
                    },
                    "button.desktop-back": {
                        tap: q
                    },
                    ".close-modal": {
                        tap: r.bind(this)
                    },
                    ext: {
                        WifiNetworksModel: {
                            object: t,
                            events: {
                                change: b.bind(this)
                            }
                        }
                    }
                }), this.mapWidget({
                    ".form": {
                        TWidget: w
                    }
                })
            }, {
                constructorName: "WifiDesktopView",
                advanced: !1,
                type: "wpa",
                hasChanged: !1,
                isSaving: !1,
                className: "binding-common wifidesktop",
                generateHtml: function(a) {
                    return a ? a.wifiValidations = x : a = {
                        wifiValidations: x,
                        networkTypeString: "none"
                    }, new Promise(function(b) {
                        F.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    t.getWifiNetworksOnAccount(), s.prototype.onRenderSuccess.apply(this, arguments)
                },
                dispose: function() {
                    s.prototype.dispose.apply(this, arguments)
                },
                onTapBack: function() {
                    "first-screen" == this.classNameAppend ? E.exec("/binding/exit") : s.prototype.onTapBack.apply(this, arguments)
                }
            });
            return G
        }), define("app/net/BindingController", ["require", "lavaca/mvc/Model", "app/net/BaseController", "app/ui/views/controlviews/ModalView", "app/ui/views/bindingviews/BindingWelcomeView", "app/ui/views/bindingviews/CheckHosesView", "app/ui/views/bindingviews/ScanQRForBedView", "app/ui/views/bindingviews/ScanForBedView", "app/ui/views/bindingviews/VerifySelectedBedView", "app/ui/views/bindingviews/VerifyBedMacAddressView", "app/ui/views/bindingviews/ManualBedMacAddressView", "app/ui/views/bindingviews/BedIsEngagingView", "app/ui/views/bindingviews/CompleteBedAssemblyView", "app/ui/views/bindingviews/VerifySleepIQView", "app/ui/views/bindingviews/ScanForWifiView", "app/ui/views/bindingviews/BaselineView", "app/ui/views/bindingviews/HeadTiltIsEngagingView", "app/ui/views/bindingviews/StartOutletBindingView", "app/ui/views/bindingviews/StartReplacingOutletView", "app/ui/views/bindingviews/StartTestingOutletView", "app/ui/views/bindingviews/VerifyConnectedOutletView", "app/ui/views/bindingviews/ScanQRForOutletView", "app/ui/views/bindingviews/ScanForOutletView", "app/ui/views/bindingviews/ManualOutletMacAddressView", "app/ui/views/bindingviews/ConnectBedToOutletView", "app/ui/views/bindingviews/NameOutletView", "app/ui/views/bindingviews/BindingCompleteView", "app/ui/views/bindingviews/ReplaceHardwareView", "app/ui/views/bindingviews/ReplacePumpSleepiqSwapView", "app/ui/views/bindingviews/ReplacePumpSleepiqConnectNewView", "app/ui/views/bindingviews/ReplacePumpSleepiqCheckView", "app/ui/views/bindingviews/WifiDesktopView", "app/models/WifiNetworksModel", "app/models/BindingStateModel", "moment", "sccomm/DeviceCommunication", "app/models/BedCollection", "app/utils/MixPanelManager"], function(a) {
            function b() {
                setTimeout(function() {
                    $("#view-root").css("visibility", "hidden")
                }.bind(this), 300)
            }

            function c() {
                $("#view-root").css("visibility", "visible")
            }
            var d = a("lavaca/mvc/Model"),
                e = a("app/net/BaseController"),
                f = a("app/ui/views/controlviews/ModalView"),
                g = a("app/ui/views/bindingviews/BindingWelcomeView"),
                h = a("app/ui/views/bindingviews/CheckHosesView"),
                i = a("app/ui/views/bindingviews/ScanQRForBedView"),
                j = a("app/ui/views/bindingviews/ScanForBedView"),
                k = a("app/ui/views/bindingviews/VerifySelectedBedView"),
                l = a("app/ui/views/bindingviews/VerifyBedMacAddressView"),
                m = a("app/ui/views/bindingviews/ManualBedMacAddressView"),
                n = a("app/ui/views/bindingviews/BedIsEngagingView"),
                o = a("app/ui/views/bindingviews/CompleteBedAssemblyView"),
                p = a("app/ui/views/bindingviews/VerifySleepIQView"),
                q = a("app/ui/views/bindingviews/ScanForWifiView"),
                r = a("app/ui/views/bindingviews/BaselineView"),
                s = a("app/ui/views/bindingviews/HeadTiltIsEngagingView"),
                t = a("app/ui/views/bindingviews/StartOutletBindingView"),
                u = a("app/ui/views/bindingviews/StartReplacingOutletView"),
                v = a("app/ui/views/bindingviews/StartTestingOutletView"),
                w = a("app/ui/views/bindingviews/VerifyConnectedOutletView"),
                x = a("app/ui/views/bindingviews/ScanQRForOutletView"),
                y = a("app/ui/views/bindingviews/ScanForOutletView"),
                z = a("app/ui/views/bindingviews/ManualOutletMacAddressView"),
                A = a("app/ui/views/bindingviews/ConnectBedToOutletView"),
                B = a("app/ui/views/bindingviews/NameOutletView"),
                C = a("app/ui/views/bindingviews/BindingCompleteView"),
                D = a("app/ui/views/bindingviews/ReplaceHardwareView"),
                E = a("app/ui/views/bindingviews/ReplacePumpSleepiqSwapView"),
                F = a("app/ui/views/bindingviews/ReplacePumpSleepiqConnectNewView"),
                G = a("app/ui/views/bindingviews/ReplacePumpSleepiqCheckView"),
                H = a("app/ui/views/bindingviews/WifiDesktopView"),
                I = a("app/models/WifiNetworksModel"),
                J = a("app/models/BindingStateModel"),
                K = a("moment"),
                L = a("sccomm/DeviceCommunication"),
                M = a("app/models/BedCollection"),
                N = a("app/utils/MixPanelManager"),
                O = e.extend({
                    welcome: function(a) {
                        return b.call(this), J.set("action", "fullBinding"), J.set("title", "Pair Bed"), J.disposeProgress(), N.prototype.clearBedPairingId(), f.view(g, new d, {
                            url: a.url,
                            classNameAppend: "first-screen"
                        }, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    checkHoses: function(a) {
                        return J.updateProgressByStep(1), f.view(h, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    scanQRForBed: function(a) {
                        return J.updateProgressByStep(2), f.view(i, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    scanForBed: function(a) {
                        return J.updateProgressByStep(2), J.set("startBedScanTime", K().format()), f.view(j, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    verifySelectedBed: function(a) {
                        return J.updateProgressByStep(3), f.view(k, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    verifyBedMacAddress: function(a) {
                        return J.updateProgressByStep(3), f.view(l, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    manualBedMacAddress: function(a) {
                        return J.updateProgressByStep(2), f.view(m, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    bedIsEngaging: function(a) {
                        return J.set("startBedEngagingTime", K().format()), J.updateProgressByStep(4), f.view(n, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    completeBedAssembly: function(a) {
                        return J.updateProgressByStep(4), f.view(o, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    verifySleepIQ: function(a) {
                        return J.updateProgressByStep(5), f.view(p, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    scanForWifi: function(a) {
                        return J.set("startWifiTime", K().format()), J.updateProgressByStep(5), f.view(q, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    baseline: function(a) {
                        return J.updateProgressByStep(6), f.view(r, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    headTiltIsEngaging: function(a) {
                        return J.updateProgressByStep(7), J.set("startTime", K().format()), f.view(s, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    startOutletBinding: function(a) {
                        return J.updateProgressByStep(8), f.view(t, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    verifyConnectedOutlet: function(a) {
                        return J.updateProgressByStep(8), f.view(w, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    scanQRForOutlet: function(a) {
                        return J.updateProgressByStep(8), f.view(x, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    scanForOutlet: function(a) {
                        return J.set("startTime", K().format()), J.set("startScanOutletTime", K().format()), J.updateProgressByStep(8), f.view(y, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    manualOutletMacAddress: function(a) {
                        return J.updateProgressByStep(8), f.view(z, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    connectBedToOutlet: function(a) {
                        return J.updateProgressByStep(8), f.view(A, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    nameOutlet: function(a) {
                        return J.updateProgressByStep(8), f.view(B, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    replacePumpSleepiqCheck: function(a) {
                        return f.view(G, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    replacePumpSleepiqSwap: function(a) {
                        return f.view(E, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    replacePumpSleepiqConnectNew: function(a) {
                        return f.view(F, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    complete: function(a) {
                        return c.call(this), J.disposeProgress(), f.view(C, new d, a.url, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    exit: function() {
                        c.call(this), M.fetch(), J.disposeProgress(), L.pumpSetForceIdle().always(function() {
                            L.close().then(function() {
                                J.resetState(), I.reset(), J.init(), f.closeModal(), J.trigger("exit")
                            }.bind(this))
                        }.bind(this))
                    },
                    softExit: function() {
                        c.call(this), J.resetState(), f.closeModal(), J.trigger("exit")
                    },
                    testHeadtilt: function(a) {
                        return b.call(this), J.set("action", "testHeadtilt"), J.set("alternateCompleteText", "Headtilt test successfully completed."), J.set("viewToExitAfter", "HeadTiltIsEngagingView"), J.set("title", "Test Headtilt"), f.view(s, new d, {
                            url: a.url,
                            classNameAppend: "first-screen"
                        }, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    testOutlet: function(a) {
                        return b.call(this), J.set("action", "testOutlet"), J.set("alternateCompleteText", "Outlet test successfully completed."), J.set("viewToExitAfter", "ConnectBedToOutletView"), J.set("title", "Test Outlet"), f.view(v, new d, {
                            url: a.url,
                            classNameAppend: "first-screen"
                        }, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    replaceOutlet: function(a) {
                        return b.call(this), J.set("action", "replaceOutlet"), J.set("alternateCompleteText", "You have successfully replaced your outlet."), J.set("viewToExitAfter", "NameOutletView"), J.set("title", "Replace Outlet"), f.view(u, new d, {
                            url: a.url,
                            classNameAppend: "first-screen"
                        }, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    replacePumpHardware: function(a) {
                        return b.call(this), J.set("action", "replacePumpHardware"), J.set("alternateCompleteText", "You have successfully replaced your pump hardware."), J.set("viewToExitAfter", null), J.set("title", "Replace Pump Hardware"), f.view(D, new d, {
                            url: a.url,
                            classNameAppend: "first-screen"
                        }, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    onlyBaseline: function(a) {
                        return b.call(this), J.set("action", "onlyBaseline"), J.set("alternateCompleteText", "You have successfully baselined your bed."), J.set("viewToExitAfter", "BaselineView"), J.set("title", "Baseline"), f.view(r, new d, {
                            url: a.url,
                            classNameAppend: "first-screen"
                        }, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    onlyWifi: function(a) {
                        return b.call(this), J.set("action", "onlyWifi"), J.set("alternateCompleteText", "You have successfully configured wifi for your bed."), J.set("viewToExitAfter", "BaselineView"), J.set("title", "Wifi Network"), f.view(q, new d, {
                            url: a.url,
                            classNameAppend: "first-screen"
                        }, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    },
                    onlyScanForBed: function(a) {
                        return J.set("action", "onlyScanForBed"), J.set("viewToExitAfter", "ScanForBedView"), J.set("title", "Connect"), f.view(j, new d, {
                            url: a.url,
                            classNameAppend: "remote-scan"
                        }, !0)
                    },
                    wifiDesktop: function(a) {
                        b.call(this), J.set("action", "wifiDesktop"), J.set("alternateCompleteText", "You have successfully configured wifi for your bed."), J.set("viewToExitAfter", "WifiDesktopView"), J.set("title", "Wifi Network");
                        var c = new d;
                        return c.set("macAddress", a.macAddress), f.view(H, c, {
                            url: a.url,
                            classNameAppend: "first-screen"
                        }, !0, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !1
                        })
                    }
                });
            return O
        }), define("rdust!templates/childviews/user-settings-add-sleeper", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/back-header", b, {
                        pageTitle: "Add Sleeper"
                    }).write('<div class=\'content-wrapper\'><div class="content overflow-scroll"><div class="add-sleeper-container"><div class="bed-wrapper"><div class="bed">').helper("select", b, {
                        block: c
                    }, {
                        key: f
                    }).write('</div></div><div class="switch-sides"><i></i><p>Switch Sleeper Sides</p></div><form class="add-sleeper-form form" data-animate-labels="true"><div class="section"><div class="input-wrapper"><label for="sleepGoal">Sleep Goal</label><select name="sleepGoal" data-validation="').reference(b.getPath(!1, ["validations", "sleepGoal"]), b, "h").write('" needsclick><option value="" disabled selected></option><option value="390">6:30 hrs</option><option value="420">7:00 hrs</option><option value="450">7:30 hrs</option><option value="480">8:00 hrs</option><option value="510">8:30 hrs</option><option value="540">9:00 hrs</option></select><p class="error-message"></p></div><h5>Your sleep goal is used as a baseline to calculate your nightly SleepIQ<sup>&reg;</sup>.</h5></div><div class="input-wrapper"><label for="firstName">First Name</label><input name="firstName" class="first-name" type="text" data-validation="').reference(b.getPath(!1, ["validations", "firstName"]), b, "h").write('" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" maxlength="30" needsclick /><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper"><label for="birthYear">Birth Year</label>').partial("templates/formoptions/birthyear", b, {
                        validation: g
                    }).write('<p class="error-message"></p></div><div class="input-wrapper radio-inputs"><h4 class="reveal isMale">Gender</h4><input id="male" name="isMale" type="radio" value="Male" data-validation="').reference(b.getPath(!1, ["validations", "isMale"]), b, "h").write('"><label for="male" class="reveal">Male</label><input id="female" name="isMale" type="radio" value="Female" data-validation="').reference(b.getPath(!1, ["validations", "isMale"]), b, "h").write('"/><label for="female" class="reveal">Female</label><p class="error-message"></p></div><div class="input-wrapper"><label for="height">Height</label>').partial("templates/formoptions/height", b, {
                        validation: h
                    }).write('<p class="error-message"></p></div><div class="input-wrapper"><label for="weight">Weight</label>').partial("templates/formoptions/weight", b, {
                        validation: i
                    }).write('<p class="error-message"></p></div><h5>Your demographics are used to help calculate your nightly SleepIQ<sup>&reg;</sup></h5></form><div class="button-wrapper"><button class="std-button save-sleeper">Done</button></div></div></div></div>')
                }

                function c(a, b) {
                    return a.write('<div class="sleeper right ').helper("eq", b, {
                        block: d
                    }, {
                        value: "0"
                    }).write('"><div class="bed-side"></div><div class="sleeper-label"><i></i><span data-backup="Right Side" data-side="right">Right Side</span></div></div><div class="sleeper left ').helper("eq", b, {
                        block: e
                    }, {
                        value: "1"
                    }).write('"><div class="bed-side"></div><div class="sleeper-label"><i></i><span data-backup="Left Side" data-side="left">Left Side</span></div></div>')
                }

                function d(a) {
                    return a.write("active")
                }

                function e(a) {
                    return a.write("active")
                }

                function f(a, b) {
                    return a.reference(b.getPath(!1, ["user", "side"]), b, "h")
                }

                function g(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "birthYear"]), b, "h")
                }

                function h(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "height"]), b, "h")
                }

                function i(a, b) {
                    return a.reference(b.getPath(!1, ["validations", "weight"]), b, "h")
                }
                return a.register("templates/childviews/user-settings-add-sleeper", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/user-settings-add-sleeper", b, c)
                }
            }
        }), define("app/ui/views/modalviews/UserSettingsAddSleeper", ["require", "app/ui/views/modalviews/BaseModalView", "app/ui/widgets/FormValidator", "rdust!templates/childviews/user-settings-add-sleeper", "$"], function(a) {
            function b() {
                var a, b, c = this.el.find(".bed .sleeper");
                c.each(function(c, d) {
                    if (i(d).hasClass("active")) {
                        a = i(d).find(".sleeper-label span");
                        var e = this.el.find(".add-sleeper-form"),
                            f = e.find(".first-name").val();
                        "undefined" != typeof f && "" !== f.trim(" ") ? a.html(f.trim(" ")) : a.html(a.attr("data-backup"))
                    } else b = i(d).find(".sleeper-label span"), b.html(this.model.get("user").get("firstName").trim(" "))
                }.bind(this))
            }

            function c() {
                this.hasToggled = !this.hasToggled;
                var a = this.el.find(".profile-form");
                this.addedSleeperSide = 0 === this.addedSleeperSide ? 1 : 0, this.el.find(".bed .sleeper.active").removeClass("active").siblings().addClass("active"), a.each(function() {
                    i(this).toggleClass("left right")
                }), b.call(this)
            }

            function d() {
                i(".save-sleeper").hasClass("disabled") || (i(".save-sleeper").addClass("disabled"), this.el.find(".add-sleeper-form").trigger("validateForm", function(a) {
                    a && (this.model.saveSettings(!0), this.model.addSleeper(e.call(this), this.hasToggled, this.addedSleeperSide))
                }.bind(this)))
            }

            function e() {
                var a = this.el.find("select[name='sleepGoal']"),
                    b = this.el.find("input[name='firstName']"),
                    c = this.el.find("input[id='male']"),
                    d = this.el.find("select[name='birthYear']"),
                    e = this.el.find("select[name='weight']"),
                    f = this.el.find("select[name='height']"),
                    g = {
                        sleepGoal: parseInt(a.val(), 10),
                        firstName: b.val(),
                        isMale: c.prop("checked"),
                        isChild: !1,
                        birthYear: d.val(),
                        weight: parseInt(e.val(), 10),
                        height: parseInt(f.val(), 10),
                        side: this.addedSleeperSide,
                        bedId: this.model.get("user").get("bedId"),
                        zipCode: this.model.get("user").get("zipCode"),
                        timezone: this.model.get("user").get("timezone")
                    };
                return g
            }
            var f = a("app/ui/views/modalviews/BaseModalView"),
                g = a("app/ui/widgets/FormValidator"),
                h = a("rdust!templates/childviews/user-settings-add-sleeper"),
                i = a("$"),
                j = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        "input, select": {
                            validation: this.onFieldValidation
                        },
                        ".switch-sides": {
                            tap: c.bind(this)
                        },
                        "button.std-button": {
                            tap: d.bind(this)
                        }
                    }), this.mapWidget({
                        ".add-sleeper-form": {
                            TWidget: g
                        }
                    })
                }, {
                    template: "templates/childviews/user-settings-add-sleeper",
                    className: "user-settings-add-sleeper",
                    autoRender: !0,
                    addedSleeperSide: 0,
                    hasToggled: !1,
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            h.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        this.addedSleeperSide = 0 === this.model.get("user").get("side") ? 1 : 0, b.call(this), f.prototype.onRenderSuccess.apply(this, arguments)
                    },
                    onFieldValidation: function(a, c) {
                        c.isInvalid ? (i(".save-sleeper").removeClass("disabled"), i(a.currentTarget).closest(".section").toggleClass("invalid", "blur" === c.eventType).removeClass("valid")) : c.isInvalid || (i(a.currentTarget).closest(".section").addClass("valid").removeClass("invalid"), "firstName" === i(a.currentTarget).attr("name") && "blur" === c.eventType && b.call(this))
                    }
                });
            return j
        }), define("rdust!templates/modalviews/add-bed", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/settings-header", b, {
                        pageTitle: "Add Bed"
                    })
                }
                return a.register("templates/modalviews/add-bed", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/add-bed", b, c)
                }
            }
        }), define("rdust!templates/headers/settings-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header settings"><button class="back">Back</button><div class="title">').exists(b.get("pageTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><button class="remote right"><div class="center"><div class="icon siqfont">↕</div><div class="remote-alert"></div><span>Remote</span></div></button></header>')
                }

                function c(a) {
                    return a.write("Settings<sup>&reg;</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("pageTitle"), b, "h", ["s"])
                }
                return a.register("templates/headers/settings-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/settings-header", b, c)
                }
            }
        }), define("app/ui/views/modalviews/AddBedView", ["require", "./BaseModalView", "rdust!templates/modalviews/add-bed", "rdust!templates/headers/settings-header"], function(a) {
            var b = a("./BaseModalView"),
                c = a("rdust!templates/modalviews/add-bed");
            a("rdust!templates/headers/settings-header");
            var d = b.extend(function() {
                b.apply(this, arguments)
            }, {
                className: "add-bed",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        c.render(a, function(a, c) {
                            b(c)
                        })
                    })
                }
            });
            return d
        }), define("rdust!templates/childviews/about", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="about-container"><div class="technology-logo">SleepIQ<sup>®</sup> Technology</div><p>SleepIQ<sup>®</sup> technology is powered by BAM Labs, a company whose vision was inspired by the complexity of monitoring premature infants, and whose mission is to make sleep monitoring as easy as going to bed.</p></div><h4 class="version">Version ').reference(b.get("appVersion"), b, "h").write("</h4>")
                }
                return a.register("templates/childviews/about", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/about", b, c)
                }
            }
        }), define("app/ui/views/childviews/AboutView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/about", "$"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("rdust!templates/childviews/about");
            a("$");
            var d = b.extend(function() {
                b.apply(this, arguments)
            }, {
                className: "about-view",
                autoRender: !0,
                generateHtml: function(a) {
                    return a = a || {}, a.appVersion = window.appVersion, new Promise(function(b) {
                        c.render(a, function(a, c) {
                            b(c)
                        })
                    })
                }
            });
            return d
        }), define("rdust!templates/pageviews/support", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/header", b, {
                        pageTitle: "Support"
                    }).write('<div class="content"><div class="list"><div class="list-item selected" data-href="faq"><h1>FAQs</h1> <span class="drilldown-caret"><i class="siqfont">▶</i></span></div><!-- <div class="list-item" data-href="about"><h1>About</h1> <span class="drilldown-caret"><i class="siqfont">▶</i></span></div> --><div class="list-item" data-href="legal"><h1>Legal</h1></div><div class="list-item" data-href="privacy"><h1>Privacy</h1></div><div class="list-item" data-href="notices"><h1>Third Party Notices</h1></div></div><h4 class="version">Version ').reference(b.get("appVersion"), b, "h").write('</h4><footer><h1>Questions?</h1><div class="phone"><p>Visit us at <a href="http://www.sleepnumber.com/chat" target="_blank">sleepnumber.com/chat</a><br/>or call us at <a href="tel:+18884849263" id="supportNumber">1-888-484-9263</a></p></div><div class="tabdesk"><p>Visit us at<br/><a href="http://www.sleepnumber.com/chat" target="_blank">sleepnumber.com/chat</a><br/>or call us at 1-888-484-9263</p></div><div class="time"><div class="tabdesk"><p>Mon – Fri <strong> 8am – 8pm</strong> <br> Sat <strong> 8:30am – 5pm</strong></p></div><div class="phone">Mon – Fri <strong> 8am – 8pm</strong><div class="phone dot">•</div>Sat <strong> 8:30am – 5pm</strong></div></footer></div><div class="selected-child">').partial("templates/headers/back-header", b, {
                        pageTitle: c
                    }).write('<div class="child-wrapper"></div></div><div class="selected-grand-child">').partial("templates/headers/back-header", b, {
                        pageTitle: d
                    }).write('<div class="grand-child-wrapper"></div></div>')
                }

                function c(a, b) {
                    return a.reference(b.get("currentTitle"), b, "h")
                }

                function d(a, b) {
                    return a.reference(b.get("currentTitle"), b, "h")
                }
                return a.register("templates/pageviews/support", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/pageviews/support", b, c)
                }
            }
        }), define("app/ui/views/pageviews/SupportView", ["require", "app/ui/views/pageviews/BaseView", "app/models/StateModel", "mout/object/get", "app/ui/views/childviews/AboutView", "app/ui/views/childviews/FAQView", "app/ui/views/childviews/FAQContentView", "app/utils/MixPanelManager", "rdust!templates/pageviews/support", "rdust!templates/headers/back-header", "rdust!templates/headers/header"], function(a) {
            function b(a) {
                if (i(a, "currentTarget.dataset.href")) switch (i(a, "currentTarget.dataset.href")) {
                    case "faq":
                        m.prototype.trackSupportActivity("FAQs"), this.el.find(a.currentTarget).addClass("selected").siblings().removeClass("selected"), this.model.set("currentTitle", "FAQs"), c.call(this, k);
                        break;
                    case "about":
                        m.prototype.trackSupportActivity("About"), this.el.find(a.currentTarget).addClass("selected").siblings().removeClass("selected"), this.model.set("currentTitle", "About"), c.call(this, j);
                        break;
                    case "legal":
                        m.prototype.trackSupportActivity("Legal"), Modernizr.desktop ? window.open("http://www.sleepnumber.com/sleepiqenduseragreement", "_blank") : window.open("https://m.sleepnumber.com/sleepiqenduseragreement", "_blank", Modernizr.android ? "" : "location=yes");
                        break;
                    case "privacy":
                        m.prototype.trackSupportActivity("Privacy"), Modernizr.desktop ? window.open("http://www.sleepnumber.com/sn/en/customer-service/privacy-policy", "_blank") : window.open("http://m.sleepnumber.com/customer-service/privacy-policy", "_blank", Modernizr.android ? "" : "location=yes");
                        break;
                    case "notices":
                        m.prototype.trackSupportActivity("Third Party Notices"), Modernizr.desktop ? window.open("http://www.sleepiqlabs.com/downloads/webopensource.txt", "_blank") : window.open("http://www.sleepiqlabs.com/downloads/webopensource.txt", "_blank", Modernizr.android ? "" : "location=yes");
                        break;
                    default:
                        if (!Modernizr.desktop && window.innerWidth <= 650) {
                            var b = a.currentTarget.dataset.href;
                            if (0 === b.indexOf("faq-")) {
                                var e = parseInt(b.slice(4, b.length), 10);
                                this.model.set("currentFAQ", this.model.get("FAQs")[e]), d.call(this, l)
                            }
                        }
                        return
                }
            }

            function c(a) {
                this.mapChildView({
                    ".child-wrapper": {
                        TView: a,
                        model: this.model
                    }
                }), this.render(".selected-child"), setTimeout(function() {
                    this.el.addClass("selected")
                }.bind(this), 100)
            }

            function d(a) {
                this.mapChildView({
                    ".grand-child-wrapper": {
                        TView: a,
                        model: this.model
                    }
                }), this.render(".selected-grand-child"), setTimeout(function() {
                    this.el.find(".selected-grand-child").addClass("show")
                }.bind(this), 100)
            }

            function e() {
                window.innerWidth <= 650 && this.el.find(".selected-grand-child").hasClass("show") ? this.el.find(".selected-grand-child").removeClass("show") : this.el.hasClass("selected") && window.innerWidth <= 650 ? this.el.removeClass("selected") : navigator && navigator.app && navigator.app.backHistory()
            }

            function f() {
                m.prototype.trackSupportActivity("Call Support")
            }
            var g = a("app/ui/views/pageviews/BaseView"),
                h = a("app/models/StateModel"),
                i = a("mout/object/get"),
                j = a("app/ui/views/childviews/AboutView"),
                k = a("app/ui/views/childviews/FAQView"),
                l = a("app/ui/views/childviews/FAQContentView"),
                m = a("app/utils/MixPanelManager"),
                n = a("rdust!templates/pageviews/support");
            a("rdust!templates/headers/back-header"), a("rdust!templates/headers/header");
            var o = g.extend(function() {
                g.apply(this, arguments), this.mapEvent({
                    ".list-item": {
                        tap: b.bind(this)
                    },
                    "a#supportNumber": {
                        tap: f.bind(this)
                    },
                    ext: {
                        stateModel: {
                            object: h,
                            events: {
                                backButton: e.bind(this)
                            }
                        }
                    }
                }), this.mapChildView({
                    ".child-wrapper": {
                        TView: k,
                        model: this.model
                    }
                })
            }, {
                className: "support",
                generateHtml: function(a) {
                    return a.appVersion = window.appVersion, new Promise(function(b) {
                        n.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    h.set("ignoreBack", !0), (Modernizr.desktop || Modernizr.tablet) && m.prototype.trackSupportActivity("FAQs"), g.prototype.onRenderSuccess.apply(this, arguments)
                },
                onTapBack: function(a) {
                    a.preventDefault(), this.el.find(".selected-grand-child").hasClass("show") ? this.el.find(".selected-grand-child").removeClass("show") : this.el.removeClass("selected")
                },
                dispose: function() {
                    h.set("ignoreBack", !1), g.prototype.dispose.apply(this, arguments)
                }
            });
            return o
        }), define("app/models/viewmodels/SupportViewModel", ["require", "lavaca/mvc/Model", "app/models/FAQModel"], function(a) {
            function b() {
                var a = d.get("FAQs") || [];
                a.length > 0 ? (this.set("FAQs", a), this.trigger("setFAQs")) : d.init().then(function(a) {
                    this.set("FAQs", a), this.trigger("setFAQs")
                }.bind(this))
            }
            var c = a("lavaca/mvc/Model"),
                d = a("app/models/FAQModel"),
                e = c.extend(function() {
                    c.call(this, arguments), b.call(this)
                });
            return e
        }), define("app/net/SettingsController", ["require", "app/ui/views/controlviews/ModalView", "app/ui/views/modalviews/UserSettingsAddSleeper", "app/ui/views/modalviews/AddBedView", "app/net/BaseController", "app/ui/views/pageviews/SupportView", "app/models/viewmodels/SupportViewModel"], function(a) {
            var b = a("app/ui/views/controlviews/ModalView"),
                c = a("app/ui/views/modalviews/UserSettingsAddSleeper"),
                d = a("app/ui/views/modalviews/AddBedView"),
                e = a("app/net/BaseController"),
                f = a("app/ui/views/pageviews/SupportView"),
                g = a("app/models/viewmodels/SupportViewModel"),
                h = e.extend(function() {
                    $("html").attr("data-controller", "SettingsController"), e.apply(this, arguments)
                }, {
                    addSleeper: function(a) {
                        var d = {};
                        return a && a.model && (d = a.model), b.view(c, d, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    addBed: function(a) {
                        return b.view(d, {}, a.url)
                    },
                    support: function(a, b) {
                        return this.view(null, f, new g).then(this.updateState(b, "SleepIQ", a.url))
                    }
                });
            return h
        }), define("app/models/viewmodels/BedScanModalViewModel", ["require", "lavaca/mvc/Model", "app/models/BedCollection", "app/models/BedDemoModel", "sccomm/ConnectedDeviceStateModel"], function(a) {
            function b() {
                c.call(this) ? this.apply(f.toObject()) : this.apply(e.getCurrentBedModel().toObject())
            }

            function c() {
                return g.get("isDemo")
            }
            var d = a("lavaca/mvc/Model"),
                e = a("app/models/BedCollection"),
                f = a("app/models/BedDemoModel"),
                g = a("sccomm/ConnectedDeviceStateModel"),
                h = d.extend(function() {
                    d.call(this, arguments), b.call(this)
                }, {
                    updateScanResults: function() {
                        this.set("scanResults", g.get("scanResults"))
                    },
                    updateMacAddress: function(a) {
                        a && e.getCurrentBedModel().set("macAddress", a)
                    }
                });
            return h
        }), define("rdust!templates/modalviews/activity", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/activity-header", b, {
                        name: c
                    }).write('<div class="body overflow-scroll ').notexists(b.get("canEdit"), b, {
                        block: d
                    }, null).write('"><div class="overflow-scroll-inner"><div class="loading"></div><div class="error"><h1>Error</h1><h2>Unable to add duplicate tags.</h2></div>').exists(b.get("hasFetched"), b, {
                        block: e
                    }, null).write("</div></div>")
                }

                function c(a, b) {
                    return a.reference(b.get("name"), b, "h")
                }

                function d(a) {
                    return a.write("readonly")
                }

                function e(a, b) {
                    return a.exists(b.get("hasTags"), b, {
                        "else": f,
                        block: j
                    }, null)
                }

                function f(a, b) {
                    return a.write('<div class="no-tags"><p class="info">Use this area to track activities that have been a part of ').reference(b.get("name"), b, "h").write('&rsquo;s day which may impact his/her sleep.</p><div class="example"><h2>Some items that might be helpful to track:</h2><ul class="examples">').notexists(b.get("isChild"), b, {
                        "else": g,
                        block: h
                    }, null).write("</ul></div>").exists(b.get("canEdit"), b, {
                        block: i
                    }, null).write("</div>")
                }

                function g(a) {
                    return a.write("<li>Homework</li><li>Read before bed</li><li>Late Night</li><li>TV/Media </li><li>Sports</li><li>Sick</li>")
                }

                function h(a) {
                    return a.write("<li>Diet</li><li>Exercise</li><li>Medication</li><li>Caffeine</li><li>TV/Media</li><li>Alcohol</li>")
                }

                function i(a) {
                    return a.write('<div class="add-new"><span>Add a New Activity</span></div>')
                }

                function j(a, b) {
                    return a.exists(b.get("canEdit"), b, {
                        block: k
                    }, null).write('<ul class="tags">').section(b.get("tags"), b, {
                        block: l
                    }, null).section(b.get("providerActivities"), b, {
                        block: n
                    }, null).write("</ul>")
                }

                function k(a) {
                    return a.write('<div class="new-tag"><div class="add-new-tag">Add New Activity</div><div class="divider"></div></div>')
                }

                function l(a, b) {
                    return a.write('<li class="tag').exists(b.get("checked"), b, {
                        block: m
                    }, null).write('" data-position="').reference(b.get("position"), b, "h").write('"><div class="wrapper"><div class="name">').reference(b.get("name"), b, "h").write('</div></div><div class="edit"></div><div class="divider"></div></li>')
                }

                function m(a) {
                    return a.write(" checked")
                }

                function n(a, b) {
                    return a.write('<li class="tag checked provider"><div class="wrapper"><div class="name provider">').reference(b.get("name"), b, "h").write(' <span class="provider-name">Provided by <span class="provider">').reference(b.get("provider"), b, "h").write('</span></span></div> </div><div class="divider"></div></li>')
                }
                return a.register("templates/modalviews/activity", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/activity", b, c)
                }
            }
        }), define("rdust!templates/headers/activity-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header ').notexists(b.get("canEdit"), b, {
                        block: c
                    }, null).write('">').exists(b.get("canEdit"), b, {
                        "else": d,
                        block: e
                    }, null).write('<div class="divider"></div></header><div class="date-bar"><h1 class="date">').reference(b.get("formattedDate"), b, "h").write('</h1><div class="divider"></div></div>')
                }

                function c(a) {
                    return a.write("show-done")
                }

                function d(a) {
                    return a.write('<div class="title">SleepIQ Activity Tags</div><button class="done right">Done</button>')
                }

                function e(a, b) {
                    return a.write('<button class="cancel">Cancel</button><div class="title">SleepIQ Activity Tags</div><button class="done right">Done</button>').exists(b.get("hasTags"), b, {
                        block: f
                    }, null)
                }

                function f(a) {
                    return a.write('<button class="save right">Save</button>')
                }
                return a.register("templates/headers/activity-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/activity-header", b, c)
                }
            }
        }), define("app/ui/views/modalviews/ActivityModalView", ["require", "./BaseModalView", "app/models/StateModel", "rdust!templates/modalviews/activity", "moment", "$", "mout/object/get", "app/utils/MixPanelManager", "rdust!templates/headers/activity-header"], function(a) {
            function b(a) {
                if (this.model.get("canEdit")) {
                    var b;
                    b = "object" == typeof a ? a.input1.replace(/\s+/g, " ").trim() : a.replace(/\s+/g, " ").trim(), b.length > 64 && (b = b.slice(0, 64));
                    var c = this.model.get("tags"),
                        d = this.el.find(".edit-mode .name"),
                        e = h(d).text();
                    if (b && b.length > 0) {
                        for (var f in c) c[f].name === e && (c[f].name = b);
                        this.model.set("tags", c), h(d).text(b)
                    }
                    this.shouldSaveAll = !0, this.el.find(".tag.edit-mode").removeClass("edit-mode swiped")
                }
            }

            function c(a) {
                var b;
                if (b = "object" == typeof a ? a.input1 : a, (!navigator || 1 !== a.buttonIndex) && b) {
                    var c = b && b.length > 0 ? b.replace(/\s+/g, " ").trim() : "";
                    c.length > 64 && (c = c.slice(0, 64));
                    for (var d = this.model.get("tags"), e = d.length + 1 || 1, f = '<li class="tag checked" data-position="' + e + '">' + '<div class="wrapper">' + '<div class="name">' + c + "</div>" + "</div>" + '<div class="divider"></div>' + '<div class="edit"></div>' + "</li>", g = 0; g < d.length; g++)
                        if (d[g].name.toLowerCase() === c.toLowerCase()) return window.customAlert.alert("The tag you added already exists."), void 0;
                    this.el.find(".tags").prepend(f), this.shouldSaveAll = !0, d.push({
                        name: c,
                        position: e
                    }), this.model.set("tags", d), this.model.hasTags = !0
                }
            }
            var d = a("./BaseModalView"),
                e = a("app/models/StateModel"),
                f = a("rdust!templates/modalviews/activity"),
                g = a("moment"),
                h = a("$"),
                i = a("mout/object/get"),
                j = a("app/utils/MixPanelManager");
            a("rdust!templates/headers/activity-header");
            var k = d.extend(function() {
                d.apply(this, arguments), this.mapEvent({
                    model: {
                        tagsFetched: this.onTagsFetched
                    },
                    ".tag": {
                        tap: this.toggleCheckedTag,
                        swipe: this.tagSwiped
                    },
                    ".add-new": {
                        tap: this.tapAddNew
                    },
                    ".new-tag": {
                        tap: this.addTag
                    },
                    ".tag .edit": {
                        tap: this.onTapEdit
                    },
                    ".tag .name": {
                        focus: this.toggleOptions
                    },
                    ".save, .done": {
                        tap: this.saveTags
                    }
                })
            }, {
                className: "activity",
                hasSwiped: !1,
                inEditMode: !1,
                justTapped: !1,
                shouldSaveAll: !1,
                generateHtml: function(a) {
                    return a.formattedDate = g(a.date).format("dddd, MMMM D"), new Promise(function(b) {
                        f.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    setTimeout(function() {
                        this.el.find(".overflow-scroll-inner").hide().show(0)
                    }.bind(this), 500)
                },
                onTagsFetched: function() {
                    this.model.get("hasTags") || (this.model.set("hasTags", !((this.model.get("tags") && this.model.get("tags").length ? 0 : 1) && (this.model.get("providerActivities") && this.model.get("providerActivities").length ? 0 : 1))), this.render(".header, .body").then(function() {
                        var a = this.model.get("checkedTags"),
                            b = this.el.find(".tag");
                        if (a && b.length)
                            for (var c = 0; c < a.length; c++) b.each(function() {
                                h(this).find(".name").html().toLowerCase() === a[c].toLowerCase() && h(this).addClass("checked")
                            });
                        this.el.find(".body").removeClass("loading")
                    }.bind(this)))
                },
                toggleCheckedTag: function(a) {
                    if (!this.justTapped && this.model.get("canEdit") && !e.get("demoMode")) {
                        var b = h(a.currentTarget);
                        b.hasClass("provider") || b.hasClass("edit-mode") || (b.toggleClass("checked"), this.justTapped = !0, setTimeout(function() {
                            this.justTapped = !1
                        }.bind(this), 50))
                    }
                },
                toggleOptions: function(a) {
                    if (this.model.get("canEdit") && !e.get("demoMode") && !Modernizr.desktop) {
                        a && (a.preventDefault(), a.stopPropagation());
                        var b = a && "focusin" === a.type;
                        a && a.currentTarget && h(a.currentTarget).hasClass("name") && (b = b && this.inEditMode), this.el.find("header").toggleClass("show-done", b)
                    }
                },
                addTag: function() {
                    this.model.get("canEdit") && !e.get("demoMode") && window.customAlert.prompt("Enter an activity that has been part of your day.", c.bind(this))
                },
                saveTags: function() {
                    if (!this.model.get("canEdit")) return this.forceExit(), void 0;
                    var a = this.el.find(".checked .name"),
                        b = [];
                    a.each(function(a, c) {
                        h(c).hasClass("provider") || b.push(h(c).text())
                    });
                    var c = this.model.get("checkedTags").length;
                    this.model.set("checkedTags", b), this.shouldSaveAll ? this.model.save().then(function(a) {
                        console.log("Save response: ", a), (c || b.length) && j.prototype.trackActivityEntry(this.model.toObject()), this.model.saveTagsForDay(this.model.get("date"), b).then(function(a) {
                            console.log("Saved tags: ", a), e.trigger("tagsUpdated"), this.forceExit()
                        }.bind(this), function() {
                            window.customAlert.alert("We were unable to save your tags. Please try again.")
                        })
                    }.bind(this), function(a) {
                        if ("object" == typeof a) {
                            var b = i(a, "responseJSON.Error.Message");
                            window.customAlert.alert(b)
                        } else window.customAlert.alert(a)
                    }) : ((c || b.length) && j.prototype.trackActivityEntry(this.model.toObject()), this.model.saveTagsForDay(this.model.get("date"), b).then(function(a) {
                        console.log("Saved tags: ", a), e.trigger("tagsUpdated"), this.forceExit()
                    }.bind(this), function() {
                        window.customAlert.alert("We were unable to save your tags. Please try again.")
                    }))
                },
                tagSwiped: function(a) {
                    if (this.model.get("canEdit") && !e.get("demoMode") && !Modernizr.desktop) {
                        var b = h(a.currentTarget);
                        !b.hasClass("edit-mode") && "left" === a.gesture.direction && a.gesture.deltaX < -50 ? (this.el.find(".tag").removeClass("edit-mode"), b.addClass("edit-mode swiped"), this.hasSwiped = !0) : b.hasClass("edit-mode") && "right" === a.gesture.direction && a.gesture.deltaX > 50 && (b.removeClass("edit-mode swiped"), this.hasSwiped = !1)
                    }
                },
                onTapEdit: function(a) {
                    if (!e.get("demoMode") && a) {
                        a.preventDefault(), a.stopPropagation();
                        var c = h(a.currentTarget);
                        if (c.parent().siblings().removeClass("edit-mode"), c.parent().hasClass("edit-mode") || c.parent().hasClass("swipped") || Modernizr.desktop) {
                            var d = c.parent().find(".name");
                            c.parent().addClass("edit-mode"), window.customAlert.prompt("Change the activity name.", b.bind(this), void 0, void 0, h(d).text())
                        }
                    }
                },
                tapAddNew: function() {
                    e.get("demoMode") || (this.model.set("hasTags", !0), this.render(".header, .body").then(function() {
                        this.el.find(".header").addClass("show-done"), setTimeout(function() {
                            this.addTag.call(this)
                        }.bind(this), 100)
                    }.bind(this)))
                }
            });
            return k
        }), define("app/models/viewmodels/ActivityModalViewModel", ["require", "lavaca/mvc/Model", "app/models/FamilyModel", "app/models/StateModel", "app/service/EdpAccountService", "app/service/SleepDataService"], function(a) {
            function b(a) {
                return a.sort(function(a, b) {
                    var c = a.name.toUpperCase(),
                        d = b.name.toUpperCase();
                    return d > c ? -1 : c > d ? 1 : 0
                }), a
            }
            var c = a("lavaca/mvc/Model"),
                d = a("app/models/FamilyModel"),
                e = a("app/models/StateModel"),
                f = a("app/service/EdpAccountService"),
                g = a("app/service/SleepDataService"),
                h = c.extend(function() {
                    c.call(this, arguments)
                }, {
                    fetch: function() {
                        var a = d.getSelectedUser();
                        g.getCustomTags(a.sleeperId).then(function(c) {
                            this.set("tags", c && c.customTagList ? b.call(this, c.customTagList) : []), f.getProviders().then(function(b) {
                                f.getActivities(a.sleeperId, this.get("date"), this.get("date")).then(function(a) {
                                    if (a.activities && a.activities.length > 0) {
                                        var c = [];
                                        a.activities.forEach(function(a) {
                                            for (var d in a.partner) {
                                                var e = b.providers.find(function(a) {
                                                    return a.id === d
                                                });
                                                if (e && e.data_types.indexOf("activity") >= 0 && null !== a.partner[d].summary_data) {
                                                    var f = a.partner[d].summary_data.split(/, |,/);
                                                    f.forEach(function(a) {
                                                        c.push({
                                                            name: a,
                                                            provider: e.name
                                                        })
                                                    })
                                                }
                                            }
                                        }), console.log("provider activities", c), c.length > 0 && this.set("providerActivities", c), this.set("hasFetched", !0), this.trigger("tagsFetched")
                                    } else this.set("hasFetched", !0), this.trigger("tagsFetched")
                                }.bind(this), function(a) {
                                    console.warn("edp error", a), this.set("hasFetched", !0), this.trigger("tagsFetched")
                                }.bind(this))
                            }.bind(this), function() {
                                console.log("err"), this.set("hasFetched", !0), this.trigger("tagsFetched")
                            }.bind(this))
                        }.bind(this), function(a) {
                            return this.set("hasFetched", !0), this.trigger("tagsFetched"), a
                        }.bind(this))
                    },
                    save: function() {
                        var a = d.getSelectedUser();
                        return new Promise(function(b, c) {
                            return g.setCustomTags({
                                customTagList: this.get("tags")
                            }, a.sleeperId).then(function(a) {
                                return b(a)
                            }.bind(this), function(a) {
                                return c(a)
                            }.bind(this))
                        }.bind(this))
                    },
                    saveTagsForDay: function(a, b) {
                        var c = d.getSelectedUser(),
                            f = {
                                day: a,
                                tagList: b
                            };
                        return new Promise(function(a, b) {
                            return g.setTags(f, c.sleeperId).then(function(b) {
                                return e.trigger("tagsSaved", f), a(b)
                            }.bind(this), function(a) {
                                return b(a)
                            }.bind(this))
                        }.bind(this))
                    }
                });
            return h
        }), define("rdust!templates/modalviews/debug-modal", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="section activation"><h1>Account Activation</h1><button class="toggle-activation ').exists(b.get("accountActivation"), b, {
                        block: c
                    }, null).write('"></button></div><div class="section"><!-- 	<h1>Login Credentials</h1><p class="current"><strong>Current Email:</strong> ').exists(b.get("debugEmail"), b, {
                        "else": d,
                        block: e
                    }, null).write('</p><p class="current"><strong>Current Password:</strong> ').exists(b.get("debugPassword"), b, {
                        "else": f,
                        block: g
                    }, null).write('</p><br /><input class="email" type="email" placeholder="User Email" value="').reference(b.get("debugEmail"), b, "h").write('" /><input class="password" type="text" placeholder="User Password" value="').reference(b.get("debugPassword"), b, "h").write('" /><button class="set-login">Set Login</button> --><div class="build-info">').reference(b.getPath(!1, ["build", "name"]), b, "h").write(" ").reference(b.getPath(!1, ["build", "number"]), b, "h").write(" <br /> ").reference(b.getPath(!1, ["build", "timestamp"]), b, "h").write('</div><button class="link" data-href="/ble-test">Bluetooth Testing</button><button class="link" data-href="/binding/welcome">Binding Test</button><button class="remote-menu-extras">Remote Menu Extras <span>(off)</span></button><button class="server">Toggle Server Select Section</button></div><header class="done-wrapper"><button class="back">Done</button></header>')
                }

                function c(a) {
                    return a.write("on")
                }

                function d(a) {
                    return a.write("-")
                }

                function e(a, b) {
                    return a.reference(b.get("debugEmail"), b, "h")
                }

                function f(a) {
                    return a.write("-")
                }

                function g(a, b) {
                    return a.reference(b.get("debugPassword"), b, "h")
                }
                return a.register("templates/modalviews/debug-modal", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/debug-modal", b, c)
                }
            }
        }), define("app/ui/views/modalviews/DebugModal", ["require", "./BaseModalView", "rdust!templates/modalviews/debug-modal", "app/models/StateModel", "lavaca/fx/Transform", "$"], function(a) {
            function b(a) {
                var b = k(a.currentTarget);
                b.toggleClass("on"), this.model.set("accountActivation", b.hasClass("on"))
            }

            function c() {
                this.model.set("debugEmail", this.el.find(".email").val()), this.model.set("debugPassword", this.el.find(".password").val()), this.render(".current")
            }

            function d(a) {
                var b = !h.get("remoteMenuExtras");
                k(a.currentTarget).find("span").text(b ? "(on)" : "(off)"), h.set("remoteMenuExtras", b)
            }

            function e() {
                var a = k("#snap-drag-x");
                a.css(j, "translate3d(-" + a.width() + "px,0,0)"), this.exit()
            }
            var f = a("./BaseModalView"),
                g = a("rdust!templates/modalviews/debug-modal"),
                h = a("app/models/StateModel"),
                i = a("lavaca/fx/Transform"),
                j = i.cssProperty(),
                k = a("$"),
                l = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        ".toggle-activation": {
                            tap: b
                        },
                        ".set-login": {
                            tap: c
                        },
                        ".remote-menu-extras": {
                            tap: d
                        },
                        ".server": {
                            tap: e
                        }
                    })
                }, {
                    className: "debug-modal",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            g.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return l
        }), define("rdust!templates/modalviews/registration-terms-modal", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="terms"><div class="overflow-scroll"><div class="overflow-scroll-inner"><span class="title">').reference(b.get("termsTitle"), b, "h").write("</span><p>").reference(b.get("terms"), b, "h", ["s"]).write('</p>}</div></div></div><div class="button-row"><button class="disagree alt">Disagree</button><button class="agree">Agree</button></div>')
                }
                return a.register("templates/modalviews/registration-terms-modal", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/registration-terms-modal", b, c)
                }
            }
        }), define("app/ui/views/modalviews/RegistrationTermsModal", ["require", "./BaseModalView", "app/ui/views/controlviews/ModalView", "app/models/StateModel", "app/models/FamilyModel", "mout/object/get", "app/models/AccountModel", "app/utils/MixPanelManager", "lavaca/mvc/Router", "rdust!templates/modalviews/registration-terms-modal"], function(a) {
            function b() {
                var a = this.model.get("terms").split("\n")[0];
                this.model.set("termsTitle", a.toLowerCase()), this.model.set("terms", this.model.get("terms").replace(a + "\n", "")), this.render(".terms")
            }

            function c(a) {
                if (g.trigger("closeTermsModal"), this.model.fromLogin) {
                    var b = this.model.get("username"),
                        c = this.model.get("password");
                    j.login(b, c).then(function() {
                        this.model.set("termsAccepted", !0), this.model.trigger("termsAccepted"), h.fetch().then(function() {
                            l.exec("/"), this.forceExit()
                        }.bind(this), function() {
                            l.exec("/"), this.forceExit()
                        }.bind(this))
                    }.bind(this), function(a) {
                        (a && 409 === i(a, "Error.Code") || 409 === a) && this.forceExit()
                    }.bind(this))
                } else a && this.model.trigger("termsAccepted"), this.forceExit()
            }

            function d() {
                k.prototype.trackTerms("Disagree"), window.customAlert.alert("Please agree to the SleepIQ® terms and conditions to continue setting up your account."), c.call(this)
            }

            function e(a) {
                k.prototype.trackTerms("Agree");
                var b = $(a.currentTarget);
                if (!b.hasClass("disabled")) {
                    b.addClass("disabled");
                    var c = this.model.get("username"),
                        d = this.model.get("password");
                    setTimeout(function() {
                        b.removeClass("disabled")
                    }.bind(this), 2e3);
                    var e = g.get("licenseVersion") || 6;
                    return this.acceptTerms(c, d, e).then(function() {
                        b.removeClass("disabled")
                    }.bind(this), function() {
                        b.removeClass("disabled")
                    }.bind(this))
                }
            }
            var f = a("./BaseModalView"),
                g = (a("app/ui/views/controlviews/ModalView"), a("app/models/StateModel")),
                h = a("app/models/FamilyModel"),
                i = a("mout/object/get"),
                j = a("app/models/AccountModel"),
                k = a("app/utils/MixPanelManager"),
                l = a("lavaca/mvc/Router"),
                m = a("rdust!templates/modalviews/registration-terms-modal"),
                n = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        model: {
                            termsFetched: b.bind(this)
                        },
                        ".disagree": {
                            tap: d.bind(this)
                        },
                        ".agree": {
                            tap: e.bind(this)
                        }
                    })
                }, {
                    className: "registration-terms-modal",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            m.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    acceptTerms: function(a, b, d) {
                        return new Promise(function(e, f) {
                            this.model.acceptTerms(a, b, d).then(function() {
                                this.model.set("termsAccepted", !0), c.call(this, !0), e()
                            }.bind(this), function() {
                                j.login(a, b).then(function() {
                                    this.model.set("termsAccepted", !0), c.call(this, !0), e()
                                }.bind(this), function(g) {
                                    g && 409 === i(g, "Error.Code") || 409 === g ? this.model.acceptTerms(a, b, d).then(function() {
                                        this.model.set("termsAccepted", !0), c.call(this, !0), e()
                                    }.bind(this), function() {
                                        window.customAlert.alert("An issue occurred, the SleepIQ® terms and conditions could not be signed."), c.call(this), f()
                                    }.bind(this)) : (window.customAlert.alert("An issue occurred, the SleepIQ® terms and conditions could not be signed."), c.call(this), f())
                                }.bind(this))
                            }.bind(this))
                        }.bind(this))
                    }
                });
            return n
        }), define("rdust!templates/modalviews/registration-wifi-modal", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header"><button class="cancel left">Cancel</button><div class="title">Wifi Setup</div><button class="done">Done</button></header><div class="container"><div class="networks"><h1>Enter the info for the WiFi network your bed will connect to.</h1></div><form class="form" data-animate-labels="true" data-type="').exists(b.getPath(!1, ["networkModel", "typeString"]), b, {
                        "else": c,
                        block: d
                    }, null).write('" data-enterprise="false"><div class="input-wrapper"><label id="labelRegistration" for="wifi" class="labelRegistration ').exists(b.getPath(!1, ["networkModel", "wifiName"]), b, {
                        block: e
                    }, null).write('">Home WiFi Network</label><input name="wifi" class="inputRegistration"type="text" id="network-name" maxlength="100"  autocomplete="false" autocorrect="off" value="').reference(b.getPath(!1, ["networkModel", "wifiName"]), b, "h").write('" data-validation="').reference(b.getPath(!1, ["wifiValidations", "wifi"]), b, "h").write('" needsclick /><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper"><label for="pass1" class="labelRegistrationPass ').exists(b.getPath(!1, ["networkModel", "wifiPassword"]), b, {
                        block: f
                    }, null).write('">Password</label><input name="pass1" type="password" id="password"  value="').reference(b.getPath(!1, ["networkModel", "wifiPassword"]), b, "h").write('"  autocomplete="false" autocorrect="off" maxlength="100" class="password" data-validation="').reference(b.getPath(!1, ["wifiValidations", "password"]), b, "h").write('" needsclick /><span class="clear"></span><p class="error-message"></p></div><div class="toggle-password">Show Password</div><div class="input-wrapper" id="advanced"><input name="adv" type="checkbox" id="adv"/><label for="adv">See Advanced Options</label></div><div class="input-wrapper enterprise-setup"></br><label for="enterprise" class="').exists(b.getPath(!1, ["networkModel", "type"]), b, {
                        block: g
                    }, null).write('">Network Type</label><select id="type" name="enterprise" needsclick data-validation="').reference(b.getPath(!1, ["wifiValidations", "type"]), b, "h").write('" ><option value="" disabled selected></option><option value="wpa">WPA</option><option value="wpa2">WPA2 Personal</option><option value="wpa2e">WPA2 Enterprise</option><option value="wep">WEP</option></select><p class="error-message"></p></br></div><div class="input-wrapper wpa2e"><label for="eap" class="').exists(b.getPath(!1, ["networkModel", "eap"]), b, {
                        block: h
                    }, null).write('">Authentication Protocol</label><select id="eap" name="eap" needsclick data-validation="').reference(b.getPath(!1, ["wifiValidations", "eap"]), b, "h").write('" ><option value="" disabled selected></option><option value="LEAP">LEAP</option><option value="PEAP">PEAP</option></select><p class="error-message"></p></div><div class="input-wrapper wpa2e"><label for="username" class="').exists(b.getPath(!1, ["networkModel", "identity"]), b, {
                        block: i
                    }, null).write('">Username</label><input name="username" type="text" id="identity" value="').reference(b.getPath(!1, ["networkModel", "identity"]), b, "h").write('" maxlength="64"  data-validation="').reference(b.getPath(!1, ["wifiValidations", "username"]), b, "h").write('" needsclick /><span class="clear"></span><p class="error-message"></p></div></form></div>')
                }

                function c(a) {
                    return a.write("none")
                }

                function d(a) {
                    return a.write("networkModel.typeString")
                }

                function e(a) {
                    return a.write("reveal")
                }

                function f(a) {
                    return a.write("reveal")
                }

                function g(a) {
                    return a.write("reveal")
                }

                function h(a) {
                    return a.write("reveal")
                }

                function i(a) {
                    return a.write("reveal")
                }
                return a.register("templates/modalviews/registration-wifi-modal", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/registration-wifi-modal", b, c)
                }
            }
        }), define("app/ui/views/modalviews/RegistrationWifiModal", ["require", "./BaseModalView", "$", "app/models/FamilyModel", "app/service/WifiService", "app/ui/widgets/WifiFormValidator", "app/models/validations/wifi-validations", "rdust!templates/modalviews/registration-wifi-modal", "app/models/StateModel", "app/utils/MixPanelManager"], function(a) {
            function b() {
                this.isSaving || this.el.find(".form").trigger("validateForm", function(a) {
                    if (a) {
                        this.isSaving = !0;
                        var b = d.call(this);
                        if (JSON.stringify(this.backupNetwork) === JSON.stringify(b)) return this.forceExit(), void 0;
                        this.model.set("networkModel", b), this.model.trigger("wifiChanged");
                        var c = {
                            ssid: b.wifiName,
                            password: b.wifiPassword
                        };
                        return "undefined" != typeof b.eap && (c.eap = b.eap), "undefined" != typeof b.type && (c.type = b.type), "undefined" != typeof b.identity && (c.identity = b.identity), m.addWifi(c).then(function() {
                            this.isSaving = !1, this.forceExit(), q.trigger("refreshNetwork")
                        }.bind(this), function(a) {
                            this.isSaving = !1;
                            var b = a && a.responseJSON && a.responseJSON.Error && a.responseJSON.Error.Message ? a.responseJSON.Error.Message : "Something went wrong updating your wifi network. Please try again.";
                            e(b)
                        }.bind(this))
                    }
                    this.isSaving = !1
                }.bind(this))
            }

            function c(a) {
                this.model.set("networkModel", {
                    wifiName: a.currentTarget.dataset.ssid
                }), this.model.trigger("wifiChanged"), this.forceExit()
            }

            function d() {
                var a = this.el.find("form"),
                    b = {
                        wifiName: a.find("#network-name").val(),
                        wifiPassword: a.find("#password").val() || ""
                    },
                    c = a.find("#identity").val(),
                    d = a.find("#type").val(),
                    e = a.find("#eap").val();
                if (this.advanced) {
                    if ("wpa2e" === d) {
                        if (!(c && c.length > 0)) throw new Error("WPA2 Enterprise requires a valid username.");
                        b.identity = c, e && e.length > 0 && (b.eapString = e.toUpperCase(), b.eap = "LEAP" === b.eapString ? 1 : 0)
                    }
                    if (d && d.length > 0) switch (b.typeString = d, d) {
                        case "wpa":
                            b.type = 0;
                            break;
                        case "wpa2":
                            b.type = 1;
                            break;
                        case "wpa2e":
                            b.type = 2;
                            break;
                        case "wep":
                            b.type = 2
                    }
                }
                return b
            }

            function e(a) {
                window.customAlert.alert(a)
            }

            function f(a) {
                this.type = a.currentTarget.value, this.el.find(".form").attr("data-type", a.currentTarget.value)
            }

            function g() {
                this.el.toggleClass("enterprise"), this.advanced = !this.advanced;
                var a = this.el.find("#type").val() || "none";
                this.advanced || (a = "none"), this.el.find(".form").attr("data-type", a), this.el.find(".form").attr("data-enterprise", this.advanced)
            }

            function h(a) {
                var b = l(a.currentTarget),
                    c = this.el.find(".password"),
                    d = "password" === c.prop("type") ? "text" : "password";
                "password" === d ? b.text("Show Password") : b.text("Hide Password"), c.prop("type", d)
            }

            function i(a) {
                try {
                    var b = l(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var c = b.prev();
                    c.val(""), c.removeClass("invalid valid"), c.focus()
                } catch (d) {
                    console.log(d)
                }
            }

            function j() {
                this.el.find(".labelRegistration").removeClass("empty").addClass("reveal"), this.el.find(".labelRegistrationPass").removeClass("empty").addClass("reveal")
            }
            var k = a("./BaseModalView"),
                l = a("$"),
                m = (a("app/models/FamilyModel"), a("app/service/WifiService")),
                n = a("app/ui/widgets/WifiFormValidator"),
                o = a("app/models/validations/wifi-validations"),
                p = a("rdust!templates/modalviews/registration-wifi-modal"),
                q = a("app/models/StateModel");
            a("app/utils/MixPanelManager");
            var r = k.extend(function() {
                k.apply(this, arguments), this.mapEvent({
                    'input[type="checkbox"]': {
                        change: g
                    },
                    "#type": {
                        change: f
                    },
                    ".toggle-password": {
                        tap: h
                    },
                    ".cancel": {
                        tap: this.onTapBack
                    },
                    ".done": {
                        tap: b
                    },
                    ".clear": {
                        tap: i
                    },
                    ".list-item": {
                        tap: c
                    },
                    ".inputRegistration": {
                        tap: j
                    },
                    ".inputRegistration": {
                        focus: j
                    }
                }), this.mapWidget({
                    ".form": {
                        TWidget: n
                    }
                })
            }, {
                className: "registration-wifi-modal",
                advanced: !1,
                type: "wpa",
                hasChanged: !1,
                isSaving: !1,
                generateHtml: function(a) {
                    return a ? a.wifiValidations = o : a = {
                        wifiValidations: o,
                        networkTypeString: "none"
                    }, new Promise(function(b) {
                        p.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    var a = l("#password").val();
                    "" == a ? this.el.find(".labelRegistrationPass").removeClass("empty").addClass("reveal") : a && "" != a && this.el.find(".labelRegistrationPass").removeClass("empty").addClass("reveal"), m.getWifi().then(function(a) {
                        a && a.networks && (this.model.set("networks", a.networks), this.render(".networks"))
                    }.bind(this)), this.model && this.model.get("networkModel") && (this.model.get("networkModel").typeString && this.el.find("#type") && this.el.find("#type").val(this.model.get("networkModel").typeString) && this.el.find(".form").attr("data-type", this.model.get("networkModel").typeString) && this.el.find(".form").attr("data-enterprise", this.model.get("networkModel").isAdvanced ? !0 : !1), this.model.get("networkModel").typeString && this.el.find("#eap").val(this.model.get("networkModel").eapString), this.model.get("networkModel").typeString && g.call(this), this.el.find("#network-name").val(""), this.el.find("#password").val(""), this.el.find(".labelRegistration").addClass("empty"), this.el.find(".labelRegistrationPass").addClass("empty"), this.backupNetwork = this.model.get("networkModel"))
                }
            });
            return r
        }), define("rdust!templates/modalviews/goals-detail", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header"><div class="title">Goal Details</div><button class="done right">Done</button><div class="divider"></div></header><div class=\'content-wrapper\'>').exists(b.get("goal"), b, {
                        block: c
                    }, null).write("</div>")
                }

                function c(a, b) {
                    return a.write("<div class='goal-time'><div class=\"title\">").reference(b.getPath(!1, ["goal", "goalTitle"]), b, "h").write('</div><div class="display-time">').helper("select", b, {
                        block: d
                    }, {
                        key: g
                    }).write(" ").reference(b.getPath(!1, ["goal", "formattedTime"]), b, "h").write("</div><div class='edit button ").exists(b.getPath(!1, ["loggedInUser", "isChild"]), b, {
                        block: h
                    }, null).write("'>Edit</div></div><div class='progress-this-week'><div class='title-text'>Your Progress this Week</div><div class='goals-progress-view'></div></div><div class='progress-status'><div class='progress-text'>").helper("eq", b, {
                        "else": i,
                        block: p
                    }, {
                        key: q,
                        value: "0"
                    }).write("</div></div>")
                }

                function d(a, b) {
                    return a.helper("eq", b, {
                        block: e
                    }, {
                        value: "Stay in bed"
                    }).helper("default", b, {
                        block: f
                    }, null)
                }

                function e(a) {
                    return a.write("until")
                }

                function f(a) {
                    return a.write("by")
                }

                function g(a, b) {
                    return a.reference(b.getPath(!1, ["goal", "goalTitle"]), b, "h")
                }

                function h(a) {
                    return a.write("hidden")
                }

                function i(a, b) {
                    return a.write("You have reached your goal<br />").reference(b.getPath(!1, ["goal", "daysSuccessful"]), b, "h").write(" ").helper("eq", b, {
                        "else": j,
                        block: k
                    }, {
                        key: l,
                        value: "1"
                    }).write(" in a row!<div class='success-star'><div class='star-days'>").reference(b.getPath(!1, ["goal", "daysSuccessful"]), b, "h").write("<div class='days-text'>").helper("eq", b, {
                        "else": m,
                        block: n
                    }, {
                        key: o,
                        value: "1"
                    }).write("</div></div></div>")
                }

                function j(a) {
                    return a.write("days")
                }

                function k(a) {
                    return a.write("day")
                }

                function l(a, b) {
                    return a.reference(b.getPath(!1, ["goal", "daysSuccessful"]), b, "h")
                }

                function m(a) {
                    return a.write("days")
                }

                function n(a) {
                    return a.write("day")
                }

                function o(a, b) {
                    return a.reference(b.getPath(!1, ["goal", "daysSuccessful"]), b, "h")
                }

                function p(a) {
                    return a.write("You have not met your goal yet.")
                }

                function q(a, b) {
                    return a.reference(b.getPath(!1, ["goal", "daysSuccessful"]), b, "h")
                }
                return a.register("templates/modalviews/goals-detail", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/goals-detail", b, c)
                }
            }
        }), define("app/ui/views/modalviews/GoalDetailsModalView", ["require", "./BaseModalView", "lavaca/mvc/Model", "lavaca/mvc/Router", "app/ui/views/childviews/GoalsProgressView", "rdust!templates/modalviews/goals-detail", "moment", "rdust!templates/headers/settings-header"], function(a) {
            var b = a("./BaseModalView"),
                c = a("lavaca/mvc/Model"),
                d = a("lavaca/mvc/Router"),
                e = a("app/ui/views/childviews/GoalsProgressView"),
                f = a("rdust!templates/modalviews/goals-detail"),
                g = a("moment");
            a("rdust!templates/headers/settings-header");
            var h = b.extend(function() {
                b.apply(this, arguments), this.mapEvent({
                    ".goal-time": {
                        tap: this.editGoal
                    },
                    ".done": {
                        tap: this.dismiss
                    }
                }), this.mapChildView({
                    ".goals-progress-view": {
                        TView: e,
                        model: new c({
                            date: g(),
                            goal: this.model.get("goal"),
                            goalEntries: this.model.get("goalEntries")
                        })
                    }
                })
            }, {
                className: "goals-detail",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        f.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                editGoal: function() {
                    $(this.el.find(".edit")[0]).hasClass("hidden") || (this.model.set("function", "Edit"), d.exec("/goals/addgoaltime", null, {
                        model: this.model
                    }))
                },
                dismiss: function() {
                    b.prototype.forceExit.apply(this, arguments)
                }
            });
            return h
        }), define("rdust!templates/modalviews/add-goal", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header"><button class="cancel left">Cancel</button><div class="title">').reference(b.get("childName"), b, "h").write('&rsquo;s Goals</div><button class="next right ').notexists(b.get("goalSelected"), b, {
                        block: c
                    }, null).write('">Next</button><div class="divider"></div></header><div class="content-wrapper"><div class="main-text">What is ').reference(b.get("childName"), b, "h").write("&rsquo;s goal?</div><ul class='goals-list'><li class='goal-item ").section(b.get("goals"), b, {
                        block: d
                    }, null).write("' data-goal=\"0\"><div class='select-circle'></div><div class='goal-item-text'>Be in bed by...</div><div class='goal-item-subtext'>This goal has already been setup</div></li><li class='goal-item ").section(b.get("goals"), b, {
                        block: g
                    }, null).write("' data-goal=\"1\"><div class='select-circle'></div><div class='goal-item-text'>Stay in bed until...</div><div class='goal-item-subtext'>This goal has already been setup</div></li><li class='goal-item ").section(b.get("goals"), b, {
                        block: j
                    }, null).write("' data-goal=\"2\"><div class='select-circle'></div><div class='goal-item-text'>Get up by...</div><div class='goal-item-subtext'>This goal has already been setup</div></li></ul></div>")
                }

                function c(a) {
                    return a.write("disabled")
                }

                function d(a, b) {
                    return a.helper("eq", b, {
                        block: e
                    }, {
                        key: f,
                        value: "0"
                    })
                }

                function e(a) {
                    return a.write("disabled")
                }

                function f(a, b) {
                    return a.reference(b.get("goalType"), b, "h")
                }

                function g(a, b) {
                    return a.helper("eq", b, {
                        block: h
                    }, {
                        key: i,
                        value: "1"
                    })
                }

                function h(a) {
                    return a.write("disabled")
                }

                function i(a, b) {
                    return a.reference(b.get("goalType"), b, "h")
                }

                function j(a, b) {
                    return a.helper("eq", b, {
                        block: k
                    }, {
                        key: l,
                        value: "2"
                    })
                }

                function k(a) {
                    return a.write("disabled")
                }

                function l(a, b) {
                    return a.reference(b.get("goalType"), b, "h")
                }
                return a.register("templates/modalviews/add-goal", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/add-goal", b, c)
                }
            }
        }), define("app/ui/views/modalviews/AddGoalModalView", ["require", "./BaseModalView", "lavaca/mvc/Router", "app/models/StateModel", "rdust!templates/modalviews/add-goal", "$"], function(a) {
            var b = a("./BaseModalView"),
                c = a("lavaca/mvc/Router"),
                d = a("app/models/StateModel"),
                e = a("rdust!templates/modalviews/add-goal"),
                f = a("$"),
                g = b.extend(function() {
                    b.apply(this, arguments), this.mapEvent({
                        ".next": {
                            tap: this.nextStep
                        },
                        ".goal-item": {
                            tap: this.selectGoal
                        }
                    })
                }, {
                    className: "add-goal",
                    selected: void 0,
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            e.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    nextStep: function(a) {
                        f(a.currentTarget).hasClass("disabled") || void 0 !== this.selected && (this.model.set("goalType", this.selected), this.model.set("goal", {
                            goalType: this.selected
                        }), this.model.set("function", "Add"), c.exec("/goals/addgoaltime", null, {
                            model: this.model
                        }))
                    },
                    selectGoal: function(a) {
                        if (!d.get("demoMode")) {
                            var b = f(a.currentTarget),
                                c = b.data("goal");
                            b.hasClass("disabled") || b.hasClass("selected") || (this.selected = c, this.model.set("goalSelected", !0), this.el.find(".goal-item").removeClass("selected"), b.addClass("selected"), this.render(".header"))
                        }
                    }
                });
            return g
        }), define("rdust!templates/modalviews/add-goal-time", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header"><button class="cancel left">Cancel</button><div class="title">').reference(b.get("function"), b, "h").write(" Goal</div><button class=\"done right\">Save</button><div class=\"divider\"></div></header><div class='content-wrapper'><div class='add-time-title'>What time should ").reference(b.get("childName"), b, "h").write(" ").helper("select", b, {
                        block: c
                    }, {
                        key: g
                    }).write('?</div><div class="time-wrapper"><select class="hours" name="goal-time-hours">').helper("select", b, {
                        block: h
                    }, {
                        key: u
                    }).write('</select><div class="colon">:</div><select class="minutes" name="goal-time-minutes">').helper("select", b, {
                        block: v
                    }, {
                        key: I
                    }).write('</select><div class="ampm"><button class="am ').exists(b.get("isAm"), b, {
                        block: J
                    }, null).write('" type="button">AM</button><button class="pm ').notexists(b.get("isAm"), b, {
                        block: K
                    }, null).write('" type="button">PM</button></div></div></div>').helper("eq", b, {
                        block: L
                    }, {
                        key: M,
                        value: "Edit"
                    })
                }

                function c(a, b) {
                    return a.helper("eq", b, {
                        block: d
                    }, {
                        value: "0"
                    }).helper("eq", b, {
                        block: e
                    }, {
                        value: "1"
                    }).helper("eq", b, {
                        block: f
                    }, {
                        value: "2"
                    })
                }

                function d(a) {
                    return a.write("go to bed")
                }

                function e(a) {
                    return a.write("stay in bed until")
                }

                function f(a) {
                    return a.write("get up")
                }

                function g(a, b) {
                    return a.reference(b.getPath(!1, ["goal", "goalType"]), b, "h")
                }

                function h(a, b) {
                    return a.write('<option value="1" ').helper("eq", b, {
                        block: i
                    }, {
                        value: "1"
                    }).write('>01</option><option value="2" ').helper("eq", b, {
                        block: j
                    }, {
                        value: "2"
                    }).write('>02</option><option value="3" ').helper("eq", b, {
                        block: k
                    }, {
                        value: "3"
                    }).write('>03</option><option value="4" ').helper("eq", b, {
                        block: l
                    }, {
                        value: "4"
                    }).write('>04</option><option value="5" ').helper("eq", b, {
                        block: m
                    }, {
                        value: "5"
                    }).write('>05</option><option value="6" ').helper("eq", b, {
                        block: n
                    }, {
                        value: "6"
                    }).write('>06</option><option value="7" ').helper("eq", b, {
                        block: o
                    }, {
                        value: "7"
                    }).write('>07</option><option value="8" ').helper("eq", b, {
                        block: p
                    }, {
                        value: "8"
                    }).write('>08</option><option value="9" ').helper("eq", b, {
                        block: q
                    }, {
                        value: "9"
                    }).write('>09</option><option value="10" ').helper("eq", b, {
                        block: r
                    }, {
                        value: "10"
                    }).write('>10</option><option value="11" ').helper("eq", b, {
                        block: s
                    }, {
                        value: "11"
                    }).write('>11</option><option value="12" ').helper("eq", b, {
                        block: t
                    }, {
                        value: "12"
                    }).write(">12</option>")
                }

                function i(a) {
                    return a.write("selected")
                }

                function j(a) {
                    return a.write("selected")
                }

                function k(a) {
                    return a.write("selected")
                }

                function l(a) {
                    return a.write("selected")
                }

                function m(a) {
                    return a.write("selected")
                }

                function n(a) {
                    return a.write("selected")
                }

                function o(a) {
                    return a.write("selected")
                }

                function p(a) {
                    return a.write("selected")
                }

                function q(a) {
                    return a.write("selected")
                }

                function r(a) {
                    return a.write("selected")
                }

                function s(a) {
                    return a.write("selected")
                }

                function t(a) {
                    return a.write("selected")
                }

                function u(a, b) {
                    return a.reference(b.get("goalTimeHours"), b, "h")
                }

                function v(a, b) {
                    return a.write('<option value="0" ').helper("eq", b, {
                        block: w
                    }, {
                        value: "0"
                    }).write('>00</option><option value="5" ').helper("eq", b, {
                        block: x
                    }, {
                        value: "5"
                    }).write('>05</option><option value="10" ').helper("eq", b, {
                        block: y
                    }, {
                        value: "10"
                    }).write('>10</option><option value="15" ').helper("eq", b, {
                        block: z
                    }, {
                        value: "15"
                    }).write('>15</option><option value="20" ').helper("eq", b, {
                        block: A
                    }, {
                        value: "20"
                    }).write('>20</option><option value="25" ').helper("eq", b, {
                        block: B
                    }, {
                        value: "25"
                    }).write('>25</option><option value="30" ').helper("eq", b, {
                        block: C
                    }, {
                        value: "30"
                    }).write('>30</option><option value="35" ').helper("eq", b, {
                        block: D
                    }, {
                        value: "35"
                    }).write('>35</option><option value="40" ').helper("eq", b, {
                        block: E
                    }, {
                        value: "40"
                    }).write('>40</option><option value="45" ').helper("eq", b, {
                        block: F
                    }, {
                        value: "45"
                    }).write('>45</option><option value="50" ').helper("eq", b, {
                        block: G
                    }, {
                        value: "50"
                    }).write('>50</option><option value="55" ').helper("eq", b, {
                        block: H
                    }, {
                        value: "55"
                    }).write(">55</option>")
                }

                function w(a) {
                    return a.write("selected")
                }

                function x(a) {
                    return a.write("selected")
                }

                function y(a) {
                    return a.write("selected")
                }

                function z(a) {
                    return a.write("selected")
                }

                function A(a) {
                    return a.write("selected")
                }

                function B(a) {
                    return a.write("selected")
                }

                function C(a) {
                    return a.write("selected")
                }

                function D(a) {
                    return a.write("selected")
                }

                function E(a) {
                    return a.write("selected")
                }

                function F(a) {
                    return a.write("selected")
                }

                function G(a) {
                    return a.write("selected")
                }

                function H(a) {
                    return a.write("selected")
                }

                function I(a, b) {
                    return a.reference(b.get("goalTimeMinutes"), b, "h")
                }

                function J(a) {
                    return a.write("active")
                }

                function K(a) {
                    return a.write("active")
                }

                function L(a) {
                    return a.write('<div class="delete-goal-button">Delete Goal</div>')
                }

                function M(a, b) {
                    return a.reference(b.get("function"), b, "h")
                }
                return a.register("templates/modalviews/add-goal-time", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/add-goal-time", b, c)
                }
            }
        }), define("app/ui/views/modalviews/AddGoalSelectTimeModalView", ["require", "./BaseModalView", "app/service/GoalsService", "app/models/StateModel", "rdust!templates/modalviews/add-goal-time", "mout/object/get", "$"], function(a) {
            var b = a("./BaseModalView"),
                c = a("app/service/GoalsService"),
                d = a("app/models/StateModel"),
                e = a("rdust!templates/modalviews/add-goal-time"),
                f = a("mout/object/get"),
                g = a("$"),
                h = b.extend(function() {
                    b.apply(this, arguments), this.mapEvent({
                        ".done": {
                            tap: this.saveAndReturn
                        },
                        ".ampm button": {
                            tap: this.toggleAmpm
                        },
                        ".delete-goal-button": {
                            tap: this.deleteGoal
                        }
                    })
                }, {
                    className: "add-goal-time",
                    canSave: !0,
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            e.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    toggleAmpm: function(a) {
                        if (!d.get("demoMode")) {
                            var b, c = g(a.currentTarget).hasClass("am");
                            c ? (b = g(this.el.find(".am")[0]).hasClass("active"), b || (g(this.el.find(".am")[0]).addClass("active"), g(this.el.find(".pm")[0]).removeClass("active"))) : (b = g(this.el.find(".pm")[0]).hasClass("active"), b || (g(this.el.find(".pm")[0]).addClass("active"), g(this.el.find(".am")[0]).removeClass("active")))
                        }
                    },
                    deleteGoal: function(a) {
                        if (!d.get("demoMode")) {
                            var b = f(a, "currentTarget");
                            if (b) {
                                var e = this.el.find(b);
                                if (e && !e.hasClass("disabled")) {
                                    e.addClass("disabled");
                                    var g = this.model.get("selectedUser").sleeperId,
                                        h = this.model.get("goal").goalId;
                                    c.deleteGoal(g, h).then(function() {
                                        this.model.trigger("goalsUpdated"), e.removeClass("disabled"), this.forceExit()
                                    }.bind(this), function(a) {
                                        e.removeClass("disabled"), console.error(a)
                                    }.bind(this))
                                }
                            }
                        }
                    },
                    saveAndReturn: function() {
                        if (this.canSave) {
                            this.canSave = !1;
                            var a = Number(this.el.find(".hours").val()),
                                b = Number(this.el.find(".minutes").val()),
                                c = this.el.find(".pm").hasClass("active"),
                                d = this.model.get("selectedUser").sleeperId;
                            12 == a && (a = 0), c && (a += 12);
                            var e = 60 * Number(a) + Number(b);
                            "Edit" === this.model.get("function") ? this.updateGoal(d, e) : this.createGoal(d, e)
                        }
                    },
                    updateGoal: function(a, b) {
                        var d = this.model.get("goal"),
                            e = {
                                goalType: d.goalType,
                                isPrimary: d.isPrimary,
                                goalTime: b
                            };
                        c.updateSleeperGoals(a, d.goalId, e).then(function(a) {
                            console.log("Update Goal: ", a), this.model.trigger("goalsUpdated"), this.forceExit()
                        }.bind(this), function(a) {
                            console.error(a)
                        })
                    },
                    createGoal: function(a, b) {
                        var d = {
                            goalType: Number(this.model.get("goalType")),
                            isPrimary: 0 === this.model.get("goals").length,
                            goalTime: b
                        };
                        c.createSleeperGoals(a, d).then(function(a) {
                            console.log("Create Goal: ", a), this.model.trigger("goalsUpdated"), this.forceExit()
                        }.bind(this), function(a) {
                            console.error(a)
                        })
                    }
                });
            return h
        }), define("rdust!templates/modalviews/primary-goal", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header"><button class="cancel left">Cancel</button><div class="title">Set Primary Goal</div><button class="save right">Save</button><div class="divider"></div></header><div class="content-wrapper">').exists(b.get("goals"), b, {
                        block: c
                    }, null).write("</div>")
                }

                function c(a, b) {
                    return a.write("<ul class='goals-list'>").section(b.get("goals"), b, {
                        block: d
                    }, null).write("</ul>")
                }

                function d(a, b) {
                    return a.write("<li class='goal-item' data-goal=\"").reference(b.get("goalType"), b, "h").write('" data-goal-id="').reference(b.get("goalId"), b, "h").write("\"><span class='select-circle ").exists(b.get("isPrimary"), b, {
                        block: e
                    }, null).write("'></span><div class='goal-item-text'>").reference(b.get("goalTitle"), b, "h").write("<div class='goal-item-subtext'>by ").reference(b.get("formattedTime"), b, "h").write("</div></div></li>")
                }

                function e(a) {
                    return a.write("selected")
                }
                return a.register("templates/modalviews/primary-goal", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/primary-goal", b, c)
                }
            }
        }), define("app/ui/views/modalviews/SetPrimaryGoalModalView", ["require", "./BaseModalView", "app/service/GoalsService", "rdust!templates/modalviews/primary-goal", "$", "rdust!templates/headers/settings-header"], function(a) {
            var b = a("./BaseModalView"),
                c = a("app/service/GoalsService"),
                d = a("rdust!templates/modalviews/primary-goal"),
                e = a("$");
            a("rdust!templates/headers/settings-header");
            var f = b.extend(function() {
                b.apply(this, arguments), this.mapEvent({
                    ".goal-item": {
                        tap: this.setPrimary
                    },
                    ".save": {
                        tap: this.done
                    }
                })
            }, {
                className: "primary-goal",
                selected: void 0,
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        d.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                done: function() {
                    if (void 0 === this.selected) this.forceExit();
                    else
                        for (var a, b = this.model.get("goals"), d = this.model.get("selectedUser").sleeperId, e = this.el.find(".selected").closest(".goal-item"), f = e.data("goal-id"), g = 0, h = b.length; h > g; ++g) b[g].goalId === f && (a = b[g], a.isPrimary = !0, c.updateSleeperGoals(d, f, a).then(function(a) {
                            console.log("Update goal: ", a), this.model.trigger("goalsUpdated"), this.forceExit()
                        }.bind(this), function(a) {
                            console.log("error"), console.error(a)
                        }))
                },
                setPrimary: function(a) {
                    var b = a.currentTarget.getAttribute("data-goal");
                    this.selected = b;
                    var c = this.el.find(".select-circle");
                    e(c).removeClass("selected");
                    var d = e(a.currentTarget).find(".select-circle");
                    e(d).addClass("selected")
                }
            });
            return f
        }), define("rdust!templates/modalviews/BedScanModalView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header><div class="done siqfont">&#xd7;</div></header><div class="labeled device-list-container overflow-scroll"><div class="overflow-scroll-inner device-list">').exists(b.get("scanResults"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div></div><div class="manual-entry"><input id="custom-mac-address" type="text" placeholder="00:00:00:00:00:00" needsclick/><div class="button-container"><button class="submit">submit</button></div></div>')
                }

                function c(a) {
                    return a.write('<div class="button-container"><button class="start-scan">SCAN</button></div>')
                }

                function d(a, b) {
                    return a.section(b.get("scanResults"), b, {
                        block: e
                    }, null)
                }

                function e(a, b) {
                    return a.write('<div class="btn" data-name="').reference(b.get("name"), b, "h").write('" data-address="').reference(b.get("macAddress"), b, "h").write('"><b>').reference(b.get("name"), b, "h").write("</b>: ").reference(b.get("macAddress"), b, "h").write("</div>")
                }
                return a.register("templates/modalviews/BedScanModalView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/BedScanModalView", b, c)
                }
            }
        }), define("app/ui/views/modalviews/BedScanModalView", ["require", "./BaseModalView", "lavaca/mvc/Router", "sccomm/ConnectedDeviceStateModel", "sccomm/DeviceCommunication", "rdust!templates/modalviews/BedScanModalView"], function(a) {
            function b() {
                j.scan()
            }

            function c(a) {
                var b = this.el.find(a.currentTarget).attr("data-address");
                f.call(this, b)
            }

            function d() {
                console.log("changed")
            }

            function e() {
                var a = this.el.find("#custom-mac-address"),
                    b = a.val();
                return b.length < 12 || "" === b ? (window.customAlert("Please enter a valid mac address. Example: CC04B401012B"), void 0) : (12 === b.length && (b = b.match(/.{1,2}/g).join(":")), f.call(this, b), void 0)
            }

            function f(a) {
                this.model.updateMacAddress(a);
                var b = this.model.get("bedId");
                i.exec("/remote/" + b)
            }

            function g() {
                this.model.updateScanResults(), this.render(".device-list")
            }
            var h = a("./BaseModalView"),
                i = a("lavaca/mvc/Router"),
                j = (a("sccomm/ConnectedDeviceStateModel"), a("sccomm/DeviceCommunication")),
                k = a("rdust!templates/modalviews/BedScanModalView"),
                l = h.extend(function() {
                    h.apply(this, arguments), this.mapEvent({
                        ".start-scan": {
                            tap: b
                        },
                        "[data-address]": {
                            tap: c
                        },
                        ".submit": {
                            tap: e
                        },
                        ext: {
                            DeviceCommunication: {
                                object: j,
                                events: {
                                    stateChange: d.bind(this),
                                    scanResult: g.bind(this)
                                }
                            }
                        }
                    })
                }, {
                    className: "bedscanmodal",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            k.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    }
                });
            return l
        }), define("rdust!templates/modalviews/user-create-credentials", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/user-create-credentials-header", b, {
                        pageTitle: "Create Account"
                    }).write('<div class="content"><form class="create-credentials-form form" data-form="account-credentials" data-animate-labels="true"><div class="input-wrapper email"><label for="email">Email</label><input name="email" type="email" data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" maxlength="256" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" needsclick/><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper password"><label for="password">New Password</label><input name="password" data-validation="').reference(b.getPath(!1, ["validations", "password", "criteria"]), b, "h").write('" type="password" maxlength="30" needsclick/><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper confirm-password"><label for="confirmPassword">Confirm Password</label><input name="confirmPassword" data-validation="').reference(b.getPath(!1, ["validations", "confirmPassword"]), b, "h").write('" type="password" maxlength="30" needsclick/><span class="clear"></span><p class="error-message"></p></div></form></div>')
                }
                return a.register("templates/modalviews/user-create-credentials", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/user-create-credentials", b, c)
                }
            }
        }), define("rdust!templates/headers/user-create-credentials-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header create-credentials"><button class="cancel">Cancel</button><div class="title">').exists(b.get("pageTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><button class="save">Create</button></header>')
                }

                function c(a) {
                    return a.write("SleepIQ<sup>&reg;</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("pageTitle"), b, "h", ["s"])
                }
                return a.register("templates/headers/user-create-credentials-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/user-create-credentials-header", b, c)
                }
            }
        }), define("app/ui/views/modalviews/CreateUserCredentialsModalView", ["require", "./BaseModalView", "app/ui/widgets/FormValidator", "rdust!templates/modalviews/user-create-credentials", "rdust!templates/headers/user-create-credentials-header"], function(a) {
            function b() {
                var a = this.el.find("button.save");
                a.toggleClass("can-save", this.canSave)
            }

            function c(a) {
                var c = this.el.find(a.currentTarget),
                    d = c.val();
                d && (this.fields[a.currentTarget.name] = 0 !== d.length, this.canSave = this.fields.email && this.fields.password && this.fields.confirmPassword, b.call(this))
            }

            function d(a, b) {
                b.isInvalid ? this.el.find(a.currentTarget).closest(".section").toggleClass("invalid", "blur" === b.eventType).removeClass("valid") : b.isInvalid || this.el.find(a.currentTarget).closest(".section").addClass("valid").removeClass("invalid")
            }

            function e() {
                this.canSave && this.el.find(".create-credentials-form").trigger("validateForm", f.bind(this))
            }

            function f(a) {
                if (a && !this.isSaving) {
                    this.isSaving = !0;
                    var b = this.el.find("input[name='email']"),
                        c = this.el.find("input[name='password']");
                    this.model.editAccountCredentials(b.val(), c.val()).then(function() {
                        this.isSaving = !1, this.model && this.model.trigger("newAccountCredentials"), window.customAlert.alert("Please check your email to verify this address.", null, "Attention"), this.forceExit()
                    }.bind(this), function() {
                        this.isSaving = !1, window.customAlert.alert("Unable to create account.", null, "Create Account failed"), this.forceExit()
                    }.bind(this))
                }
            }

            function g(a) {
                try {
                    var b = this.el.find(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var d = b.prev();
                    d.val(""), d.removeClass("invalid valid"), d.focus(), c.call(this, a)
                } catch (e) {
                    console.log(e)
                }
            }
            var h = a("./BaseModalView"),
                i = a("app/ui/widgets/FormValidator"),
                j = a("rdust!templates/modalviews/user-create-credentials");
            a("rdust!templates/headers/user-create-credentials-header");
            var k = h.extend(function() {
                h.apply(this, arguments), this.fields = {
                    email: !1,
                    password: !1,
                    confirmPassword: !1
                }, this.mapEvent({
                    "button.save": {
                        tap: e.bind(this)
                    },
                    input: {
                        validation: d.bind(this),
                        keyup: c.bind(this)
                    },
                    ".clear": {
                        tap: g.bind(this)
                    }
                }), this.mapWidget({
                    ".create-credentials-form": {
                        TWidget: i
                    }
                })
            }, {
                className: "user-create-credentials",
                autoRender: !0,
                hasActivated: !1,
                canSave: !1,
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        j.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    b.call(this)
                }
            });
            return k
        }), define("rdust!templates/modalviews/user-change-credentials", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/user-change-credentials-header", b, {
                        pageTitle: "Change Login Credentials"
                    }).write('<div class="content"><form class="change-password-form form" data-animate-labels="true"><div class="input-wrapper"><label for="email" class="reveal">Email</label><input name="email" type="email" ').exists(b.getPath(!1, ["user", "email"]), b, {
                        block: c
                    }, null).write(' data-validation="').reference(b.getPath(!1, ["validations", "email"]), b, "h").write('" maxlength="256" value="').reference(b.getPath(!1, ["user", "email"]), b, "h").write('" needsclick/><span class="clear"></span><p class="error-message"></p></div><div class="input-wrapper password"><label for="password">New Password</label><input name="password" data-validation="').reference(b.getPath(!1, ["validations", "password", "criteria"]), b, "h").write('" type="password" maxlength="30" value="" needsclick/><span class="clear"></span><p class="error-message"></p></div></form></div>')
                }

                function c(a) {
                    return a.write('data-validate-onload="true"')
                }
                return a.register("templates/modalviews/user-change-credentials", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/user-change-credentials", b, c)
                }
            }
        }), define("rdust!templates/headers/user-change-credentials-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header change-password"><button class="cancel">Cancel</button><div class="title">').exists(b.get("pageTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><button class="save">Save</button></header>')
                }

                function c(a) {
                    return a.write("SleepIQ<sup>&reg;</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("pageTitle"), b, "h", ["s"])
                }
                return a.register("templates/headers/user-change-credentials-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/user-change-credentials-header", b, c)
                }
            }
        }), define("app/ui/views/modalviews/ChangeCredentialsModalView", ["require", "./BaseModalView", "app/ui/widgets/FormValidator", "app/models/validations/account-settings", "mout/object/get", "rdust!templates/modalviews/user-change-credentials", "rdust!templates/headers/user-change-credentials-header"], function(a) {
            function b() {
                var a = this.el.find("input[name='password']"),
                    b = a.val(),
                    c = this.el.find("input[name='email']"),
                    d = c.val(),
                    e = this.el.find("button.save");
                this.canSave = !!(d && b && d.length > 1 && b.length > 1), e.toggleClass("can-save", this.canSave)
            }

            function c() {
                this.canSave && (this.canSave = !1, this.el.find(".change-password-form").trigger("validateForm", function(a) {
                    if (a) {
                        var b = this.el.find("input[name='password']"),
                            c = b.val(),
                            d = this.el.find("input[name='email']"),
                            e = d.val(),
                            f = e !== this.email;
                        this.model.editAccountCredentials(e, c).then(function() {
                            f && window.customAlert.alert("Please check your email to verify this address.", null, "Attention"), this.forceExit()
                        }.bind(this), function(a) {
                            this.canSave = !0, g(a, "responseJSON.Error.Message") && g(a, "responseJSON.Error.Message").indexOf("The user with the given login already exists") > 1 ? window.customAlert.alert("That email address is already associated with a SleepIQ® account.") : (window.customAlert.alert("Sorry, We were unable to change your credentials at this time."), this.forceExit())
                        }.bind(this))
                    } else this.canSave = !1
                }.bind(this)))
            }

            function d(a) {
                try {
                    var b = $(a.currentTarget);
                    b.siblings().removeClass("reveal invalid");
                    var c = b.prev();
                    c.val(""), c.removeClass("invalid valid"), c.focus();
                    var d = this.el.find("button.save");
                    this.canSave = !1, d.toggleClass("can-save", this.canSave)
                } catch (e) {
                    console.log(e)
                }
            }
            var e = a("./BaseModalView"),
                f = a("app/ui/widgets/FormValidator"),
                g = (a("app/models/validations/account-settings"), a("mout/object/get")),
                h = a("rdust!templates/modalviews/user-change-credentials");
            a("rdust!templates/headers/user-change-credentials-header");
            var i = e.extend(function() {
                e.apply(this, arguments), this.mapEvent({
                    "button.save": {
                        tap: c
                    },
                    input: {
                        keyup: b,
                        validation: b
                    },
                    ".clear": {
                        tap: d
                    }
                }), this.mapWidget({
                    ".change-password-form": {
                        TWidget: f
                    }
                })
            }, {
                className: "user-change-credentials",
                email: !1,
                generateHtml: function(a) {
                    try {
                        this.email = a.user.email
                    } catch (b) {}
                    return new Promise(function(b) {
                        h.render(a, function(a, c) {
                            b(c)
                        })
                    })
                }
            });
            return i
        }), define("rdust!templates/modalviews/user-settings-notifications-time", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/user-settings-notifications-header", b, {
                        pageTitle: "Out of Bed Notifications"
                    }).write("<div class=\"content set-time\"><div class='add-time-title'>").helper("select", b, {
                        block: c
                    }, {
                        key: f
                    }).write('</div><div class="time-wrapper"><select class="hours" name="notification-time-hours">').helper("select", b, {
                        block: g
                    }, {
                        key: t
                    }).write('</select><div class="colon">:</div><select class="minutes" name="notification-time-minutes">').helper("select", b, {
                        block: u
                    }, {
                        key: z
                    }).write('</select><div class="ampm"><button class="am ').exists(b.get("isAm"), b, {
                        block: A
                    }, null).write('" type="button">AM</button><button class="pm ').notexists(b.get("isAm"), b, {
                        block: B
                    }, null).write('" type="button">PM</button></div></div></div>')
                }

                function c(a, b) {
                    return a.helper("eq", b, {
                        block: d
                    }, {
                        value: "0"
                    }).helper("eq", b, {
                        block: e
                    }, {
                        value: "1"
                    })
                }

                function d(a) {
                    return a.write("From")
                }

                function e(a) {
                    return a.write("Until")
                }

                function f(a, b) {
                    return a.reference(b.get("notificationType"), b, "h")
                }

                function g(a, b) {
                    return a.write('<option value="1" ').helper("eq", b, {
                        block: h
                    }, {
                        value: "1"
                    }).write('>01</option><option value="2" ').helper("eq", b, {
                        block: i
                    }, {
                        value: "2"
                    }).write('>02</option><option value="3" ').helper("eq", b, {
                        block: j
                    }, {
                        value: "3"
                    }).write('>03</option><option value="4" ').helper("eq", b, {
                        block: k
                    }, {
                        value: "4"
                    }).write('>04</option><option value="5" ').helper("eq", b, {
                        block: l
                    }, {
                        value: "5"
                    }).write('>05</option><option value="6" ').helper("eq", b, {
                        block: m
                    }, {
                        value: "6"
                    }).write('>06</option><option value="7" ').helper("eq", b, {
                        block: n
                    }, {
                        value: "7"
                    }).write('>07</option><option value="8" ').helper("eq", b, {
                        block: o
                    }, {
                        value: "8"
                    }).write('>08</option><option value="9" ').helper("eq", b, {
                        block: p
                    }, {
                        value: "9"
                    }).write('>09</option><option value="10" ').helper("eq", b, {
                        block: q
                    }, {
                        value: "10"
                    }).write('>10</option><option value="11" ').helper("eq", b, {
                        block: r
                    }, {
                        value: "11"
                    }).write('>11</option><option value="12" ').helper("eq", b, {
                        block: s
                    }, {
                        value: "12"
                    }).write(">12</option>")
                }

                function h(a) {
                    return a.write("selected")
                }

                function i(a) {
                    return a.write("selected")
                }

                function j(a) {
                    return a.write("selected")
                }

                function k(a) {
                    return a.write("selected")
                }

                function l(a) {
                    return a.write("selected")
                }

                function m(a) {
                    return a.write("selected")
                }

                function n(a) {
                    return a.write("selected")
                }

                function o(a) {
                    return a.write("selected")
                }

                function p(a) {
                    return a.write("selected")
                }

                function q(a) {
                    return a.write("selected")
                }

                function r(a) {
                    return a.write("selected")
                }

                function s(a) {
                    return a.write("selected")
                }

                function t(a, b) {
                    return a.reference(b.get("notificationTimeHours"), b, "h")
                }

                function u(a, b) {
                    return a.write('<option value="0" ').helper("eq", b, {
                        block: v
                    }, {
                        value: "0"
                    }).write('>00</option><option value="15" ').helper("eq", b, {
                        block: w
                    }, {
                        value: "15"
                    }).write('>15</option><option value="30" ').helper("eq", b, {
                        block: x
                    }, {
                        value: "30"
                    }).write('>30</option><option value="45" ').helper("eq", b, {
                        block: y
                    }, {
                        value: "45"
                    }).write(">45</option>")
                }

                function v(a) {
                    return a.write("selected")
                }

                function w(a) {
                    return a.write("selected")
                }

                function x(a) {
                    return a.write("selected")
                }

                function y(a) {
                    return a.write("selected")
                }

                function z(a, b) {
                    return a.reference(b.get("notificationTimeMinutes"), b, "h")
                }

                function A(a) {
                    return a.write("active")
                }

                function B(a) {
                    return a.write("active")
                }
                return a.register("templates/modalviews/user-settings-notifications-time", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/user-settings-notifications-time", b, c)
                }
            }
        }), define("rdust!templates/headers/user-settings-notifications-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header set-notifications-time"><button class="closeModal">Cancel</button><div class="title">').exists(b.get("pageTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><button class="save">Save</button></header>')
                }

                function c(a) {
                    return a.write("SleepIQ<sup>&reg;</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("pageTitle"), b, "h", ["s"])
                }
                return a.register("templates/headers/user-settings-notifications-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/user-settings-notifications-header", b, c)
                }
            }
        }), define("app/ui/views/modalviews/UserSettingsNotificationTimeModal", ["require", "./BaseModalView", "app/models/StateModel", "rdust!templates/modalviews/user-settings-notifications-time", "lavaca/mvc/Router", "rdust!templates/headers/user-settings-notifications-header"], function(a) {
            function b() {
                this.onTapBack(null, {
                    model: this.model
                })
            }
            var c = a("./BaseModalView"),
                d = a("app/models/StateModel"),
                e = a("rdust!templates/modalviews/user-settings-notifications-time");
            a("lavaca/mvc/Router"), a("rdust!templates/headers/user-settings-notifications-header");
            var f = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".ampm button": {
                        tap: this.toggleAmPm
                    },
                    "button.closeModal": {
                        tap: b.bind(this)
                    },
                    "button.save": {
                        tap: this.saveTime.bind(this)
                    }
                })
            }, {
                className: "user-settings-notifications-set-time",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        e.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    d.set("ignoreBack", !0), c.prototype.onRenderSuccess.apply(this, arguments)
                },
                dispose: function() {
                    d.set("ignoreBack", !1), c.prototype.dispose.apply(this, arguments)
                },
                toggleAmPm: function(a) {
                    var b = this.el.find(a.currentTarget).hasClass("am");
                    this.model.set("isAm", b);
                    var c;
                    b ? (c = this.el.find(".am").hasClass("active"), c || (this.el.find(".am").addClass("active"), this.el.find(".pm").removeClass("active"))) : (c = this.el.find(".pm").hasClass("active"), c || (this.el.find(".pm").addClass("active"), this.el.find(".am").removeClass("active")))
                },
                saveTime: function() {
                    var a = this.el.find('select[name="notification-time-hours"]'),
                        b = this.el.find('select[name="notification-time-minutes"]'),
                        c = 0 == b.val() ? "00" : b.val(),
                        d = a.val() + ":" + c;
                    d += this.model.get("isAm") ? "am" : "pm", this.model.saveNotificationTimeWindow(d), this.onTapBack(null, {
                        model: this.model
                    })
                }
            });
            return f
        }), define("rdust!templates/modalviews/user-settings-notifications", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/user-settings-notifications-header", b, {
                        pageTitle: "Out of Bed Notifications"
                    }).write('<div class="content">').exists(b.getPath(!1, ["userNotifications", "children"]), b, {
                        block: c
                    }, null).write('<div class="notification-display"><p>Notifications will display on this device only.<br>You can still edit the notification time from another device.</p></div><div class="set-notifications"><p>When do you want to receive out of bed notifications?</p><form class="notifications-form form" data-animate-labels="true"><div class="notification-on-wrapper"><input id="24hourNotifications" type="checkbox" ').exists(b.getPath(!1, ["userNotifications", "is24Hours"]), b, {
                        block: h
                    }, null).write(' needsclick /><label for="24hourNotifications">Notify me 24 hours a day.</label></div><div class="notification-time-wrapper"><div class="input-wrapper"><label for="from" class="reveal">From</label><input id="from" type="text" value="').reference(b.getPath(!1, ["userNotifications", "notifyFrom"]), b, "h").write('" readonly="readonly" /></div><div class="spacing"></div><div class="input-wrapper"><label for="until" class="reveal">Until</label><input id="until" type="text" value="').reference(b.getPath(!1, ["userNotifications", "notifyUntil"]), b, "h").write('"  readonly="readonly" needsclick/></div></div></form></div></div>')
                }

                function c(a, b) {
                    return a.write('<div class="section children-toggles">').section(b.getPath(!1, ["userNotifications", "children"]), b, {
                        "else": d,
                        block: e
                    }, null).write("</div>")
                }

                function d(a) {
                    return a
                }

                function e(a, b) {
                    return a.write('<div class="notification"><p class="first-name">').reference(b.get("firstName"), b, "h").write('</p><div class="switch ').exists(b.get("on"), b, {
                        "else": f,
                        block: g
                    }, null).write('" data-sleeper-id="').reference(b.get("sleeperId"), b, "h").write('"><div class="rocker"></div><div class="label on">On</div><div class="label off">Off</div></div></div>')
                }

                function f(a) {
                    return a.write("off")
                }

                function g(a) {
                    return a.write("on")
                }

                function h(a) {
                    return a.write('checked="checked"')
                }
                return a.register("templates/modalviews/user-settings-notifications", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/user-settings-notifications", b, c)
                }
            }
        }), define("app/ui/views/modalviews/UserSettingsNotificationModal", ["require", "./BaseModalView", "app/models/StateModel", "rdust!templates/modalviews/user-settings-notifications", "moment", "rdust!templates/headers/user-settings-notifications-header"], function(a) {
            function b() {
                this.exit(!0)
            }

            function c() {
                this.model.get("userNotifications") ? this.model.saveNotifications(this.model.get("userId"), this.model.get("userNotifications")).then(function() {
                    this.exit(!0)
                }.bind(this), function() {
                    window.customAlert.alert("There was trouble updating your notification settings. Please try again.")
                }) : this.exit(!0)
            }
            var d = a("./BaseModalView"),
                e = a("app/models/StateModel"),
                f = a("rdust!templates/modalviews/user-settings-notifications"),
                g = a("moment");
            a("rdust!templates/headers/user-settings-notifications-header");
            var h = d.extend(function() {
                d.apply(this, arguments), this.mapEvent({
                    ".switch": {
                        tap: this.setToggle
                    },
                    "button.closeModal": {
                        tap: b.bind(this)
                    },
                    "button.save": {
                        tap: c.bind(this)
                    },
                    "input[id='24hourNotifications']": {
                        change: this.onTap24HourNotifications
                    },
                    "input[id='from']": {
                        tap: this.onTapSetFromNotification
                    },
                    "input[id='until']": {
                        tap: this.onTapSetUntilNotification
                    }
                })
            }, {
                className: "user-settings-notifications",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        f.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    e.set("ignoreBack", !0), d.prototype.onRenderSuccess.apply(this, arguments), this.toggleNotificationTimes(), this.renderReceiveOutOfBedNotifications(), this.renderNotifications()
                },
                setToggle: function(a) {
                    if (a && a.currentTarget && a.currentTarget.dataset && a.currentTarget.dataset.sleeperId) {
                        var b = this.el.find(a.currentTarget),
                            c = b.hasClass("on");
                        b.toggleClass("on", !c), this.renderReceiveOutOfBedNotifications(a.currentTarget.dataset.sleeperId, !c)
                    }
                },
                toggleNotificationTimes: function() {
                    this.el.toggleClass("is24Hours", this.model.get("userNotifications").is24Hours)
                },
                renderReceiveOutOfBedNotifications: function(a, b) {
                    var c = !1;
                    this.model.get("userNotifications").children.forEach(function(d) {
                        d.sleeperId === a && (d.on = b), c || (c = d.on === !0)
                    }.bind(this)), this.model.set("receiveOutOfBedNotifications", c), this.renderNotifications()
                },
                renderNotifications: function() {
                    this.el.find(".set-notifications").toggleClass("show", !!this.model.get("receiveOutOfBedNotifications"))
                },
                onTap24HourNotifications: function() {
                    var a = this.el.find('input[id="24hourNotifications"]'),
                        b = a.prop("checked");
                    a && a[0] && (b = a[0].checked), this.model.get("userNotifications").is24Hours = b, this.toggleNotificationTimes()
                },
                onTapSetFromNotification: function() {
                    this.model.get("userNotifications").is24Hours || (this.model.set("notificationType", 0), this.model.set("notificationTimeHours", g(this.model.get("userNotifications").notifyFrom, "h:mma").format("h")), this.model.set("notificationTimeMinutes", g(this.model.get("userNotifications").notifyFrom, "h:mma").format("mm")), this.model.set("isAm", "am" == g(this.model.get("userNotifications").notifyFrom, "h:mma").format("a")), this.model.setNotification(0))
                },
                onTapSetUntilNotification: function() {
                    this.model.get("userNotifications").is24Hours || (this.model.set("notificationType", 1), this.model.set("notificationTimeHours", g(this.model.get("userNotifications").notifyUntil, "h:mma").format("h")), this.model.set("notificationTimeMinutes", g(this.model.get("userNotifications").notifyUntil, "h:mma").format("mm")), this.model.set("isAm", "am" == g(this.model.get("userNotifications").notifyUntil, "h:mma").format("a")), this.model.setNotification(1))
                }
            });
            return h
        }), define("app/models/viewmodels/EditSleepModel", ["require", "lavaca/mvc/Model", "app/service/SleepDataService", "app/models/FamilyModel", "moment", "moment-duration-format"], function(a) {
            function b() {
                if (this.get("originalStartDate")) {
                    var a = f(this.get("originalStartDate"));
                    this.set("originalStartDate", a.format())
                }
                if (this.get("originalEndDate")) {
                    var b = f(this.get("originalEndDate"));
                    this.set("originalEndDate", b.format())
                }
                if (this.get("startDate")) {
                    var c = f(this.get("startDate"));
                    this.set("startDate", c.format())
                }
                if (this.get("endDate")) {
                    var d = f(this.get("endDate"));
                    this.set("endDate", d.format())
                }
            }
            var c = a("lavaca/mvc/Model"),
                d = a("app/service/SleepDataService"),
                e = a("app/models/FamilyModel"),
                f = a("moment");
            a("moment-duration-format");
            var g = c.extend(function(a) {
                c.call(this), this.formatData(a)
            }, {
                editing: !0,
                formatData: function(a) {
                    this.apply(a), b.call(this);
                    var c = e.getSelectedUser();
                    c && c.sleeperId && this.set("sleeperId", c.sleeperId);
                    var d = f(this.get("originalStartDate")).minutes(),
                        g = f(this.get("originalEndDate")).minutes(),
                        h = 0,
                        i = d % 10 || 0,
                        j = g % 10 || 0;
                    (i || j) && h++, this.set("extraSlices", h), this.set("extraLeft", i), this.set("extraRight", j), this.set("essBarChart", !0)
                },
                updateTime: function(a, b) {
                    return d.editSleepData(this.get("sleeperId"), this.get("originalStartDate"), this.get("originalEndDate"), a, b)
                }
            });
            return g
        }), define("rdust!templates/modalviews/EditSleepModalView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/modal-header", b, {
                        headerTitle: "Edit Sleep"
                    }).write('<div class="edit-content"><div class="sub-header"><span class="date">').reference(b.get("formattedDate"), b, "h").write('</span></div><section class="edit-body"><div class="bar-chart-wrapper" data-show-timeline="true" data-flags="true" data-parent-timeline="true" data-sleeper-id="').reference(b.get("sleeperId"), b, "h").write('" data-overflow-right="false" data-overflow-left="false"></div><div class="timeline"  data-hours="').reference(b.get("originalTimelineHours"), b, "h").write('">').section(b.get("originalTimeIncrements"), b, {
                        block: c
                    }, null).write('</div><div class="draggers"><div class="dragger" data-drag-side="left"><span></span><div class="dragger-touch"></div></div><div class="dragger" data-drag-side="right"><span></span><div class="dragger-touch"></div></div></div><div class="copy">Drag the sliders to adjust your sleep start and end times.</div></section><footer class="edit-footer"><section class="time original"><h1>Original</h1><h2>In Bed: ').reference(b.get("originalInBedFormatted"), b, "h").write("</h2><h2>").reference(b.get("startTimeOriginalFormatted"), b, "h").write(" - ").reference(b.get("endTimeOriginalFormatted"), b, "h").write("</h2></section>").exists(b.get("isEdited"), b, {
                        block: d
                    }, null).write("</footer></div>")
                }

                function c(a, b) {
                    return a.write('<div class="interval"><div class="time">').reference(b.getPath(!0, []), b, "h", ["s"]).write('</div><div class="dot">&middot;</div></div>')
                }

                function d(a, b) {
                    return a.write('<section class="time edited"><h1>Edited</h1><h2>In Bed: ').reference(b.get("inBedFormatted"), b, "h").write("</h2><h2>").reference(b.get("startTimeFormatted"), b, "h").write(" - ").reference(b.get("endTimeFormatted"), b, "h").write("</h2></section>")
                }
                return a.register("templates/modalviews/EditSleepModalView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/modalviews/EditSleepModalView", b, c)
                }
            }
        }), define("rdust!templates/headers/modal-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header"><button class="cancel left">Cancel</button><div class="title">').exists(b.get("headerTitle"), b, {
                        "else": c,
                        block: d
                    }, null).write('</div><button class="save right">Save</button><div class="divider"></div></header>')
                }

                function c(a) {
                    return a.write("SleepIQ<sup>®</sup>")
                }

                function d(a, b) {
                    return a.reference(b.get("headerTitle"), b, "h")
                }
                return a.register("templates/headers/modal-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/modal-header", b, c)
                }
            }
        }), define("app/ui/views/modalviews/EditSleepModalView", ["require", "./BaseModalView", "app/ui/views/childviews/BarChartView", "lavaca/fx/Transform", "app/models/StateModel", "mout/object/get", "app/models/FamilyModel", "app/utils/MixPanelManager", "rdust!templates/modalviews/EditSleepModalView", "moment", "rdust!templates/headers/modal-header"], function(a) {
            function b(a) {
                try {
                    var b = this.widthOfEach || this.el.find(".bar-wrapper")[0].getBoundingClientRect().width;
                    console.log("Snap check: " + b), 0 == b && Modernizr.msie && (b = 5.2);
                    var e = b * Math.round(a / b),
                        f = c.call(this);
                    return f && console.error("Somehow it is less than 4 hours."), "left" === this.currentDraggerDirection ? (this.maxLeftX = this.widthOfEach * this.fourHours() + e, (a > this.elWidth + this.maxRightX - this.draggerWidth || 0 >= e) && (e = 0 >= e ? 0 : this.elWidth + this.maxRightX - this.draggerWidth, this.maxLeftX = this.widthOfEach * this.fourHours() + e), f && e > this.lastValidLeftX && (e = this.lastValidLeftX), this.lastValidLeftX = e, this.maxRightX = -1 * this.widthOfEach * this.fourHours() + this.lastValidRightX + this.draggerWidth, d.call(this, Math.round(e / b), !0)) : "right" === this.currentDraggerDirection && (e >= 0 && (e = -1 * b), this.maxRightX = -1 * this.widthOfEach * this.fourHours() + e + this.draggerWidth, (this.elWidth + a < this.maxLeftX || e >= 0) && (e = e >= 0 ? 0 : this.maxLeftX - this.elWidth, this.maxRightX = -1 * this.widthOfEach * this.fourHours() + e + this.draggerWidth), f && e < this.lastValidRightX && (e = this.lastValidRightX), this.lastValidRightX = e, this.maxLeftX = this.widthOfEach * this.fourHours() + this.lastValidLeftX, d.call(this, Math.round(e / b), !1)), e
                } catch (g) {
                    return console.error(g), a
                }
            }

            function c() {
                var a = q(this.model.get("originalStartDate")),
                    b = q(this.model.get("originalEndDate"));
                return a.add(this.timeRemovedFromLeft, "minutes"), b.subtract(this.timeRemovedFromRight, "minutes"), b.diff(a, "hours", !0) < 3.999
            }

            function d(a, b) {
                var c = this.el.find(".bar-wrapper .bar");
                b ? (c.each(function(b, c) {
                    a > b ? (c.classList.add("gray-left"), c.classList.remove("right")) : (c.classList.add("right"), c.classList.remove("gray-left"))
                }), this.lastSliceLeft = this.el.find(".bar-wrapper .bar.right").first()) : (a = c.length + a, c.each(function(b, c) {
                    b > a ? (c.classList.add("gray-right"), c.classList.remove("left")) : (c.classList.add("left"), c.classList.remove("gray-right"))
                }), this.lastSliceRight = this.el.find(".bar-wrapper .bar.left").last()), e.call(this, a, b)
            }

            function e(a, b) {
                var c = this.el.find(".bar-wrapper .bar");
                if (this.firstLaunch === !0) {
                    setTimeout(function() {
                        this.firstLaunch = !1
                    }.bind(this), 10);
                    var d = q(this.model.get("originalStartDate")),
                        e = q(this.model.get("originalEndDate")),
                        f = q(this.model.get("startDate")),
                        g = q(this.model.get("endDate"));
                    return b ? (this.flagLeft.html(this.model.get("startTimeFormatted")), this.timeRemovedFromLeft = Math.round(Math.abs(d.diff(f, "seconds")) / 60)) : (this.flagRight.html(this.model.get("endTimeFormatted")), this.timeRemovedFromRight = Math.round(Math.abs(e.diff(g, "seconds")) / 60)), void 0
                }
                var h = 10 * a,
                    d = q(this.model.get("originalStartDate")),
                    e = q(this.model.get("originalEndDate"));
                if (a = 0 > a ? 0 : a, b) h && this.model.get("extraLeft") && (h -= this.model.get("extraLeft")), 0 >= h || h === -1 * this.model.get("extraLeft") ? (this.flagLeft.html(d.format("h:mm a")), this.timeRemovedFromLeft = 0) : (this.flagLeft.html(d.add(h, "minutes").format("h:mm a")), this.timeRemovedFromLeft = h);
                else {
                    var i = e.clone(),
                        j = Math.round(i.diff(d, "minutes", !0)),
                        k = j;
                    if (j - h && this.model.get("extraRight") ? this.model.get("extraLeft") ? (k = j - this.model.get("extraRight"), h += 10 - this.model.get("extraRight") - this.model.get("extraLeft")) : h += 10 : j - h && !this.model.get("extraRight") && this.model.get("extraLeft") && (h += 10 - this.model.get("extraLeft")), c.length - 1 == a) this.flagRight.html(e.format("h:mm a")), this.timeRemovedFromRight = 0;
                    else {
                        var l = e.subtract(k - h, "minutes");
                        if (0 != q(l).minutes() % 10) {
                            var m = 10 * Math.round(q(l).minutes() / 10);
                            l.minutes(m)
                        }
                        var n = l.format("h:mm a");
                        this.flagRight.html(n), this.timeRemovedFromRight = k - h
                    }
                }
            }

            function f() {
                try {
                    var a = this.flagRight.width(),
                        b = this.flagLeft.width(),
                        c = this.flagRight.hasClass("flip"),
                        d = this.flagLeft.hasClass("flip"),
                        e = this.el.find(".bar-chart-wrapper .content-wrapper .content").width(),
                        f = Math.abs(this.flagRight.data("x") || 0),
                        g = Math.abs(this.flagLeft.data("x") || 0),
                        h = !1,
                        i = !1,
                        j = a + b > e - f - g;
                    if (j || (a = c ? 0 : a, b = d ? 0 : b, j = a + b > e - f - g), j || (a = c ? 0 : a, b = d ? 0 : b, j = a + b > e - f - g), j) switch (this.currentDragger.data("drag-side")) {
                        case "right":
                            f - this.flagRight.width() < 0 ? i = !0 : g > this.flagLeft.width() ? h = !0 : i = !0;
                            break;
                        case "left":
                            g > this.flagLeft.width() / 2 ? h = !0 : i = !0
                    }
                    this.flagRight.toggleClass("flip", i), this.flagLeft.toggleClass("flip", h)
                } catch (k) {
                    console.error(k)
                }
            }

            function g() {
                try {
                    this.el.find('.debug-limits[data-drag-side="left"]').css("left", this.maxLeftX), this.el.find('.debug-limits[data-drag-side="right"]').css("left", this.elWidth + this.maxRightX), h.call(this)
                } catch (a) {
                    console.log(a)
                }
            }

            function h() {
                try {
                    var a = 2 === this.lastSliceLeft.data("color") || 3 === this.lastSliceLeft.data("color"),
                        b = 2 === this.lastSliceRight.data("color") || 3 === this.lastSliceRight.data("color");
                    return this.el.find('.debug-limits[data-drag-side="left"]').attr("data-valid", b), this.el.find('.debug-limits[data-drag-side="right"]').attr("data-valid", a), b && a
                } catch (c) {
                    return !1
                }
            }
            var i = a("./BaseModalView"),
                j = a("app/ui/views/childviews/BarChartView"),
                k = a("lavaca/fx/Transform"),
                l = a("app/models/StateModel"),
                m = a("mout/object/get"),
                n = a("app/models/FamilyModel"),
                o = a("app/utils/MixPanelManager"),
                p = a("rdust!templates/modalviews/EditSleepModalView"),
                q = a("moment"),
                r = k.cssProperty();
            a("rdust!templates/headers/modal-header");
            var s = i.extend(function() {
                i.apply(this, arguments), this.mapChildView({
                    ".bar-chart-wrapper": {
                        TView: j,
                        model: this.model
                    }
                }), this.mapEvent({
                    ".dragger-touch": {
                        dragstart: this.onDragStart,
                        drag: this.onDragMove,
                        dragend: this.onDragEnd
                    },
                    ".save": {
                        tap: this.saveSleep
                    },
                    ".reset-slices": {
                        tap: this.resetSlices
                    }
                })
            }, {
                className: "edit-sleep",
                maxLeftX: 0,
                maxRightX: 0,
                lastValidLeftX: 0,
                lastValidRightX: 0,
                previousLeftX: 0,
                previousRightX: 0,
                currentLeftX: 0,
                currentRightX: 0,
                lastSliceLeft: null,
                lastSliceRight: null,
                isCurrentlyDragging: !1,
                currentDragger: !1,
                currentDraggerDirection: !1,
                draggerWidth: 40,
                timeRemovedFromLeft: 0,
                timeRemovedFromRight: 0,
                widthOfEach: 0,
                firstLaunch: !0,
                canUpdatePosition: !0,
                draggerInterval: 1,
                resetSlices: function() {
                    if (this.model.get("originalStartDate")) {
                        var a = q(this.model.get("originalStartDate"));
                        this.model.set("startDate", a.format())
                    }
                    if (this.model.get("originalEndDate")) {
                        var b = q(this.model.get("originalEndDate"));
                        this.model.set("endDate", b.format())
                    }
                    this.model.set("resetSlices", !0), this.render(), this.onRenderSuccess()
                },
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        p.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                onRenderSuccess: function() {
                    timeout = 100, Modernizr.msie && (timeout = 300), setTimeout(function() {
                        var a = this.el.find(".content-wrapper").width() || "100%",
                            b = this.el.find(".content-wrapper").css("margin-left") || 0;
                        this.el.find(".draggers").css("width", a), this.el.find(".draggers").css("margin-left", b), this.draggerWidth = this.el.find(".draggers .dragger span").width(), this.elWidth = this.el.find(".content-wrapper .content").width();
                        try {
                            var c = this.el.find(".bar-wrapper")[0].getBoundingClientRect().width ? this.el.find(".bar-wrapper")[0].getBoundingClientRect().width : this.el.find(".bar-wrapper")[0].clientWidth;
                            if (0 == c) {
                                var d = (new Date).getTime();
                                for (console.log("onRenderSuccess - currentTime", d); d + 200 >= (new Date).getTime(););
                                var c = this.el.find(".bar-wrapper")[0].getBoundingClientRect().width ? this.el.find(".bar-wrapper")[0].getBoundingClientRect().width : this.el.find(".bar-wrapper")[0].clientWidth
                            }
                            this.widthOfEach = c, this.maxLeftX = this.widthOfEach * this.fourHours(), this.maxRightX = -1 * this.widthOfEach * this.fourHours() + this.draggerWidth, this.flagLeft = this.el.find(".flag.start"), this.flagRight = this.el.find(".flag.end");
                            var e = this.el.find(".bar-chart-wrapper .bar");
                            this.lastSliceLeft = e.first(), this.lastSliceRight = e.last(), Modernizr.msie && (this.draggerInterval = 10)
                        } catch (f) {
                            console.log(f)
                        }
                        g.call(this), this.initDraggers()
                    }.bind(this), timeout)
                },
                initDraggers: function() {
                    var a = 0,
                        b = 0;
                    this.model.get("startDiff") && (a = Math.round(this.model.get("startDiff") / 10), this.currentDragger = this.el.find('.dragger[data-drag-side="left"]'), this.currentDraggerDirection = this.currentDragger.data("drag-side"), this.currentFlag = this.flagLeft, this.translateX(this.widthOfEach * a), this.setOffsetAmount(!0)), this.model.get("endDiff") ? (b = Math.round(this.model.get("endDiff") / 10), this.currentDragger = this.el.find('.dragger[data-drag-side="right"]'), this.currentDraggerDirection = this.currentDragger.data("drag-side"), this.currentFlag = this.flagRight, this.translateX(-1 * this.widthOfEach * (b + 1))) : (this.currentDragger = this.el.find('.dragger[data-drag-side="right"]'), this.currentDraggerDirection = this.currentDragger.data("drag-side"), this.currentFlag = this.flagRight, this.translateX(-1 * this.widthOfEach)), this.setOffsetAmount(!0), this.currentDragger = !1, this.currentFlag = !1, this.currentDraggerDirection = !1
                },
                saveSleep: function() {
                    if (!l.get("ESSaving")) {
                        l.set("ESSaving", !0), setTimeout(function() {
                            l.set("ESSaving", !1)
                        }.bind(this), 5e3);
                        var a = this.model.get("sleeperId"),
                            b = n.getSelectedUser().firstName,
                            c = q(this.model.get("originalStartDate")),
                            d = q(this.model.get("originalEndDate"));
                        if (this.timeRemovedFromLeft) {
                            c.add(this.timeRemovedFromLeft, "minutes");
                            var e = 10 * Math.round(c.minutes() / 10);
                            c = c.minutes(e), c = c.startOf("minute"), c = c.format()
                        } else c = this.model.get("originalStartDate");
                        if (this.timeRemovedFromRight) {
                            d.subtract(this.timeRemovedFromRight, "minutes");
                            var e = 10 * Math.round(d.minutes() / 10);
                            d = d.minutes(e + 1), d = d.startOf("minute"), d = d.format()
                        } else d = this.model.get("originalEndDate");
                        console.log(c);
                        var f = this.el.find(".sub-header .date"),
                            g = this.el.find(".sub-header .saving");
                        f.addClass("hidden"), g.removeClass("hidden"), this.model.updateTime(c, d).then(function(c) {
                            o.prototype.trackEditSleep(a, b, !0, c.session.originalStartDate, c.session.originalEndDate, c.session.startDate, c.session.endDate), l.trigger("slicesUpdated", c)
                        }.bind(this), function h(h) {
                            h = "string" == typeof h ? h : m(h, "responseJSON.Error.Message"), o.prototype.trackEditSleep(a, b, !0, this.model.get("originalStartDate"), this.model.get("originalEndDate"), this.model.get("startDate"), this.model.get("endDate")), window.customAlert.alert(h)
                        }.bind(this)).then(function() {
                            setTimeout(function() {
                                this.forceExit()
                            }.bind(this), 250)
                        }.bind(this))
                    }
                },
                translateX: function(a) {
                    try {
                        a = b.call(this, a), this.currentDragger.css(r, "translate3d(" + a + "px, 0, 0)"), this.currentDragger.data("offset", a), this.currentFlag.css(r, "translate3d(" + a + "px, 0, 0)"), this.currentFlag.data("x", a), f.call(this, a)
                    } catch (c) {
                        console.log(c)
                    }
                },
                onDragStart: function(a) {
                    this.isCurrentlyDragging = !0, this.currentDragger = this.el.find(a.currentTarget).parent(), this.currentDraggerDirection = this.currentDragger.data("drag-side"), this.currentFlag = "right" === this.currentDraggerDirection ? this.flagRight : this.flagLeft
                },
                onDragMove: function(a) {
                    var b = "right" === this.currentFlag ? a.gesture.deltaX - 10 : a.gesture.deltaX + 10;
                    this.canUpdatePosition && (a.preventDefault(), a.stopPropagation(), a.gesture.preventDefault(), a.gesture.stopPropagation(), this.canUpdatePosition = !1, this.translateX(b + this.determineOffsetAmount()), this.setOffsetAmount(!1), setTimeout(function() {
                        this.canUpdatePosition = !0
                    }.bind(this), this.draggerInterval))
                },
                onDragEnd: function() {
                    this.setOffsetAmount(!0), this.currentDragger = !1, this.currentFlag = !1, this.currentDraggerDirection = !1, this.isCurrentlyDragging = !1
                },
                determineOffsetAmount: function() {
                    return console.log("offset amount", this.previousLeftX, this.previousRightX), this.currentDragger ? "left" === this.currentDragger.data("drag-side") ? this.previousLeftX : this.previousRightX : 0
                },
                setOffsetAmount: function(a) {
                    if (this.currentDragger) {
                        var b = this.currentDragger.data("drag-side"),
                            c = this.currentDragger.data("offset");
                        a ? "left" === b ? (this.currentLeftX = c, this.previousLeftX = c) : (this.currentRightX = c, this.previousRightX = c) : "left" === b ? this.currentLeftX = c : this.currentRightX = c
                    }
                },
                fourHours: function() {
                    var a = 24;
                    return a
                }
            });
            return s
        }), define("app/net/ModalController", ["require", "lavaca/mvc/Model", "app/net/BaseController", "app/ui/views/controlviews/ModalView", "app/models/RegistrationViewModel", "app/models/StateModel", "app/models/viewmodels/BedScanModalViewModel", "app/ui/views/modalviews/ActivityModalView", "app/models/viewmodels/ActivityModalViewModel", "app/ui/views/modalviews/DebugModal", "app/ui/views/modalviews/RegistrationTermsModal", "app/ui/views/modalviews/RegistrationWifiModal", "app/ui/views/modalviews/GoalDetailsModalView", "app/ui/views/modalviews/AddGoalModalView", "app/ui/views/modalviews/AddGoalSelectTimeModalView", "app/ui/views/modalviews/SetPrimaryGoalModalView", "app/models/BedCollection", "app/ui/views/modalviews/BedScanModalView", "app/models/viewmodels/UserSettingsViewModel", "app/ui/views/modalviews/CreateUserCredentialsModalView", "app/ui/views/modalviews/ChangeCredentialsModalView", "app/ui/views/modalviews/UserSettingsNotificationTimeModal", "app/ui/views/modalviews/UserSettingsNotificationModal", "app/models/viewmodels/EditSleepModel", "app/ui/views/modalviews/EditSleepModalView"], function(a) {
            var b = (a("lavaca/mvc/Model"), a("app/net/BaseController")),
                c = a("app/ui/views/controlviews/ModalView"),
                d = a("app/models/RegistrationViewModel"),
                e = a("app/models/StateModel"),
                f = (a("app/models/viewmodels/BedScanModalViewModel"), a("app/ui/views/modalviews/ActivityModalView")),
                g = a("app/models/viewmodels/ActivityModalViewModel"),
                h = a("app/ui/views/modalviews/DebugModal"),
                i = a("app/ui/views/modalviews/RegistrationTermsModal"),
                j = a("app/ui/views/modalviews/RegistrationWifiModal"),
                k = a("app/ui/views/modalviews/GoalDetailsModalView"),
                l = a("app/ui/views/modalviews/AddGoalModalView"),
                m = a("app/ui/views/modalviews/AddGoalSelectTimeModalView"),
                n = a("app/ui/views/modalviews/SetPrimaryGoalModalView"),
                o = (a("app/models/BedCollection"), a("app/ui/views/modalviews/BedScanModalView"), a("app/models/viewmodels/UserSettingsViewModel"), a("app/ui/views/modalviews/CreateUserCredentialsModalView")),
                p = a("app/ui/views/modalviews/ChangeCredentialsModalView"),
                q = a("app/ui/views/modalviews/UserSettingsNotificationTimeModal"),
                r = a("app/ui/views/modalviews/UserSettingsNotificationModal"),
                s = a("app/models/viewmodels/EditSleepModel"),
                t = a("app/ui/views/modalviews/EditSleepModalView"),
                u = b.extend({
                    editSleep: function(a) {
                        return a.model ? c.view(t, new s(a.model.toObject()), a.url) : void 0
                    },
                    registrationTerms: function(a) {
                        return a.login && (d.fromLogin = !0, d.set("username", a.username), d.set("password", a.password)), d.fetchTerms(), c.view(i, d, a.url)
                    },
                    registrationWifi: function(a) {
                        return d && d.get("networkModel") && "" !== d.get("networkModel") ? c.view(j, d, a.url) : d.scanWifi().then(function() {
                            return c.view(j, d, a.url)
                        }.bind(this), function(a) {
                            return c.view(j, d, a.url)
                        }.bind(this))
                    },
                    debug: function(a) {
                        return c.view(h, e, a.url)
                    },
                    activities: function(a) {
                        var b = new g;
                        return b.apply(a.model), b.fetch(), c.view(f, b, a.url)
                    },
                    goalsDetail: function(a) {
                        return c.view(k, a.model, a.url)
                    },
                    setPrimaryGoal: function(a) {
                        return c.view(n, a.model, a.url)
                    },
                    addGoal: function(a) {
                        return c.view(l, a.model, a.url)
                    },
                    addGoalSetTime: function(a) {
                        return c.view(m, a.model, a.url)
                    },
                    userCreateCredentials: function(a) {
                        return c.view(o, a.model, a.url)
                    },
                    userChangePassword: function(a) {
                        return c.view(p, a.model, a.url)
                    },
                    userNotifications: function(a) {
                        return c.view(r, a.model, a.url)
                    },
                    userNotificationsTime: function(a) {
                        return c.view(q, a.model, a.url)
                    }
                });
            return u
        }), define("rdust!templates/headers/find-sleepnumber-header", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<header class="header"><button class="cancel">Cancel</button><div class="title">Find Sleep Number<sup>&#174;</sup></div>').exists(b.get("isPhone"), b, {
                        block: c
                    }, null).write("</header>")
                }

                function c(a) {
                    return a.write('<div class="divider"></div>')
                }
                return a.register("templates/headers/find-sleepnumber-header", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/headers/find-sleepnumber-header", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/BaseSleepnumberView", ["require", "app/ui/views/modalviews/BaseModalView", "app/models/FindSleepnumberModel", "app/ModalViewManager", "rdust!templates/headers/find-sleepnumber-header"], function(a) {
            function b() {
                e.cancelFind(), this.exit(!0), f.flush()
            }

            function c() {
                e.doneFind(), this.exit(!0), f.flush()
            }
            var d = a("app/ui/views/modalviews/BaseModalView"),
                e = a("app/models/FindSleepnumberModel"),
                f = a("app/ModalViewManager");
            a("rdust!templates/headers/find-sleepnumber-header");
            var g = d.extend(function() {
                d.apply(this, arguments), this.model.set("isPhone", !Modernizr.desktop && !Modernizr.tablet), this.mapEvent({
                    "button.cancel": {
                        tap: b
                    },
                    "button.done": {
                        tap: c
                    }
                })
            }, {
                cancel: function() {
                    b.call(this)
                }
            });
            return g
        }), define("rdust!templates/findsleepnumberviews/StepOneView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="step">Step 1 of 8</div><div class="container-content"><p>').exists(b.get("isPhone"), b, {
                        block: c
                    }, null).notexists(b.get("isPhone"), b, {
                        block: f
                    }, null).write('<br><br>This will take a few minutes.</p></div></div><div class="button-wrapper"><button class="modal-next-step get-started">Continue</button></div>')
                }

                function c(a, b) {
                    return a.write("We will take you through a process to find ").exists(b.get("childName"), b, {
                        "else": d,
                        block: e
                    }, null).write("&rsquo;s Sleep Number<sup>&#174;</sup> setting.")
                }

                function d(a) {
                    return a.write("your child")
                }

                function e(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }

                function f(a, b) {
                    return a.write("We will take you through a process to find ").exists(b.get("childName"), b, {
                        "else": g,
                        block: h
                    }, null).write("&rsquo;s<br>Sleep Number<sup>&#174;</sup> setting.")
                }

                function g(a) {
                    return a.write("your child")
                }

                function h(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }
                return a.register("templates/findsleepnumberviews/StepOneView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/StepOneView", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/StepOneView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "rdust!templates/findsleepnumberviews/StepOneView", "lavaca/mvc/Router", "app/models/FindSleepnumberModel"], function(a) {
            function b() {
                e.exec("/findsleepnumber/step-two")
            }
            var c = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                d = a("rdust!templates/findsleepnumberviews/StepOneView"),
                e = a("lavaca/mvc/Router");
            a("app/models/FindSleepnumberModel");
            var f = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".modal-next-step.get-started": {
                        tap: b.bind(this)
                    }
                })
            }, {
                template: "templates/findsleepnumberviews/StepOneView",
                className: "find-favorite-sleepnumber step-one",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        d.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                dispose: function() {
                    c.prototype.dispose.apply(this, arguments)
                }
            });
            return f
        }), define("rdust!templates/findsleepnumberviews/StepTwoView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="step">Step 2 of 8</div><div class="container-content"><p>').exists(b.get("childName"), b, {
                        "else": c,
                        block: d
                    }, null).write(' should lay down in his/her normal sleeping position.</p></div></div><div class="button-wrapper"><button class="modal-next-step continue">Continue</button></div>')
                }

                function c(a) {
                    return a.write("Your child")
                }

                function d(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }
                return a.register("templates/findsleepnumberviews/StepTwoView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/StepTwoView", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/StepTwoView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "rdust!templates/findsleepnumberviews/StepTwoView", "lavaca/mvc/Router", "app/models/FindSleepnumberModel"], function(a) {
            function b() {
                e.exec("/findsleepnumber/step-three")
            }
            var c = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                d = a("rdust!templates/findsleepnumberviews/StepTwoView"),
                e = a("lavaca/mvc/Router");
            a("app/models/FindSleepnumberModel");
            var f = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".modal-next-step.continue": {
                        tap: b.bind(this)
                    }
                })
            }, {
                template: "templates/findsleepnumberviews/StepTwoView",
                className: "find-favorite-sleepnumber sleepnumber-step-two",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        d.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                dispose: function() {
                    c.prototype.dispose.apply(this, arguments)
                }
            });
            return f
        }), define("rdust!templates/findsleepnumberviews/StepThreeView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="step">Step 3 of 8</div><div class="container-content"><p>First, we will take the bed to a firmer setting.<br><br>').exists(b.get("childName"), b, {
                        "else": c,
                        block: d
                    }, null).write(' should relax and pay attention to how his/her body feels comfort and support as the bed gets firmer.</p><div class="loading-animation-view"></div></div></div>')
                }

                function c(a) {
                    return a.write("Your child")
                }

                function d(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }
                return a.register("templates/findsleepnumberviews/StepThreeView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/StepThreeView", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/StepThreeView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "app/ui/views/childviews/LoadingAnimationView", "lavaca/mvc/Router", "$", "rdust!templates/findsleepnumberviews/StepThreeView", "app/models/FindSleepnumberModel"], function(a) {
            function b() {
                100 != j.get("currentSleepnumber") ? j.setToFirmest() : setTimeout(function() {
                    h.exec("/findsleepnumber/step-four")
                }, 1e3)
            }

            function c(a) {
                a ? setTimeout(function() {
                    b.call(this)
                }.bind(this), 2500) : this.cancel()
            }

            function d() {
                this.model.get("userTappedCancel") || setTimeout(function() {
                    h.exec("/findsleepnumber/step-four")
                }, 500)
            }

            function e() {
                if (!this.model.get("userTappedCancel") && this.model.promise) {
                    var a = "Failed to set bed to its firmest position.",
                        b = window.customAlert.confirm(a, function(a) {
                            c.call(this, 2 == a)
                        }.bind(this), "SleepIQ®", ["Cancel", "Retry"]);
                    "undefined" != typeof b && c.call(this, b)
                }
            }
            var f = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                g = a("app/ui/views/childviews/LoadingAnimationView"),
                h = a("lavaca/mvc/Router"),
                i = (a("$"), a("rdust!templates/findsleepnumberviews/StepThreeView")),
                j = a("app/models/FindSleepnumberModel"),
                k = f.extend(function() {
                    f.apply(this, arguments), this.mapEvent({
                        model: {
                            setFirmestComplete: d.bind(this),
                            setFirmestFailed: e.bind(this)
                        }
                    }), this.mapChildView({
                        ".loading-animation-view": {
                            TView: g,
                            model: {}
                        }
                    })
                }, {
                    template: "templates/findsleepnumberviews/StepThreeView",
                    className: "find-favorite-sleepnumber step-three",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            i.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        f.prototype.dispose.apply(this, arguments)
                    },
                    onRenderSuccess: function() {
                        b.call(this)
                    }
                });
            return k
        }), define("rdust!templates/findsleepnumberviews/StepFourView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="step">Step 4 of 8</div><div class="container-content"><p>This is our firmest setting.<br><br>Now let&rsquo;s experience how a softer setting feels.</p></div></div><div class="button-wrapper"><button class="modal-next-step">Continue</button></div>')
                }
                return a.register("templates/findsleepnumberviews/StepFourView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/StepFourView", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/StepFourView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "rdust!templates/findsleepnumberviews/StepFourView", "lavaca/mvc/Router", "app/models/FindSleepnumberModel"], function(a) {
            function b() {
                e.exec("/findsleepnumber/step-five")
            }
            var c = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                d = a("rdust!templates/findsleepnumberviews/StepFourView"),
                e = a("lavaca/mvc/Router");
            a("app/models/FindSleepnumberModel");
            var f = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".modal-next-step": {
                        tap: b.bind(this)
                    }
                })
            }, {
                template: "templates/findsleepnumberviews/StepFourView",
                className: "find-favorite-sleepnumber step-four",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        d.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                dispose: function() {
                    c.prototype.dispose.apply(this, arguments)
                }
            });
            return f
        }), define("rdust!templates/findsleepnumberviews/StepFiveView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="step">Step 5 of 8</div><div class="container-content"><p>Now we will decrease the firmness to a softer setting.<br><br>').exists(b.get("childName"), b, {
                        "else": c,
                        block: d
                    }, null).write(' should relax and pay attention to how his/her body feels comfort and support as the bed gets softer.</p><div class="loading-animation-view"></div></div></div>')
                }

                function c(a) {
                    return a.write("Your child")
                }

                function d(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }
                return a.register("templates/findsleepnumberviews/StepFiveView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/StepFiveView", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/StepFiveView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "app/ui/views/childviews/LoadingAnimationView", "lavaca/mvc/Router", "rdust!templates/findsleepnumberviews/StepFiveView", "app/models/FindSleepnumberModel"], function(a) {
            function b() {
                5 != h.get("currentSleepnumber") ? h.setToSoftest().then(function() {
                    this.model.get("userTappedCancel") || setTimeout(function() {
                        f.exec("/findsleepnumber/step-six")
                    }, 500)
                }.bind(this)).fail(function() {
                    if (!this.model.get("userTappedCancel") && this.model.promise) {
                        var a = "Failed to set bed to its softest position.",
                            b = window.customAlert.confirm(a, function(a) {
                                c.call(this, 2 == a)
                            }.bind(this), "SleepIQ®", ["Cancel", "Retry"]);
                        "undefined" != typeof b && c.call(this, b)
                    }
                }.bind(this)) : setTimeout(function() {
                    f.exec("/findsleepnumber/step-six")
                }, 1e3)
            }

            function c(a) {
                a ? setTimeout(function() {
                    this.setToSoftest()
                }.bind(this), 2500) : this.cancel()
            }
            var d = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                e = a("app/ui/views/childviews/LoadingAnimationView"),
                f = a("lavaca/mvc/Router"),
                g = a("rdust!templates/findsleepnumberviews/StepFiveView"),
                h = a("app/models/FindSleepnumberModel"),
                i = d.extend(function() {
                    d.apply(this, arguments), this.mapChildView({
                        ".loading-animation-view": {
                            TView: e,
                            model: {}
                        }
                    })
                }, {
                    template: "templates/findsleepnumberviews/StepFiveView",
                    className: "find-favorite-sleepnumber step-five",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            g.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        d.prototype.dispose.apply(this, arguments)
                    },
                    onRenderSuccess: function() {
                        b.call(this)
                    },
                    setToSoftest: function() {
                        b.call(this)
                    }
                });
            return i
        }), define("rdust!templates/findsleepnumberviews/StepSixView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="step">Step 6 of 8</div><div class="container-content"><p>This is a much softer setting.<br><br>').exists(b.get("isPhone"), b, {
                        block: c
                    }, null).notexists(b.get("isPhone"), b, {
                        block: f
                    }, null).write("<br><br>After selecting continue, you will be prompted to press STOP when ").exists(b.get("childName"), b, {
                        "else": i,
                        block: j
                    }, null).write(' feels comfort and support.</p></div><div class="button-wrapper"><button class="modal-next-step continue">Continue</button></div></div>')
                }

                function c(a, b) {
                    return a.write("Now let's find ").exists(b.get("childName"), b, {
                        "else": d,
                        block: e
                    }, null).write("&rsquo;s<br>Sleep Number<sup>&#174;</sup> setting.")
                }

                function d(a) {
                    return a.write("your child")
                }

                function e(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }

                function f(a, b) {
                    return a.write("Now let's find ").exists(b.get("childName"), b, {
                        "else": g,
                        block: h
                    }, null).write("&rsquo;s Sleep Number<sup>&#174;</sup> setting.")
                }

                function g(a) {
                    return a.write("your child")
                }

                function h(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }

                function i(a) {
                    return a.write("your child")
                }

                function j(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }
                return a.register("templates/findsleepnumberviews/StepSixView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/StepSixView", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/StepSixView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "rdust!templates/findsleepnumberviews/StepSixView", "lavaca/mvc/Router", "app/models/FindSleepnumberModel"], function(a) {
            function b() {
                e.exec("/findsleepnumber/step-seven")
            }
            var c = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                d = a("rdust!templates/findsleepnumberviews/StepSixView"),
                e = a("lavaca/mvc/Router");
            a("app/models/FindSleepnumberModel");
            var f = c.extend(function() {
                c.apply(this, arguments), this.mapEvent({
                    ".modal-next-step.continue": {
                        tap: b.bind(this)
                    }
                })
            }, {
                template: "templates/findsleepnumberviews/StepSixView",
                className: "find-favorite-sleepnumber step-six",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        d.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                dispose: function() {
                    c.prototype.dispose.apply(this, arguments)
                }
            });
            return f
        }), define("rdust!templates/findsleepnumberviews/StepSevenView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="step">Step 7 of 8</div><div class="container-content"><p>').exists(b.get("isPhone"), b, {
                        block: c
                    }, null).notexists(b.get("isPhone"), b, {
                        block: d
                    }, null).write("<br><br>Press stop when ").exists(b.get("childName"), b, {
                        "else": e,
                        block: f
                    }, null).write('&rsquo;s body feels comfort and support.</p><div class="loading-animation-view"></div></div></div><div class="button-wrapper"><button class="modal-next-step stop-find right">Stop</button></div>')
                }

                function c(a) {
                    return a.write("We are now increasing the bed to<br>a firmer setting.")
                }

                function d(a) {
                    return a.write("We are now increasing the bed to a firmer setting.")
                }

                function e(a) {
                    return a.write("your child")
                }

                function f(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }
                return a.register("templates/findsleepnumberviews/StepSevenView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/StepSevenView", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/StepSevenView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "app/ui/views/childviews/LoadingAnimationView", "lavaca/mvc/Router", "rdust!templates/findsleepnumberviews/StepSevenView", "app/models/FindSleepnumberModel"], function(a) {
            function b() {
                this.model.get("userTappedCancel") || setTimeout(function() {
                    i.exec("/findsleepnumber/step-eight")
                }.bind(this), 500)
            }

            function c() {
                if (!this.model.get("userTappedCancel") && !this.model.get("stoppedInFindState") && this.model.promise) {
                    var a = "Failed to set bed to its firmest position.",
                        b = window.customAlert.confirm(a, function(a) {
                            f.call(this, 2 == a)
                        }.bind(this), "SleepIQ®", ["Cancel", "Retry"]);
                    "undefined" != typeof b && f.call(this, b)
                }
            }

            function d() {
                k.setToFirmest()
            }

            function e() {
                k.stopInFindState()
            }

            function f(a) {
                a ? setTimeout(function() {
                    this.setToFirmest()
                }.bind(this), 2500) : this.cancel()
            }
            var g = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                h = a("app/ui/views/childviews/LoadingAnimationView"),
                i = a("lavaca/mvc/Router"),
                j = a("rdust!templates/findsleepnumberviews/StepSevenView"),
                k = a("app/models/FindSleepnumberModel"),
                l = g.extend(function() {
                    g.apply(this, arguments), this.mapChildView({
                        ".loading-animation-view": {
                            TView: h,
                            model: {}
                        }
                    }), this.mapEvent({
                        ".modal-next-step.stop-find.right": {
                            tap: e.bind(this)
                        },
                        model: {
                            setFirmestComplete: b.bind(this),
                            setFirmestFailed: c.bind(this)
                        }
                    })
                }, {
                    template: "templates/findsleepnumberviews/StepSevenView",
                    className: "find-favorite-sleepnumber step-seven",
                    generateHtml: function(a) {
                        return d.call(this), new Promise(function(b) {
                            j.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        g.prototype.dispose.apply(this, arguments)
                    },
                    setToFirmest: function() {
                        d.call(this)
                    }
                });
            return l
        }), define("rdust!templates/findsleepnumberviews/StepEightView", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="step">Step 8 of 8</div><div class="container-content"><p>How does ').exists(b.get("childName"), b, {
                        "else": c,
                        block: d
                    }, null).write('&rsquo;s body feel?</p></div><div class="no-tap"><div class="firmest">Bed is at its firmest setting.</div><div class="softest">Bed is at its softest setting.</div></div></div><div class="button-wrapper after-stop"><button class="found right">Just Right</button><button class="too-firm right">Too Firm</button><button class="too-soft right">Too Soft</button></div>')
                }

                function c(a) {
                    return a.write("your child")
                }

                function d(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }
                return a.register("templates/findsleepnumberviews/StepEightView", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/StepEightView", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/StepEightView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "lavaca/mvc/Router", "rdust!templates/findsleepnumberviews/StepEightView", "app/models/FindSleepnumberModel"], function(a) {
            function b() {
                this.isDisposed || this.isBusyRouting || (this.isBusyRouting = !0, j.setFavorite().then(function() {
                    clearTimeout(this.routingTimeout), this.routingTimeout = setTimeout(function() {
                        h.exec("/findsleepnumber/foundfavorite")
                    }.bind(this), 500)
                }.bind(this), function() {
                    this.isBusyRouting = !1
                }.bind(this)))
            }

            function c() {
                this.isDisposed || this.isBusyRouting || (this.isBusyRouting = !0, 5 != j.get("currentSleepnumber") ? (clearTimeout(this.routingTimeout), this.routingTimeout = setTimeout(function() {
                    h.exec("/findsleepnumber/toofirm")
                }.bind(this), 500)) : this.isBusyRouting = !1)
            }

            function d() {
                this.isDisposed || this.isBusyRouting || (this.isBusyRouting = !0, 100 != j.get("currentSleepnumber") ? (clearTimeout(this.routingTimeout), this.routingTimeout = setTimeout(function() {
                    h.exec("/findsleepnumber/toosoft")
                }.bind(this), 500)) : this.isBusyRouting = !1)
            }

            function e() {
                var a = this.el.find(".no-tap");
                if (100 == j.get("currentSleepnumber")) {
                    var b = a.find(".firmest");
                    b.css("visibility", "visible")
                }
                if (5 == j.get("currentSleepnumber")) {
                    var c = a.find(".softest");
                    c.css("visibility", "visible")
                }
            }

            function f() {
                setTimeout(function() {
                    h.exec("/findsleepnumber/foundfavorite")
                }.bind(this), 500)
            }
            var g = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                h = a("lavaca/mvc/Router"),
                i = a("rdust!templates/findsleepnumberviews/StepEightView"),
                j = a("app/models/FindSleepnumberModel"),
                k = g.extend(function() {
                    g.apply(this, arguments), this.mapEvent({
                        "button.found": {
                            tap: b.bind(this)
                        },
                        "button.too-firm": {
                            tap: c.bind(this)
                        },
                        "button.too-soft": {
                            tap: d.bind(this)
                        },
                        model: {
                            setFavoriteComplete: f.bind(this)
                        }
                    })
                }, {
                    isBusyRouting: !1,
                    template: "templates/findsleepnumberviews/StepEightView",
                    className: "find-favorite-sleepnumber step-eight",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            i.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    onRenderSuccess: function() {
                        e.call(this)
                    },
                    dispose: function() {
                        this.isDisposed = !0, this.isBusyRouting = !1, g.prototype.dispose.apply(this, arguments)
                    }
                });
            return k
        }), define("rdust!templates/findsleepnumberviews/TooFirm", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="container-content"><p>We are now slightly decreasing the firmness of the bed.</p><div class="loading-animation-view"></div></div></div>')
                }
                return a.register("templates/findsleepnumberviews/TooFirm", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/TooFirm", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/TooFirmView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "app/ui/views/childviews/LoadingAnimationView", "lavaca/mvc/Router", "rdust!templates/findsleepnumberviews/TooFirm", "$", "app/models/FindSleepnumberModel"], function(a) {
            function b(a) {
                h.adjust("softer", "undefined" != typeof a ? a : !1).then(function(a) {
                    a || this.model.get("userTappedCancel") || f.exec("/findsleepnumber/step-eight")
                }.bind(this)).fail(function() {
                    if (!this.model.get("userTappedCancel") && this.model.promise) {
                        var a = "Failed to set to a softer setting.",
                            b = window.customAlert.confirm(a, function(a) {
                                c.call(this, 2 == a)
                            }.bind(this), "SleepIQ®", ["Cancel", "Retry"]);
                        "undefined" != typeof b && c.call(this, b)
                    }
                }.bind(this))
            }

            function c(a) {
                a ? setTimeout(function() {
                    this.adjustSofter(!0)
                }.bind(this), 1500) : this.cancel()
            }
            var d = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                e = a("app/ui/views/childviews/LoadingAnimationView"),
                f = a("lavaca/mvc/Router"),
                g = a("rdust!templates/findsleepnumberviews/TooFirm"),
                h = (a("$"), a("app/models/FindSleepnumberModel")),
                i = d.extend(function() {
                    d.apply(this, arguments), this.mapChildView({
                        ".loading-animation-view": {
                            TView: e,
                            model: {}
                        }
                    })
                }, {
                    template: "templates/findsleepnumberviews/TooFirm",
                    className: "find-favorite-sleepnumber too-firm",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            g.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        d.prototype.dispose.apply(this, arguments)
                    },
                    onRenderSuccess: function() {
                        b.call(this)
                    },
                    adjustSofter: function(a) {
                        b.call(this, a)
                    }
                });
            return i
        }), define("rdust!templates/findsleepnumberviews/TooSoft", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="container-content"><p>We are now slightly increasing the firmness of the bed.</p><div class="loading-animation-view"></div></div></div>')
                }
                return a.register("templates/findsleepnumberviews/TooSoft", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/TooSoft", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/TooSoftView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "app/ui/views/childviews/LoadingAnimationView", "lavaca/mvc/Router", "rdust!templates/findsleepnumberviews/TooSoft", "$", "app/models/FindSleepnumberModel"], function(a) {
            function b(a) {
                h.adjust("firmer", "undefined " != typeof a ? a : !1).then(function(a) {
                    a || this.model.get("userTappedCancel") || f.exec("/findsleepnumber/step-eight")
                }.bind(this)).fail(function() {
                    if (!this.model.get("userTappedCancel") && this.model.promise) {
                        var a = "Failed to set to a firmer setting.",
                            b = window.customAlert.confirm(a, function(a) {
                                c.call(this, 2 == a)
                            }.bind(this), "SleepIQ®", ["Cancel", "Retry"]);
                        "undefined" != typeof b && c.call(this, b)
                    }
                }.bind(this))
            }

            function c(a) {
                a ? setTimeout(function() {
                    this.adjustFirmer(!0)
                }.bind(this), 1500) : this.cancel()
            }
            var d = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                e = a("app/ui/views/childviews/LoadingAnimationView"),
                f = a("lavaca/mvc/Router"),
                g = a("rdust!templates/findsleepnumberviews/TooSoft"),
                h = (a("$"), a("app/models/FindSleepnumberModel")),
                i = d.extend(function() {
                    d.apply(this, arguments), this.mapChildView({
                        ".loading-animation-view": {
                            TView: e,
                            model: {}
                        }
                    })
                }, {
                    template: "templates/findsleepnumberviews/TooSoft",
                    className: "find-favorite-sleepnumber too-soft",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            g.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        d.prototype.dispose.apply(this, arguments)
                    },
                    onRenderSuccess: function() {
                        b.call(this)
                    },
                    adjustFirmer: function(a) {
                        b.call(this, a)
                    }
                });
            return i
        }), define("rdust!templates/findsleepnumberviews/FoundFavorite", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container"><div class="step">Step 8 of 8</div><div class="container-content"><p>').exists(b.get("childName"), b, {
                        "else": c,
                        block: d
                    }, null).write('&rsquo;s Sleep Number<sup>&#174;</sup> setting is</p><p class="sleep-number">').reference(b.get("favorite"), b, "h").write('</p><p>He/She should try this setting for<br>30 nights.</p></div></div><div class="button-wrapper"><button class="modal-next-step set-favorite">Continue</button></div>')
                }

                function c(a) {
                    return a.write("Your child")
                }

                function d(a, b) {
                    return a.reference(b.get("childName"), b, "h")
                }
                return a.register("templates/findsleepnumberviews/FoundFavorite", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/FoundFavorite", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/FoundFavoriteView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "lavaca/mvc/Router", "rdust!templates/findsleepnumberviews/FoundFavorite", "app/models/FindSleepnumberModel"], function(a) {
            function b() {
                i.resolveFavorite()
            }

            function c(a) {
                a ? setTimeout(function() {
                    b.call(this)
                }.bind(this), 2500) : this.cancel()
            }

            function d() {
                setTimeout(function() {
                    g.exec("/findsleepnumber/contact")
                }.bind(this), 500)
            }

            function e() {
                if (!this.model.get("userTappedCancel") && this.model.promise) {
                    var a = "Failed to save favorite Sleep Number®.",
                        b = window.customAlert.confirm(a, function(a) {
                            c.call(this, 2 == a)
                        }.bind(this), "SleepIQ®", ["Cancel", "Retry"]);
                    "undefined" != typeof b && c.call(this, b)
                }
            }
            var f = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                g = a("lavaca/mvc/Router"),
                h = a("rdust!templates/findsleepnumberviews/FoundFavorite"),
                i = a("app/models/FindSleepnumberModel"),
                j = f.extend(function() {
                    f.apply(this, arguments), this.model.set("favorite", i.get("userFavorite")), this.mapEvent({
                        ".modal-next-step.set-favorite": {
                            tap: b.bind(this)
                        },
                        model: {
                            setFavoriteMemoryComplete: d.bind(this),
                            setFavoriteMemoryFailed: e.bind(this)
                        }
                    })
                }, {
                    template: "templates/findsleepnumberviews/FoundFavorite",
                    className: "find-favorite-sleepnumber found-favorite",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            h.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    dispose: function() {
                        f.prototype.dispose.apply(this, arguments)
                    }
                });
            return j
        }), define("rdust!templates/findsleepnumberviews/Contact", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.partial("templates/headers/find-sleepnumber-header", b, null).write('<div class="container contact"><div class="container-content contact"><p class="questions">Questions?<br>We can help</p><p class="visit">Visit us at <a class="contact-link" data-href="sleepnumber.com/chat" target="_blank">sleepnumber.com/chat</a>').exists(b.get("isPhone"), b, {
                        block: c
                    }, null).write('</p></div></div><div class="button-wrapper"><button class="done">Done</button></div>')
                }

                function c(a) {
                    return a.write('<br>or<br>call us at <a class="tel-link" data-telephone-number="18884849263">1-888-484-9263</a>')
                }
                return a.register("templates/findsleepnumberviews/Contact", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/findsleepnumberviews/Contact", b, c)
                }
            }
        }), define("app/ui/views/findsleepnumberviews/ContactView", ["require", "app/ui/views/findsleepnumberviews/BaseSleepnumberView", "mout/object/get", "rdust!templates/findsleepnumberviews/Contact", "app/models/FindSleepnumberModel"], function(a) {
            function b(a) {
                var b = e(a, "currentTarget.dataset.telephoneNumber");
                Modernizr.desktop || Modernizr.tablet || window.open("tel:" + b)
            }

            function c(a) {
                var b = e(a, "currentTarget.dataset.href");
                Modernizr.desktop ? window.open("http://www." + b, "_blank", "location=yes") : window.open("https://m." + b, "_blank", Modernizr.android ? "" : "location=yes")
            }
            var d = a("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
                e = a("mout/object/get"),
                f = a("rdust!templates/findsleepnumberviews/Contact");
            a("app/models/FindSleepnumberModel");
            var g = d.extend(function() {
                d.apply(this, arguments), this.mapEvent({
                    "a.contact-link": {
                        tap: c.bind(this)
                    },
                    "a.tel-link": {
                        tap: b.bind(this)
                    }
                })
            }, {
                template: "templates/findsleepnumberviews/Contact",
                className: "find-favorite-sleepnumber contact",
                generateHtml: function(a) {
                    return new Promise(function(b) {
                        f.render(a, function(a, c) {
                            b(c)
                        })
                    })
                },
                dispose: function() {
                    d.prototype.dispose.apply(this, arguments)
                }
            });
            return g
        }), define("app/net/FindSleepnumberController", ["require", "lavaca/mvc/Model", "app/net/BaseController", "app/ui/views/controlviews/ModalView", "app/ui/views/findsleepnumberviews/StepOneView", "app/ui/views/findsleepnumberviews/StepTwoView", "app/ui/views/findsleepnumberviews/StepThreeView", "app/ui/views/findsleepnumberviews/StepFourView", "app/ui/views/findsleepnumberviews/StepFiveView", "app/ui/views/findsleepnumberviews/StepSixView", "app/ui/views/findsleepnumberviews/StepSevenView", "app/ui/views/findsleepnumberviews/StepEightView", "app/ui/views/findsleepnumberviews/TooFirmView", "app/ui/views/findsleepnumberviews/TooSoftView", "app/ui/views/findsleepnumberviews/FoundFavoriteView", "app/ui/views/findsleepnumberviews/ContactView", "app/models/FindSleepnumberModel"], function(a) {
            var b = (a("lavaca/mvc/Model"), a("app/net/BaseController")),
                c = a("app/ui/views/controlviews/ModalView"),
                d = a("app/ui/views/findsleepnumberviews/StepOneView"),
                e = a("app/ui/views/findsleepnumberviews/StepTwoView"),
                f = a("app/ui/views/findsleepnumberviews/StepThreeView"),
                g = a("app/ui/views/findsleepnumberviews/StepFourView"),
                h = a("app/ui/views/findsleepnumberviews/StepFiveView"),
                i = a("app/ui/views/findsleepnumberviews/StepSixView"),
                j = a("app/ui/views/findsleepnumberviews/StepSevenView"),
                k = a("app/ui/views/findsleepnumberviews/StepEightView"),
                l = a("app/ui/views/findsleepnumberviews/TooFirmView"),
                m = a("app/ui/views/findsleepnumberviews/TooSoftView"),
                n = a("app/ui/views/findsleepnumberviews/FoundFavoriteView"),
                o = a("app/ui/views/findsleepnumberviews/ContactView"),
                p = a("app/models/FindSleepnumberModel"),
                q = b.extend({
                    stepOne: function(a) {
                        return p.setInitial(a.currentSideId, a.currentSleepNumber, a.name), c.view(d, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    stepTwo: function(a) {
                        return c.view(e, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    stepThree: function(a) {
                        return c.view(f, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    stepFour: function(a) {
                        return c.view(g, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    stepFive: function(a) {
                        return c.view(h, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    stepSix: function(a) {
                        return c.view(i, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    stepSeven: function(a) {
                        return c.view(j, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    stepEight: function(a) {
                        return c.view(k, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    tooFirm: function(a) {
                        return c.view(l, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    tooSoft: function(a) {
                        return c.view(m, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    foundFavorite: function(a) {
                        return c.view(n, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    },
                    contact: function(a) {
                        return c.view(o, p, a.url, null, {
                            shouldTapToClose: !1,
                            shouldTapBackToClose: !0
                        })
                    }
                });
            return q
        }), define("rdust!templates/childviews/alerts/default-alert", ["dust"], function(a) {
            return function() {
                function b(a, b) {
                    return a.write('<div class="icon"></div><p>').reference(b.get("message"), b, "h", ["s"]).write("</p>")
                }
                return a.register("templates/childviews/alerts/default-alert", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/childviews/alerts/default-alert", b, c)
                }
            }
        }), define("app/ui/views/controlviews/AlertView", ["require", "lavaca/mvc/View", "rdust!templates/childviews/alerts/default-alert"], function(a) {
            var b = a("lavaca/mvc/View"),
                c = a("rdust!templates/childviews/alerts/default-alert"),
                d = b.extend(function() {
                    b.apply(this, arguments)
                }, {
                    className: "alert-view",
                    autoRender: !0,
                    generateHtml: function(a) {
                        var b = this.parentView.alertTemplate || c;
                        return new Promise(function(c) {
                            b.render(a, function(a, b) {
                                c(b)
                            })
                        })
                    }
                });
            return d
        }), define("rdust!templates/controlviews/alert", ["dust"], function(a) {
            return function() {
                function b(a) {
                    return a.write('<div class="desktop-cover"><div id="alert"><div class="close"><div class="x"></div></div><div id="alert-inner"></div></div></div>')
                }
                return a.register("templates/controlviews/alert", b), b
            }(), {
                render: function(b, c) {
                    return a.render("templates/controlviews/alert", b, c)
                }
            }
        }), define("app/ui/views/controlviews/Alert", ["require", "app/ui/views/pageviews/BaseView", "app/utils/debounce", "$", "app/ui/views/controlviews/AlertView", "rdust!templates/controlviews/alert"], function(a) {
            function b() {}
            var c = a("app/ui/views/pageviews/BaseView"),
                d = a("app/utils/debounce"),
                e = a("$"),
                f = a("app/ui/views/controlviews/AlertView"),
                g = a("rdust!templates/controlviews/alert"),
                h = c.extend(function() {
                    c.apply(this, arguments), this.mapEvent({
                        self: {
                            tap: this.dismiss
                        },
                        "#alert": {
                            tap: this.prevent
                        },
                        ".close, .done": {
                            tap: this.dismiss
                        }
                    }), e(window).on("resize.alert", d(b.bind(this), 100))
                }, {
                    className: "alert",
                    generateHtml: function(a) {
                        return new Promise(function(b) {
                            g.render(a, function(a, c) {
                                b(c)
                            })
                        })
                    },
                    show: function(a, b, c, d) {
                        this.isOpen || this.isClosing || (this.isOpen = !0, "string" == typeof a && (b = {
                            message: a
                        }, a = null), a && (this.alertTemplate = a), this.mapChildView({
                            "#alert-inner": {
                                TView: f,
                                model: b
                            }
                        }), this.render().then(function() {
                            this.el.find("#alert").addClass(c || "fade"), d && this.el.find("#alert-inner").addClass(d), setTimeout(function() {
                                this.timeout = setTimeout(function() {
                                    clearTimeout(this.timeout)
                                }.bind(this), 500), this.el.find("#alert"), this.el.addClass("show"), e("#view-root").addClass("blurred")
                            }.bind(this), 100)
                        }.bind(this)))
                    },
                    dismiss: function() {
                        this.isClosing = !0, this.alertTemplate = void 0, this.trigger("close"), this.closeTimeout = setTimeout(function() {
                            setTimeout(function() {
                                this.el.find("#alert-inner").detach(), this.childViews.each(function(a, b) {
                                    b.dispose()
                                }), this.childViews.clear()
                            }.bind(this), 20)
                        }.bind(this), 500), this.el.find("#alert").nextTransitionEnd(function() {
                            clearTimeout(this.closeTimeout), setTimeout(function() {
                                this.el.find("#alert-inner").detach(), this.childViews.each(function(a, b) {
                                    b.dispose()
                                }), this.childViews.clear()
                            }.bind(this), 20)
                        }.bind(this)), setTimeout(function() {
                            this.isOpen = !1, this.isClosing = !1
                        }.bind(this), 600), this.el.removeClass("show"), e("#view-root").removeClass("blurred")
                    },
                    prevent: function(a) {
                        a.preventDefault(), a.stopPropagation()
                    }
                });
            return new h("#alert-container")
        }), define("lavaca/env/Device", ["require", "$"], function(a) {
            var b = a("$"),
                c = {};
            return c.isCordova = function() {
                return !!window.cordova
            }, c.init = function(a) {
                c.isCordova() ? document.addEventListener ? document.addEventListener("deviceready", a, !1) : b(document).on("deviceready", a) : b(document).ready(a)
            }, c
        }), define("lavaca/mvc/Application", ["require", "$", "lavaca/net/History", "lavaca/env/Device", "lavaca/events/EventDispatcher", "lavaca/mvc/Router", "lavaca/mvc/ViewManager"], function(a) {
            function b(a) {
                a.preventDefault(), a.stopPropagation()
            }

            function c(a) {
                a = a.replace("#!", "#");
                var b = decodeURIComponent(a).match(/^(?:#)(\/.*)#?@?/);
                return b instanceof Array && b[1] ? b[1].replace(/#.*/, "") : null
            }

            function d(a) {
                var b = a.match(/^([^:\/?#]+:)?(?:\/\/([^\/?#]*))?([^?#]+)?(\?[^#]*)?(#.*)?/);
                return "string" == typeof b[1] && b[1].length > 0 && b[1].toLowerCase() !== location.protocol ? !0 : "string" == typeof b[2] && b[2].length > 0 && b[2].replace(new RegExp(":(" + {
                    "http:": 80,
                    "https:": 443
                }[location.protocol] + ")?$"), "") !== location.host ? !0 : !1
            }
            var e = a("$"),
                f = a("lavaca/net/History"),
                g = a("lavaca/env/Device"),
                h = a("lavaca/events/EventDispatcher"),
                i = a("lavaca/mvc/Router"),
                j = a("lavaca/mvc/ViewManager"),
                k = h.extend(function(a) {
                    a && (this._callback = a.bind(this)), g.init(function() {
                        this.beforeInit().then(this.init.bind(this))
                    }.bind(this))
                }, {
                    initRoute: "/",
                    initState: null,
                    initParams: null,
                    viewRootSelector: "#view-root",
                    onInvalidRoute: function(a) {
                        "locked" !== a && alert("An error occurred while trying to display this URL.")
                    },
                    onTapLink: function(a) {
                        var b, c = e(a.currentTarget),
                            h = a.isDefaultPrevented(),
                            i = c.attr("href") || c.attr("data-href"),
                            j = c.attr("rel"),
                            k = c.attr("target"),
                            l = c.is("[data-external]") || d(i);
                        if (b = "tap" === a.type && a.gesture && a.gesture.srcEvent ? a.gesture.srcEvent.ctrlKey || a.gesture.srcEvent.metaKey : "tap" === a.type && a.originalEvent && a.originalEvent.gesture && a.originalEvent.srcEvent ? a.originalEvent.gesture.srcEvent.ctrlKey || a.originalEvent.gesture.srcEvent.metaKey : a.ctrlKey || a.metaKey, b && (k = b ? "_blank" : k ? k : "_self"), !h)
                            if (g.isCordova() && k) a.preventDefault(), window.open(i, k || "_blank");
                            else {
                                if (l || k) return window.open(i, k), !0;
                                if (a.preventDefault(), "back" === j) f.back();
                                else if ("force-back" === j && i) {
                                    f.isRoutingBack = !0;
                                    var m = function() {
                                        f.isRoutingBack = !1
                                    };
                                    this.router.exec(i, null, null).then(m, m)
                                } else "cancel" === j ? this.viewManager.dismiss(a.currentTarget) : i && (i = i.replace(/^\/?#/, ""), this.router.exec(i).catch(this.onInvalidRoute))
                            }
                    },
                    init: function(a) {
                        return this.viewManager = j.setEl(this.viewRootSelector), this.router = i.setViewManager(this.viewManager), this.bindLinkHandler(), Promise.resolve().then(function() {
                            return this._callback(a)
                        }.bind(this)).then(function() {
                            return this.router.startHistory(), this.router.hasNavigated ? void 0 : (this.initState && f.replace(this.initState.state, this.initState.title, this.initState.url), this.router.exec(this.initialHashRoute || this.initRoute, this.initState, this.initParams))
                        }.bind(this)).then(function() {
                            this.trigger("ready")
                        }.bind(this))
                    },
                    bindLinkHandler: function() {
                        var a = e(document.body),
                            c = "click";
                        a.hammer && (a = a.hammer(), c = "tap", a.on("click", "a", b)), a.on(c, ".ui-blocker", b).on(c, "a", this.onTapLink.bind(this))
                    },
                    initialHashRoute: function(a) {
                        return c(a)
                    }(window.location.hash),
                    beforeInit: function() {
                        return Promise.resolve(null)
                    }
                });
            return k
        });
    var CryptoJS = CryptoJS || function(a, b) {
        var c = {},
            d = c.lib = {},
            e = function() {},
            f = d.Base = {
                extend: function(a) {
                    e.prototype = this;
                    var b = new e;
                    return a && b.mixIn(a), b.hasOwnProperty("init") || (b.init = function() {
                        b.$super.init.apply(this, arguments)
                    }), b.init.prototype = b, b.$super = this, b
                },
                create: function() {
                    var a = this.extend();
                    return a.init.apply(a, arguments), a
                },
                init: function() {},
                mixIn: function(a) {
                    for (var b in a) a.hasOwnProperty(b) && (this[b] = a[b]);
                    a.hasOwnProperty("toString") && (this.toString = a.toString)
                },
                clone: function() {
                    return this.init.prototype.extend(this)
                }
            },
            g = d.WordArray = f.extend({
                init: function(a, c) {
                    a = this.words = a || [], this.sigBytes = c != b ? c : 4 * a.length
                },
                toString: function(a) {
                    return (a || i).stringify(this)
                },
                concat: function(a) {
                    var b = this.words,
                        c = a.words,
                        d = this.sigBytes;
                    if (a = a.sigBytes, this.clamp(), d % 4)
                        for (var e = 0; a > e; e++) b[d + e >>> 2] |= (255 & c[e >>> 2] >>> 24 - 8 * (e % 4)) << 24 - 8 * ((d + e) % 4);
                    else if (65535 < c.length)
                        for (e = 0; a > e; e += 4) b[d + e >>> 2] = c[e >>> 2];
                    else b.push.apply(b, c);
                    return this.sigBytes += a, this
                },
                clamp: function() {
                    var b = this.words,
                        c = this.sigBytes;
                    b[c >>> 2] &= 4294967295 << 32 - 8 * (c % 4), b.length = a.ceil(c / 4)
                },
                clone: function() {
                    var a = f.clone.call(this);
                    return a.words = this.words.slice(0), a
                },
                random: function(b) {
                    for (var c = [], d = 0; b > d; d += 4) c.push(0 | 4294967296 * a.random());
                    return new g.init(c, b)
                }
            }),
            h = c.enc = {},
            i = h.Hex = {
                stringify: function(a) {
                    var b = a.words;
                    a = a.sigBytes;
                    for (var c = [], d = 0; a > d; d++) {
                        var e = 255 & b[d >>> 2] >>> 24 - 8 * (d % 4);
                        c.push((e >>> 4).toString(16)), c.push((15 & e).toString(16))
                    }
                    return c.join("")
                },
                parse: function(a) {
                    for (var b = a.length, c = [], d = 0; b > d; d += 2) c[d >>> 3] |= parseInt(a.substr(d, 2), 16) << 24 - 4 * (d % 8);
                    return new g.init(c, b / 2)
                }
            },
            j = h.Latin1 = {
                stringify: function(a) {
                    var b = a.words;
                    a = a.sigBytes;
                    for (var c = [], d = 0; a > d; d++) c.push(String.fromCharCode(255 & b[d >>> 2] >>> 24 - 8 * (d % 4)));
                    return c.join("")
                },
                parse: function(a) {
                    for (var b = a.length, c = [], d = 0; b > d; d++) c[d >>> 2] |= (255 & a.charCodeAt(d)) << 24 - 8 * (d % 4);
                    return new g.init(c, b)
                }
            },
            k = h.Utf8 = {
                stringify: function(a) {
                    try {
                        return decodeURIComponent(escape(j.stringify(a)))
                    } catch (b) {
                        throw Error("Malformed UTF-8 data")
                    }
                },
                parse: function(a) {
                    return j.parse(unescape(encodeURIComponent(a)))
                }
            },
            l = d.BufferedBlockAlgorithm = f.extend({
                reset: function() {
                    this._data = new g.init, this._nDataBytes = 0
                },
                _append: function(a) {
                    "string" == typeof a && (a = k.parse(a)), this._data.concat(a), this._nDataBytes += a.sigBytes
                },
                _process: function(b) {
                    var c = this._data,
                        d = c.words,
                        e = c.sigBytes,
                        f = this.blockSize,
                        h = e / (4 * f),
                        h = b ? a.ceil(h) : a.max((0 | h) - this._minBufferSize, 0);
                    if (b = h * f, e = a.min(4 * b, e), b) {
                        for (var i = 0; b > i; i += f) this._doProcessBlock(d, i);
                        i = d.splice(0, b), c.sigBytes -= e
                    }
                    return new g.init(i, e)
                },
                clone: function() {
                    var a = f.clone.call(this);
                    return a._data = this._data.clone(), a
                },
                _minBufferSize: 0
            });
        d.Hasher = l.extend({
            cfg: f.extend(),
            init: function(a) {
                this.cfg = this.cfg.extend(a), this.reset()
            },
            reset: function() {
                l.reset.call(this), this._doReset()
            },
            update: function(a) {
                return this._append(a), this._process(), this
            },
            finalize: function(a) {
                return a && this._append(a), this._doFinalize()
            },
            blockSize: 16,
            _createHelper: function(a) {
                return function(b, c) {
                    return new a.init(c).finalize(b)
                }
            },
            _createHmacHelper: function(a) {
                return function(b, c) {
                    return new m.HMAC.init(a, c).finalize(b)
                }
            }
        });
        var m = c.algo = {};
        return c
    }(Math);
    return function() {
            var a = CryptoJS,
                b = a.lib.WordArray;
            a.enc.Base64 = {
                stringify: function(a) {
                    var b = a.words,
                        c = a.sigBytes,
                        d = this._map;
                    a.clamp(), a = [];
                    for (var e = 0; c > e; e += 3)
                        for (var f = (255 & b[e >>> 2] >>> 24 - 8 * (e % 4)) << 16 | (255 & b[e + 1 >>> 2] >>> 24 - 8 * ((e + 1) % 4)) << 8 | 255 & b[e + 2 >>> 2] >>> 24 - 8 * ((e + 2) % 4), g = 0; 4 > g && c > e + .75 * g; g++) a.push(d.charAt(63 & f >>> 6 * (3 - g)));
                    if (b = d.charAt(64))
                        for (; a.length % 4;) a.push(b);
                    return a.join("")
                },
                parse: function(a) {
                    var c = a.length,
                        d = this._map,
                        e = d.charAt(64);
                    e && (e = a.indexOf(e), -1 != e && (c = e));
                    for (var e = [], f = 0, g = 0; c > g; g++)
                        if (g % 4) {
                            var h = d.indexOf(a.charAt(g - 1)) << 2 * (g % 4),
                                i = d.indexOf(a.charAt(g)) >>> 6 - 2 * (g % 4);
                            e[f >>> 2] |= (h | i) << 24 - 8 * (f % 4), f++
                        }
                    return b.create(e, f)
                },
                _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
            }
        }(),
        function(a) {
            function b(a, b, c, d, e, f, g) {
                return a = a + (b & c | ~b & d) + e + g, (a << f | a >>> 32 - f) + b
            }

            function c(a, b, c, d, e, f, g) {
                return a = a + (b & d | c & ~d) + e + g, (a << f | a >>> 32 - f) + b
            }

            function d(a, b, c, d, e, f, g) {
                return a = a + (b ^ c ^ d) + e + g, (a << f | a >>> 32 - f) + b
            }

            function e(a, b, c, d, e, f, g) {
                return a = a + (c ^ (b | ~d)) + e + g, (a << f | a >>> 32 - f) + b
            }
            for (var f = CryptoJS, g = f.lib, h = g.WordArray, i = g.Hasher, g = f.algo, j = [], k = 0; 64 > k; k++) j[k] = 0 | 4294967296 * a.abs(a.sin(k + 1));
            g = g.MD5 = i.extend({
                _doReset: function() {
                    this._hash = new h.init([1732584193, 4023233417, 2562383102, 271733878])
                },
                _doProcessBlock: function(a, f) {
                    for (var g = 0; 16 > g; g++) {
                        var h = f + g,
                            i = a[h];
                        a[h] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8)
                    }
                    var g = this._hash.words,
                        h = a[f + 0],
                        i = a[f + 1],
                        k = a[f + 2],
                        l = a[f + 3],
                        m = a[f + 4],
                        n = a[f + 5],
                        o = a[f + 6],
                        p = a[f + 7],
                        q = a[f + 8],
                        r = a[f + 9],
                        s = a[f + 10],
                        t = a[f + 11],
                        u = a[f + 12],
                        v = a[f + 13],
                        w = a[f + 14],
                        x = a[f + 15],
                        y = g[0],
                        z = g[1],
                        A = g[2],
                        B = g[3],
                        y = b(y, z, A, B, h, 7, j[0]),
                        B = b(B, y, z, A, i, 12, j[1]),
                        A = b(A, B, y, z, k, 17, j[2]),
                        z = b(z, A, B, y, l, 22, j[3]),
                        y = b(y, z, A, B, m, 7, j[4]),
                        B = b(B, y, z, A, n, 12, j[5]),
                        A = b(A, B, y, z, o, 17, j[6]),
                        z = b(z, A, B, y, p, 22, j[7]),
                        y = b(y, z, A, B, q, 7, j[8]),
                        B = b(B, y, z, A, r, 12, j[9]),
                        A = b(A, B, y, z, s, 17, j[10]),
                        z = b(z, A, B, y, t, 22, j[11]),
                        y = b(y, z, A, B, u, 7, j[12]),
                        B = b(B, y, z, A, v, 12, j[13]),
                        A = b(A, B, y, z, w, 17, j[14]),
                        z = b(z, A, B, y, x, 22, j[15]),
                        y = c(y, z, A, B, i, 5, j[16]),
                        B = c(B, y, z, A, o, 9, j[17]),
                        A = c(A, B, y, z, t, 14, j[18]),
                        z = c(z, A, B, y, h, 20, j[19]),
                        y = c(y, z, A, B, n, 5, j[20]),
                        B = c(B, y, z, A, s, 9, j[21]),
                        A = c(A, B, y, z, x, 14, j[22]),
                        z = c(z, A, B, y, m, 20, j[23]),
                        y = c(y, z, A, B, r, 5, j[24]),
                        B = c(B, y, z, A, w, 9, j[25]),
                        A = c(A, B, y, z, l, 14, j[26]),
                        z = c(z, A, B, y, q, 20, j[27]),
                        y = c(y, z, A, B, v, 5, j[28]),
                        B = c(B, y, z, A, k, 9, j[29]),
                        A = c(A, B, y, z, p, 14, j[30]),
                        z = c(z, A, B, y, u, 20, j[31]),
                        y = d(y, z, A, B, n, 4, j[32]),
                        B = d(B, y, z, A, q, 11, j[33]),
                        A = d(A, B, y, z, t, 16, j[34]),
                        z = d(z, A, B, y, w, 23, j[35]),
                        y = d(y, z, A, B, i, 4, j[36]),
                        B = d(B, y, z, A, m, 11, j[37]),
                        A = d(A, B, y, z, p, 16, j[38]),
                        z = d(z, A, B, y, s, 23, j[39]),
                        y = d(y, z, A, B, v, 4, j[40]),
                        B = d(B, y, z, A, h, 11, j[41]),
                        A = d(A, B, y, z, l, 16, j[42]),
                        z = d(z, A, B, y, o, 23, j[43]),
                        y = d(y, z, A, B, r, 4, j[44]),
                        B = d(B, y, z, A, u, 11, j[45]),
                        A = d(A, B, y, z, x, 16, j[46]),
                        z = d(z, A, B, y, k, 23, j[47]),
                        y = e(y, z, A, B, h, 6, j[48]),
                        B = e(B, y, z, A, p, 10, j[49]),
                        A = e(A, B, y, z, w, 15, j[50]),
                        z = e(z, A, B, y, n, 21, j[51]),
                        y = e(y, z, A, B, u, 6, j[52]),
                        B = e(B, y, z, A, l, 10, j[53]),
                        A = e(A, B, y, z, s, 15, j[54]),
                        z = e(z, A, B, y, i, 21, j[55]),
                        y = e(y, z, A, B, q, 6, j[56]),
                        B = e(B, y, z, A, x, 10, j[57]),
                        A = e(A, B, y, z, o, 15, j[58]),
                        z = e(z, A, B, y, v, 21, j[59]),
                        y = e(y, z, A, B, m, 6, j[60]),
                        B = e(B, y, z, A, t, 10, j[61]),
                        A = e(A, B, y, z, k, 15, j[62]),
                        z = e(z, A, B, y, r, 21, j[63]);
                    g[0] = 0 | g[0] + y, g[1] = 0 | g[1] + z, g[2] = 0 | g[2] + A, g[3] = 0 | g[3] + B
                },
                _doFinalize: function() {
                    var b = this._data,
                        c = b.words,
                        d = 8 * this._nDataBytes,
                        e = 8 * b.sigBytes;
                    c[e >>> 5] |= 128 << 24 - e % 32;
                    var f = a.floor(d / 4294967296);
                    for (c[(e + 64 >>> 9 << 4) + 15] = 16711935 & (f << 8 | f >>> 24) | 4278255360 & (f << 24 | f >>> 8), c[(e + 64 >>> 9 << 4) + 14] = 16711935 & (d << 8 | d >>> 24) | 4278255360 & (d << 24 | d >>> 8), b.sigBytes = 4 * (c.length + 1), this._process(), b = this._hash, c = b.words, d = 0; 4 > d; d++) e = c[d], c[d] = 16711935 & (e << 8 | e >>> 24) | 4278255360 & (e << 24 | e >>> 8);
                    return b
                },
                clone: function() {
                    var a = i.clone.call(this);
                    return a._hash = this._hash.clone(), a
                }
            }), f.MD5 = i._createHelper(g), f.HmacMD5 = i._createHmacHelper(g)
        }(Math),
        function() {
            var a = CryptoJS,
                b = a.lib,
                c = b.Base,
                d = b.WordArray,
                b = a.algo,
                e = b.EvpKDF = c.extend({
                    cfg: c.extend({
                        keySize: 4,
                        hasher: b.MD5,
                        iterations: 1
                    }),
                    init: function(a) {
                        this.cfg = this.cfg.extend(a)
                    },
                    compute: function(a, b) {
                        for (var c = this.cfg, e = c.hasher.create(), f = d.create(), g = f.words, h = c.keySize, c = c.iterations; g.length < h;) {
                            i && e.update(i);
                            var i = e.update(a).finalize(b);
                            e.reset();
                            for (var j = 1; c > j; j++) i = e.finalize(i), e.reset();
                            f.concat(i)
                        }
                        return f.sigBytes = 4 * h, f
                    }
                });
            a.EvpKDF = function(a, b, c) {
                return e.create(c).compute(a, b)
            }
        }(), CryptoJS.lib.Cipher || function(a) {
            var b = CryptoJS,
                c = b.lib,
                d = c.Base,
                e = c.WordArray,
                f = c.BufferedBlockAlgorithm,
                g = b.enc.Base64,
                h = b.algo.EvpKDF,
                i = c.Cipher = f.extend({
                    cfg: d.extend(),
                    createEncryptor: function(a, b) {
                        return this.create(this._ENC_XFORM_MODE, a, b)
                    },
                    createDecryptor: function(a, b) {
                        return this.create(this._DEC_XFORM_MODE, a, b)
                    },
                    init: function(a, b, c) {
                        this.cfg = this.cfg.extend(c), this._xformMode = a, this._key = b, this.reset()
                    },
                    reset: function() {
                        f.reset.call(this), this._doReset()
                    },
                    process: function(a) {
                        return this._append(a), this._process()
                    },
                    finalize: function(a) {
                        return a && this._append(a), this._doFinalize()
                    },
                    keySize: 4,
                    ivSize: 4,
                    _ENC_XFORM_MODE: 1,
                    _DEC_XFORM_MODE: 2,
                    _createHelper: function(a) {
                        return {
                            encrypt: function(b, c, d) {
                                return ("string" == typeof c ? o : n).encrypt(a, b, c, d)
                            },
                            decrypt: function(b, c, d) {
                                return ("string" == typeof c ? o : n).decrypt(a, b, c, d)
                            }
                        }
                    }
                });
            c.StreamCipher = i.extend({
                _doFinalize: function() {
                    return this._process(!0)
                },
                blockSize: 1
            });
            var j = b.mode = {},
                k = function(b, c, d) {
                    var e = this._iv;
                    e ? this._iv = a : e = this._prevBlock;
                    for (var f = 0; d > f; f++) b[c + f] ^= e[f]
                },
                l = (c.BlockCipherMode = d.extend({
                    createEncryptor: function(a, b) {
                        return this.Encryptor.create(a, b)
                    },
                    createDecryptor: function(a, b) {
                        return this.Decryptor.create(a, b)
                    },
                    init: function(a, b) {
                        this._cipher = a, this._iv = b
                    }
                })).extend();
            l.Encryptor = l.extend({
                processBlock: function(a, b) {
                    var c = this._cipher,
                        d = c.blockSize;
                    k.call(this, a, b, d), c.encryptBlock(a, b), this._prevBlock = a.slice(b, b + d)
                }
            }), l.Decryptor = l.extend({
                processBlock: function(a, b) {
                    var c = this._cipher,
                        d = c.blockSize,
                        e = a.slice(b, b + d);
                    c.decryptBlock(a, b), k.call(this, a, b, d), this._prevBlock = e
                }
            }), j = j.CBC = l, l = (b.pad = {}).Pkcs7 = {
                pad: function(a, b) {
                    for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, f = [], g = 0; c > g; g += 4) f.push(d);
                    c = e.create(f, c), a.concat(c)
                },
                unpad: function(a) {
                    a.sigBytes -= 255 & a.words[a.sigBytes - 1 >>> 2]
                }
            }, c.BlockCipher = i.extend({
                cfg: i.cfg.extend({
                    mode: j,
                    padding: l
                }),
                reset: function() {
                    i.reset.call(this);
                    var a = this.cfg,
                        b = a.iv,
                        a = a.mode;
                    if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor;
                    else c = a.createDecryptor, this._minBufferSize = 1;
                    this._mode = c.call(a, this, b && b.words)
                },
                _doProcessBlock: function(a, b) {
                    this._mode.processBlock(a, b)
                },
                _doFinalize: function() {
                    var a = this.cfg.padding;
                    if (this._xformMode == this._ENC_XFORM_MODE) {
                        a.pad(this._data, this.blockSize);
                        var b = this._process(!0)
                    } else b = this._process(!0), a.unpad(b);
                    return b
                },
                blockSize: 4
            });
            var m = c.CipherParams = d.extend({
                    init: function(a) {
                        this.mixIn(a)
                    },
                    toString: function(a) {
                        return (a || this.formatter).stringify(this)
                    }
                }),
                j = (b.format = {}).OpenSSL = {
                    stringify: function(a) {
                        var b = a.ciphertext;
                        return a = a.salt, (a ? e.create([1398893684, 1701076831]).concat(a).concat(b) : b).toString(g)
                    },
                    parse: function(a) {
                        a = g.parse(a);
                        var b = a.words;
                        if (1398893684 == b[0] && 1701076831 == b[1]) {
                            var c = e.create(b.slice(2, 4));
                            b.splice(0, 4), a.sigBytes -= 16
                        }
                        return m.create({
                            ciphertext: a,
                            salt: c
                        })
                    }
                },
                n = c.SerializableCipher = d.extend({
                    cfg: d.extend({
                        format: j
                    }),
                    encrypt: function(a, b, c, d) {
                        d = this.cfg.extend(d);
                        var e = a.createEncryptor(c, d);
                        return b = e.finalize(b), e = e.cfg, m.create({
                            ciphertext: b,
                            key: c,
                            iv: e.iv,
                            algorithm: a,
                            mode: e.mode,
                            padding: e.padding,
                            blockSize: a.blockSize,
                            formatter: d.format
                        })
                    },
                    decrypt: function(a, b, c, d) {
                        return d = this.cfg.extend(d), b = this._parse(b, d.format), a.createDecryptor(c, d).finalize(b.ciphertext)
                    },
                    _parse: function(a, b) {
                        return "string" == typeof a ? b.parse(a, this) : a
                    }
                }),
                b = (b.kdf = {}).OpenSSL = {
                    execute: function(a, b, c, d) {
                        return d || (d = e.random(8)), a = h.create({
                            keySize: b + c
                        }).compute(a, d), c = e.create(a.words.slice(b), 4 * c), a.sigBytes = 4 * b, m.create({
                            key: a,
                            iv: c,
                            salt: d
                        })
                    }
                },
                o = c.PasswordBasedCipher = n.extend({
                    cfg: n.cfg.extend({
                        kdf: b
                    }),
                    encrypt: function(a, b, c, d) {
                        return d = this.cfg.extend(d), c = d.kdf.execute(c, a.keySize, a.ivSize), d.iv = c.iv, a = n.encrypt.call(this, a, b, c.key, d), a.mixIn(c), a
                    },
                    decrypt: function(a, b, c, d) {
                        return d = this.cfg.extend(d), b = this._parse(b, d.format), c = d.kdf.execute(c, a.keySize, a.ivSize, b.salt), d.iv = c.iv, n.decrypt.call(this, a, b, c.key, d)
                    }
                })
        }(),
        function() {
            for (var a = CryptoJS, b = a.lib.BlockCipher, c = a.algo, d = [], e = [], f = [], g = [], h = [], i = [], j = [], k = [], l = [], m = [], n = [], o = 0; 256 > o; o++) n[o] = 128 > o ? o << 1 : 283 ^ o << 1;
            for (var p = 0, q = 0, o = 0; 256 > o; o++) {
                var r = q ^ q << 1 ^ q << 2 ^ q << 3 ^ q << 4,
                    r = 99 ^ (r >>> 8 ^ 255 & r);
                d[p] = r, e[r] = p;
                var s = n[p],
                    t = n[s],
                    u = n[t],
                    v = 257 * n[r] ^ 16843008 * r;
                f[p] = v << 24 | v >>> 8, g[p] = v << 16 | v >>> 16, h[p] = v << 8 | v >>> 24, i[p] = v, v = 16843009 * u ^ 65537 * t ^ 257 * s ^ 16843008 * p, j[r] = v << 24 | v >>> 8, k[r] = v << 16 | v >>> 16, l[r] = v << 8 | v >>> 24, m[r] = v, p ? (p = s ^ n[n[n[u ^ s]]], q ^= n[n[q]]) : p = q = 1
            }
            var w = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                c = c.AES = b.extend({
                    _doReset: function() {
                        for (var a = this._key, b = a.words, c = a.sigBytes / 4, a = 4 * ((this._nRounds = c + 6) + 1), e = this._keySchedule = [], f = 0; a > f; f++)
                            if (c > f) e[f] = b[f];
                            else {
                                var g = e[f - 1];
                                f % c ? c > 6 && 4 == f % c && (g = d[g >>> 24] << 24 | d[255 & g >>> 16] << 16 | d[255 & g >>> 8] << 8 | d[255 & g]) : (g = g << 8 | g >>> 24, g = d[g >>> 24] << 24 | d[255 & g >>> 16] << 16 | d[255 & g >>> 8] << 8 | d[255 & g], g ^= w[0 | f / c] << 24), e[f] = e[f - c] ^ g
                            }
                        for (b = this._invKeySchedule = [], c = 0; a > c; c++) f = a - c, g = c % 4 ? e[f] : e[f - 4], b[c] = 4 > c || 4 >= f ? g : j[d[g >>> 24]] ^ k[d[255 & g >>> 16]] ^ l[d[255 & g >>> 8]] ^ m[d[255 & g]]
                    },
                    encryptBlock: function(a, b) {
                        this._doCryptBlock(a, b, this._keySchedule, f, g, h, i, d)
                    },
                    decryptBlock: function(a, b) {
                        var c = a[b + 1];
                        a[b + 1] = a[b + 3], a[b + 3] = c, this._doCryptBlock(a, b, this._invKeySchedule, j, k, l, m, e), c = a[b + 1], a[b + 1] = a[b + 3], a[b + 3] = c
                    },
                    _doCryptBlock: function(a, b, c, d, e, f, g, h) {
                        for (var i = this._nRounds, j = a[b] ^ c[0], k = a[b + 1] ^ c[1], l = a[b + 2] ^ c[2], m = a[b + 3] ^ c[3], n = 4, o = 1; i > o; o++) var p = d[j >>> 24] ^ e[255 & k >>> 16] ^ f[255 & l >>> 8] ^ g[255 & m] ^ c[n++],
                            q = d[k >>> 24] ^ e[255 & l >>> 16] ^ f[255 & m >>> 8] ^ g[255 & j] ^ c[n++],
                            r = d[l >>> 24] ^ e[255 & m >>> 16] ^ f[255 & j >>> 8] ^ g[255 & k] ^ c[n++],
                            m = d[m >>> 24] ^ e[255 & j >>> 16] ^ f[255 & k >>> 8] ^ g[255 & l] ^ c[n++],
                            j = p,
                            k = q,
                            l = r;
                        p = (h[j >>> 24] << 24 | h[255 & k >>> 16] << 16 | h[255 & l >>> 8] << 8 | h[255 & m]) ^ c[n++], q = (h[k >>> 24] << 24 | h[255 & l >>> 16] << 16 | h[255 & m >>> 8] << 8 | h[255 & j]) ^ c[n++], r = (h[l >>> 24] << 24 | h[255 & m >>> 16] << 16 | h[255 & j >>> 8] << 8 | h[255 & k]) ^ c[n++], m = (h[m >>> 24] << 24 | h[255 & j >>> 16] << 16 | h[255 & k >>> 8] << 8 | h[255 & l]) ^ c[n++], a[b] = p, a[b + 1] = q, a[b + 2] = r, a[b + 3] = m
                    },
                    keySize: 8
                });
            a.AES = b._createHelper(c)
        }(), define("app/service/crypto", function() {}), define("app/ui/widgets/ResponsiveMagic", ["require", "lavaca/ui/Widget", "app/utils/debounce", "app/env/ModernizrTests", "app/ui/views/controlviews/ModalView", "$"], function(a) {
            function b() {
                g.viewportWidth = window.innerWidth, g.viewportHeight = window.innerHeight, this.scrWidth = g.viewportWidth, this.scrHeight = g.viewportHeight, d.call(this), Modernizr.setTest("landscape", g.viewportWidth > g.viewportHeight)
            }

            function c() {
                this.initFontSize = 10, this.initDesktopFontSize = 19, this.basePhoneSize = 320, this.scrWidth = g.viewportWidth, this.scrHeight = g.viewportHeight, d.call(this)
            }

            function d() {
                return this.scrWidth / this.scrHeight, Modernizr.desktop && this.scrWidth <= 800 ? (this.el.css("font-size", this.initDesktopFontSize + "px"), void 0) : (this.scrWidth >= 600 && this.scrWidth < 800 && !h.isOpen ? this.el.css("font-size", this.basePhoneSize / this.scrWidth * this.initFontSize + this.initFontSize + "px") : this.scrWidth >= 800 && !h.isOpen ? this.el.css("font-size", this.basePhoneSize / this.scrWidth * this.initFontSize + 1.4 * this.initFontSize + "px") : h.isOpen ? this.el.css("font-size", this.initFontSize + "px") : this.el.css("font-size", this.scrWidth / this.basePhoneSize * this.initFontSize + "px"), void 0)
            }
            var e = a("lavaca/ui/Widget"),
                f = a("app/utils/debounce"),
                g = a("app/env/ModernizrTests"),
                h = a("app/ui/views/controlviews/ModalView"),
                i = a("$"),
                j = e.extend(function() {
                    e.apply(this, arguments), setTimeout(c.bind(this), 0), i(window).on("resize.magic", f(b.bind(this), 100))
                }, {
                    dispose: function() {
                        return i(window).off("resize.magic"), e.prototype.dispose.apply(this, arguments)
                    }
                });
            return j
        }), define("app/utils/LocalStorageManager", ["require", "lavaca/util/Disposable"], function(a) {
            var b = a("lavaca/util/Disposable"),
                c = b.extend(function(a) {
                    if (b.call(this, arguments), this.recordId = "SIQ:cache", Modernizr.localstorage && "undefined" !== a) {
                        var c;
                        try {
                            if (c = parseInt(localStorage.getItem(this.recordId), 10), isNaN(c)) throw "NaN"
                        } catch (d) {
                            c = 0
                        }
                        if (a > c) try {
                            localStorage.clear(), localStorage.setItem(this.recordId, a), sessionStorage.isAuthenticated = !1
                        } catch (d) {
                            localStorage.setItem(this.recordId, a)
                        }
                    }
                });
            return new c(1)
        }), define("app/utils/BackgroundManager", ["require", "lavaca/util/Disposable", "sccomm/ConnectedDeviceStateModel", "sccomm/DeviceCommunication", "app/models/StateModel"], function(a) {
            function b() {
                document.addEventListener("pause", c.bind(this), !1), document.addEventListener("resume", d.bind(this), !1), setTimeout(function() {
                    f.checkHasBLE(), f.checkStatusBLE()
                }, 500), setTimeout(function() {
                    f.checkHasBLE(), f.checkStatusBLE()
                }, 1e3), setTimeout(function() {
                    f.checkHasBLE(), f.checkStatusBLE()
                }, 2e3)
            }

            function c() {
                h.trigger("pause"), f.set("appBackgrounded", !0), g.close()
            }

            function d() {
                h.trigger("beginShortPolling"), h.trigger("resume"), f.set("appBackgrounded", !1), f.checkStatusBLE().then(function() {
                    f.get("shouldReconnectOnAppResume") && g.fastReconnect()
                }.bind(this))
            }
            var e = a("lavaca/util/Disposable"),
                f = a("sccomm/ConnectedDeviceStateModel"),
                g = a("sccomm/DeviceCommunication"),
                h = a("app/models/StateModel"),
                i = e.extend(function() {
                    e.call(this, arguments), b.call(this)
                }, {});
            return i
        }), define("app/utils/ConnectedDeviceStateChangeManager", ["require", "lavaca/util/Disposable", "app/models/StateModel", "sccomm/ConnectedDeviceStateModel"], function(a) {
            function b() {
                window.bluetoothle && (console.log("init _onAdapterStateChanged"), window.bluetoothle.on("adapterStateChanged", d.bind(this)))
            }

            function c() {
                g.reset()
            }

            function d(a) {
                console.log("_onAdapterStateChanged: " + a.enabled);
                var b = a ? a.enabled : !1;
                g.updateStatusBLE(b)
            }
            var e = a("lavaca/util/Disposable"),
                f = a("app/models/StateModel"),
                g = a("sccomm/ConnectedDeviceStateModel"),
                h = e.extend(function() {
                    e.call(this, arguments), f.on("logout", c.bind(this)), setTimeout(function() {
                        b.call(this)
                    }.bind(this), 1500)
                }, {});
            return h
        }), define("app/utils/DeepLinkManager", ["require", "lavaca/util/Disposable", "lavaca/mvc/Router", "app/env/Config"], function(a) {
            function b() {
                window.deepLinkRedirect = function() {
                    if (window.deeplinkRoute) {
                        window.deeplinkRoute = window.deeplinkRoute.toLocaleLowerCase();
                        var a = window.deeplinkRoute.replace(e.url_scheme, "").replace("intent://", "");
                        d.exec("/" + a)
                    }
                }, window.handleOpenURL = function(a) {
                    setTimeout(function() {
                        window.deeplinkRoute = a, console.log("handleURLDeepLink: " + window.deeplinkRoute), window.deepLinkRedirect()
                    }, 600)
                }
            }
            var c = a("lavaca/util/Disposable"),
                d = a("lavaca/mvc/Router"),
                e = a("app/env/Config"),
                f = c.extend(function() {
                    c.call(this, arguments), b.call(this)
                }, {});
            return f
        }), define("app/utils/CustomAlertManager", ["require", "lavaca/util/Disposable", "app/models/StateModel", "app/ui/views/controlviews/Alert"], function(a) {
            function b() {
                window.customAlert = function(a, b, c, d) {
                    return e.show(a, b, c, d)
                }.bind(this), window.customAlert.dismiss = function() {
                    return e.dismiss()
                }.bind(this), window.customAlert.alert = function(a, b, c, e) {
                    d.get("hasSeenAlert") || (d.set("hasSeenAlert", !0), setTimeout(function() {
                        d.set("hasSeenAlert", !1)
                    }.bind(this), 1e3), a = "string" == typeof a ? a : "Pardon us. We are experiencing technical difficulties; please check back later.", a.indexOf("connectivity") >= 0 && (c = c || "Connectivity Error"), navigator && navigator.notification ? navigator.notification.alert(a, b, c || "Error", e || "OK") : (alert(a), b && "function" == typeof b && b()))
                }.bind(this), window.customAlert.confirm = function(a, b, c, d) {
                    return navigator && navigator.notification && navigator.notification.confirm ? navigator.notification.confirm(a, b, c || "SleepIQ®", d || ["Cancel", "OK"]) : confirm(a)
                }, window.customAlert.prompt = function(a, b, c, d, e) {
                    if (b = b || function(a) {
                            return a
                        }, navigator && navigator.notification && navigator.notification.prompt) return navigator.notification.prompt(a, b, c || "SleepIQ®", d || ["Cancel", "OK"], e || "");
                    var f = prompt(a, e || "");
                    return f ? (b(f), void 0) : !1
                }
            }
            var c = a("lavaca/util/Disposable"),
                d = a("app/models/StateModel"),
                e = a("app/ui/views/controlviews/Alert"),
                f = c.extend(function() {
                    c.call(this, arguments), b.call(this)
                }, {});
            return f
        }), define("app/utils/NotificationManager", ["require", "lavaca/util/Disposable", "app/models/FamilyModel", "app/models/StateModel", "app/service/AirshipService", "app/models/AccountModel", "sccomm/CommunicationHelpers", "$"], function(a) {
            function b() {
                var a;
                try {
                    a = h.hasPermission()
                } catch (b) {
                    console.log(b)
                }
                a && void 0 !== typeof a && (document.addEventListener("urbanairship.registration", function(a) {
                    a.error ? console.log("There was an error registering for push notifications") : console.log("Registered with ID: " + a.pushID)
                }.bind(this), !1), document.addEventListener("urbanairship.push", function(a) {
                    c.call(this, a.message)
                }), d.call(this, a), (Modernizr.ios || Modernizr.android) && e.call(this, h.getFamily()[h.getLoggedInUserIndex()].get("sleeperId")))
            }

            function c(a) {
                Modernizr.ios && window.customAlert.alert(a, null, "SleepIQ®", "OK")
            }

            function d(a) {
                var b = !1;
                if (Modernizr.localstorage && (sessionStorage.hasSeenToast === !0 || "true" === sessionStorage.hasSeenToast ? b = sessionStorage.hasSeenToast : sessionStorage.hasSeenToast = !0), a) {
                    console.log("Message Handler has been called.");
                    var c = 0,
                        d = 0;
                    k.getBeds().then(function(a) {
                        for (var e = 0, f = a.beds.length; f > e; ++e) "0" == a.beds[e].sleeperRightId && "0" == a.beds[e].sleeperLeftId ? c++ : l.isMacAddress(a.beds[e].macAddress) || d++;
                        1 === c ? (b || i.trigger("toggleToast", {
                            message: "<p>Set up your new SleepNumber<sup>&reg;</sup> bed<br>in remote settings.</p>"
                        }), m("#view-root").addClass("new-bed")) : c > 1 ? (b || i.trigger("toggleToast", {
                            message: "<p>You have new beds on your account.<br/>Go to Remote to set them up now.</p>"
                        }), m("#view-root").addClass("new-bed")) : 0 === c && m("#view-root").removeClass("new-bed"), 1 === d ? b || i.trigger("toggleToast", {
                            message: "<p>Please return to the remote menu when your bed arrives to sync your bed through the pairing process.</p>"
                        }) : d > 1 && (b || i.trigger("toggleToast", {
                            message: "<p>Please return to the remote menu when your beds arrive to sync your beds through the pairing process.</p>"
                        }))
                    }, function e(e) {
                        console.log("error getting bed count: "), console.error(e)
                    }.bind(this))
                }
            }

            function e(a) {
                if (window.device && window.device.platform) {
                    var b = window.device.platform.toLowerCase(),
                        c = {
                            token: void 0,
                            platform: b
                        };
                    f.call(this).then(function(b) {
                        console.log("resolved: ", b), c.token = b, b && "" !== b && j.registerPush(a, c).then(function(a) {
                            console.log("Register device: ", a)
                        }, function d(d) {
                            console.log("error"), console.error(d)
                        }.bind(this))
                    })
                }
            }

            function f() {
                return new Promise(function(a) {
                    PushNotification.getPushID(function(b) {
                        console.log("pid: ", b), a(b)
                    })
                })
            }
            var g = a("lavaca/util/Disposable"),
                h = a("app/models/FamilyModel"),
                i = a("app/models/StateModel"),
                j = a("app/service/AirshipService"),
                k = a("app/models/AccountModel"),
                l = a("sccomm/CommunicationHelpers"),
                m = a("$"),
                n = g.extend(function() {
                    g.call(this, arguments), i.on("loggingIn", b.bind(this)), i.on("logout", this.onLogout)
                }, {
                    hasAttemptedRegister: !1,
                    registerDevice: function(a) {
                        this.hasAttemptedRegister || (this.hasAttemptedRegister = !0, e.call(this, a))
                    },
                    onLogout: function() {
                        this.hasAttemptedRegister = !1
                    }
                });
            return n
        }), define("app/utils/AuthCheckManager", ["require", "lavaca/util/Disposable", "app/models/AuthModel", "app/models/StateModel", "app/models/AccountModel", "lavaca/mvc/Router"], function(a) {
            function b() {
                var a = function() {
                    return new Promise(function(a, b) {
                        return e.get("demoMode") ? a() : d.get("username") ? Modernizr.localstorage && "true" === sessionStorage.isAuthenticated ? a() : d.isAuthenticated ? a() : f.login(d.get("username"), d.get("password")).then(function(b) {
                            return d.onUserLogin(b), a()
                        }.bind(this), function() {
                            return d.clearAll(), b()
                        }.bind(this)) : b()
                    }.bind(this))
                };
                g.setAuth(a, "/")
            }
            var c = a("lavaca/util/Disposable"),
                d = a("app/models/AuthModel"),
                e = a("app/models/StateModel"),
                f = a("app/models/AccountModel"),
                g = a("lavaca/mvc/Router"),
                h = c.extend(function() {
                    c.call(this, arguments), b.call(this)
                }, {});
            return h
        }), define("app/utils/BuildInfoManager", ["require", "lavaca/util/Disposable", "app/models/StateModel"], function(a) {
            function b() {
                $.ajax("assets/version.json").then(function(a) {
                    var b = {};
                    "object" == typeof a ? b = a : "string" == typeof a && (b = JSON.parse(a)), d.set("build", b), "staging" === window.env
                })
            }
            var c = a("lavaca/util/Disposable"),
                d = a("app/models/StateModel"),
                e = c.extend(function() {
                    c.call(this, arguments), b.call(this)
                }, {});
            return e
        }), define("app/ui/widgets/TouchTrackerWidget", ["require", "lavaca/ui/Widget"], function(a) {
            var b = a("lavaca/ui/Widget"),
                c = b.extend(function() {
                    b.apply(this, arguments), this.el.on("touchstart", this.onTouchStart.bind(this)), this.el.on("touchmove", this.onTouchMove.bind(this)), this.el.on("touchend", this.onTouchEnd.bind(this))
                }, {
                    touchTracker: {},
                    onTouchStart: function(a) {
                        this.touchTracker.currentAction = "start", this.touchTracker.startX = a.originalEvent.touches[0].clientX, this.touchTracker.startY = a.originalEvent.touches[0].clientY, this.touchTracker.lastX = a.originalEvent.touches[0].clientX, this.touchTracker.lastY = a.originalEvent.touches[0].clientY, this.touchTracker.currentDeltaX = 0, this.touchTracker.currentDeltaY = 0, this.touchTracker.deltaX = 0, this.touchTracker.deltaY = 0
                    },
                    onTouchMove: function(a) {
                        this.touchTracker.currentAction = "move", this.touchTracker.currentDeltaX = a.originalEvent.touches[0].clientX - this.touchTracker.lastX, this.touchTracker.currentDeltaY = a.originalEvent.touches[0].clientY - this.touchTracker.lastY, this.touchTracker.lastX = a.originalEvent.touches[0].clientX, this.touchTracker.lastY = a.originalEvent.touches[0].clientY, this.touchTracker.deltaX = a.originalEvent.touches[0].clientX - this.touchTracker.startX, this.touchTracker.deltaY = a.originalEvent.touches[0].clientY - this.touchTracker.startY, this.touchTracker.distance = this.distanceBetweenPoints(), this.touchTracker.angle = this.angleBetweenPoints(), this.touchTracker.distanceInt = this.touchTracker.distance.toFixed(0), this.touchTracker.angleInt = this.touchTracker.angle.toFixed(0)
                    },
                    onTouchEnd: function() {
                        this.touchTracker.currentAction = "end", this.touchTracker.distance = this.distanceBetweenPoints(), this.touchTracker.angle = this.angleBetweenPoints(), this.touchTracker.distanceInt = this.touchTracker.distance.toFixed(0), this.touchTracker.angleInt = this.touchTracker.angle.toFixed(0)
                    },
                    distanceBetweenPoints: function() {
                        return Math.sqrt((this.touchTracker.lastX - this.touchTracker.startX) * (this.touchTracker.lastX - this.touchTracker.startX) + (this.touchTracker.lastY - this.touchTracker.startY) * (this.touchTracker.lastY - this.touchTracker.startY))
                    },
                    angleBetweenPoints: function() {
                        var a = Math.atan2(-(this.touchTracker.lastY - this.touchTracker.startY), this.touchTracker.lastX - this.touchTracker.startX);
                        return 0 > a && (a += 2 * Math.PI), a * (180 / Math.PI)
                    },
                    dispose: function() {
                        this.el.off("touchstart"), this.el.off("touchmove"), this.el.off("touchend"), b.prototype.dispose.apply(this, arguments)
                    }
                });
            return c
        }), define("app/ui/widgets/PullToRefreshWidget", ["require", "jquery", "app/ui/widgets/TouchTrackerWidget", "app/models/StateModel", "mout/object/merge", "lavaca/net/Connectivity", "lavaca/fx/Transition"], function(a) {
            var b = a("jquery"),
                c = a("app/ui/widgets/TouchTrackerWidget"),
                d = a("app/models/StateModel"),
                e = a("mout/object/merge"),
                f = a("lavaca/net/Connectivity");
            a("lavaca/fx/Transition");
            var g = c.extend(function(a, b) {
                c.apply(this, arguments), this.init(b), d.on("resetOffline", this.resetOffline.bind(this))
            }, {
                axisTracking: "y",
                completionSpeed: .1,
                startDirection: 1,
                startPosition: 0,
                moveDistance: 100,
                throwThreshold: 20,
                movementThreshold: 6,
                restrictDragArea: !1,
                dragAreaLimit: 320,
                enabled: !0,
                ignoreTouch: !1,
                init: function(a) {
                    switch (this.screenWidth = b(window).width(), this.screenHeight = b(window).height(), a) {
                        default: a = {
                            axisTracking: "y",
                            startDirection: 1,
                            moveDistance: this.screenHeight - this.restrictDragArea,
                            dragAreaLimit: this.screenHeight
                        }
                    }
                    a && e(this, a), this.moveThreshold = 80, this.limitDirection = this.startDirection, this.limitMovementStart = this.startPosition, this.limitMovementEnd = this.moveDistance * this.startDirection
                },
                onTouchStart: function() {
                    !this.enabled || this.ignoreTouch || 0 !== b(".inView").scrollTop() || b(".inView .overflow-scroll").length && 0 !== b(".inView .overflow-scroll").scrollTop() || b(".family-dashboard").length < 1 && b(".selected-tab.sleep-view").length < 1 || (c.prototype.onTouchStart.apply(this, arguments), this.touchTracker.isActive = !1, this.touchTracker.hasDirection = !1, this.update(null, 0))
                },
                onTouchMove: function() {
                    !this.enabled || this.ignoreTouch || 0 !== b(".inView").scrollTop() || b(".inView .overflow-scroll").length && 0 !== b(".inView .overflow-scroll").scrollTop() || b(".family-dashboard").length < 1 && b(".selected-tab.sleep-view").length < 1 || (c.prototype.onTouchMove.apply(this, arguments), this.touchTracker.hasDirection || ("y" === this.axisTracking && Math.abs(this.touchTracker.currentDeltaY) > Math.abs(this.touchTracker.currentDeltaX) && (this.touchTracker.isActive = !0), this.touchTracker.direction = Math.abs(this.touchTracker.currentDeltaY) <= this.movementThreshold ? "x" : "y", this.touchTracker.hasDirection = !0), "y" === this.axisTracking && (this.touchTracker.moveTo = this.touchTracker.deltaY + this.limitMovementStart), this.touchTracker.moveTo <= this.limitMovementStart && (this.touchTracker.isActive = !1), this.touchTracker.isActive && (1 === this.limitDirection && this.touchTracker.moveTo > this.limitMovementStart || -1 === this.limitDirection && this.touchTracker.moveTo < this.limitMovementStart) && this.update(this.touchTracker.moveTo))
                },
                onTouchEnd: function() {
                    if (!this.enabled || this.ignoreTouch) return this.ignoreTouch = !1, void 0;
                    if (!(b(".family-dashboard").length < 1 && b(".selected-tab.sleep-view").length < 1)) {
                        c.prototype.onTouchEnd.apply(this, arguments);
                        var a = !1;
                        a = "y" === this.axisTracking ? Math.abs(this.touchTracker.deltaY) > this.moveThreshold && this.touchTracker.deltaY * this.limitDirection > 0 || Math.abs(this.touchTracker.currentDeltaY) > this.throwThreshold && this.touchTracker.deltaY * this.limitDirection > 0 : Math.abs(this.touchTracker.deltaX) > this.moveThreshold && this.touchTracker.deltaX * this.limitDirection > 0 || Math.abs(this.touchTracker.currentDeltaX) > this.throwThreshold && this.touchTracker.deltaX * this.limitDirection > 0, this.update(null, this.completionSpeed), f.isOffline() && this.touchTracker.isActive && a ? (b(".ptr-wrap").removeClass("pulling"), this.update(this.limitMovementStart), d.trigger("ptrReload")) : this.touchTracker.isActive && a ? (this.update(75), b(".ptr-wrap").removeClass("pulling").addClass("loading"), this.el.addClass("block-touches"), d.trigger("ptrReload")) : this.touchTracker.isActive ? (b(".ptr-wrap").removeClass("pulling"), this.update(this.limitMovementStart)) : b(".ptr-wrap").removeClass("pulling"), this.touchTracker.isActive = !1, this.touchTracker.hasDirection = !1
                    }
                },
                resetOffline: function() {
                    b(".ptr-wrap").removeClass("pulling loading"), this.el.removeClass("block-touches"), this.update(this.limitMovementStart)
                },
                originalDirection: function() {
                    this.limitMovementStart = this.startPosition, this.limitMovementEnd = this.moveDistance * this.startDirection, this.limitDirection = this.startDirection, this.el.removeClass("open"), this.isOpen = !1
                },
                reverseDirection: function() {
                    this.limitMovementStart = this.moveDistance * this.startDirection, this.limitMovementEnd = this.startPosition, this.limitDirection = 1 === this.startDirection ? -1 : 1, this.el.addClass("open"), this.isOpen = !0
                },
                update: function(a, b) {
                    function c(a) {
                        return !isNaN(parseFloat(a)) && isFinite(a)
                    }
                    c(a) && this.updateCss(a), c(b) && this.updateTransitionSpeed(b)
                },
                updateCss: function(a) {
                    var c = "x" === this.axisTracking ? a + "px,0,0" : "0," + a + "px,0";
                    if (80 > a && a > 1) {
                        var d = Math.round(5 * (a % 80 + 1) / 100),
                            e = a / 80;
                        b(".ptr-wrap").addClass("pulling"), b(".pulling .loader-dots .dot").css("-webkit-transform", "scale(" + e + ")"), b(".pulling .loader-mask").css("background-color", "rgba(0,0,0,0." + d + ")")
                    }
                    a < .2 * b(window).height() && b(".wrap").css("-webkit-transform", "translate3d(" + c + ")")
                },
                updateTransitionSpeed: function(a) {
                    b(".wrap").css("-webkit-transition", "all " + a + "s ease-out")
                },
                enable: function() {
                    this.enabled = !0
                },
                disable: function() {
                    this.enabled = !1
                }
            });
            return g
        }), define("app/utils/PTRWidgetManager", ["require", "lavaca/util/Disposable", "app/models/StateModel", "app/ui/widgets/PullToRefreshWidget"], function(a) {
            function b() {
                new d("#view-root")
            }
            var c = a("lavaca/util/Disposable"),
                d = (a("app/models/StateModel"), a("app/ui/widgets/PullToRefreshWidget")),
                e = c.extend(function() {
                    c.call(this, arguments), b.call(this)
                }, {});
            return e
        }),
        function(a, b) {
            function c() {
                if (!d.READY) {
                    d.event.determineEventTypes();
                    for (var a in d.gestures) d.gestures.hasOwnProperty(a) && d.detection.register(d.gestures[a]);
                    d.event.onTouch(d.DOCUMENT, d.EVENT_MOVE, d.detection.detect), d.event.onTouch(d.DOCUMENT, d.EVENT_END, d.detection.detect), d.READY = !0
                }
            }
            var d = function(a, b) {
                return new d.Instance(a, b || {})
            };
            d.defaults = {
                stop_browser_behavior: {
                    userSelect: "none",
                    touchAction: "none",
                    touchCallout: "none",
                    contentZooming: "none",
                    userDrag: "none",
                    tapHighlightColor: "rgba(0,0,0,0)"
                }
            }, d.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled, d.HAS_TOUCHEVENTS = "ontouchstart" in a, d.MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i, d.NO_MOUSEEVENTS = d.HAS_TOUCHEVENTS && navigator.userAgent.match(d.MOBILE_REGEX), d.EVENT_TYPES = {}, d.DIRECTION_DOWN = "down", d.DIRECTION_LEFT = "left", d.DIRECTION_UP = "up", d.DIRECTION_RIGHT = "right", d.POINTER_MOUSE = "mouse", d.POINTER_TOUCH = "touch", d.POINTER_PEN = "pen", d.EVENT_START = "start", d.EVENT_MOVE = "move", d.EVENT_END = "end", d.DOCUMENT = document, d.plugins = {}, d.READY = !1, d.Instance = function(a, b) {
                var e = this;
                return c(), this.element = a, this.enabled = !0, this.options = d.utils.extend(d.utils.extend({}, d.defaults), b || {}), this.options.stop_browser_behavior && d.utils.stopDefaultBrowserBehavior(this.element, this.options.stop_browser_behavior), d.event.onTouch(a, d.EVENT_START, function(a) {
                    e.enabled && d.detection.startDetect(e, a)
                }), this
            }, d.Instance.prototype = {
                on: function(a, b) {
                    for (var c = a.split(" "), d = 0; d < c.length; d++) this.element.addEventListener(c[d], b, !1);
                    return this
                },
                off: function(a, b) {
                    for (var c = a.split(" "), d = 0; d < c.length; d++) this.element.removeEventListener(c[d], b, !1);
                    return this
                },
                trigger: function(a, b) {
                    var c = d.DOCUMENT.createEvent("Event");
                    c.initEvent(a, !0, !0), c.gesture = b;
                    var e = this.element;
                    return d.utils.hasParent(b.target, e) && (e = b.target), e.dispatchEvent(c), this
                },
                enable: function(a) {
                    return this.enabled = a, this
                }
            };
            var e = null,
                f = !1,
                g = !1;
            d.event = {
                bindDom: function(a, b, c) {
                    for (var d = b.split(" "), e = 0; e < d.length; e++) a.addEventListener(d[e], c, !1)
                },
                onTouch: function(a, b, c) {
                    var h = this;
                    this.bindDom(a, d.EVENT_TYPES[b], function(i) {
                        var j = i.type.toLowerCase();
                        if (!j.match(/mouse/) || !g) {
                            (j.match(/touch/) || j.match(/pointerdown/) || j.match(/mouse/) && 1 === i.which) && (f = !0), j.match(/touch|pointer/) && (g = !0);
                            var k = 0;
                            f && (d.HAS_POINTEREVENTS && b != d.EVENT_END ? k = d.PointerEvent.updatePointer(b, i) : j.match(/touch/) ? k = i.touches.length : g || (k = j.match(/up/) ? 0 : 1), k > 0 && b == d.EVENT_END ? b = d.EVENT_MOVE : k || (b = d.EVENT_END), k || null === e ? e = i : i = e, c.call(d.detection, h.collectEventData(a, b, i)), d.HAS_POINTEREVENTS && b == d.EVENT_END && (k = d.PointerEvent.updatePointer(b, i))), k || (e = null, f = !1, g = !1, d.PointerEvent.reset())
                        }
                    })
                },
                determineEventTypes: function() {
                    var a;
                    a = d.HAS_POINTEREVENTS ? d.PointerEvent.getEvents() : d.NO_MOUSEEVENTS ? ["touchstart", "touchmove", "touchend touchcancel"] : ["touchstart mousedown", "touchmove mousemove", "touchend touchcancel mouseup"], d.EVENT_TYPES[d.EVENT_START] = a[0], d.EVENT_TYPES[d.EVENT_MOVE] = a[1], d.EVENT_TYPES[d.EVENT_END] = a[2]
                },
                getTouchList: function(a) {
                    return d.HAS_POINTEREVENTS ? d.PointerEvent.getTouchList() : a.touches ? a.touches : [{
                        identifier: 1,
                        pageX: a.pageX,
                        pageY: a.pageY,
                        target: a.target
                    }]
                },
                collectEventData: function(a, b, c) {
                    var e = this.getTouchList(c, b),
                        f = d.POINTER_TOUCH;
                    return (c.type.match(/mouse/) || d.PointerEvent.matchType(d.POINTER_MOUSE, c)) && (f = d.POINTER_MOUSE), {
                        center: d.utils.getCenter(e),
                        timeStamp: (new Date).getTime(),
                        target: c.target,
                        touches: e,
                        eventType: b,
                        pointerType: f,
                        srcEvent: c,
                        preventDefault: function() {
                            this.srcEvent.preventManipulation && this.srcEvent.preventManipulation(), this.srcEvent.preventDefault && this.srcEvent.preventDefault()
                        },
                        stopPropagation: function() {
                            this.srcEvent.stopPropagation()
                        },
                        stopDetect: function() {
                            return d.detection.stopDetect()
                        }
                    }
                }
            }, d.PointerEvent = {
                pointers: {},
                getTouchList: function() {
                    var a = this,
                        b = [];
                    return Object.keys(a.pointers).sort().forEach(function(c) {
                        b.push(a.pointers[c])
                    }), b
                },
                updatePointer: function(a, b) {
                    return a == d.EVENT_END ? this.pointers = {} : (b.identifier = b.pointerId, this.pointers[b.pointerId] = b), Object.keys(this.pointers).length
                },
                matchType: function(a, b) {
                    if (!b.pointerType) return !1;
                    var c = {};
                    return c[d.POINTER_MOUSE] = b.pointerType == b.MSPOINTER_TYPE_MOUSE || b.pointerType == d.POINTER_MOUSE, c[d.POINTER_TOUCH] = b.pointerType == b.MSPOINTER_TYPE_TOUCH || b.pointerType == d.POINTER_TOUCH, c[d.POINTER_PEN] = b.pointerType == b.MSPOINTER_TYPE_PEN || b.pointerType == d.POINTER_PEN, c[a]
                },
                getEvents: function() {
                    return ["pointerdown MSPointerDown", "pointermove MSPointerMove", "pointerup pointercancel MSPointerUp MSPointerCancel"]
                },
                reset: function() {
                    this.pointers = {}
                }
            }, d.utils = {
                extend: function(a, c, d) {
                    for (var e in c) a[e] !== b && d || (a[e] = c[e]);
                    return a
                },
                hasParent: function(a, b) {
                    for (; a;) {
                        if (a == b) return !0;
                        a = a.parentNode
                    }
                    return !1
                },
                getCenter: function(a) {
                    for (var b = [], c = [], d = 0, e = a.length; e > d; d++) b.push(a[d].pageX), c.push(a[d].pageY);
                    return {
                        pageX: (Math.min.apply(Math, b) + Math.max.apply(Math, b)) / 2,
                        pageY: (Math.min.apply(Math, c) + Math.max.apply(Math, c)) / 2
                    }
                },
                getVelocity: function(a, b, c) {
                    return {
                        x: Math.abs(b / a) || 0,
                        y: Math.abs(c / a) || 0
                    }
                },
                getAngle: function(a, b) {
                    var c = b.pageY - a.pageY,
                        d = b.pageX - a.pageX;
                    return 180 * Math.atan2(c, d) / Math.PI
                },
                getDirection: function(a, b) {
                    var c = Math.abs(a.pageX - b.pageX),
                        e = Math.abs(a.pageY - b.pageY);
                    return c >= e ? a.pageX - b.pageX > 0 ? d.DIRECTION_LEFT : d.DIRECTION_RIGHT : a.pageY - b.pageY > 0 ? d.DIRECTION_UP : d.DIRECTION_DOWN
                },
                getDistance: function(a, b) {
                    var c = b.pageX - a.pageX,
                        d = b.pageY - a.pageY;
                    return Math.sqrt(c * c + d * d)
                },
                getScale: function(a, b) {
                    return a.length >= 2 && b.length >= 2 ? this.getDistance(b[0], b[1]) / this.getDistance(a[0], a[1]) : 1
                },
                getRotation: function(a, b) {
                    return a.length >= 2 && b.length >= 2 ? this.getAngle(b[1], b[0]) - this.getAngle(a[1], a[0]) : 0
                },
                isVertical: function(a) {
                    return a == d.DIRECTION_UP || a == d.DIRECTION_DOWN
                },
                stopDefaultBrowserBehavior: function(a, b) {
                    var c, d = ["webkit", "khtml", "moz", "ms", "o", ""];
                    if (b && a.style) {
                        for (var e = 0; e < d.length; e++)
                            for (var f in b) b.hasOwnProperty(f) && (c = f, d[e] && (c = d[e] + c.substring(0, 1).toUpperCase() + c.substring(1)), a.style[c] = b[f]);
                        "none" == b.userSelect && (a.onselectstart = function() {
                            return !1
                        })
                    }
                }
            }, d.detection = {
                gestures: [],
                current: null,
                previous: null,
                stopped: !1,
                startDetect: function(a, b) {
                    this.current || (this.stopped = !1, this.current = {
                        inst: a,
                        startEvent: d.utils.extend({}, b),
                        lastEvent: !1,
                        name: ""
                    }, this.detect(b))
                },
                detect: function(a) {
                    if (this.current && !this.stopped) {
                        a = this.extendEventData(a);
                        for (var b = this.current.inst.options, c = 0, e = this.gestures.length; e > c; c++) {
                            var f = this.gestures[c];
                            if (!this.stopped && b[f.name] !== !1 && f.handler.call(f, a, this.current.inst) === !1) {
                                this.stopDetect();
                                break
                            }
                        }
                        return this.current && (this.current.lastEvent = a), a.eventType == d.EVENT_END && !a.touches.length - 1 && this.stopDetect(), a
                    }
                },
                stopDetect: function() {
                    this.previous = d.utils.extend({}, this.current), this.current = null, this.stopped = !0
                },
                extendEventData: function(a) {
                    var b = this.current.startEvent;
                    if (b && (a.touches.length != b.touches.length || a.touches === b.touches)) {
                        b.touches = [];
                        for (var c = 0, e = a.touches.length; e > c; c++) b.touches.push(d.utils.extend({}, a.touches[c]))
                    }
                    var f = a.timeStamp - b.timeStamp,
                        g = a.center.pageX - b.center.pageX,
                        h = a.center.pageY - b.center.pageY,
                        i = d.utils.getVelocity(f, g, h);
                    return d.utils.extend(a, {
                        deltaTime: f,
                        deltaX: g,
                        deltaY: h,
                        velocityX: i.x,
                        velocityY: i.y,
                        distance: d.utils.getDistance(b.center, a.center),
                        angle: d.utils.getAngle(b.center, a.center),
                        direction: d.utils.getDirection(b.center, a.center),
                        scale: d.utils.getScale(b.touches, a.touches),
                        rotation: d.utils.getRotation(b.touches, a.touches),
                        startEvent: b
                    }), a
                },
                register: function(a) {
                    var c = a.defaults || {};
                    return c[a.name] === b && (c[a.name] = !0), d.utils.extend(d.defaults, c, !0), a.index = a.index || 1e3, this.gestures.push(a), this.gestures.sort(function(a, b) {
                        return a.index < b.index ? -1 : a.index > b.index ? 1 : 0
                    }), this.gestures
                }
            }, d.gestures = d.gestures || {}, d.gestures.Hold = {
                name: "hold",
                index: 10,
                defaults: {
                    hold_timeout: 500,
                    hold_threshold: 1
                },
                timer: null,
                handler: function(a, b) {
                    switch (a.eventType) {
                        case d.EVENT_START:
                            clearTimeout(this.timer), d.detection.current.name = this.name, this.timer = setTimeout(function() {
                                "hold" == d.detection.current.name && b.trigger("hold", a)
                            }, b.options.hold_timeout);
                            break;
                        case d.EVENT_MOVE:
                            a.distance > b.options.hold_threshold && clearTimeout(this.timer);
                            break;
                        case d.EVENT_END:
                            clearTimeout(this.timer)
                    }
                }
            }, d.gestures.Tap = {
                name: "tap",
                index: 100,
                defaults: {
                    tap_max_touchtime: 250,
                    tap_max_distance: 10,
                    tap_always: !0,
                    doubletap_distance: 20,
                    doubletap_interval: 300
                },
                handler: function(a, b) {
                    if (a.eventType == d.EVENT_END) {
                        var c = d.detection.previous,
                            e = !1;
                        if (a.deltaTime > b.options.tap_max_touchtime || a.distance > b.options.tap_max_distance) return;
                        c && "tap" == c.name && a.timeStamp - c.lastEvent.timeStamp < b.options.doubletap_interval && a.distance < b.options.doubletap_distance && (b.trigger("doubletap", a), e = !0), (!e || b.options.tap_always) && (d.detection.current.name = "tap", b.trigger(d.detection.current.name, a))
                    }
                }
            }, d.gestures.Swipe = {
                name: "swipe",
                index: 40,
                defaults: {
                    swipe_max_touches: 1,
                    swipe_velocity: .7
                },
                handler: function(a, b) {
                    if (a.eventType == d.EVENT_END) {
                        if (b.options.swipe_max_touches > 0 && a.touches.length > b.options.swipe_max_touches) return;
                        (a.velocityX > b.options.swipe_velocity || a.velocityY > b.options.swipe_velocity) && (b.trigger(this.name, a), b.trigger(this.name + a.direction, a))
                    }
                }
            }, d.gestures.Drag = {
                name: "drag",
                index: 50,
                defaults: {
                    drag_min_distance: 10,
                    drag_max_touches: 1,
                    drag_block_horizontal: !1,
                    drag_block_vertical: !1,
                    drag_lock_to_axis: !1,
                    drag_lock_min_distance: 25
                },
                triggered: !1,
                handler: function(a, b) {
                    if (d.detection.current.name != this.name && this.triggered) return b.trigger(this.name + "end", a), this.triggered = !1, void 0;
                    if (!(b.options.drag_max_touches > 0 && a.touches.length > b.options.drag_max_touches)) switch (a.eventType) {
                        case d.EVENT_START:
                            this.triggered = !1;
                            break;
                        case d.EVENT_MOVE:
                            if (a.distance < b.options.drag_min_distance && d.detection.current.name != this.name) return;
                            d.detection.current.name = this.name, (d.detection.current.lastEvent.drag_locked_to_axis || b.options.drag_lock_to_axis && b.options.drag_lock_min_distance <= a.distance) && (a.drag_locked_to_axis = !0);
                            var c = d.detection.current.lastEvent.direction;
                            a.drag_locked_to_axis && c !== a.direction && (a.direction = d.utils.isVertical(c) ? a.deltaY < 0 ? d.DIRECTION_UP : d.DIRECTION_DOWN : a.deltaX < 0 ? d.DIRECTION_LEFT : d.DIRECTION_RIGHT), this.triggered || (b.trigger(this.name + "start", a), this.triggered = !0), b.trigger(this.name, a), b.trigger(this.name + a.direction, a), (b.options.drag_block_vertical && d.utils.isVertical(a.direction) || b.options.drag_block_horizontal && !d.utils.isVertical(a.direction)) && a.preventDefault();
                            break;
                        case d.EVENT_END:
                            this.triggered && b.trigger(this.name + "end", a), this.triggered = !1
                    }
                }
            }, d.gestures.Transform = {
                name: "transform",
                index: 45,
                defaults: {
                    transform_min_scale: .01,
                    transform_min_rotation: 1,
                    transform_always_block: !1
                },
                triggered: !1,
                handler: function(a, b) {
                    if (d.detection.current.name != this.name && this.triggered) return b.trigger(this.name + "end", a), this.triggered = !1, void 0;
                    if (!(a.touches.length < 2)) switch (b.options.transform_always_block && a.preventDefault(), a.eventType) {
                        case d.EVENT_START:
                            this.triggered = !1;
                            break;
                        case d.EVENT_MOVE:
                            var c = Math.abs(1 - a.scale),
                                e = Math.abs(a.rotation);
                            if (c < b.options.transform_min_scale && e < b.options.transform_min_rotation) return;
                            d.detection.current.name = this.name, this.triggered || (b.trigger(this.name + "start", a), this.triggered = !0), b.trigger(this.name, a), e > b.options.transform_min_rotation && b.trigger("rotate", a), c > b.options.transform_min_scale && (b.trigger("pinch", a), b.trigger("pinch" + (a.scale < 1 ? "in" : "out"), a));
                            break;
                        case d.EVENT_END:
                            this.triggered && b.trigger(this.name + "end", a), this.triggered = !1
                    }
                }
            }, d.gestures.Touch = {
                name: "touch",
                index: -1 / 0,
                defaults: {
                    prevent_default: !1,
                    prevent_mouseevents: !1
                },
                handler: function(a, b) {
                    return b.options.prevent_mouseevents && a.pointerType == d.POINTER_MOUSE ? (a.stopDetect(), void 0) : (b.options.prevent_default && a.preventDefault(), a.eventType == d.EVENT_START && b.trigger(this.name, a), void 0)
                }
            }, d.gestures.Release = {
                name: "release",
                index: 1 / 0,
                handler: function(a, b) {
                    a.eventType == d.EVENT_END && b.trigger(this.name, a)
                }
            }, "object" == typeof module && "object" == typeof module.exports ? module.exports = d : (a.Hammer = d, "function" == typeof a.define && a.define.amd && a.define("hammer", [], function() {
                return d
            }))
        }(this),
        function(a, b) {
            a !== b && (Hammer.event.bindDom = function(c, d, e) {
                a(c).on(d, function(a) {
                    var c = a.originalEvent || a;
                    c.pageX === b && (c.pageX = a.pageX, c.pageY = a.pageY), c.target || (c.target = a.target), c.which === b && (c.which = c.button), c.preventDefault || (c.preventDefault = a.preventDefault), c.stopPropagation || (c.stopPropagation = a.stopPropagation), e.call(this, c)
                })
            }, Hammer.Instance.prototype.on = function(b, c) {
                return a(this.element).on(b, c)
            }, Hammer.Instance.prototype.off = function(b, c) {
                return a(this.element).off(b, c)
            }, Hammer.Instance.prototype.trigger = function(b, c) {
                var d = a(this.element);
                return d.has(c.target).length && (d = a(c.target)), d.trigger({
                    type: b,
                    gesture: c
                })
            }, a.fn.hammer = function(b) {
                return this.each(function() {
                    var c = a(this),
                        d = c.data("hammer");
                    d ? d && b && Hammer.utils.extend(d.options, b) : c.data("hammer", new Hammer(this, b || {}))
                })
            })
        }(window.jQuery || window.Zepto), define("hammer", ["$"], function(a) {
            return function() {
                var b;
                return b || a.Hammer
            }
        }(this)), define("app/utils/hammer_extensions", ["require", "hammer", "$"], function(a) {
            function b(a, b) {
                var c = g(a.target);
                clearTimeout(b._highlightTimeout), e().tap_touch_delay ? b._highlightTimeout = setTimeout(function() {
                    c.trigger("tapAddHighlight")
                }, e().tap_touch_delay) : c.trigger("tapAddHighlight")
            }

            function c(a, b, d) {
                var f = g(a.target);
                clearTimeout(b._highlightTimeout), d && a.deltaTime < e().tap_min_highlight_duration + e().tap_touch_delay ? (f.trigger("tapAddHighlight"), b._highlightTimeout = setTimeout(function() {
                    c.call(this, a, b)
                }, e().tap_min_highlight_duration)) : f.trigger("tapRemoveHighlight")
            }

            function d(a, b) {
                var c = !1,
                    d = b.trigger;
                return b.trigger = function(a) {
                    "tap" === a && (c = !0), d.apply(this, arguments)
                }, h.call(this, a, b), b.trigger = d, c
            }

            function e() {
                return f.gestures.Tap.defaults
            }
            var f = a("hammer"),
                g = a("$"),
                h = f.gestures.Tap.handler;
            e().tap_max_touchtime = Number.INFINITY, e().tap_max_distance = 8, e().tap_touch_class = "touch", e().tap_touch_delay = 50, e().tap_min_highlight_duration = 100, f.gestures.Tap.handler = function(a, e) {
                var g, h = a.eventType,
                    i = f.detection.current;
                "start" === h ? b(a, i) : "move" === h && a.distance > e.options.tap_max_distance ? c(a, i) : ("end" === h || "cancel" === h) && (g = d.call(this, a, e), c(a, i, g))
            }, g.event.special.tap = {
                add: function(a) {
                    var b = g(this),
                        c = a.selector,
                        d = a.data;
                    d && d.showHighlight === !1 || (b.on("tapAddHighlight", c, function(a) {
                        g(this).addClass(e().tap_touch_class), a.stopPropagation()
                    }), b.on("tapRemoveHighlight", c, function(a) {
                        g(this).removeClass(e().tap_touch_class), a.stopPropagation()
                    }))
                }
            }, f.defaults.stop_browser_behavior.touchAction = "pan-y", f.defaults.stop_browser_behavior.userSelect = "auto"
        }),
        function(a, b) {
            function c() {
                if (this.hasDeviceMotion = "ondevicemotion" in a, this.threshold = 15, this.lastTime = new Date, this.lastX = null, this.lastY = null, this.lastZ = null, "function" == typeof b.CustomEvent) this.event = new b.CustomEvent("shake", {
                    bubbles: !0,
                    cancelable: !0
                });
                else {
                    if ("function" != typeof b.createEvent) return !1;
                    this.event = b.createEvent("Event"), this.event.initEvent("shake", !0, !0)
                }
            }
            c.prototype.reset = function() {
                this.lastTime = new Date, this.lastX = null, this.lastY = null, this.lastZ = null
            }, c.prototype.start = function() {
                this.reset(), this.hasDeviceMotion && a.addEventListener("devicemotion", this, !1)
            }, c.prototype.stop = function() {
                this.hasDeviceMotion && a.removeEventListener("devicemotion", this, !1), this.reset()
            }, c.prototype.devicemotion = function(b) {
                var c, d, e = b.accelerationIncludingGravity,
                    f = 0,
                    g = 0,
                    h = 0;
                return null === this.lastX && null === this.lastY && null === this.lastZ ? (this.lastX = e.x, this.lastY = e.y, this.lastZ = e.z, void 0) : (f = Math.abs(this.lastX - e.x), g = Math.abs(this.lastY - e.y), h = Math.abs(this.lastZ - e.z), (f > this.threshold && g > this.threshold || f > this.threshold && h > this.threshold || g > this.threshold && h > this.threshold) && (c = new Date, d = c.getTime() - this.lastTime.getTime(), d > 1e3 && (a.dispatchEvent(this.event), this.lastTime = new Date)), this.lastX = e.x, this.lastY = e.y, this.lastZ = e.z, void 0)
            }, c.prototype.handleEvent = function(a) {
                return "function" == typeof this[a.type] ? this[a.type](a) : void 0
            };
            var d = new c;
            d && d.start()
        }(window, document), define("app/utils/shake", function() {}),
        function() {
            function a(b, d) {
                function e(a, b) {
                    return function() {
                        return a.apply(b, arguments)
                    }
                }
                var f;
                if (d = d || {}, this.trackingClick = !1, this.trackingClickStart = 0, this.targetElement = null, this.touchStartX = 0, this.touchStartY = 0, this.lastTouchIdentifier = 0, this.touchBoundary = d.touchBoundary || 10, this.layer = b, this.tapDelay = d.tapDelay || 200, this.tapTimeout = d.tapTimeout || 700, !a.notNeeded(b)) {
                    for (var g = ["onMouse", "onClick", "onTouchStart", "onTouchMove", "onTouchEnd", "onTouchCancel"], h = this, i = 0, j = g.length; j > i; i++) h[g[i]] = e(h[g[i]], h);
                    c && (b.addEventListener("mouseover", this.onMouse, !0), b.addEventListener("mousedown", this.onMouse, !0), b.addEventListener("mouseup", this.onMouse, !0)), b.addEventListener("click", this.onClick, !0), b.addEventListener("touchstart", this.onTouchStart, !1), b.addEventListener("touchmove", this.onTouchMove, !1), b.addEventListener("touchend", this.onTouchEnd, !1), b.addEventListener("touchcancel", this.onTouchCancel, !1), Event.prototype.stopImmediatePropagation || (b.removeEventListener = function(a, c, d) {
                        var e = Node.prototype.removeEventListener;
                        "click" === a ? e.call(b, a, c.hijacked || c, d) : e.call(b, a, c, d)
                    }, b.addEventListener = function(a, c, d) {
                        var e = Node.prototype.addEventListener;
                        "click" === a ? e.call(b, a, c.hijacked || (c.hijacked = function(a) {
                            a.propagationStopped || c(a)
                        }), d) : e.call(b, a, c, d)
                    }), "function" == typeof b.onclick && (f = b.onclick, b.addEventListener("click", function(a) {
                        f(a)
                    }, !1), b.onclick = null)
                }
            }
            var b = navigator.userAgent.indexOf("Windows Phone") >= 0,
                c = navigator.userAgent.indexOf("Android") > 0 && !b,
                d = /iP(ad|hone|od)/.test(navigator.userAgent) && !b,
                e = d && /OS 4_\d(_\d)?/.test(navigator.userAgent),
                f = d && /OS [6-7]_\d/.test(navigator.userAgent),
                g = navigator.userAgent.indexOf("BB10") > 0;
            a.prototype.needsClick = function(a) {
                switch (a.nodeName.toLowerCase()) {
                    case "button":
                    case "select":
                    case "textarea":
                        if (a.disabled) return !0;
                        break;
                    case "input":
                        if (d && "file" === a.type || a.disabled) return !0;
                        break;
                    case "label":
                    case "iframe":
                    case "video":
                        return !0
                }
                return /\bneedsclick\b/.test(a.className)
            }, a.prototype.needsFocus = function(a) {
                switch (a.nodeName.toLowerCase()) {
                    case "textarea":
                        return !0;
                    case "select":
                        return !c;
                    case "input":
                        switch (a.type) {
                            case "button":
                            case "checkbox":
                            case "file":
                            case "image":
                            case "radio":
                            case "submit":
                                return !1
                        }
                        return !a.disabled && !a.readOnly;
                    default:
                        return /\bneedsfocus\b/.test(a.className)
                }
            }, a.prototype.sendClick = function(a, b) {
                var c, d;
                document.activeElement && document.activeElement !== a && document.activeElement.blur(), d = b.changedTouches[0], c = document.createEvent("MouseEvents"), c.initMouseEvent(this.determineEventType(a), !0, !0, window, 1, d.screenX, d.screenY, d.clientX, d.clientY, !1, !1, !1, !1, 0, null), c.forwardedTouchEvent = !0, a.dispatchEvent(c)
            }, a.prototype.determineEventType = function(a) {
                return c && "select" === a.tagName.toLowerCase() ? "mousedown" : "click"
            }, a.prototype.focus = function(a) {
                var b;
                d && a.setSelectionRange && 0 !== a.type.indexOf("date") && "time" !== a.type && "month" !== a.type ? (b = a.value.length, a.setSelectionRange(b, b)) : a.focus()
            }, a.prototype.updateScrollParent = function(a) {
                var b, c;
                if (b = a.fastClickScrollParent, !b || !b.contains(a)) {
                    c = a;
                    do {
                        if (c.scrollHeight > c.offsetHeight) {
                            b = c, a.fastClickScrollParent = c;
                            break
                        }
                        c = c.parentElement
                    } while (c)
                }
                b && (b.fastClickLastScrollTop = b.scrollTop)
            }, a.prototype.getTargetElementFromEventTarget = function(a) {
                return a.nodeType === Node.TEXT_NODE ? a.parentNode : a
            }, a.prototype.onTouchStart = function(a) {
                var b, c, f;
                if (a.targetTouches.length > 1) return !0;
                if (b = this.getTargetElementFromEventTarget(a.target), c = a.targetTouches[0], d) {
                    if (f = window.getSelection(), f.rangeCount && !f.isCollapsed) return !0;
                    if (!e) {
                        if (c.identifier && c.identifier === this.lastTouchIdentifier) return a.preventDefault(), !1;
                        this.lastTouchIdentifier = c.identifier, this.updateScrollParent(b)
                    }
                }
                return this.trackingClick = !0, this.trackingClickStart = a.timeStamp, this.targetElement = b, this.touchStartX = c.pageX, this.touchStartY = c.pageY, a.timeStamp - this.lastClickTime < this.tapDelay && a.preventDefault(), !0
            }, a.prototype.touchHasMoved = function(a) {
                var b = a.changedTouches[0],
                    c = this.touchBoundary;
                return Math.abs(b.pageX - this.touchStartX) > c || Math.abs(b.pageY - this.touchStartY) > c ? !0 : !1
            }, a.prototype.onTouchMove = function(a) {
                return this.trackingClick ? ((this.targetElement !== this.getTargetElementFromEventTarget(a.target) || this.touchHasMoved(a)) && (this.trackingClick = !1, this.targetElement = null), !0) : !0
            }, a.prototype.findControl = function(a) {
                return void 0 !== a.control ? a.control : a.htmlFor ? document.getElementById(a.htmlFor) : a.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea")
            }, a.prototype.onTouchEnd = function(a) {
                var b, g, h, i, j, k = this.targetElement;
                if (!this.trackingClick) return !0;
                if (a.timeStamp - this.lastClickTime < this.tapDelay) return this.cancelNextClick = !0, !0;
                if (a.timeStamp - this.trackingClickStart > this.tapTimeout) return !0;
                if (this.cancelNextClick = !1, this.lastClickTime = a.timeStamp, g = this.trackingClickStart, this.trackingClick = !1, this.trackingClickStart = 0, f && (j = a.changedTouches[0], k = document.elementFromPoint(j.pageX - window.pageXOffset, j.pageY - window.pageYOffset) || k, k.fastClickScrollParent = this.targetElement.fastClickScrollParent), h = k.tagName.toLowerCase(), "label" === h) {
                    if (b = this.findControl(k)) {
                        if (this.focus(k), c) return !1;
                        k = b
                    }
                } else if (this.needsFocus(k)) return a.timeStamp - g > 100 || d && window.top !== window && "input" === h ? (this.targetElement = null, !1) : (this.focus(k), this.sendClick(k, a), d && "select" === h || (this.targetElement = null, a.preventDefault()), !1);
                return d && !e && (i = k.fastClickScrollParent, i && i.fastClickLastScrollTop !== i.scrollTop) ? !0 : (this.needsClick(k) || (a.preventDefault(), this.sendClick(k, a)), !1)
            }, a.prototype.onTouchCancel = function() {
                this.trackingClick = !1, this.targetElement = null
            }, a.prototype.onMouse = function(a) {
                return this.targetElement ? a.forwardedTouchEvent ? !0 : a.cancelable ? !this.needsClick(this.targetElement) || this.cancelNextClick ? (a.stopImmediatePropagation ? a.stopImmediatePropagation() : a.propagationStopped = !0, a.stopPropagation(), a.preventDefault(), !1) : !0 : !0 : !0
            }, a.prototype.onClick = function(a) {
                var b;
                return this.trackingClick ? (this.targetElement = null, this.trackingClick = !1, !0) : "submit" === a.target.type && 0 === a.detail ? !0 : (b = this.onMouse(a), b || (this.targetElement = null), b)
            }, a.prototype.destroy = function() {
                var a = this.layer;
                c && (a.removeEventListener("mouseover", this.onMouse, !0), a.removeEventListener("mousedown", this.onMouse, !0), a.removeEventListener("mouseup", this.onMouse, !0)), a.removeEventListener("click", this.onClick, !0), a.removeEventListener("touchstart", this.onTouchStart, !1), a.removeEventListener("touchmove", this.onTouchMove, !1), a.removeEventListener("touchend", this.onTouchEnd, !1), a.removeEventListener("touchcancel", this.onTouchCancel, !1)
            }, a.notNeeded = function(a) {
                var b, d, e, f;
                if ("undefined" == typeof window.ontouchstart) return !0;
                if (d = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]) {
                    if (!c) return !0;
                    if (b = document.querySelector("meta[name=viewport]")) {
                        if (-1 !== b.content.indexOf("user-scalable=no")) return !0;
                        if (d > 31 && document.documentElement.scrollWidth <= window.outerWidth) return !0
                    }
                }
                if (g && (e = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/), e[1] >= 10 && e[2] >= 3 && (b = document.querySelector("meta[name=viewport]")))) {
                    if (-1 !== b.content.indexOf("user-scalable=no")) return !0;
                    if (document.documentElement.scrollWidth <= window.outerWidth) return !0
                }
                return "none" === a.style.msTouchAction || "manipulation" === a.style.touchAction ? !0 : (f = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1], f >= 27 && (b = document.querySelector("meta[name=viewport]"), b && (-1 !== b.content.indexOf("user-scalable=no") || document.documentElement.scrollWidth <= window.outerWidth)) ? !0 : "none" === a.style.touchAction || "manipulation" === a.style.touchAction ? !0 : !1)
            }, a.attach = function(b, c) {
                return new a(b, c)
            }, "function" == typeof define && "object" == typeof define.amd && define.amd ? define("fastclick", [], function() {
                return a
            }) : "undefined" != typeof module && module.exports ? (module.exports = a.attach, module.exports.FastClick = a) : window.FastClick = a
        }(), define("app/app", ["require", "lavaca/net/History", "app/models/StateModel", "app/net/HomeController", "app/net/MarketplaceController", "app/net/RemoteController", "app/net/RegistrationController", "app/net/BindingController", "app/net/SettingsController", "app/net/ModalController", "app/net/FindSleepnumberController", "app/ui/views/controlviews/ModalView", "app/ui/views/controlviews/UserSwitchView", "app/ui/views/controlviews/RemotePopoverView", "app/ui/views/controlviews/Alert", "app/ui/views/childviews/CoachmarkView", "lavaca/mvc/Application", "app/env/Config", "app/models/AuthModel", "app/service/crypto", "app/ui/widgets/ResponsiveMagic", "app/utils/LocalStorageManager", "app/utils/BackgroundManager", "app/utils/ConnectedDeviceStateChangeManager", "app/utils/DeepLinkManager", "app/utils/CustomAlertManager", "app/utils/NotificationManager", "app/utils/AuthCheckManager", "app/utils/BuildInfoManager", "app/utils/PTRWidgetManager", "app/utils/MixPanelManager", "app/models/AccountModel", "lavaca/fx/Transition", "hammer", "app/utils/hammer_extensions", "app/utils/shake", "app/env/ModernizrTests", "fastclick"], function(a) {
            var b = a("lavaca/net/History");
            a("app/models/StateModel");
            var c = a("app/net/HomeController"),
                d = a("app/net/MarketplaceController"),
                e = a("app/net/RemoteController"),
                f = a("app/net/RegistrationController"),
                g = a("app/net/BindingController"),
                h = a("app/net/SettingsController"),
                i = a("app/net/ModalController"),
                j = a("app/net/FindSleepnumberController"),
                k = a("app/ui/views/controlviews/ModalView"),
                l = a("app/ui/views/controlviews/UserSwitchView"),
                m = a("app/ui/views/controlviews/RemotePopoverView"),
                n = a("app/ui/views/controlviews/Alert"),
                o = a("app/ui/views/childviews/CoachmarkView"),
                p = a("lavaca/mvc/Application"),
                q = a("app/env/Config");
            a("app/models/AuthModel"), a("app/service/crypto");
            var r = a("app/ui/widgets/ResponsiveMagic");
            a("app/utils/LocalStorageManager");
            var s = a("app/utils/BackgroundManager"),
                t = a("app/utils/ConnectedDeviceStateChangeManager"),
                u = a("app/utils/DeepLinkManager"),
                v = a("app/utils/CustomAlertManager"),
                w = a("app/utils/NotificationManager"),
                x = a("app/utils/AuthCheckManager"),
                y = a("app/utils/BuildInfoManager"),
                z = a("app/utils/PTRWidgetManager"),
                A = a("app/utils/MixPanelManager"),
                B = a("app/models/AccountModel");
            a("lavaca/fx/Transition"), a("hammer"), a("app/utils/hammer_extensions"), a("app/utils/shake"), a("app/env/ModernizrTests");
            var C = a("fastclick");
            C.attach(document.body), b.overrideStandardsMode();
            var D = new p(function() {
                r("html"), this.router.add({
                    "/": [c, "index", {
                        ignoreAuth: !0
                    }],
                    "/forgot-password": [c, "forgotPassword", {
                        ignoreAuth: !0
                    }],
                    "/dashboard": [c, "dashboard"],
                    "/user": [c, "user"],
                    "/marketplace": [d, "marketplace"],
                    "/manage/{provider}": [d, "manage"],
                    "/user/{id}": [c, "user"],
                    "/user/{id}/settings": [c, "userSettings"],
                    "/user/{id}/settings/notifications": [i, "userNotifications"],
                    "/user/{id}/settings/create-account-credentials": [i, "userCreateCredentials"],
                    "/user/{id}/settings/change-password": [i, "userChangePassword"],
                    "/user/{id}/settings/notifications-set-time": [i, "userNotificationsTime"],
                    "/user/{id}/{view}": [c, "user"],
                    "/redirected": [c, "index", {
                        ignoreAuth: !0
                    }],
                    "/registration/order": [f, "order", {
                        ignoreAuth: !0
                    }],
                    "/registration/{orderId}/{email}/{token}": [f, "index", {
                        ignoreAuth: !0
                    }],
                    "/registration/complete": [f, "complete", {
                        ignoreAuth: !0
                    }],
                    "/registration/bedId={bedId}": [f, "index"],
                    "/registration": [f, "index"],
                    "/registration/{orderId}/{email}/{token}/{section}": [f, "index", {
                        ignoreAuth: !0
                    }],
                    "/redirectedregistration/{orderId}/{email}": [f, "index", {
                        ignoreAuth: !0
                    }],
                    "/continueregistration": [f, "continue", {
                        ignoreAuth: !0
                    }],
                    "/remote/{bedId}": [e, "index", {
                        ignoreAuth: !0
                    }],
                    "/remote-stand-alone": [e, "standAlone", {
                        ignoreAuth: !0
                    }],
                    "/ble-test": [e, "test", {
                        ignoreAuth: !0
                    }],
                    "/modals/accept-terms": [i, "registrationTerms", {
                        ignoreAuth: !0
                    }],
                    "/modals/wifi-setup": [i, "registrationWifi", {
                        ignoreAuth: !0
                    }],
                    "/modals/debug": [i, "debug", {
                        ignoreAuth: !0
                    }],
                    "/modals/activities": [i, "activities"],
                    "/modals/edit-sleep": [i, "editSleep", {
                        ignoreAuth: !0
                    }],
                    "/scan": [g, "onlyScanForBed", {
                        ignoreAuth: !0
                    }],
                    "/goals/detail": [i, "goalsDetail"],
                    "/goals/setprimary": [i, "setPrimaryGoal"],
                    "/goals/addgoal": [i, "addGoal"],
                    "/goals/addgoaltime": [i, "addGoalSetTime"],
                    "/settings/add-sleeper": [h, "addSleeper"],
                    "/settings/add-bed": [h, "addBed"],
                    "/support": [h, "support"],
                    "/bedsettings/{bedId}": [c, "bedSettings"],
                    "/binding/welcome": [g, "welcome"],
                    "/binding/checkhoses": [g, "checkHoses"],
                    "/binding/scanqrforbed": [g, "scanQRForBed"],
                    "/binding/scanforbed": [g, "scanForBed", {
                        ignoreAuth: !0
                    }],
                    "/binding/verifyselectedbed": [g, "verifySelectedBed"],
                    "/binding/verifybedmacaddress": [g, "verifyBedMacAddress"],
                    "/binding/manualbedmacaddress": [g, "manualBedMacAddress"],
                    "/binding/bedisengaging": [g, "bedIsEngaging"],
                    "/binding/completebedassembly": [g, "completeBedAssembly"],
                    "/binding/verifysleepiq": [g, "verifySleepIQ"],
                    "/binding/scanforwifi": [g, "scanForWifi"],
                    "/binding/baseline": [g, "baseline"],
                    "/binding/headtiltisengaging": [g, "headTiltIsEngaging"],
                    "/binding/verifyconnectedoutlet": [g, "verifyConnectedOutlet"],
                    "/binding/scanqrforoutlet": [g, "scanQRForOutlet"],
                    "/binding/startoutletbinding": [g, "startOutletBinding"],
                    "/binding/scanforoutlet": [g, "scanForOutlet"],
                    "/binding/manualoutletmacaddress": [g, "manualOutletMacAddress"],
                    "/binding/verifyselectedoutlet": [g, "verifySelectedOutlet"],
                    "/binding/connectbedtooutlet": [g, "connectBedToOutlet"],
                    "/binding/nameoutlet": [g, "nameOutlet"],
                    "/binding/replacepumpsleepiqcheck": [g, "replacePumpSleepiqCheck"],
                    "/binding/replacepumpsleepiqswap": [g, "replacePumpSleepiqSwap"],
                    "/binding/replacepumpsleepiqconnectnew": [g, "replacePumpSleepiqConnectNew"],
                    "/binding/complete": [g, "complete"],
                    "/binding/exit": [g, "exit", {
                        ignoreAuth: !0
                    }],
                    "/binding/softexit": [g, "softExit", {
                        ignoreAuth: !0
                    }],
                    "/binding/testheadtilt": [g, "testHeadtilt"],
                    "/binding/testoutlet": [g, "testOutlet"],
                    "/binding/onlybaseline": [g, "onlyBaseline"],
                    "/binding/onlywifi": [g, "onlyWifi"],
                    "/binding/replaceoutlet": [g, "replaceOutlet"],
                    "/binding/replacepumphardware": [g, "replacePumpHardware"],
                    "/binding/wifidesktop": [g, "wifiDesktop"],
                    "/findsleepnumber/step-one": [j, "stepOne", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/step-two": [j, "stepTwo", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/step-three": [j, "stepThree", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/step-four": [j, "stepFour", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/step-five": [j, "stepFive", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/step-six": [j, "stepSix", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/step-seven": [j, "stepSeven", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/step-eight": [j, "stepEight", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/toofirm": [j, "tooFirm", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/toosoft": [j, "tooSoft", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/foundfavorite": [j, "foundFavorite", {
                        ignoreAuth: !0
                    }],
                    "/findsleepnumber/contact": [j, "contact", {
                        ignoreAuth: !0
                    }]
                }), q.debugging && (window.addEventListener("shake", function() {
                    this.router.exec("/modals/debug")
                }.bind(this), !1), $(".debug-toggle").on("click", function() {
                    this.router.exec("/modals/debug")
                }.bind(this))), !Modernizr.tablet && Modernizr.android ? window.plugins && window.plugins.orientationLock && window.plugins.orientationLock.lock(function() {
                    console.error("Orientation locked."), $("body").css("min-height", $(window).height() + "px")
                }, function() {
                    console.error("Unable to Lock orientation.")
                }) : Modernizr.android && window.plugins && window.plugins.orientationLock && window.plugins.orientationLock.unlock(function() {
                    console.error("Orientation unlocked.")
                }, function() {
                    console.error("Unable to unlock orientation.")
                })
            });
            x(), k.render(), l.render(), m.render(), n.render(), o.render(), y(), v(), u(), s(), w(), t(), z();
            var E = B && B.get("overrideMixPanelApiKey") && "" !== B.get("overrideMixPanelApiKey") ? B.get("overrideMixPanelApiKey") : q.mixpanel_key;
            return E && (A(), window.cordova ? document.addEventListener("deviceready", function() {
                A.prototype.setKey(E)
            }.bind(this), !1) : A.prototype.setKey(E)), D
        }), String.prototype.replaceAll = function(a, b, c) {
            return this.replace(new RegExp(a.replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|\<\>\-\&])/g, "\\$&"), c ? "gi" : "g"), "string" == typeof b ? b.replace(/\$/g, "$$$$") : b)
        }, require.config({
            baseUrl: "js",
            paths: {
                "es5-shim": "../components/es5-shim/es5-shim",
                "es6-shim": "../components/es6-shim/es6-shim",
                $: "../components/jquery/dist/jquery",
                jquery: "../components/jquery/dist/jquery",
                jQuery: "../components/jquery/dist/jquery",
                hammer: "../components/hammerjs/dist/jquery.hammer",
                mout: "../components/mout/src",
                dust: "../components/dustjs-linkedin/dist/dust-full-2.0.4",
                "dust-helpers": "../components/dustjs-linkedin-helpers/dist/dust-helpers-1.1.1",
                "lavaca-dust-helpers": "../components/lavaca-dust-helpers/src/lavaca-dust-helpers",
                rdust: "../components/require-dust/require-dust",
                iScroll: "../components/iscroll/dist/iscroll-lite-min",
                lavaca: "../components/lavaca/src",
                i18n: "../components/i18n/i18n",
                fastclick: "../components/fastclick/lib/fastclick",
                modernizr: "../components/modernizr/modernizr",
                fileDownload: "../components/jquery.fileDownload/src/Scripts/jquery.fileDownload",
                sccomm: "../components/sc-comm/src",
                moment: "../components/moment/moment",
                "moment-duration-format": "../components/moment-duration-format/lib/moment-duration-format",
                velocity: "../components/velocity/velocity"
            },
            shim: {
                $: {
                    exports: "$"
                },
                jquery: {
                    exports: "$"
                },
                jQuery: {
                    exports: "$"
                },
                hammer: {
                    deps: ["$"],
                    exports: "Hammer"
                },
                fileDownload: {
                    deps: ["$"]
                },
                velocity: {
                    deps: ["$"]
                },
                dust: {
                    exports: "dust"
                },
                "dust-helpers": {
                    deps: ["dust"]
                },
                "moment-duration-format": {
                    deps: ["moment"]
                }
            },
            waitSeconds: 0
        }), require(["es5-shim"]), require(["es6-shim"]), require(["lavaca-dust-helpers"]), require(["app/app"]), define("../../../tmp/www/js/app/boot", function() {}), {
            "es5-shim": require("es5-shim"),
            "es6-shim": require("es6-shim"),
            dust: require("dust"),
            "dust-helpers": require("dust-helpers"),
            "lavaca-dust-helpers": require("lavaca-dust-helpers"),
            "lavaca/util/extend": require("lavaca/util/extend"),
            "lavaca/util/Disposable": require("lavaca/util/Disposable"),
            "mout/object/hasOwn": require("mout/object/hasOwn"),
            "mout/object/forIn": require("mout/object/forIn"),
            "mout/object/forOwn": require("mout/object/forOwn"),
            "mout/lang/isPlainObject": require("mout/lang/isPlainObject"),
            "mout/object/deepMixIn": require("mout/object/deepMixIn"),
            "lavaca/events/EventDispatcher": require("lavaca/events/EventDispatcher"),
            "lavaca/util/uuid": require("lavaca/util/uuid"),
            "lavaca/net/History": require("lavaca/net/History"),
            $: require("$"),
            "mout/object/get": require("mout/object/get"),
            "lavaca/net/Connectivity": require("lavaca/net/Connectivity"),
            "lavaca/util/Cache": require("lavaca/util/Cache"),
            "mout/lang/kindOf": require("mout/lang/kindOf"),
            "mout/object/mixIn": require("mout/object/mixIn"),
            "mout/lang/clone": require("mout/lang/clone"),
            "mout/lang/deepClone": require("mout/lang/deepClone"),
            "mout/array/indexOf": require("mout/array/indexOf"),
            "mout/array/contains": require("mout/array/contains"),
            "mout/array/removeAll": require("mout/array/removeAll"),
            "mout/lang/isKind": require("mout/lang/isKind"),
            "mout/lang/isObject": require("mout/lang/isObject"),
            "mout/object/merge": require("mout/object/merge"),
            "lavaca/mvc/Model": require("lavaca/mvc/Model"),
            "app/env/Config": require("app/env/Config"),
            moment: require("moment"),
            "app/models/StateModel": require("app/models/StateModel"),
            "mout/lang/isString": require("mout/lang/isString"),
            "mout/lang/isBoolean": require("mout/lang/isBoolean"),
            "mout/lang/isArray": require("mout/lang/isArray"),
            "lavaca/mvc/ChildViewManager": require("lavaca/mvc/ChildViewManager"),
            "lavaca/mvc/View": require("lavaca/mvc/View"),
            "lavaca/mvc/ViewManager": require("lavaca/mvc/ViewManager"),
            "lavaca/mvc/Route": require("lavaca/mvc/Route"),
            "lavaca/mvc/Router": require("lavaca/mvc/Router"),
            "mout/function/prop": require("mout/function/prop"),
            "mout/object/deepMatches": require("mout/object/deepMatches"),
            "mout/function/makeIterator_": require("mout/function/makeIterator_"),
            "mout/array/filter": require("mout/array/filter"),
            "mout/array/unique": require("mout/array/unique"),
            "mout/array/some": require("mout/array/some"),
            "mout/array/difference": require("mout/array/difference"),
            "mout/lang/toArray": require("mout/lang/toArray"),
            "mout/array/insert": require("mout/array/insert"),
            "lavaca/mvc/Collection": require("lavaca/mvc/Collection"),
            "app/utils/hash": require("app/utils/hash"),
            "app/models/AuthModel": require("app/models/AuthModel"),
            "mout/lang/toString": require("mout/lang/toString"),
            "mout/string/interpolate": require("mout/string/interpolate"),
            "app/service/Service": require("app/service/Service"),
            "app/service/demodata/getsleepers": require("app/service/demodata/getsleepers"),
            "app/service/demodata/sleeptips": require("app/service/demodata/sleeptips"),
            "app/service/demodata/sleepdata": require("app/service/demodata/sleepdata"),
            "app/service/demodata/slicesdata": require("app/service/demodata/slicesdata"),
            "app/service/demodata/sleepslices": require("app/service/demodata/sleepslices"),
            "app/service/demodata/databymonth": require("app/service/demodata/databymonth"),
            "app/service/demodata/providersdata": require("app/service/demodata/providersdata"),
            "app/service/demodata/activitiesdata": require("app/service/demodata/activitiesdata"),
            "app/service/demodata/weekdata": require("app/service/demodata/weekdata"),
            "app/service/demodata/monthdata": require("app/service/demodata/monthdata"),
            "app/service/DemoData": require("app/service/DemoData"),
            "app/service/AccountService": require("app/service/AccountService"),
            "app/models/UserModel": require("app/models/UserModel"),
            "app/service/SleepDataService": require("app/service/SleepDataService"),
            "app/utils/MixPanelManager": require("app/utils/MixPanelManager"),
            "app/models/FamilyModel": require("app/models/FamilyModel"),
            rdust: require("rdust"),
            "app/models/viewmodels/UserSwitchViewModel": require("app/models/viewmodels/UserSwitchViewModel"),
            "app/ui/views/controlviews/UserSwitchView": require("app/ui/views/controlviews/UserSwitchView"),
            "sccomm/CapabilitiesModel": require("sccomm/CapabilitiesModel"),
            "sccomm/ConnectedDeviceStateModel": require("sccomm/ConnectedDeviceStateModel"),
            "app/service/EdpService": require("app/service/EdpService"),
            "app/service/EdpAccountService": require("app/service/EdpAccountService"),
            "app/models/AccountModel": require("app/models/AccountModel"),
            "app/service/BedService": require("app/service/BedService"),
            "sccomm/CommunicationHelpers": require("sccomm/CommunicationHelpers"),
            "app/models/BedModel": require("app/models/BedModel"),
            "app/utils/DebugBeds": require("app/utils/DebugBeds"),
            "app/utils/DemoBeds": require("app/utils/DemoBeds"),
            "app/models/BedCollection": require("app/models/BedCollection"),
            "app/ui/views/controlviews/RemotePopoverView": require("app/ui/views/controlviews/RemotePopoverView"),
            "lavaca/fx/Transform": require("lavaca/fx/Transform"),
            "lavaca/fx/Animation": require("lavaca/fx/Animation"),
            "app/ui/views/pageviews/BaseView": require("app/ui/views/pageviews/BaseView"),
            "app/ui/views/childviews/ServerListView": require("app/ui/views/childviews/ServerListView"),
            "lavaca/fx/Transition": require("lavaca/fx/Transition"),
            "lavaca/ui/Widget": require("lavaca/ui/Widget"),
            "app/utils/debounce": require("app/utils/debounce"),
            "app/ui/widgets/FormValidator": require("app/ui/widgets/FormValidator"),
            "app/models/validations/login-validation": require("app/models/validations/login-validation"),
            "app/ui/views/pageviews/LoginView": require("app/ui/views/pageviews/LoginView"),
            "app/ui/views/controlviews/TabBarView": require("app/ui/views/controlviews/TabBarView"),
            "app/ui/views/childviews/LoadingAnimationView": require("app/ui/views/childviews/LoadingAnimationView"),
            "app/ui/views/pageviews/RootTabBarView": require("app/ui/views/pageviews/RootTabBarView"),
            "app/ui/widgets/SlidingTabBarWidget": require("app/ui/widgets/SlidingTabBarWidget"),
            "app/ui/views/controlviews/toast": require("app/ui/views/controlviews/toast"),
            "app/ui/widgets/PillChart": require("app/ui/widgets/PillChart"),
            "app/models/viewmodels/CoachmarkViewModel": require("app/models/viewmodels/CoachmarkViewModel"),
            "app/ui/views/childviews/CoachmarkView": require("app/ui/views/childviews/CoachmarkView"),
            "app/env/ModernizrTests": require("app/env/ModernizrTests"),
            "app/ui/widgets/DragAndSnapXWidget": require("app/ui/widgets/DragAndSnapXWidget"),
            "app/ui/views/childviews/TagsView": require("app/ui/views/childviews/TagsView"),
            "app/ui/widgets/CountUp": require("app/ui/widgets/CountUp"),
            "app/ui/views/childviews/BarChartView": require("app/ui/views/childviews/BarChartView"),
            "app/ui/views/childviews/HeartRateBreathRateView": require("app/ui/views/childviews/HeartRateBreathRateView"),
            "app/ui/views/childviews/AdultDailyView": require("app/ui/views/childviews/AdultDailyView"),
            "app/ui/widgets/DragAccordionWidget": require("app/ui/widgets/DragAccordionWidget"),
            "app/ui/widgets/DoughnutWidget": require("app/ui/widgets/DoughnutWidget"),
            "app/ui/views/childviews/AdultWeeklyView": require("app/ui/views/childviews/AdultWeeklyView"),
            "app/ui/views/childviews/CalendarView": require("app/ui/views/childviews/CalendarView"),
            "app/ui/views/childviews/AdultMonthlyView": require("app/ui/views/childviews/AdultMonthlyView"),
            "app/ui/views/childviews/KidDailyView": require("app/ui/views/childviews/KidDailyView"),
            "app/ui/views/childviews/KidWeeklyView": require("app/ui/views/childviews/KidWeeklyView"),
            "app/ui/views/childviews/KidMonthlyView": require("app/ui/views/childviews/KidMonthlyView"),
            "app/service/GoalsService": require("app/service/GoalsService"),
            "moment-duration-format": require("moment-duration-format"),
            "app/models/viewmodels/SleepViewModel": require("app/models/viewmodels/SleepViewModel"),
            "app/service/WifiService": require("app/service/WifiService"),
            "app/models/viewmodels/DashboardViewModel": require("app/models/viewmodels/DashboardViewModel"),
            "app/ui/views/childviews/FamilyDailyView": require("app/ui/views/childviews/FamilyDailyView"),
            "app/ui/views/childviews/FamilyWeeklyView": require("app/ui/views/childviews/FamilyWeeklyView"),
            "app/ui/views/childviews/FamilyMonthlyView": require("app/ui/views/childviews/FamilyMonthlyView"),
            "app/ui/views/childviews/SleepView": require("app/ui/views/childviews/SleepView"),
            "app/ui/views/pageviews/DashboardView": require("app/ui/views/pageviews/DashboardView"),
            "app/models/validations/setup-bed": require("app/models/validations/setup-bed"),
            "sccomm/SelectComfortConstants": require("sccomm/SelectComfortConstants"),
            "sccomm/CommunicationLogger": require("sccomm/CommunicationLogger"),
            "sccomm/Message": require("sccomm/Message"),
            "sccomm/MessageTranslation": require("sccomm/MessageTranslation"),
            "sccomm/PromiseToRetry": require("sccomm/PromiseToRetry"),
            "sccomm/MessageQueue": require("sccomm/MessageQueue"),
            "mout/array/sort": require("mout/array/sort"),
            "sccomm/DeviceCommunication": require("sccomm/DeviceCommunication"),
            "app/ui/views/childviews/DiscreteProgressView": require("app/ui/views/childviews/DiscreteProgressView"),
            "app/models/BindingStateModel": require("app/models/BindingStateModel"),
            "app/utils/ZipCodes": require("app/utils/ZipCodes"),
            "app/ui/views/childviews/FAQView": require("app/ui/views/childviews/FAQView"),
            "app/ui/views/childviews/FAQContentView": require("app/ui/views/childviews/FAQContentView"),
            "app/service/MiscService": require("app/service/MiscService"),
            "app/models/FAQModel": require("app/models/FAQModel"),
            "app/ui/views/pageviews/BedSettingsView": require("app/ui/views/pageviews/BedSettingsView"),
            "app/ui/views/pageviews/UserSettingsView": require("app/ui/views/pageviews/UserSettingsView"),
            "app/ui/views/childviews/TrendsView": require("app/ui/views/childviews/TrendsView"),
            "app/service/TrendsService": require("app/service/TrendsService"),
            "app/models/viewmodels/TrendsViewModel": require("app/models/viewmodels/TrendsViewModel"),
            "app/ui/views/childviews/GoalsProgressView": require("app/ui/views/childviews/GoalsProgressView"),
            "app/ui/views/childviews/GoalsView": require("app/ui/views/childviews/GoalsView"),
            "app/models/viewmodels/GoalsViewModel": require("app/models/viewmodels/GoalsViewModel"),
            "app/service/RoutineService": require("app/service/RoutineService"),
            "app/ui/views/childviews/ProgressDonutView": require("app/ui/views/childviews/ProgressDonutView"),
            "app/ui/views/childviews/RoutineView": require("app/ui/views/childviews/RoutineView"),
            "app/models/viewmodels/RoutineViewModel": require("app/models/viewmodels/RoutineViewModel"),
            "app/models/viewmodels/RootTabBarViewModel": require("app/models/viewmodels/RootTabBarViewModel"),
            "lavaca/mvc/Controller": require("lavaca/mvc/Controller"),
            "app/ModalViewManager": require("app/ModalViewManager"),
            "app/ui/views/controlviews/ModalView": require("app/ui/views/controlviews/ModalView"),
            "app/net/BaseController": require("app/net/BaseController"),
            "app/ui/views/pageviews/ForgotPasswordView": require("app/ui/views/pageviews/ForgotPasswordView"),
            "app/models/RegistrationViewModel": require("app/models/RegistrationViewModel"),
            "app/models/BedDemoModel": require("app/models/BedDemoModel"),
            "app/models/viewmodels/BedSettingsViewModel": require("app/models/viewmodels/BedSettingsViewModel"),
            "app/models/validations/account-settings": require("app/models/validations/account-settings"),
            "app/service/AirshipService": require("app/service/AirshipService"),
            "app/service/NotificationService": require("app/service/NotificationService"),
            "app/models/viewmodels/UserSettingsViewModel": require("app/models/viewmodels/UserSettingsViewModel"),
            "app/net/HomeController": require("app/net/HomeController"),
            "app/models/viewmodels/MarketplaceViewModel": require("app/models/viewmodels/MarketplaceViewModel"),
            "app/ui/views/pageviews/MarketplaceView": require("app/ui/views/pageviews/MarketplaceView"),
            "app/ui/views/pageviews/ManageView": require("app/ui/views/pageviews/ManageView"),
            "app/ui/views/pageviews/ProviderDevicesView": require("app/ui/views/pageviews/ProviderDevicesView"),
            "app/net/MarketplaceController": require("app/net/MarketplaceController"),
            "app/ui/widgets/FindSleepnumberPopoverWidget": require("app/ui/widgets/FindSleepnumberPopoverWidget"),
            "app/ui/views/childviews/SignalStrengthView": require("app/ui/views/childviews/SignalStrengthView"),
            "app/ui/views/childviews/SleepIQStatusView": require("app/ui/views/childviews/SleepIQStatusView"),
            "app/ui/widgets/SleepNumberDialWidget": require("app/ui/widgets/SleepNumberDialWidget"),
            "app/models/viewmodels/RemoteViewModel": require("app/models/viewmodels/RemoteViewModel"),
            "app/utils/BedManager": require("app/utils/BedManager"),
            "app/models/FindSleepnumberModel": require("app/models/FindSleepnumberModel"),
            "app/utils/between": require("app/utils/between"),
            "app/ui/views/pageviews/RemoteView": require("app/ui/views/pageviews/RemoteView"),
            "app/ui/views/pageviews/BleTestView": require("app/ui/views/pageviews/BleTestView"),
            "app/net/RemoteController": require("app/net/RemoteController"),
            "app/ui/widgets/RegistrationFormValidator": require("app/ui/widgets/RegistrationFormValidator"),
            "app/models/validations/setup-account": require("app/models/validations/setup-account"),
            "app/ui/views/pageviews/RegistrationOrderLookupView": require("app/ui/views/pageviews/RegistrationOrderLookupView"),
            "app/ui/views/pageviews/RegistrationCompleteView": require("app/ui/views/pageviews/RegistrationCompleteView"),
            "app/ui/views/childviews/SetupAccountView": require("app/ui/views/childviews/SetupAccountView"),
            "app/ui/views/childviews/SetupBedView": require("app/ui/views/childviews/SetupBedView"),
            "app/models/validations/setup-profile": require("app/models/validations/setup-profile"),
            "app/ui/views/childviews/SetupProfileView": require("app/ui/views/childviews/SetupProfileView"),
            "app/ui/views/childviews/SetupBedSideView": require("app/ui/views/childviews/SetupBedSideView"),
            "app/ui/views/childviews/BedCompleteView": require("app/ui/views/childviews/BedCompleteView"),
            "app/ui/views/pageviews/RegistrationView": require("app/ui/views/pageviews/RegistrationView"),
            "app/net/RegistrationController": require("app/net/RegistrationController"),
            "app/ui/views/modalviews/BaseModalView": require("app/ui/views/modalviews/BaseModalView"),
            "app/ui/views/bindingviews/BaseBindingView": require("app/ui/views/bindingviews/BaseBindingView"),
            "app/ui/views/bindingviews/BindingWelcomeView": require("app/ui/views/bindingviews/BindingWelcomeView"),
            "app/ui/views/bindingviews/CheckHosesView": require("app/ui/views/bindingviews/CheckHosesView"),
            "app/ui/views/bindingviews/ScanQRForBedView": require("app/ui/views/bindingviews/ScanQRForBedView"),
            "app/ui/views/bindingviews/ScanForBedView": require("app/ui/views/bindingviews/ScanForBedView"),
            "app/ui/views/bindingviews/VerifySelectedBedView": require("app/ui/views/bindingviews/VerifySelectedBedView"),
            "app/ui/views/bindingviews/VerifyBedMacAddressView": require("app/ui/views/bindingviews/VerifyBedMacAddressView"),
            "app/utils/formatter": require("app/utils/formatter"),
            "app/ui/views/bindingviews/ManualBedMacAddressView": require("app/ui/views/bindingviews/ManualBedMacAddressView"),
            "app/ui/views/bindingviews/BedIsEngagingView": require("app/ui/views/bindingviews/BedIsEngagingView"),
            "app/ui/views/bindingviews/CompleteBedAssemblyView": require("app/ui/views/bindingviews/CompleteBedAssemblyView"),
            "app/ui/views/bindingviews/VerifySleepIQView": require("app/ui/views/bindingviews/VerifySleepIQView"),
            "app/models/WifiNetworksModel": require("app/models/WifiNetworksModel"),
            "app/ui/views/bindingviews/WifiPasswordView": require("app/ui/views/bindingviews/WifiPasswordView"),
            "app/ui/views/bindingviews/WifiVerificationView": require("app/ui/views/bindingviews/WifiVerificationView"),
            "app/ui/views/bindingviews/ScanForWifiView": require("app/ui/views/bindingviews/ScanForWifiView"),
            velocity: require("velocity"),
            "app/ui/views/bindingviews/BaselineView": require("app/ui/views/bindingviews/BaselineView"),
            "app/ui/views/bindingviews/HeadTiltIsEngagingView": require("app/ui/views/bindingviews/HeadTiltIsEngagingView"),
            "app/ui/views/bindingviews/StartOutletBindingView": require("app/ui/views/bindingviews/StartOutletBindingView"),
            "app/ui/views/bindingviews/StartReplacingOutletView": require("app/ui/views/bindingviews/StartReplacingOutletView"),
            "app/ui/views/bindingviews/StartTestingOutletView": require("app/ui/views/bindingviews/StartTestingOutletView"),
            "app/ui/views/bindingviews/VerifyConnectedOutletView": require("app/ui/views/bindingviews/VerifyConnectedOutletView"),
            "app/ui/views/bindingviews/ScanQRForOutletView": require("app/ui/views/bindingviews/ScanQRForOutletView"),
            "app/ui/views/bindingviews/ScanForOutletView": require("app/ui/views/bindingviews/ScanForOutletView"),
            "app/ui/views/bindingviews/ManualOutletMacAddressView": require("app/ui/views/bindingviews/ManualOutletMacAddressView"),
            "app/ui/views/bindingviews/ConnectBedToOutletView": require("app/ui/views/bindingviews/ConnectBedToOutletView"),
            "app/ui/views/bindingviews/NameOutletView": require("app/ui/views/bindingviews/NameOutletView"),
            "app/ui/views/bindingviews/BindingCompleteView": require("app/ui/views/bindingviews/BindingCompleteView"),
            "app/ui/views/bindingviews/ReplaceHardwareView": require("app/ui/views/bindingviews/ReplaceHardwareView"),
            "app/ui/views/bindingviews/ReplacePumpSleepiqSwapView": require("app/ui/views/bindingviews/ReplacePumpSleepiqSwapView"),
            "app/ui/views/bindingviews/ReplacePumpSleepiqConnectNewView": require("app/ui/views/bindingviews/ReplacePumpSleepiqConnectNewView"),
            "app/ui/views/bindingviews/ReplacePumpSleepiqCheckView": require("app/ui/views/bindingviews/ReplacePumpSleepiqCheckView"),
            "app/ui/widgets/WifiFormValidator": require("app/ui/widgets/WifiFormValidator"),
            "app/models/validations/wifi-validations": require("app/models/validations/wifi-validations"),
            fileDownload: require("fileDownload"),
            "app/ui/views/bindingviews/WifiDesktopView": require("app/ui/views/bindingviews/WifiDesktopView"),
            "app/net/BindingController": require("app/net/BindingController"),
            "app/ui/views/modalviews/UserSettingsAddSleeper": require("app/ui/views/modalviews/UserSettingsAddSleeper"),
            "app/ui/views/modalviews/AddBedView": require("app/ui/views/modalviews/AddBedView"),
            "app/ui/views/childviews/AboutView": require("app/ui/views/childviews/AboutView"),
            "app/ui/views/pageviews/SupportView": require("app/ui/views/pageviews/SupportView"),
            "app/models/viewmodels/SupportViewModel": require("app/models/viewmodels/SupportViewModel"),
            "app/net/SettingsController": require("app/net/SettingsController"),
            "app/models/viewmodels/BedScanModalViewModel": require("app/models/viewmodels/BedScanModalViewModel"),
            "app/ui/views/modalviews/ActivityModalView": require("app/ui/views/modalviews/ActivityModalView"),
            "app/models/viewmodels/ActivityModalViewModel": require("app/models/viewmodels/ActivityModalViewModel"),
            "app/ui/views/modalviews/DebugModal": require("app/ui/views/modalviews/DebugModal"),
            "app/ui/views/modalviews/RegistrationTermsModal": require("app/ui/views/modalviews/RegistrationTermsModal"),
            "app/ui/views/modalviews/RegistrationWifiModal": require("app/ui/views/modalviews/RegistrationWifiModal"),
            "app/ui/views/modalviews/GoalDetailsModalView": require("app/ui/views/modalviews/GoalDetailsModalView"),
            "app/ui/views/modalviews/AddGoalModalView": require("app/ui/views/modalviews/AddGoalModalView"),
            "app/ui/views/modalviews/AddGoalSelectTimeModalView": require("app/ui/views/modalviews/AddGoalSelectTimeModalView"),
            "app/ui/views/modalviews/SetPrimaryGoalModalView": require("app/ui/views/modalviews/SetPrimaryGoalModalView"),
            "app/ui/views/modalviews/BedScanModalView": require("app/ui/views/modalviews/BedScanModalView"),
            "app/ui/views/modalviews/CreateUserCredentialsModalView": require("app/ui/views/modalviews/CreateUserCredentialsModalView"),
            "app/ui/views/modalviews/ChangeCredentialsModalView": require("app/ui/views/modalviews/ChangeCredentialsModalView"),
            "app/ui/views/modalviews/UserSettingsNotificationTimeModal": require("app/ui/views/modalviews/UserSettingsNotificationTimeModal"),
            "app/ui/views/modalviews/UserSettingsNotificationModal": require("app/ui/views/modalviews/UserSettingsNotificationModal"),
            "app/models/viewmodels/EditSleepModel": require("app/models/viewmodels/EditSleepModel"),
            "app/ui/views/modalviews/EditSleepModalView": require("app/ui/views/modalviews/EditSleepModalView"),
            "app/net/ModalController": require("app/net/ModalController"),
            "app/ui/views/findsleepnumberviews/BaseSleepnumberView": require("app/ui/views/findsleepnumberviews/BaseSleepnumberView"),
            "app/ui/views/findsleepnumberviews/StepOneView": require("app/ui/views/findsleepnumberviews/StepOneView"),
            "app/ui/views/findsleepnumberviews/StepTwoView": require("app/ui/views/findsleepnumberviews/StepTwoView"),
            "app/ui/views/findsleepnumberviews/StepThreeView": require("app/ui/views/findsleepnumberviews/StepThreeView"),
            "app/ui/views/findsleepnumberviews/StepFourView": require("app/ui/views/findsleepnumberviews/StepFourView"),
            "app/ui/views/findsleepnumberviews/StepFiveView": require("app/ui/views/findsleepnumberviews/StepFiveView"),
            "app/ui/views/findsleepnumberviews/StepSixView": require("app/ui/views/findsleepnumberviews/StepSixView"),
            "app/ui/views/findsleepnumberviews/StepSevenView": require("app/ui/views/findsleepnumberviews/StepSevenView"),
            "app/ui/views/findsleepnumberviews/StepEightView": require("app/ui/views/findsleepnumberviews/StepEightView"),
            "app/ui/views/findsleepnumberviews/TooFirmView": require("app/ui/views/findsleepnumberviews/TooFirmView"),
            "app/ui/views/findsleepnumberviews/TooSoftView": require("app/ui/views/findsleepnumberviews/TooSoftView"),
            "app/ui/views/findsleepnumberviews/FoundFavoriteView": require("app/ui/views/findsleepnumberviews/FoundFavoriteView"),
            "app/ui/views/findsleepnumberviews/ContactView": require("app/ui/views/findsleepnumberviews/ContactView"),
            "app/net/FindSleepnumberController": require("app/net/FindSleepnumberController"),
            "app/ui/views/controlviews/AlertView": require("app/ui/views/controlviews/AlertView"),
            "app/ui/views/controlviews/Alert": require("app/ui/views/controlviews/Alert"),
            "lavaca/env/Device": require("lavaca/env/Device"),
            "lavaca/mvc/Application": require("lavaca/mvc/Application"),
            "app/service/crypto": require("app/service/crypto"),
            "app/ui/widgets/ResponsiveMagic": require("app/ui/widgets/ResponsiveMagic"),
            "app/utils/LocalStorageManager": require("app/utils/LocalStorageManager"),
            "app/utils/BackgroundManager": require("app/utils/BackgroundManager"),
            "app/utils/ConnectedDeviceStateChangeManager": require("app/utils/ConnectedDeviceStateChangeManager"),
            "app/utils/DeepLinkManager": require("app/utils/DeepLinkManager"),
            "app/utils/CustomAlertManager": require("app/utils/CustomAlertManager"),
            "app/utils/NotificationManager": require("app/utils/NotificationManager"),
            "app/utils/AuthCheckManager": require("app/utils/AuthCheckManager"),
            "app/utils/BuildInfoManager": require("app/utils/BuildInfoManager"),
            "app/ui/widgets/TouchTrackerWidget": require("app/ui/widgets/TouchTrackerWidget"),
            "app/ui/widgets/PullToRefreshWidget": require("app/ui/widgets/PullToRefreshWidget"),
            "app/utils/PTRWidgetManager": require("app/utils/PTRWidgetManager"),
            hammer: require("hammer"),
            "app/utils/hammer_extensions": require("app/utils/hammer_extensions"),
            "app/utils/shake": require("app/utils/shake"),
            fastclick: require("fastclick"),
            "app/app": require("app/app"),
            "../../../tmp/www/js/app/boot": require("../../../tmp/www/js/app/boot")
        }
}();
